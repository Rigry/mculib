ARM GAS  /tmp/ccCYtDPO.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.cpp"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._ZN5Timer6notifyEv,"axG",%progbits,_ZN5Timer6notifyEv,comdat
  16              		.align	1
  17              		.weak	_ZN5Timer6notifyEv
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	_ZN5Timer6notifyEv:
  24              	.LFB2526:
  25              		.file 1 "../../src/timers.h"
   1:../../src/timers.h **** #pragma once
   2:../../src/timers.h **** 
   3:../../src/timers.h **** #include <cstdint>
   4:../../src/timers.h **** #include "subscriber.h"
   5:../../src/timers.h **** #include "systick.h"
   6:../../src/timers.h **** #include "literals.h"
   7:../../src/timers.h **** #include "function.h"
   8:../../src/timers.h **** #ifdef USE_MOCK_SYSTICK
   9:../../src/timers.h **** using mock::SysTick;
  10:../../src/timers.h **** #else
  11:../../src/timers.h **** using mcu::SysTick;
  12:../../src/timers.h **** #endif
  13:../../src/timers.h **** 
  14:../../src/timers.h **** 
  15:../../src/timers.h **** 
  16:../../src/timers.h **** enum Faster {
  17:../../src/timers.h ****      x2 = 2, x4 = 4, x5 = 5, x8 = 8, x10 = 10,
  18:../../src/timers.h **** };
  19:../../src/timers.h **** 
  20:../../src/timers.h **** 
  21:../../src/timers.h **** struct TickUpdater : Publisher
  22:../../src/timers.h **** {
  23:../../src/timers.h ****     TickUpdater() { REF(SysTick).initInterrupt<1000_us>(); }
  24:../../src/timers.h ****     template<Faster multiplier> // multiplier how many subticks in tick
  25:../../src/timers.h ****     void subscribe_subtick (Subscriber& v);
  26:../../src/timers.h ****     void interrupt();
  27:../../src/timers.h **** 
  28:../../src/timers.h **** 
  29:../../src/timers.h **** private:
  30:../../src/timers.h ****     struct Subtick : Publisher {} subtick {};
  31:../../src/timers.h ****     size_t subtick_cnt {0};
  32:../../src/timers.h ****     size_t subtick_qty {1};
  33:../../src/timers.h **** } tickUpdater{};
ARM GAS  /tmp/ccCYtDPO.s 			page 2


  34:../../src/timers.h **** 
  35:../../src/timers.h **** 
  36:../../src/timers.h **** 
  37:../../src/timers.h **** extern "C" void SysTick_Handler()
  38:../../src/timers.h **** {
  39:../../src/timers.h ****     tickUpdater.interrupt();
  40:../../src/timers.h **** }
  41:../../src/timers.h **** 
  42:../../src/timers.h **** 
  43:../../src/timers.h **** 
  44:../../src/timers.h **** class TickSubscriber : Subscriber
  45:../../src/timers.h **** {
  46:../../src/timers.h **** protected:
  47:../../src/timers.h ****     bool subscribed {false};
  48:../../src/timers.h ****     void tick_subscribe();
  49:../../src/timers.h ****     void tick_unsubscribe();
  50:../../src/timers.h ****     template<Faster multiplier> // multiplier how many subticks in tick
  51:../../src/timers.h ****     void tick_subscribe();
  52:../../src/timers.h **** };
  53:../../src/timers.h **** 
  54:../../src/timers.h **** 
  55:../../src/timers.h **** 
  56:../../src/timers.h **** class Timer : TickSubscriber
  57:../../src/timers.h **** {
  58:../../src/timers.h **** public:
  59:../../src/timers.h ****     Timer() = default;
  60:../../src/timers.h ****     Timer (uint32_t ms) { start(ms); }
  61:../../src/timers.h ****     ~Timer () {tick_unsubscribe();}
  62:../../src/timers.h **** 
  63:../../src/timers.h ****     void     start   (uint32_t ms); /// –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å—á—ë—Ç —Å —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–
  64:../../src/timers.h ****     bool     event();   /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ —Ç–∞–π–º–µ—Ä –Ω–∞—Ç–∏–∫–∞–ª –∏ –ø–µ
  65:../../src/timers.h ****     bool     done();    /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ —Ç–∞–π–º–µ—Ä –Ω–∞—Ç–∏–∫–∞–ª –∏ –ù–ï
  66:../../src/timers.h ****     void     pause();   /// –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—á—ë—Ç, –Ω–æ –Ω–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—
  67:../../src/timers.h ****     void     start();   /// –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å—á—ë—Ç —Å —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å—á—ë
  68:../../src/timers.h ****     void     stop();    /// –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—á—ë—Ç –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—á—ë—Ç—á–
  69:../../src/timers.h ****     bool     isGreater (uint32_t val); /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ —Å—á—ë—Ç—á–∏–∫ –Ω–∞—
  70:../../src/timers.h ****     bool     isCount(); /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –µ—Å–ª–∏ —Å—á–∏—Ç–∞–µ—Ç, –Ω–æ –Ω–µ –¥–æ—Å—á–∏
  71:../../src/timers.h ****     uint32_t timePassed(); /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –Ω–∞—Ç–∏–∫–∞–ª
  72:../../src/timers.h ****     uint32_t timeLeft();   /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å
  73:../../src/timers.h ****     template<class function>
  74:../../src/timers.h ****     void     event (function); /// –≤—ã–ø–æ–ª–Ω—è–µ—Ç function, –∫–æ–≥–¥–∞ –¥–æ—Ç–∏–∫–∞–ª –∏ –ø–µ—Ä
  75:../../src/timers.h ****     volatile uint32_t timeSet {0};
  76:../../src/timers.h **** 
  77:../../src/timers.h **** 
  78:../../src/timers.h **** private:
  79:../../src/timers.h ****     volatile uint32_t timePassed_ {0};	
  80:../../src/timers.h **** 
  81:../../src/timers.h ****     void notify() override { timePassed_++; }
  26              		.loc 1 81 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32              		.loc 1 81 0
  33 0000 4369     		ldr	r3, [r0, #20]
  34              		@ sp needed
ARM GAS  /tmp/ccCYtDPO.s 			page 3


  35 0002 0133     		adds	r3, r3, #1
  36 0004 4361     		str	r3, [r0, #20]
  37 0006 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE2526:
  41              		.section	.text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6P
  42              		.align	1
  43              		.weak	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
  44              		.syntax unified
  45              		.code	16
  46              		.thumb_func
  47              		.fpu softvfp
  49              	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEEN
  50              	.LFB3349:
  51              		.file 2 "../../src/function.h"
   1:../../src/function.h **** // –∑–∞ –æ—Å–Ω–æ–≤—É –≤–∑—è–ª –≤–æ—Ç —ç—Ç–æ https://habr.com/ru/post/159389/
   2:../../src/function.h **** // —É–±—Ä–∞–ª –≤—Å—ë, —á—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å –∫—É—á–µ–π
   3:../../src/function.h **** // –¢–£–î–£ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –º–µ—Ç–æ–¥–æ–≤ –æ–±—ä–µ–∫—Ç–æ–≤ (–Ω–æ –ø–æ–∫–∞ –Ω–µ –Ω—É–∂–Ω–∞)
   4:../../src/function.h **** #pragma once
   5:../../src/function.h **** 
   6:../../src/function.h **** template <class T>
   7:../../src/function.h **** class Function;
   8:../../src/function.h **** 
   9:../../src/function.h **** template <class Return, class ... Args>
  10:../../src/function.h **** class Function <Return (Args...)> {
  11:../../src/function.h **** public:
  12:../../src/function.h ****     Function() = default;
  13:../../src/function.h **** 	template <class Function_>
  14:../../src/function.h **** 	Function (Function_ f) {
  15:../../src/function.h ****         static Function_holder<Function_> holder (f);
  16:../../src/function.h ****         functor_pointer = &holder;
  17:../../src/function.h ****     }
  18:../../src/function.h **** 
  19:../../src/function.h **** 	Return operator() (Args ... args) {
  20:../../src/function.h **** 		return functor_pointer->call(args...);
  21:../../src/function.h **** 	}
  22:../../src/function.h **** 
  23:../../src/function.h ****     operator bool() { return functor_pointer != nullptr; }
  24:../../src/function.h **** private:
  25:../../src/function.h **** 	struct Holder {
  26:../../src/function.h **** 		virtual Return call(Args ... args) = 0;
  27:../../src/function.h **** 	};
  28:../../src/function.h **** 
  29:../../src/function.h **** 	template <class Function>
  30:../../src/function.h **** 	class Function_holder : public Holder {
  31:../../src/function.h ****         Function func;
  32:../../src/function.h **** 	public:
  33:../../src/function.h ****         Function_holder (Function func) : func{func} {}
  34:../../src/function.h **** 		virtual Return call(Args ... args) override {
  52              		.loc 2 34 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.LVL1:
  35:../../src/function.h **** 			return func(args ...);
  36:../../src/function.h **** 		}
ARM GAS  /tmp/ccCYtDPO.s 			page 4


  58              		.loc 2 36 0
  59              		@ sp needed
  60 0000 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE3349:
  64              		.section	.text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6P
  65              		.align	1
  66              		.weak	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
  67              		.syntax unified
  68              		.code	16
  69              		.thumb_func
  70              		.fpu softvfp
  72              	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEEN
  73              	.LFB3350:
  34:../../src/function.h **** 			return func(args ...);
  74              		.loc 2 34 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.LVL2:
  80              		.loc 2 36 0
  81              		@ sp needed
  82 0000 7047     		bx	lr
  83              		.cfi_endproc
  84              	.LFE3350:
  86              		.section	.text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6P
  87              		.align	1
  88              		.weak	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
  89              		.syntax unified
  90              		.code	16
  91              		.thumb_func
  92              		.fpu softvfp
  94              	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEEN
  95              	.LFB3351:
  34:../../src/function.h **** 			return func(args ...);
  96              		.loc 2 34 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101              	.LVL3:
 102              		.loc 2 36 0
 103              		@ sp needed
 104 0000 7047     		bx	lr
 105              		.cfi_endproc
 106              	.LFE3351:
 108              		.section	.text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6P
 109              		.align	1
 110              		.weak	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 111              		.syntax unified
 112              		.code	16
 113              		.thumb_func
 114              		.fpu softvfp
 116              	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEEN
 117              	.LFB3352:
  34:../../src/function.h **** 			return func(args ...);
ARM GAS  /tmp/ccCYtDPO.s 			page 5


 118              		.loc 2 34 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123              	.LVL4:
 124              		.loc 2 36 0
 125              		@ sp needed
 126 0000 7047     		bx	lr
 127              		.cfi_endproc
 128              	.LFE3352:
 130              		.section	.text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6P
 131              		.align	1
 132              		.weak	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 133              		.syntax unified
 134              		.code	16
 135              		.thumb_func
 136              		.fpu softvfp
 138              	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEEN
 139              	.LFB3353:
  34:../../src/function.h **** 			return func(args ...);
 140              		.loc 2 34 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145              	.LVL5:
 146              		.loc 2 36 0
 147              		@ sp needed
 148 0000 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE3353:
 152              		.section	.text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6P
 153              		.align	1
 154              		.weak	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 155              		.syntax unified
 156              		.code	16
 157              		.thumb_func
 158              		.fpu softvfp
 160              	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEEN
 161              	.LFB3354:
  34:../../src/function.h **** 			return func(args ...);
 162              		.loc 2 34 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 167              	.LVL6:
 168              		.loc 2 36 0
 169              		@ sp needed
 170 0000 7047     		bx	lr
 171              		.cfi_endproc
 172              	.LFE3354:
 174              		.section	.text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6P
 175              		.align	1
 176              		.weak	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 177              		.syntax unified
ARM GAS  /tmp/ccCYtDPO.s 			page 6


 178              		.code	16
 179              		.thumb_func
 180              		.fpu softvfp
 182              	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEEN
 183              	.LFB3371:
  34:../../src/function.h **** 			return func(args ...);
 184              		.loc 2 34 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189              	.LVL7:
 190              		.loc 2 36 0
 191              		@ sp needed
 192 0000 7047     		bx	lr
 193              		.cfi_endproc
 194              	.LFE3371:
 196              		.section	.text._ZN5Delay2usEm.part.9,"ax",%progbits
 197              		.align	1
 198              		.syntax unified
 199              		.code	16
 200              		.thumb_func
 201              		.fpu softvfp
 203              	_ZN5Delay2usEm.part.9:
 204              	.LFB3382:
 205              		.file 3 "../../src/delay.h"
   1:../../src/delay.h **** #pragma once
   2:../../src/delay.h **** #include "timers.h"
   3:../../src/delay.h **** 
   4:../../src/delay.h **** #if defined (USE_MOCK_SYSTICK) or defined (USE_MOCK_TIMER)
   5:../../src/delay.h **** #define NS mock
   6:../../src/delay.h **** using namespace mock;
   7:../../src/delay.h **** #else
   8:../../src/delay.h **** #define NS
   9:../../src/delay.h **** using namespace mcu;
  10:../../src/delay.h **** #endif
  11:../../src/delay.h **** 
  12:../../src/delay.h **** class Delay {
  13:../../src/delay.h **** 
  14:../../src/delay.h ****    uint32_t begin {0};
  15:../../src/delay.h ****    uint32_t rest  {0};
  16:../../src/delay.h ****    bool first_time_us {false};
  17:../../src/delay.h ****    bool first_time_ms {false};
  18:../../src/delay.h **** 
  19:../../src/delay.h ****    NS::Timer timer {};
  20:../../src/delay.h **** 
  21:../../src/delay.h **** public:
  22:../../src/delay.h **** 
  23:../../src/delay.h ****    Delay() {first_time_us = first_time_ms = true;}
  24:../../src/delay.h ****    
  25:../../src/delay.h ****    bool ms (uint32_t ms)
  26:../../src/delay.h ****    {
  27:../../src/delay.h ****       if (first_time_ms) {
  28:../../src/delay.h ****          first_time_ms = false;
  29:../../src/delay.h ****          timer.start(ms);
  30:../../src/delay.h ****       }
  31:../../src/delay.h **** 
ARM GAS  /tmp/ccCYtDPO.s 			page 7


  32:../../src/delay.h ****       if (not timer.event()){ return true; } 
  33:../../src/delay.h ****       else {
  34:../../src/delay.h ****          timer.stop();
  35:../../src/delay.h ****          first_time_ms = true;
  36:../../src/delay.h ****          return false;
  37:../../src/delay.h ****       }
  38:../../src/delay.h ****    }
  39:../../src/delay.h **** 
  40:../../src/delay.h ****    bool us (uint32_t us)
 206              		.loc 3 40 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              	.LVL8:
 211              	.LBB859:
  41:../../src/delay.h ****    {
  42:../../src/delay.h ****       if (us >= 1000) {
  43:../../src/delay.h ****          if (ms(us/1000))
  44:../../src/delay.h ****             return false;
  45:../../src/delay.h ****          else 
  46:../../src/delay.h ****             return true;
  47:../../src/delay.h ****       } else {
  48:../../src/delay.h ****          uint32_t time = us * (F_CPU / 1'000'000);
 212              		.loc 3 48 0
 213 0000 4822     		movs	r2, #72
 214              	.LBE859:
  40:../../src/delay.h ****    {
 215              		.loc 3 40 0
 216 0002 10B5     		push	{r4, lr}
 217              	.LCFI0:
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 4, -8
 220              		.cfi_offset 14, -4
  40:../../src/delay.h ****    {
 221              		.loc 3 40 0
 222 0004 0300     		movs	r3, r0
 223              	.LBB870:
  49:../../src/delay.h ****          auto& tick = mcu::make_reference<mcu::Periph::SysTick>();
  50:../../src/delay.h ****    
  51:../../src/delay.h ****          if (first_time_us) { 
 224              		.loc 3 51 0
 225 0006 007A     		ldrb	r0, [r0, #8]
 226              	.LVL9:
  48:../../src/delay.h ****          auto& tick = mcu::make_reference<mcu::Periph::SysTick>();
 227              		.loc 3 48 0
 228 0008 5143     		muls	r1, r2
 229              	.LVL10:
 230 000a 114A     		ldr	r2, .L20
 231              		.loc 3 51 0
 232 000c 0028     		cmp	r0, #0
 233 000e 07D0     		beq	.L10
 234              	.LVL11:
 235              	.LBB860:
 236              	.LBB861:
 237              		.file 4 "../../src/periph/systick.h"
   1:../../src/periph/systick.h **** #pragma once
   2:../../src/periph/systick.h **** #define PERIPH_SYSTICK_H_
ARM GAS  /tmp/ccCYtDPO.s 			page 8


   3:../../src/periph/systick.h **** 
   4:../../src/periph/systick.h **** #include "periph.h"
   5:../../src/periph/systick.h **** #include "bits_systick_f0_f4.h"
   6:../../src/periph/systick.h **** 
   7:../../src/periph/systick.h **** 
   8:../../src/periph/systick.h **** 
   9:../../src/periph/systick.h **** namespace mcu {
  10:../../src/periph/systick.h **** 
  11:../../src/periph/systick.h **** 
  12:../../src/periph/systick.h **** class SysTick {
  13:../../src/periph/systick.h **** protected:
  14:../../src/periph/systick.h ****     volatile SysTick_bits::CTRL     CTRL;  // Offset: 0x000 (R/W)  SysTick Control and Status Regis
  15:../../src/periph/systick.h ****     volatile uint32_t               LOAD;  // Offset: 0x004 (R/W)  SysTick Reload Value Register
  16:../../src/periph/systick.h ****     volatile uint32_t               VAL;   // Offset: 0x008 (R/W)  SysTick Current Value Register
  17:../../src/periph/systick.h ****     volatile SysTick_bits::CALIB    CALIB; // Offset: 0x00C (R/ )  SysTick Calibration Register
  18:../../src/periph/systick.h **** public:
  19:../../src/periph/systick.h ****     using Clock = SysTick_bits::CTRL::Clock;
  20:../../src/periph/systick.h ****     
  21:../../src/periph/systick.h ****     void load (uint32_t v)     { LOAD = v; }
  22:../../src/periph/systick.h ****     void clear()               { VAL = 0; }
  23:../../src/periph/systick.h ****     void setSource (Clock v)   { CTRL.CLKSOURCE = v; }
  24:../../src/periph/systick.h ****     void enableInterrupt()     { CTRL.TICKINT = true; }
  25:../../src/periph/systick.h ****     void enable(bool v = true) { CTRL.ENABLE = v; }
  26:../../src/periph/systick.h ****     uint32_t get()             { return VAL; }
 238              		.loc 4 26 0
 239 0010 9068     		ldr	r0, [r2, #8]
 240              	.LVL12:
 241              	.LBE861:
 242              	.LBE860:
  52:../../src/delay.h ****             begin = tick.get();
 243              		.loc 3 52 0
 244 0012 1860     		str	r0, [r3]
  53:../../src/delay.h ****             if (time >= begin) {
 245              		.loc 3 53 0
 246 0014 8142     		cmp	r1, r0
 247 0016 01D3     		bcc	.L11
  54:../../src/delay.h ****                rest = time - begin;
 248              		.loc 3 54 0
 249 0018 081A     		subs	r0, r1, r0
 250 001a 5860     		str	r0, [r3, #4]
 251              	.L11:
  55:../../src/delay.h ****             } 
  56:../../src/delay.h **** 
  57:../../src/delay.h ****             first_time_us = false; 
 252              		.loc 3 57 0
 253 001c 0020     		movs	r0, #0
 254 001e 1872     		strb	r0, [r3, #8]
 255              	.L10:
  58:../../src/delay.h ****          } 
  59:../../src/delay.h **** 
  60:../../src/delay.h ****          if (begin >= time) {
 256              		.loc 3 60 0
 257 0020 1C68     		ldr	r4, [r3]
 258 0022 A142     		cmp	r1, r4
 259 0024 08D8     		bhi	.L12
 260              	.LVL13:
 261              	.LBB862:
ARM GAS  /tmp/ccCYtDPO.s 			page 9


 262              	.LBB863:
 263              		.loc 4 26 0
 264 0026 9268     		ldr	r2, [r2, #8]
 265              	.LVL14:
 266              	.LBE863:
 267              	.LBE862:
  61:../../src/delay.h ****             if (begin - tick.get() < time ) { 
  62:../../src/delay.h ****                return true; 
 268              		.loc 3 62 0
 269 0028 0120     		movs	r0, #1
  61:../../src/delay.h ****             if (begin - tick.get() < time ) { 
 270              		.loc 3 61 0
 271 002a A41A     		subs	r4, r4, r2
 272 002c A142     		cmp	r1, r4
 273 002e 02D8     		bhi	.L13
 274              	.LVL15:
 275              	.L14:
  63:../../src/delay.h ****             } else  {
  64:../../src/delay.h ****                first_time_us = true;  
 276              		.loc 3 64 0
 277 0030 0122     		movs	r2, #1
  65:../../src/delay.h ****                return false;
 278              		.loc 3 65 0
 279 0032 0020     		movs	r0, #0
  64:../../src/delay.h ****                return false;
 280              		.loc 3 64 0
 281 0034 1A72     		strb	r2, [r3, #8]
 282              	.L13:
 283              	.LBE870:
  66:../../src/delay.h ****             }
  67:../../src/delay.h ****          } else {
  68:../../src/delay.h ****             if (tick.get() < begin) {
  69:../../src/delay.h ****                return true;
  70:../../src/delay.h ****             } else {
  71:../../src/delay.h ****                if (tick.get_load() - tick.get() < rest)
  72:../../src/delay.h ****                   return true; 
  73:../../src/delay.h ****                else {
  74:../../src/delay.h ****                   first_time_us = true;
  75:../../src/delay.h ****                   return false;
  76:../../src/delay.h ****                } 
  77:../../src/delay.h ****             }   
  78:../../src/delay.h ****          }
  79:../../src/delay.h ****          return true;
  80:../../src/delay.h ****       }
  81:../../src/delay.h ****    }
 284              		.loc 3 81 0
 285              		@ sp needed
 286 0036 10BD     		pop	{r4, pc}
 287              	.LVL16:
 288              	.L12:
 289              	.LBB871:
 290              	.LBB864:
 291              	.LBB865:
 292              		.loc 4 26 0
 293 0038 9168     		ldr	r1, [r2, #8]
 294              	.LVL17:
 295              	.LBE865:
ARM GAS  /tmp/ccCYtDPO.s 			page 10


 296              	.LBE864:
  62:../../src/delay.h ****             } else  {
 297              		.loc 3 62 0
 298 003a 0120     		movs	r0, #1
  68:../../src/delay.h ****                return true;
 299              		.loc 3 68 0
 300 003c 8C42     		cmp	r4, r1
 301 003e FAD8     		bhi	.L13
 302              	.LVL18:
 303              	.LBB866:
 304              	.LBB867:
  27:../../src/periph/systick.h ****     uint32_t get_load()        { return LOAD; }
 305              		.loc 4 27 0
 306 0040 5168     		ldr	r1, [r2, #4]
 307              	.LVL19:
 308              	.LBE867:
 309              	.LBE866:
 310              	.LBB868:
 311              	.LBB869:
  26:../../src/periph/systick.h ****     uint32_t get_load()        { return LOAD; }
 312              		.loc 4 26 0
 313 0042 9268     		ldr	r2, [r2, #8]
 314              	.LVL20:
 315              	.LBE869:
 316              	.LBE868:
  71:../../src/delay.h ****                   return true; 
 317              		.loc 3 71 0
 318 0044 8A1A     		subs	r2, r1, r2
 319 0046 5968     		ldr	r1, [r3, #4]
 320 0048 8A42     		cmp	r2, r1
 321 004a F1D2     		bcs	.L14
 322 004c F3E7     		b	.L13
 323              	.L21:
 324 004e C046     		.align	2
 325              	.L20:
 326 0050 10E000E0 		.word	-536813552
 327              	.LBE871:
 328              		.cfi_endproc
 329              	.LFE3382:
 331              		.section	.text._ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_
 332              		.align	1
 333              		.syntax unified
 334              		.code	16
 335              		.thumb_func
 336              		.fpu softvfp
 338              	_ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_.isra.14
 339              	.LFB3394:
 340              		.file 5 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bit
   1:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
   3:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** //
   5:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // any later version.
ARM GAS  /tmp/ccCYtDPO.s 			page 11


  10:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
  11:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
  16:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
  20:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
  25:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** /*
  26:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  *
  27:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  *
  30:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  *
  38:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  *
  39:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  *
  42:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  */
  50:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
  51:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  */
  55:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
  56:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
  59:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
ARM GAS  /tmp/ccCYtDPO.s 			page 12


  67:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap and _GLIBCXX_MOVE
  71:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
  73:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** {
  75:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
  77:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
  78:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  79:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  80:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  81:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool _BoolType>
  82:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __iter_swap
  83:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
  84:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  85:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static void
  86:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  87:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         {
  88:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****           typedef typename iterator_traits<_ForwardIterator1>::value_type
  89:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****             _ValueType1;
  90:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****           _ValueType1 __tmp = _GLIBCXX_MOVE(*__a);
  91:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****           *__a = _GLIBCXX_MOVE(*__b);
  92:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****           *__b = _GLIBCXX_MOVE(__tmp);
  93:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
  94:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
  95:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
  96:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<>
  97:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __iter_swap<true>
  98:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
  99:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static void 
 101:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 102:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         {
 103:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****           swap(*__a, *__b);
 104:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         }
 105:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 106:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #endif
 107:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 108:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
 109:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 110:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 111:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 112:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 113:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
 114:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 115:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 116:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  iterators themselves.
 117:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
 118:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 119:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline void
 120:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 121:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 122:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       // concept requirements
 123:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
ARM GAS  /tmp/ccCYtDPO.s 			page 13


 124:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 125:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 126:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 127:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 128:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 129:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 130:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	_ValueType1;
 131:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 132:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	_ValueType2;
 133:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 134:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 135:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 				  _ValueType2>)
 136:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 137:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 				  _ValueType1>)
 138:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 139:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 140:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	_ReferenceType1;
 141:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 142:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	_ReferenceType2;
 143:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 144:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 145:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 146:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 147:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #else
 148:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       swap(*__a, *__b);
 149:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #endif
 150:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 151:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 152:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
 153:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 154:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 155:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 156:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 157:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 158:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 159:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 160:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 161:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 162:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  The ranges must not overlap.
 163:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
 164:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 165:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     _ForwardIterator2
 166:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 167:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 168:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 169:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       // concept requirements
 170:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 171:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 172:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 173:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 174:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 175:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 176:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 177:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 178:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return __first2;
 179:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 180:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
ARM GAS  /tmp/ccCYtDPO.s 			page 14


 181:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
 182:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 183:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 184:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 185:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 186:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 187:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 188:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 189:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 190:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 191:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
 192:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 193:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 194:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline const _Tp&
 195:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 196:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 197:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       // concept requirements
 198:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 199:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 200:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       if (__b < __a)
 201:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	return __b;
 202:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return __a;
 203:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 204:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 205:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
 206:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 207:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 208:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 209:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 210:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 211:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 212:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 213:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 214:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 215:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
 216:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 217:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 218:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline const _Tp&
 219:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 220:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 221:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       // concept requirements
 222:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 223:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 224:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       if (__a < __b)
 225:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	return __b;
 226:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return __a;
 227:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 228:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 229:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
 230:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 231:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 232:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 233:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 234:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 235:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 236:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 237:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
ARM GAS  /tmp/ccCYtDPO.s 			page 15


 238:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 239:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
 240:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 241:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 242:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline const _Tp&
 243:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 244:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 245:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 246:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       if (__comp(__b, __a))
 247:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	return __b;
 248:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return __a;
 249:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 250:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 251:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
 252:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 253:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 254:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 255:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 256:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 257:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 258:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 259:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 260:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 261:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
 262:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 263:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 264:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline const _Tp&
 265:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 266:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 267:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 268:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       if (__comp(__a, __b))
 269:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	return __b;
 270:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return __a;
 271:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 272:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 273:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 274:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 275:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _Iterator>
 276:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline _Iterator
 277:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 278:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     { return __it; }
 279:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 280:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 281:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 282:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 283:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 284:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // a for loop with an explicit count.
 285:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 286:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool, bool, typename>
 287:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __copy_move
 288:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 289:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 290:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static _OI
 291:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 292:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         {
 293:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 294:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    *__result = *__first;
ARM GAS  /tmp/ccCYtDPO.s 			page 16


 295:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result;
 296:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
 297:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 298:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 299:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 300:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _Category>
 301:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 302:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 303:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 304:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static _OI
 305:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 306:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         {
 307:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 308:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 309:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result;
 310:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
 311:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 312:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #endif
 313:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 314:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<>
 315:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 316:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 317:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 318:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static _OI
 319:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 320:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         { 
 321:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 322:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 323:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    {
 324:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	      *__result = *__first;
 325:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	      ++__first;
 326:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	      ++__result;
 327:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    }
 328:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result;
 329:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
 330:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 331:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 332:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 333:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<>
 334:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 335:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 336:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 337:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static _OI
 338:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 339:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         { 
 340:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 341:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 342:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    {
 343:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 344:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	      ++__first;
 345:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	      ++__result;
 346:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    }
 347:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result;
 348:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
 349:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 350:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #endif
 351:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
ARM GAS  /tmp/ccCYtDPO.s 			page 17


 352:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool _IsMove>
 353:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 354:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 355:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _Tp>
 356:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static _Tp*
 357:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 358:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         {
 359:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 360:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 361:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 362:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 363:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 364:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 365:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #endif
 366:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 367:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  if (_Num)
 368:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 369:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 370:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
 371:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 372:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 373:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 374:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline _OI
 375:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 376:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 377:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::value_type _ValueTypeI;
 378:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
 379:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 380:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueTypeI)
 381:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	                     && __is_pointer<_II>::__value
 382:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	                     && __is_pointer<_OI>::__value
 383:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
 384:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 385:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __simple,
 386:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	                      _Category>::__copy_m(__first, __last, __result);
 387:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 388:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 389:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 390:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 391:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _CharT>
 392:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct char_traits;
 393:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 394:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 395:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     class istreambuf_iterator;
 396:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 397:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 398:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     class ostreambuf_iterator;
 399:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 400:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 401:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 402:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 403:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 404:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 405:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 406:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 407:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 408:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
ARM GAS  /tmp/ccCYtDPO.s 			page 18


 409:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 410:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 411:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 412:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 413:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 414:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 				    _CharT*>::__type
 415:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 416:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 417:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 418:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 419:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline _OI
 420:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 421:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 422:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 423:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 424:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 					     std::__niter_base(__result)));
 425:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 426:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 427:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
 428:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 429:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 430:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 431:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 432:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 433:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   result + (first - last)
 434:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 435:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 436:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 437:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 438:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 439:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 440:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 441:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 442:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  within [first,last).
 443:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
 444:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 445:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline _OI
 446:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 447:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 448:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       // concept requirements
 449:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 450:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 451:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 452:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 453:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 454:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return (std::__copy_move_a2<__is_move_iterator<_II>::__value>
 455:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 456:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	       __result));
 457:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 458:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 459:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 460:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
 461:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 462:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 463:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 464:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 465:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
ARM GAS  /tmp/ccCYtDPO.s 			page 19


 466:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   result + (first - last)
 467:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 468:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 469:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 470:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 471:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 472:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 473:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 474:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 475:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  within [first,last).
 476:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
 477:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 478:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline _OI
 479:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 480:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 481:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       // concept requirements
 482:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 483:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 484:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 485:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 486:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 487:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return std::__copy_move_a2<true>(std::__miter_base(__first),
 488:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 				       std::__miter_base(__last), __result);
 489:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 490:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 491:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 492:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #else
 493:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 494:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #endif
 495:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 496:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool, bool, typename>
 497:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __copy_move_backward
 498:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 499:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 500:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static _BI2
 501:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 502:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         {
 503:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  while (__first != __last)
 504:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 505:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result;
 506:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
 507:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 508:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 509:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 510:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _Category>
 511:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 512:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 513:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 514:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static _BI2
 515:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 516:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         {
 517:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  while (__first != __last)
 518:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 519:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result;
 520:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
 521:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 522:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #endif
ARM GAS  /tmp/ccCYtDPO.s 			page 20


 523:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 524:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<>
 525:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 526:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 527:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 528:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static _BI2
 529:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 530:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         {
 531:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 532:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 533:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 534:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result;
 535:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
 536:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 537:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 538:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 539:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<>
 540:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 541:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 542:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 543:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static _BI2
 544:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 545:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         {
 546:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 547:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 548:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 549:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result;
 550:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
 551:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 552:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #endif
 553:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 554:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool _IsMove>
 555:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 556:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 557:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _Tp>
 558:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static _Tp*
 559:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         __copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 560:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         {
 561:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 562:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 563:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 564:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 565:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 566:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 567:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #endif
 568:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 569:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  if (_Num)
 570:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 571:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result - _Num;
 572:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
 573:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 574:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 575:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 576:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline _BI2
 577:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
 578:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 579:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::value_type _ValueType1;
ARM GAS  /tmp/ccCYtDPO.s 			page 21


 580:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI2>::value_type _ValueType2;
 581:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 582:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueType1)
 583:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	                     && __is_pointer<_BI1>::__value
 584:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	                     && __is_pointer<_BI2>::__value
 585:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 			     && __are_same<_ValueType1, _ValueType2>::__value);
 586:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 587:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove, __simple,
 588:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	                               _Category>::__copy_move_b(__first,
 589:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 								 __last,
 590:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 								 __result);
 591:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 592:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 593:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 594:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline _BI2
 595:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 596:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 597:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return _BI2(std::__copy_move_backward_a<_IsMove>
 598:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 599:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 600:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 601:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 602:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
 603:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 604:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 605:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 606:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 607:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 608:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   result - (first - last)
 609:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 610:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 611:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 612:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 613:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 614:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 615:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 616:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 617:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 618:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 619:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
 620:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 621:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline _BI2
 622:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 623:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 624:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       // concept requirements
 625:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 626:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 627:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 628:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 629:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 630:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 631:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 632:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return (std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
 633:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 634:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	       __result));
 635:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 636:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
ARM GAS  /tmp/ccCYtDPO.s 			page 22


 637:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 638:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
 639:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 640:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 641:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 642:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 643:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 644:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   result - (first - last)
 645:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 646:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 647:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 648:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 649:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 650:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 651:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 652:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 653:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 654:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 655:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
 656:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 657:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline _BI2
 658:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 659:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 660:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       // concept requirements
 661:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 662:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 663:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 664:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 665:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 666:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 667:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 668:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward_a2<true>(std::__miter_base(__first),
 669:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 						std::__miter_base(__last),
 670:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 						__result);
 671:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 672:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 673:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::move_backward(_Tp, _Up, _Vp)
 674:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #else
 675:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::copy_backward(_Tp, _Up, _Vp)
 676:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #endif
 677:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 678:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 679:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline typename
 680:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
 681:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 682:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  	     const _Tp& __value)
 683:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 684:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 685:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	*__first = __value;
 686:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 687:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     
 688:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 689:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline typename
 690:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
 691:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 692:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	     const _Tp& __value)
 693:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
ARM GAS  /tmp/ccCYtDPO.s 			page 23


 694:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 695:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 696:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 697:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 698:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 699:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // Specialization: for char types we can use memset.
 700:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 701:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline typename
 702:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
 703:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __fill_a(_Tp* __first, _Tp* __last, const _Tp& __c)
 341              		.loc 5 703 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              	.LVL21:
 346 0000 10B5     		push	{r4, lr}
 347              	.LCFI1:
 348              		.cfi_def_cfa_offset 8
 349              		.cfi_offset 4, -8
 350              		.cfi_offset 14, -4
 351              	.LBB872:
 704:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 705:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       const _Tp __tmp = __c;
 706:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       if (const size_t __len = __last - __first)
 352              		.loc 5 706 0
 353 0002 0A1A     		subs	r2, r1, r0
 354              	.LVL22:
 355 0004 02D0     		beq	.L22
 707:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
 356              		.loc 5 707 0
 357 0006 2021     		movs	r1, #32
 358              	.LVL23:
 359 0008 FFF7FEFF 		bl	memset
 360              	.LVL24:
 361              	.L22:
 362              	.LBE872:
 708:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 363              		.loc 5 708 0
 364              		@ sp needed
 365 000c 10BD     		pop	{r4, pc}
 366              		.cfi_endproc
 367              	.LFE3394:
 369              		.section	.text._ZN3mcu5FLASH6unlockEv,"ax",%progbits
 370              		.align	1
 371              		.global	_ZN3mcu5FLASH6unlockEv
 372              		.syntax unified
 373              		.code	16
 374              		.thumb_func
 375              		.fpu softvfp
 377              	_ZN3mcu5FLASH6unlockEv:
 378              	.LFB115:
 379              		.file 6 "../../src/periph/flash_f1.h"
   1:../../src/periph/flash_f1.h **** #pragma once
   2:../../src/periph/flash_f1.h **** 
   3:../../src/periph/flash_f1.h **** #include "bits_flash_f1.h"
   4:../../src/periph/flash_f1.h **** 
   5:../../src/periph/flash_f1.h **** namespace mcu {
ARM GAS  /tmp/ccCYtDPO.s 			page 24


   6:../../src/periph/flash_f1.h **** 
   7:../../src/periph/flash_f1.h **** class FLASH {
   8:../../src/periph/flash_f1.h **** protected:
   9:../../src/periph/flash_f1.h ****    volatile FLASH_bits::ACR ACR;      // FLASH access control register, offset: 0x00
  10:../../src/periph/flash_f1.h ****    volatile uint32_t        KEYR;     // FLASH key register,            offset: 0x04
  11:../../src/periph/flash_f1.h ****    volatile uint32_t        OPTKEYR;  // FLASH OPT key register,        offset: 0x08
  12:../../src/periph/flash_f1.h ****    volatile FLASH_bits::SR  SR;       // FLASH status register,         offset: 0x0C
  13:../../src/periph/flash_f1.h ****    volatile FLASH_bits::CR  CR;       // FLASH control register,        offset: 0x10
  14:../../src/periph/flash_f1.h ****    volatile uint32_t        AR;       // FLASH address register,        offset: 0x14
  15:../../src/periph/flash_f1.h ****    volatile uint32_t        RESERVED; //  Reserved,                             0x18
  16:../../src/periph/flash_f1.h ****    volatile uint32_t        OBR;      // FLASH option bytes register,   offset: 0x1C
  17:../../src/periph/flash_f1.h ****    volatile uint32_t        WRPR;     // FLASH option bytes register,   offset: 0x20
  18:../../src/periph/flash_f1.h **** public:
  19:../../src/periph/flash_f1.h ****    using CMSIS_type = FLASH_TypeDef;
  20:../../src/periph/flash_f1.h ****    using Latency    = FLASH_bits::ACR::Latency;
  21:../../src/periph/flash_f1.h ****    /// —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ —ç—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞, —á—Ç–æ–±—ã –±—ã–ª–æ –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω–æ —
  22:../../src/periph/flash_f1.h ****    enum Sector {  _0,  _1,  _2,  _3,  _4,  _5,  _6,  _7,  _8,  _9,
  23:../../src/periph/flash_f1.h ****                  _10, _11, _12, _13, _14, _15, _16, _17, _18, _19,
  24:../../src/periph/flash_f1.h ****                  _20, _21, _22, _23, _24, _25, _26, _27, _28, _29,
  25:../../src/periph/flash_f1.h ****                  _30, _31, _32, _33, _34, _35, _36, _37, _38, _39,
  26:../../src/periph/flash_f1.h ****                  _40, _41, _42, _43, _44, _45, _46, _47, _48, _49,
  27:../../src/periph/flash_f1.h ****                  _50, _51, _52, _53, _54, _55, _56, _57, _58, _59,
  28:../../src/periph/flash_f1.h ****                  _60, _61, _62, _63, _64, _65, _66, _67, _68, _69,
  29:../../src/periph/flash_f1.h ****                  _70, _71, _72, _73, _74, _75, _76, _77, _78, _79,
  30:../../src/periph/flash_f1.h ****                  _80, _81, _82, _83, _84, _85, _86, _87, _88, _89,
  31:../../src/periph/flash_f1.h ****                  _90, _91, _92, _93, _94, _95, _96, _97, _98, _99,
  32:../../src/periph/flash_f1.h ****                 _100,_101,_102,_103,_104,_105,_106,_107,_108,_109,
  33:../../src/periph/flash_f1.h ****                 _110,_111,_112,_113,_114,_115,_116,_117,_118,_119,
  34:../../src/periph/flash_f1.h ****                 _120,_121,_122,_123,_124,_125,_126,_127
  35:../../src/periph/flash_f1.h ****    };
  36:../../src/periph/flash_f1.h **** 
  37:../../src/periph/flash_f1.h ****    auto& like_CMSIS() { return *reinterpret_cast<CMSIS_type*>(this); }
  38:../../src/periph/flash_f1.h **** 
  39:../../src/periph/flash_f1.h ****    FLASH& set (Latency v)            { ACR.LATENCY = v;    return *this; }
  40:../../src/periph/flash_f1.h ****    FLASH& enable ()                  { ACR.PRFTBE = true;  return *this; }
  41:../../src/periph/flash_f1.h ****    FLASH& lock()                     { CR.LOCK     = true; return *this; }
  42:../../src/periph/flash_f1.h ****    bool   is_lock()                  { return CR.LOCK;                   }
  43:../../src/periph/flash_f1.h ****    FLASH& unlock();
  44:../../src/periph/flash_f1.h ****    FLASH& set_progMode()             { CR.PG       = true; return *this; }
  45:../../src/periph/flash_f1.h ****    bool   is_endOfProg()             { return SR.EOP;                    }
  46:../../src/periph/flash_f1.h ****    FLASH& clear_flag_endOfProg()     { SR.EOP      = true; return *this; }
  47:../../src/periph/flash_f1.h ****    bool   is_busy()                  { return SR.BSY;                    }
  48:../../src/periph/flash_f1.h ****    FLASH& en_interrupt_endOfProg()   { CR.EOPIE    = true; return *this; }
  49:../../src/periph/flash_f1.h **** 
  50:../../src/periph/flash_f1.h ****    template<Sector> FLASH& start_erase();
  51:../../src/periph/flash_f1.h **** 
  52:../../src/periph/flash_f1.h ****    template<Sector s> static constexpr size_t address() { return 0x08000000 + 1024 * s; }
  53:../../src/periph/flash_f1.h ****    template<Sector>   static constexpr size_t size()    { return 1024; }
  54:../../src/periph/flash_f1.h **** };
  55:../../src/periph/flash_f1.h **** 
  56:../../src/periph/flash_f1.h **** 
  57:../../src/periph/flash_f1.h **** #if not defined(USE_MOCK_FLASH)
  58:../../src/periph/flash_f1.h **** template<Periph p> std::enable_if_t<p == Periph::FLASH, FLASH&> make_reference() { return *reinterp
  59:../../src/periph/flash_f1.h **** #endif
  60:../../src/periph/flash_f1.h **** 
  61:../../src/periph/flash_f1.h **** 
  62:../../src/periph/flash_f1.h **** 
ARM GAS  /tmp/ccCYtDPO.s 			page 25


  63:../../src/periph/flash_f1.h **** FLASH& FLASH::unlock()
  64:../../src/periph/flash_f1.h **** {
 380              		.loc 6 64 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 385              	.LVL25:
 386              	.LBB873:
 387              	.LBB874:
  42:../../src/periph/flash_f1.h ****    FLASH& unlock();
 388              		.loc 6 42 0
 389 0000 0369     		ldr	r3, [r0, #16]
 390              	.LBE874:
 391              	.LBE873:
  65:../../src/periph/flash_f1.h ****    constexpr uint32_t Key1 = 0x45670123;
  66:../../src/periph/flash_f1.h ****    constexpr uint32_t Key2 = 0xCDEF89AB;
  67:../../src/periph/flash_f1.h ****    if (is_lock()) {
 392              		.loc 6 67 0
 393 0002 1B06     		lsls	r3, r3, #24
 394 0004 03D5     		bpl	.L28
  68:../../src/periph/flash_f1.h ****       KEYR = Key1;
 395              		.loc 6 68 0
 396 0006 024B     		ldr	r3, .L32
 397 0008 4360     		str	r3, [r0, #4]
  69:../../src/periph/flash_f1.h ****       IF_TEST_WAIT_MS(10);
  70:../../src/periph/flash_f1.h ****       KEYR = Key2;
 398              		.loc 6 70 0
 399 000a 024B     		ldr	r3, .L32+4
 400 000c 4360     		str	r3, [r0, #4]
 401              	.L28:
  71:../../src/periph/flash_f1.h ****    }
  72:../../src/periph/flash_f1.h ****    return *this;
  73:../../src/periph/flash_f1.h **** }
 402              		.loc 6 73 0
 403              		@ sp needed
 404 000e 7047     		bx	lr
 405              	.L33:
 406              		.align	2
 407              	.L32:
 408 0010 23016745 		.word	1164378403
 409 0014 AB89EFCD 		.word	-839939669
 410              		.cfi_endproc
 411              	.LFE115:
 413              		.section	.text._ZNSt11char_traitsIcE6lengthEPKc,"axG",%progbits,_ZNSt11char_traitsIcE6lengthEPKc,c
 414              		.align	1
 415              		.weak	_ZNSt11char_traitsIcE6lengthEPKc
 416              		.syntax unified
 417              		.code	16
 418              		.thumb_func
 419              		.fpu softvfp
 421              	_ZNSt11char_traitsIcE6lengthEPKc:
 422              	.LFB568:
 423              		.file 7 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bit
   1:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
   3:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // Copyright (C) 1997-2017 Free Software Foundation, Inc.
ARM GAS  /tmp/ccCYtDPO.s 			page 26


   4:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** //
   5:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // terms of the GNU General Public License as published by the
   8:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // any later version.
  10:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  11:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // GNU General Public License for more details.
  15:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  16:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  20:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  25:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** /** @file bits/char_traits.h
  26:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****  */
  29:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  30:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** //
  31:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** //
  33:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  34:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #define _CHAR_TRAITS_H 1
  36:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  37:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #pragma GCC system_header
  38:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  39:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  43:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  44:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  45:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #endif
  46:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  47:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  48:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** {
  49:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  50:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  51:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   /**
  52:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @brief  Mapping from character type to associated types.
  53:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *
  54:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @note This is an implementation class for the generic version
  55:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  56:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  57:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  58:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  types, but who don't need to change the definitions of any function
  59:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  60:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
ARM GAS  /tmp/ccCYtDPO.s 			page 27


  61:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<typename _CharT>
  62:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     struct _Char_types
  63:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
  64:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef unsigned long   int_type;
  65:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef std::streampos  pos_type;
  66:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef std::streamoff  off_type;
  67:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef std::mbstate_t  state_type;
  68:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     };
  69:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  70:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  71:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   /**
  72:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  73:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *
  74:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @note For any given actual character type, this definition is
  75:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  76:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  77:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  78:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  79:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  80:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  namespace __gnu_cxx may be.
  81:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *
  82:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  83:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  84:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  85:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    */
  86:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<typename _CharT>
  87:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     struct char_traits
  88:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
  89:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef _CharT                                    char_type;
  90:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  91:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  92:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  93:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  94:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  95:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
  96:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
  97:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       { __c1 = __c2; }
  98:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  99:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 101:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       { return __c1 == __c2; }
 102:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 103:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 104:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 105:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       { return __c1 < __c2; }
 106:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 107:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 108:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 109:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 110:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 111:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       length(const char_type* __s);
 112:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 113:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 114:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 115:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 116:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static char_type*
 117:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
ARM GAS  /tmp/ccCYtDPO.s 			page 28


 118:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 119:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static char_type*
 120:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 121:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 122:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static char_type*
 123:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 124:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 125:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 126:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       to_char_type(const int_type& __c)
 127:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       { return static_cast<char_type>(__c); }
 128:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 129:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 130:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       to_int_type(const char_type& __c)
 131:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       { return static_cast<int_type>(__c); }
 132:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 133:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 134:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 135:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       { return __c1 == __c2; }
 136:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 137:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 138:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       eof()
 139:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 140:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 141:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 142:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       not_eof(const int_type& __c)
 143:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 144:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     };
 145:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 146:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<typename _CharT>
 147:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 148:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 149:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 150:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
 151:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 152:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 153:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	  return -1;
 154:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 155:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	  return 1;
 156:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       return 0;
 157:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     }
 158:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 159:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<typename _CharT>
 160:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 161:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 162:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     length(const char_type* __p)
 163:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
 164:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       std::size_t __i = 0;
 165:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       while (!eq(__p[__i], char_type()))
 166:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****         ++__i;
 167:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       return __i;
 168:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     }
 169:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 170:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<typename _CharT>
 171:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 172:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 173:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 174:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
ARM GAS  /tmp/ccCYtDPO.s 			page 29


 175:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 176:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****         if (eq(__s[__i], __a))
 177:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****           return __s + __i;
 178:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       return 0;
 179:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     }
 180:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 181:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<typename _CharT>
 182:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 183:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 184:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 185:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
 186:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 187:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 						    __n * sizeof(char_type)));
 188:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     }
 189:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 190:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<typename _CharT>
 191:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 192:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 193:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 194:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
 195:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 196:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 197:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       return __s1;
 198:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     }
 199:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 200:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<typename _CharT>
 201:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 202:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 203:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 204:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
 205:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 206:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       std::fill_n(__s, __n, __a);
 207:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       return __s;
 208:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     }
 209:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 210:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 211:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** } // namespace
 212:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 213:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 214:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** {
 215:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 216:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 217:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #if __cplusplus > 201402
 218:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #define __cpp_lib_constexpr_char_traits 201611
 219:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 220:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   /**
 221:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 222:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  string are known at compile time.
 223:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @param  __s  The string.
 224:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *
 225:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 226:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    */
 227:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<typename _CharT>
 228:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 229:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     __constant_string_p(const _CharT* __s)
 230:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
 231:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
ARM GAS  /tmp/ccCYtDPO.s 			page 30


 232:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	__s++;
 233:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       return __builtin_constant_p(*__s);
 234:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     }
 235:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 236:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   /**
 237:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @brief Determine whether the characters of a character array are
 238:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  known at compile time.
 239:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @param  __a  The character array.
 240:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @param  __n  Number of characters.
 241:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *
 242:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 243:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    */
 244:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<typename _CharT>
 245:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 246:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 247:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
 248:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       size_t __i = 0;
 249:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       while (__builtin_constant_p(__a[__i]) && __i < __n)
 250:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	__i++;
 251:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       return __i == __n;
 252:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     }
 253:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #endif
 254:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 255:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   // 21.1
 256:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   /**
 257:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 258:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *
 259:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @note  For any given actual character type, this definition is
 260:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 261:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 262:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 263:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *
 264:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 265:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 266:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 267:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   */
 268:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<class _CharT>
 269:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 270:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     { };
 271:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 272:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 273:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   /// 21.1.3.1  char_traits specializations
 274:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<>
 275:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     struct char_traits<char>
 276:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
 277:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef char              char_type;
 278:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef int               int_type;
 279:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef streampos         pos_type;
 280:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef streamoff         off_type;
 281:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef mbstate_t         state_type;
 282:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 283:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 284:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 285:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 286:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 287:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 288:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
ARM GAS  /tmp/ccCYtDPO.s 			page 31


 289:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       { return __c1 == __c2; }
 290:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 291:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 292:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 293:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       {
 294:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	// LWG 467.
 295:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 296:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 		< static_cast<unsigned char>(__c2));
 297:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       }
 298:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 299:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 300:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 301:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       {
 302:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #if __cplusplus > 201402
 303:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 304:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 305:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 306:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 307:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #endif
 308:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	if (__n == 0)
 309:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	  return 0;
 310:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 311:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       }
 312:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 313:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 314:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       length(const char_type* __s)
 424              		.loc 7 314 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428              	.LVL26:
 429 0000 10B5     		push	{r4, lr}
 430              	.LCFI2:
 431              		.cfi_def_cfa_offset 8
 432              		.cfi_offset 4, -8
 433              		.cfi_offset 14, -4
 315:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       {
 316:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #if __cplusplus > 201402
 317:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	if (__constant_string_p(__s))
 318:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 319:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #endif
 320:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	return __builtin_strlen(__s);
 434              		.loc 7 320 0
 435 0002 FFF7FEFF 		bl	strlen
 436              	.LVL27:
 321:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       }
 437              		.loc 7 321 0
 438              		@ sp needed
 439 0006 10BD     		pop	{r4, pc}
 440              		.cfi_endproc
 441              	.LFE568:
 443              		.section	.text._ZN3Pin3setEv,"axG",%progbits,_ZN3Pin3setEv,comdat
 444              		.align	1
 445              		.weak	_ZN3Pin3setEv
 446              		.syntax unified
 447              		.code	16
 448              		.thumb_func
ARM GAS  /tmp/ccCYtDPO.s 			page 32


 449              		.fpu softvfp
 451              	_ZN3Pin3setEv:
 452              	.LFB2205:
 453              		.file 8 "../../src/pin.h"
   1:../../src/pin.h **** #pragma once
   2:../../src/pin.h **** 
   3:../../src/pin.h **** #include "periph_gpio.h"
   4:../../src/pin.h **** #include "pins.h"
   5:../../src/pin.h **** #include "meta.h"
   6:../../src/pin.h **** 
   7:../../src/pin.h **** #if defined(USE_MOCK_GPIO)
   8:../../src/pin.h **** using GPIO = mock::GPIO;
   9:../../src/pin.h **** #else
  10:../../src/pin.h **** using GPIO = mcu::GPIO;
  11:../../src/pin.h **** #endif
  12:../../src/pin.h **** 
  13:../../src/pin.h **** class Pin {
  14:../../src/pin.h ****    GPIO& port;
  15:../../src/pin.h ****    const int n;
  16:../../src/pin.h **** public:
  17:../../src/pin.h ****    Pin (GPIO& port, int n) : port{port}, n{n} {}
  18:../../src/pin.h **** 
  19:../../src/pin.h ****    template<class Pin_, mcu::PinMode mode = mcu::PinMode::Input> static auto& make()
  20:../../src/pin.h ****    {
  21:../../src/pin.h ****       static Pin pin { mcu::make_reference<Pin_::periph>(), Pin_::n };
  22:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
  23:../../src/pin.h ****          .template clock_enable<Pin_::periph>();
  24:../../src/pin.h ****       pin.port.template init<Pin_, mode>();
  25:../../src/pin.h ****       return pin;
  26:../../src/pin.h ****    }
  27:../../src/pin.h **** 
  28:../../src/pin.h ****    void set()       { port.set(n);             }
 454              		.loc 8 28 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458              		@ link register save eliminated.
 459              	.LVL28:
 460              	.LBB879:
 461              	.LBB880:
 462              		.file 9 "../../src/periph/gpio_f1.h"
   1:../../src/periph/gpio_f1.h **** #pragma once
   2:../../src/periph/gpio_f1.h **** 
   3:../../src/periph/gpio_f1.h **** #include "bits_gpio_f1.h"
   4:../../src/periph/gpio_f1.h **** #include "periph_rcc.h"
   5:../../src/periph/gpio_f1.h **** #include "periph_afio.h"
   6:../../src/periph/gpio_f1.h **** #include "pins.h"
   7:../../src/periph/gpio_f1.h **** 
   8:../../src/periph/gpio_f1.h **** namespace mcu {
   9:../../src/periph/gpio_f1.h **** 
  10:../../src/periph/gpio_f1.h **** enum class PinMode {Input, Output, Analog, USART1_TX, USART1_RX, USART2_TX, USART2_RX, USART3_TX, U
  11:../../src/periph/gpio_f1.h **** 
  12:../../src/periph/gpio_f1.h **** class GPIO {
  13:../../src/periph/gpio_f1.h ****   volatile GPIO_bits::CR CR;   // Port configuration register      offset: 0x00
  14:../../src/periph/gpio_f1.h ****   volatile GPIO_bits::DR IDR;  // Port input data register         offset: 0x08
  15:../../src/periph/gpio_f1.h ****   volatile uint32_t      ODR;  // Port output data register        offset: 0x0C
  16:../../src/periph/gpio_f1.h ****   volatile uint32_t      BSRR; // Port bit set/reset register      offset: 0x10
ARM GAS  /tmp/ccCYtDPO.s 			page 33


  17:../../src/periph/gpio_f1.h ****   volatile uint32_t      BRR;  // Port bit reset register          offset: 0x14
  18:../../src/periph/gpio_f1.h ****   volatile uint32_t      LCKR; // Port configuration lock register offset: 0x18
  19:../../src/periph/gpio_f1.h **** 
  20:../../src/periph/gpio_f1.h **** public:
  21:../../src/periph/gpio_f1.h ****    using CMSIS_type = GPIO_TypeDef;
  22:../../src/periph/gpio_f1.h ****    using Mode       = GPIO_bits::CR::Mode;
  23:../../src/periph/gpio_f1.h ****    using Remap      = AFIO::Remap;
  24:../../src/periph/gpio_f1.h **** 
  25:../../src/periph/gpio_f1.h ****    auto& like_CMSIS(){return *reinterpret_cast<CMSIS_type*>(this);}
  26:../../src/periph/gpio_f1.h **** 
  27:../../src/periph/gpio_f1.h ****    void set        (size_t n) { BSRR |= (1 << n);              }
 463              		.loc 9 27 0
 464 0000 0123     		movs	r3, #1
 465              	.LBE880:
 466              	.LBE879:
 467              		.loc 8 28 0
 468 0002 0268     		ldr	r2, [r0]
 469              	.LVL29:
 470              	.LBB882:
 471              	.LBB881:
 472              		.loc 9 27 0
 473 0004 4068     		ldr	r0, [r0, #4]
 474              	.LVL30:
 475 0006 1169     		ldr	r1, [r2, #16]
 476 0008 8340     		lsls	r3, r3, r0
 477 000a 0B43     		orrs	r3, r1
 478 000c 1361     		str	r3, [r2, #16]
 479              	.LVL31:
 480              	.LBE881:
 481              	.LBE882:
 482              		.loc 8 28 0
 483              		@ sp needed
 484 000e 7047     		bx	lr
 485              		.cfi_endproc
 486              	.LFE2205:
 488              		.section	.text._ZN3Pin5clearEv,"axG",%progbits,_ZN3Pin5clearEv,comdat
 489              		.align	1
 490              		.weak	_ZN3Pin5clearEv
 491              		.syntax unified
 492              		.code	16
 493              		.thumb_func
 494              		.fpu softvfp
 496              	_ZN3Pin5clearEv:
 497              	.LFB2206:
  29:../../src/pin.h ****    void clear()     { port.clear(n);           }
 498              		.loc 8 29 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              	.LVL32:
 503              	.LBB885:
 504              	.LBB886:
  28:../../src/periph/gpio_f1.h ****    void clear      (size_t n) { BSRR |= (1 << (n + 16));       }
 505              		.loc 9 28 0
 506 0000 0123     		movs	r3, #1
 507 0002 4268     		ldr	r2, [r0, #4]
 508              	.LBE886:
ARM GAS  /tmp/ccCYtDPO.s 			page 34


 509              	.LBE885:
 510              		.loc 8 29 0
 511 0004 10B5     		push	{r4, lr}
 512              	.LCFI3:
 513              		.cfi_def_cfa_offset 8
 514              		.cfi_offset 4, -8
 515              		.cfi_offset 14, -4
 516              	.LBB889:
 517              	.LBB887:
 518              		.loc 9 28 0
 519 0006 1032     		adds	r2, r2, #16
 520 0008 9340     		lsls	r3, r3, r2
 521              	.LBE887:
 522              	.LBE889:
 523              		.loc 8 29 0
 524 000a 0168     		ldr	r1, [r0]
 525              	.LVL33:
 526              		@ sp needed
 527              	.LBB890:
 528              	.LBB888:
 529              		.loc 9 28 0
 530 000c 0C69     		ldr	r4, [r1, #16]
 531 000e 2343     		orrs	r3, r4
 532 0010 0B61     		str	r3, [r1, #16]
 533              	.LVL34:
 534              	.LBE888:
 535              	.LBE890:
 536              		.loc 8 29 0
 537 0012 10BD     		pop	{r4, pc}
 538              		.cfi_endproc
 539              	.LFE2206:
 541              		.section	.text._ZZN7HD447804initEvENKUlvE_clEv,"ax",%progbits
 542              		.align	1
 543              		.syntax unified
 544              		.code	16
 545              		.thumb_func
 546              		.fpu softvfp
 548              	_ZZN7HD447804initEvENKUlvE_clEv:
 549              	.LFB2580:
 550              		.file 10 "../../src/hd44780.h"
   1:../../src/hd44780.h **** #pragma once
   2:../../src/hd44780.h **** 
   3:../../src/hd44780.h **** #include "pin.h"
   4:../../src/hd44780.h **** #include "meta.h"
   5:../../src/hd44780.h **** #include "delay.h"
   6:../../src/hd44780.h **** #include "timers.h"
   7:../../src/hd44780.h **** #include "bit_set.h"
   8:../../src/hd44780.h **** #include <initializer_list>
   9:../../src/hd44780.h **** 		
  10:../../src/hd44780.h **** #if defined (USE_MOCK_DELAY)
  11:../../src/hd44780.h **** #define NS mock
  12:../../src/hd44780.h **** using namespace mock;
  13:../../src/hd44780.h **** #else
  14:../../src/hd44780.h **** #define NS
  15:../../src/hd44780.h **** using namespace mcu;
  16:../../src/hd44780.h **** #endif
  17:../../src/hd44780.h **** 
ARM GAS  /tmp/ccCYtDPO.s 			page 35


  18:../../src/hd44780.h **** 
  19:../../src/hd44780.h **** class HD44780 : TickSubscriber
  20:../../src/hd44780.h **** {
  21:../../src/hd44780.h **** public:
  22:../../src/hd44780.h ****     template <class RS, class RW, class E, class DB4, class DB5, class DB6, class DB7>
  23:../../src/hd44780.h ****     static HD44780& make(const std::array<char, 80>& buffer);
  24:../../src/hd44780.h **** 
  25:../../src/hd44780.h **** 
  26:../../src/hd44780.h **** 
  27:../../src/hd44780.h **** private:
  28:../../src/hd44780.h ****     using BSRR = std::pair<uint32_t, uint32_t>;
  29:../../src/hd44780.h **** 
  30:../../src/hd44780.h ****     enum Step {_1, _2, _3} step {Step::_1};
  31:../../src/hd44780.h **** 
  32:../../src/hd44780.h ****     Pin& rs;
  33:../../src/hd44780.h ****     Pin& rw;
  34:../../src/hd44780.h ****     Pin& e;
  35:../../src/hd44780.h ****     GPIO& port;
  36:../../src/hd44780.h ****     const std::array<char, 80 >& buffer;
  37:../../src/hd44780.h ****     const std::array<BSRR, 256>& chars;
  38:../../src/hd44780.h ****     const std::array<BSRR, 256>& command;
  39:../../src/hd44780.h ****     uint32_t second;
  40:../../src/hd44780.h **** 
  41:../../src/hd44780.h ****     class Symbol_n {
  42:../../src/hd44780.h ****     public:
  43:../../src/hd44780.h ****         size_t operator++(int) { return table[index++ % 80]; }
  44:../../src/hd44780.h ****     private:
  45:../../src/hd44780.h ****         static constexpr auto symbol_n_function = [](size_t i) {
  46:../../src/hd44780.h ****             return i < 20 ? i      :
  47:../../src/hd44780.h ****                    i < 40 ? i + 20 :
  48:../../src/hd44780.h ****                    i < 60 ? i - 20 : i;
  49:../../src/hd44780.h ****         };
  50:../../src/hd44780.h ****         static constexpr auto table = meta::generate<symbol_n_function,80>;
  51:../../src/hd44780.h ****         size_t index {0};
  52:../../src/hd44780.h ****     } index{};
  53:../../src/hd44780.h **** 
  54:../../src/hd44780.h ****     HD44780 (
  55:../../src/hd44780.h ****         Pin& rs, Pin& rw, Pin& e, GPIO& port
  56:../../src/hd44780.h ****         , const std::array<char, 80 >& buffer
  57:../../src/hd44780.h ****         , const std::array<BSRR, 256>& chars
  58:../../src/hd44780.h ****         , const std::array<BSRR, 256>& command
  59:../../src/hd44780.h ****     ) : rs      {rs}
  60:../../src/hd44780.h ****       , rw      {rw}
  61:../../src/hd44780.h ****       , e       {e}
  62:../../src/hd44780.h ****       , port    {port}
  63:../../src/hd44780.h ****       , buffer  {buffer}
  64:../../src/hd44780.h ****       , chars   {chars}
  65:../../src/hd44780.h ****       , command {command}
  66:../../src/hd44780.h ****     {}
  67:../../src/hd44780.h **** 
  68:../../src/hd44780.h ****     void init();
  69:../../src/hd44780.h ****     void notify() override;
  70:../../src/hd44780.h **** };
  71:../../src/hd44780.h **** 
  72:../../src/hd44780.h **** 
  73:../../src/hd44780.h **** 
  74:../../src/hd44780.h **** 
ARM GAS  /tmp/ccCYtDPO.s 			page 36


  75:../../src/hd44780.h **** 
  76:../../src/hd44780.h **** 
  77:../../src/hd44780.h **** 
  78:../../src/hd44780.h **** 
  79:../../src/hd44780.h **** 
  80:../../src/hd44780.h **** 
  81:../../src/hd44780.h **** 
  82:../../src/hd44780.h **** constexpr unsigned char convert_HD44780[64] =
  83:../../src/hd44780.h **** {
  84:../../src/hd44780.h ****     0x41,0xA0,0x42,0xA1,0xE0,0x45,0xA3,0xA4,
  85:../../src/hd44780.h ****     0xA5,0xA6,0x4B,0xA7,0x4D,0x48,0x4F,0xA8,
  86:../../src/hd44780.h ****     0x50,0x43,0x54,0xA9,0xAA,0x58,0xE1,0xAB,
  87:../../src/hd44780.h ****     0xAC,0xE2,0xAD,0xAE,0xAD,0xAF,0xB0,0xB1,
  88:../../src/hd44780.h ****     0x61,0xB2,0xB3,0xB4,0xE3,0x65,0xB6,0xB7,
  89:../../src/hd44780.h ****     0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0x6F,0xBE,
  90:../../src/hd44780.h ****     0x70,0x63,0xBF,0x79,0xE4,0x78,0xE5,0xC0,
  91:../../src/hd44780.h ****     0xC1,0xE6,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7
  92:../../src/hd44780.h **** };
  93:../../src/hd44780.h **** 
  94:../../src/hd44780.h **** template<class DB4, class DB5, class DB6, class DB7>
  95:../../src/hd44780.h **** constexpr auto BSRR_command (char data)
  96:../../src/hd44780.h **** {
  97:../../src/hd44780.h ****     bit_set d {data};
  98:../../src/hd44780.h ****     bit_set<uint32_t> bsrr_high {0};
  99:../../src/hd44780.h ****     bit_set<uint32_t> bsrr_low  {0};
 100:../../src/hd44780.h **** 
 101:../../src/hd44780.h ****     bsrr_low. set (d[0] ? DB4::n : DB4::n+16);
 102:../../src/hd44780.h ****     bsrr_low. set (d[1] ? DB5::n : DB5::n+16);
 103:../../src/hd44780.h ****     bsrr_low. set (d[2] ? DB6::n : DB6::n+16);
 104:../../src/hd44780.h ****     bsrr_low. set (d[3] ? DB7::n : DB7::n+16);
 105:../../src/hd44780.h ****     bsrr_high.set (d[4] ? DB4::n : DB4::n+16);
 106:../../src/hd44780.h ****     bsrr_high.set (d[5] ? DB5::n : DB5::n+16);
 107:../../src/hd44780.h ****     bsrr_high.set (d[6] ? DB6::n : DB6::n+16);
 108:../../src/hd44780.h ****     bsrr_high.set (d[7] ? DB7::n : DB7::n+16);
 109:../../src/hd44780.h **** 
 110:../../src/hd44780.h ****     return std::pair{bsrr_high.value, bsrr_low.value};
 111:../../src/hd44780.h **** }
 112:../../src/hd44780.h **** 
 113:../../src/hd44780.h **** template<class DB4, class DB5, class DB6, class DB7>
 114:../../src/hd44780.h **** constexpr auto BSRR_value (char data)
 115:../../src/hd44780.h **** {
 116:../../src/hd44780.h ****     data = data > 191 ? convert_HD44780[data - 192] : data; // TODO 191 192 magic num
 117:../../src/hd44780.h ****     return BSRR_command<DB4, DB5, DB6, DB7>(data);
 118:../../src/hd44780.h **** }
 119:../../src/hd44780.h **** 
 120:../../src/hd44780.h **** 
 121:../../src/hd44780.h **** 
 122:../../src/hd44780.h **** 
 123:../../src/hd44780.h **** 
 124:../../src/hd44780.h **** 
 125:../../src/hd44780.h **** 
 126:../../src/hd44780.h **** template <class RS, class RW, class E, class DB4, class DB5, class DB6, class DB7>
 127:../../src/hd44780.h **** HD44780& HD44780::make(const std::array<char, 80>& buffer)
 128:../../src/hd44780.h **** {
 129:../../src/hd44780.h ****     static_assert (
 130:../../src/hd44780.h ****         meta::all_is_same(DB4::periph, DB5::periph, DB6::periph, DB7::periph)
 131:../../src/hd44780.h ****         , "–ü–∏–Ω—ã –¥–ª—è —à–∏–Ω—ã —ç–∫—Ä–∞–Ω–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞ –æ–¥–Ω–æ–º –ø–æ—Ä—Ç—É"
ARM GAS  /tmp/ccCYtDPO.s 			page 37


 132:../../src/hd44780.h ****     );
 133:../../src/hd44780.h **** 
 134:../../src/hd44780.h ****     static auto screen = HD44780 {
 135:../../src/hd44780.h ****         Pin::template make<RS, mcu::PinMode::Output>(),
 136:../../src/hd44780.h ****         Pin::template make<RW, mcu::PinMode::Output>(),
 137:../../src/hd44780.h ****         Pin::template make<E,  mcu::PinMode::Output>(),
 138:../../src/hd44780.h ****         mcu::make_reference<DB4::periph>(),
 139:../../src/hd44780.h ****         buffer,
 140:../../src/hd44780.h ****         meta::generate<BSRR_value<DB4, DB5, DB6, DB7>, 256>,
 141:../../src/hd44780.h ****         meta::generate<BSRR_command<DB4, DB5, DB6, DB7>, 256>
 142:../../src/hd44780.h ****     };
 143:../../src/hd44780.h **** 
 144:../../src/hd44780.h ****     make_pins<mcu::PinMode::Output, DB4, DB5, DB6, DB7>();
 145:../../src/hd44780.h **** 
 146:../../src/hd44780.h ****     screen.init();
 147:../../src/hd44780.h ****     screen.tick_subscribe<Faster::x10>();
 148:../../src/hd44780.h **** 
 149:../../src/hd44780.h ****     return screen;
 150:../../src/hd44780.h **** }
 151:../../src/hd44780.h **** 
 152:../../src/hd44780.h **** 
 153:../../src/hd44780.h **** void HD44780::init()
 154:../../src/hd44780.h **** {
 155:../../src/hd44780.h ****     enum Set {
 156:../../src/hd44780.h ****           _4_bit_mode     = 0x28
 157:../../src/hd44780.h ****         , display_on      = 0x0C
 158:../../src/hd44780.h ****         , dir_shift_right = 0x06
 159:../../src/hd44780.h ****         , display_clear   = 0x01
 160:../../src/hd44780.h ****         , set_to_zero     = 0x80
 161:../../src/hd44780.h ****     };
 162:../../src/hd44780.h **** 
 163:../../src/hd44780.h ****     NS::Delay delay;
 164:../../src/hd44780.h ****     
 165:../../src/hd44780.h ****     auto strob_e = [&](){
 551              		.loc 10 165 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              	.LVL35:
 166:../../src/hd44780.h ****         e = false;
 556              		.loc 10 166 0
 557 0000 0368     		ldr	r3, [r0]
 165:../../src/hd44780.h ****         e = false;
 558              		.loc 10 165 0
 559 0002 10B5     		push	{r4, lr}
 560              	.LCFI4:
 561              		.cfi_def_cfa_offset 8
 562              		.cfi_offset 4, -8
 563              		.cfi_offset 14, -4
 165:../../src/hd44780.h ****         e = false;
 564              		.loc 10 165 0
 565 0004 0400     		movs	r4, r0
 566              	.LBB891:
 567              	.LBB892:
  30:../../src/pin.h ****    bool is_set()    { return port.is_set(n);   }
  31:../../src/pin.h ****    void toggle()    { port.toggle(n);          }
  32:../../src/pin.h **** 
ARM GAS  /tmp/ccCYtDPO.s 			page 38


  33:../../src/pin.h ****    bool operator=  (bool v) { v ? set() : clear(); return v; }
 568              		.loc 8 33 0
 569 0006 9869     		ldr	r0, [r3, #24]
 570              	.LVL36:
 571 0008 FFF7FEFF 		bl	_ZN3Pin5clearEv
 572              	.LVL37:
 573              	.L38:
 574              	.LBE892:
 575              	.LBE891:
 576              	.LBB893:
 577              	.LBB894:
 578 000c 6421     		movs	r1, #100
 579 000e 6068     		ldr	r0, [r4, #4]
 580 0010 FFF7FEFF 		bl	_ZN5Delay2usEm.part.9
 581              	.LVL38:
 582              	.LBE894:
 583              	.LBE893:
 167:../../src/hd44780.h ****         while(delay.us(100)) {}
 584              		.loc 10 167 0
 585 0014 0028     		cmp	r0, #0
 586 0016 F9D1     		bne	.L38
 587              	.LVL39:
 168:../../src/hd44780.h ****         e = true;
 588              		.loc 10 168 0
 589 0018 2368     		ldr	r3, [r4]
 590              	.LBB895:
 591              	.LBB896:
 592              		.loc 8 33 0
 593 001a 9869     		ldr	r0, [r3, #24]
 594 001c FFF7FEFF 		bl	_ZN3Pin3setEv
 595              	.LVL40:
 596              	.L39:
 597              	.LBE896:
 598              	.LBE895:
 599              	.LBB897:
 600              	.LBB898:
 601 0020 6421     		movs	r1, #100
 602 0022 6068     		ldr	r0, [r4, #4]
 603 0024 FFF7FEFF 		bl	_ZN5Delay2usEm.part.9
 604              	.LVL41:
 605              	.LBE898:
 606              	.LBE897:
 169:../../src/hd44780.h ****         while(delay.us(100)) {}
 607              		.loc 10 169 0
 608 0028 0028     		cmp	r0, #0
 609 002a F9D1     		bne	.L39
 170:../../src/hd44780.h ****     };
 610              		.loc 10 170 0
 611              		@ sp needed
 612              	.LVL42:
 613 002c 10BD     		pop	{r4, pc}
 614              		.cfi_endproc
 615              	.LFE2580:
 617              		.section	.text._ZZN7HD447804initEvENKUlmE0_clEm,"ax",%progbits
 618              		.align	1
 619              		.syntax unified
 620              		.code	16
ARM GAS  /tmp/ccCYtDPO.s 			page 39


 621              		.thumb_func
 622              		.fpu softvfp
 624              	_ZZN7HD447804initEvENKUlmE0_clEm:
 625              	.LFB2581:
 171:../../src/hd44780.h **** 
 172:../../src/hd44780.h ****     auto instruction = [&](uint32_t action) {
 626              		.loc 10 172 0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 0
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630              	.LVL43:
 631 0000 70B5     		push	{r4, r5, r6, lr}
 632              	.LCFI5:
 633              		.cfi_def_cfa_offset 16
 634              		.cfi_offset 4, -16
 635              		.cfi_offset 5, -12
 636              		.cfi_offset 6, -8
 637              		.cfi_offset 14, -4
 638              		.loc 10 172 0
 639 0002 0400     		movs	r4, r0
 640 0004 0D00     		movs	r5, r1
 173:../../src/hd44780.h ****         rs = false;
 641              		.loc 10 173 0
 642 0006 0368     		ldr	r3, [r0]
 174:../../src/hd44780.h ****         port.atomic_write(command[action].first);
 643              		.loc 10 174 0
 644 0008 ED00     		lsls	r5, r5, #3
 645              	.LBB899:
 646              	.LBB900:
 647              		.loc 8 33 0
 648 000a 1869     		ldr	r0, [r3, #16]
 649              	.LVL44:
 650 000c FFF7FEFF 		bl	_ZN3Pin5clearEv
 651              	.LVL45:
 652              	.LBE900:
 653              	.LBE899:
 173:../../src/hd44780.h ****         rs = false;
 654              		.loc 10 173 0
 655 0010 2368     		ldr	r3, [r4]
 175:../../src/hd44780.h ****         strob_e();
 656              		.loc 10 175 0
 657 0012 6068     		ldr	r0, [r4, #4]
 174:../../src/hd44780.h ****         port.atomic_write(command[action].first);
 658              		.loc 10 174 0
 659 0014 DA69     		ldr	r2, [r3, #28]
 660 0016 9B6A     		ldr	r3, [r3, #40]
 661 0018 EB58     		ldr	r3, [r5, r3]
 662              	.LVL46:
 663              	.LBB901:
 664              	.LBB902:
  29:../../src/periph/gpio_f1.h ****    bool is_set     (size_t n) { return IDR.reg & (1 << n);     }
  30:../../src/periph/gpio_f1.h ****    void toggle     (size_t n) { is_set(n) ? clear(n) : set(n); }
  31:../../src/periph/gpio_f1.h ****    void atomic_write (uint32_t value) { BSRR = value; }
 665              		.loc 9 31 0
 666 001a 1361     		str	r3, [r2, #16]
 667              	.LVL47:
 668              	.LBE902:
ARM GAS  /tmp/ccCYtDPO.s 			page 40


 669              	.LBE901:
 670              		.loc 10 175 0
 671 001c FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlvE_clEv
 672              	.LVL48:
 173:../../src/hd44780.h ****         port.atomic_write(command[action].first);
 673              		.loc 10 173 0
 674 0020 2368     		ldr	r3, [r4]
 176:../../src/hd44780.h ****         port.atomic_write(command[action].second);
 177:../../src/hd44780.h ****         strob_e();
 675              		.loc 10 177 0
 676 0022 6068     		ldr	r0, [r4, #4]
 176:../../src/hd44780.h ****         port.atomic_write(command[action].second);
 677              		.loc 10 176 0
 678 0024 DA69     		ldr	r2, [r3, #28]
 679 0026 9B6A     		ldr	r3, [r3, #40]
 680 0028 5D19     		adds	r5, r3, r5
 681 002a 6B68     		ldr	r3, [r5, #4]
 682              	.LVL49:
 683              	.LBB903:
 684              	.LBB904:
 685              		.loc 9 31 0
 686 002c 1361     		str	r3, [r2, #16]
 687              	.LVL50:
 688              	.LBE904:
 689              	.LBE903:
 690              		.loc 10 177 0
 691 002e FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlvE_clEv
 692              	.LVL51:
 693              	.L43:
 694              	.LBB905:
 695              	.LBB906:
 696 0032 3221     		movs	r1, #50
 697 0034 A068     		ldr	r0, [r4, #8]
 698 0036 FFF7FEFF 		bl	_ZN5Delay2usEm.part.9
 699              	.LVL52:
 700              	.LBE906:
 701              	.LBE905:
 178:../../src/hd44780.h ****         while(delay.us(50)) {}
 702              		.loc 10 178 0
 703 003a 0028     		cmp	r0, #0
 704 003c F9D1     		bne	.L43
 179:../../src/hd44780.h ****     };
 705              		.loc 10 179 0
 706              		@ sp needed
 707              	.LVL53:
 708 003e 70BD     		pop	{r4, r5, r6, pc}
 709              		.cfi_endproc
 710              	.LFE2581:
 712              		.global	__aeabi_uidivmod
 713              		.section	.text._ZN7HD447806notifyEv,"ax",%progbits
 714              		.align	1
 715              		.global	_ZN7HD447806notifyEv
 716              		.syntax unified
 717              		.code	16
 718              		.thumb_func
 719              		.fpu softvfp
 721              	_ZN7HD447806notifyEv:
ARM GAS  /tmp/ccCYtDPO.s 			page 41


 722              	.LFB2584:
 180:../../src/hd44780.h ****     
 181:../../src/hd44780.h ****     while(delay.ms(20)) {}
 182:../../src/hd44780.h ****     rs = false;
 183:../../src/hd44780.h ****     rw = false;
 184:../../src/hd44780.h ****     e = true;
 185:../../src/hd44780.h ****     port.atomic_write(command[0x03].second);
 186:../../src/hd44780.h ****     strob_e();
 187:../../src/hd44780.h ****     while(delay.ms(5)) {}
 188:../../src/hd44780.h ****     port.atomic_write(command[0x03].second);
 189:../../src/hd44780.h ****     strob_e();
 190:../../src/hd44780.h ****     while(delay.us(100)) {}
 191:../../src/hd44780.h ****     port.atomic_write(command[0x03].second);
 192:../../src/hd44780.h ****     strob_e();
 193:../../src/hd44780.h ****     while(delay.us(50)) {}
 194:../../src/hd44780.h ****     port.atomic_write(command[0x02].second);
 195:../../src/hd44780.h ****     strob_e();
 196:../../src/hd44780.h ****     while(delay.us(50)) {}
 197:../../src/hd44780.h ****     instruction (_4_bit_mode);
 198:../../src/hd44780.h ****     instruction (display_on);
 199:../../src/hd44780.h ****     instruction (dir_shift_right);
 200:../../src/hd44780.h ****     instruction (display_clear);
 201:../../src/hd44780.h ****     instruction (set_to_zero);
 202:../../src/hd44780.h ****     while(delay.ms(1)) {}
 203:../../src/hd44780.h **** }
 204:../../src/hd44780.h **** 
 205:../../src/hd44780.h **** void HD44780::notify()
 206:../../src/hd44780.h **** {
 723              		.loc 10 206 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727              	.LVL54:
 728 0000 70B5     		push	{r4, r5, r6, lr}
 729              	.LCFI6:
 730              		.cfi_def_cfa_offset 16
 731              		.cfi_offset 4, -16
 732              		.cfi_offset 5, -12
 733              		.cfi_offset 6, -8
 734              		.cfi_offset 14, -4
 735              	.LBB956:
 207:../../src/hd44780.h ****     switch (step) {
 736              		.loc 10 207 0
 737 0002 437B     		ldrb	r3, [r0, #13]
 738              	.LBE956:
 206:../../src/hd44780.h ****     switch (step) {
 739              		.loc 10 206 0
 740 0004 0400     		movs	r4, r0
 741              	.LBB969:
 742              		.loc 10 207 0
 743 0006 012B     		cmp	r3, #1
 744 0008 20D0     		beq	.L47
 745 000a 002B     		cmp	r3, #0
 746 000c 02D0     		beq	.L48
 747 000e 022B     		cmp	r3, #2
 748 0010 27D0     		beq	.L49
 749              	.LVL55:
ARM GAS  /tmp/ccCYtDPO.s 			page 42


 750              	.L45:
 751              	.LBE969:
 208:../../src/hd44780.h ****         case _1: {
 209:../../src/hd44780.h ****             rw = false;
 210:../../src/hd44780.h ****             rs = true;
 211:../../src/hd44780.h ****             auto symbol = buffer[index++];
 212:../../src/hd44780.h ****             auto [first, second] = chars[symbol];
 213:../../src/hd44780.h ****             port.atomic_write(first);
 214:../../src/hd44780.h ****             this->second = second;
 215:../../src/hd44780.h ****             step = Step::_2;
 216:../../src/hd44780.h ****         break;
 217:../../src/hd44780.h ****         }
 218:../../src/hd44780.h ****         case _2:
 219:../../src/hd44780.h ****             e = true;
 220:../../src/hd44780.h ****             e = false;
 221:../../src/hd44780.h ****             port.atomic_write(second);
 222:../../src/hd44780.h ****             step = Step::_3;
 223:../../src/hd44780.h ****         break;
 224:../../src/hd44780.h ****         case _3:
 225:../../src/hd44780.h ****             e = true;
 226:../../src/hd44780.h ****             e = false;
 227:../../src/hd44780.h ****             step = Step::_1;
 228:../../src/hd44780.h ****         break;
 229:../../src/hd44780.h ****     }
 230:../../src/hd44780.h **** }
 752              		.loc 10 230 0
 753              		@ sp needed
 754              	.LVL56:
 755 0012 70BD     		pop	{r4, r5, r6, pc}
 756              	.LVL57:
 757              	.L48:
 758              	.LBB970:
 759              	.LBB971:
 760              	.LBB972:
 761              	.LBB973:
 762              	.LBB974:
 763              		.loc 8 33 0
 764 0014 4069     		ldr	r0, [r0, #20]
 765              	.LVL58:
 766 0016 FFF7FEFF 		bl	_ZN3Pin5clearEv
 767              	.LVL59:
 768              	.LBE974:
 769              	.LBE973:
 770              	.LBB975:
 771              	.LBB976:
 772 001a 2069     		ldr	r0, [r4, #16]
 773 001c FFF7FEFF 		bl	_ZN3Pin3setEv
 774              	.LVL60:
 775              	.LBE976:
 776              	.LBE975:
 777              	.LBB977:
 778              	.LBB978:
  43:../../src/hd44780.h ****     private:
 779              		.loc 10 43 0
 780 0020 206B     		ldr	r0, [r4, #48]
 781 0022 5021     		movs	r1, #80
 782 0024 431C     		adds	r3, r0, #1
ARM GAS  /tmp/ccCYtDPO.s 			page 43


 783 0026 2363     		str	r3, [r4, #48]
 784 0028 FFF7FEFF 		bl	__aeabi_uidivmod
 785              	.LVL61:
 786              	.LBE978:
 787              	.LBE977:
 211:../../src/hd44780.h ****             auto [first, second] = chars[symbol];
 788              		.loc 10 211 0
 789 002c 114B     		ldr	r3, .L51
 790              	.LBB980:
 791              	.LBB979:
  43:../../src/hd44780.h ****     private:
 792              		.loc 10 43 0
 793 002e 8900     		lsls	r1, r1, #2
 794              	.LBE979:
 795              	.LBE980:
 211:../../src/hd44780.h ****             auto [first, second] = chars[symbol];
 796              		.loc 10 211 0
 797 0030 256A     		ldr	r5, [r4, #32]
 798              	.LVL62:
 799 0032 CB58     		ldr	r3, [r1, r3]
 212:../../src/hd44780.h ****             port.atomic_write(first);
 800              		.loc 10 212 0
 801 0034 626A     		ldr	r2, [r4, #36]
 802 0036 EB5C     		ldrb	r3, [r5, r3]
 803 0038 DB00     		lsls	r3, r3, #3
 804 003a D318     		adds	r3, r2, r3
 805 003c 1968     		ldr	r1, [r3]
 806              	.LVL63:
 213:../../src/hd44780.h ****             this->second = second;
 807              		.loc 10 213 0
 808 003e E269     		ldr	r2, [r4, #28]
 212:../../src/hd44780.h ****             port.atomic_write(first);
 809              		.loc 10 212 0
 810 0040 5B68     		ldr	r3, [r3, #4]
 811              	.LVL64:
 812              	.LBB981:
 813              	.LBB982:
 814              		.loc 9 31 0
 815 0042 1161     		str	r1, [r2, #16]
 816              	.LVL65:
 817              	.LBE982:
 818              	.LBE981:
 214:../../src/hd44780.h ****             step = Step::_2;
 819              		.loc 10 214 0
 820 0044 E362     		str	r3, [r4, #44]
 215:../../src/hd44780.h ****         break;
 821              		.loc 10 215 0
 822 0046 0123     		movs	r3, #1
 823              	.LVL66:
 824              	.L50:
 825              	.LBE972:
 826              	.LBE971:
 827              	.LBE970:
 828              	.LBB983:
 829              	.LBB957:
 227:../../src/hd44780.h ****         break;
 830              		.loc 10 227 0
ARM GAS  /tmp/ccCYtDPO.s 			page 44


 831 0048 6373     		strb	r3, [r4, #13]
 832              	.LBE957:
 833              	.LBE983:
 834              		.loc 10 230 0
 835 004a E2E7     		b	.L45
 836              	.LVL67:
 837              	.L47:
 838              	.LBB984:
 839              	.LBB968:
 840              	.LBB958:
 841              	.LBB959:
 842              		.loc 8 33 0
 843 004c 8069     		ldr	r0, [r0, #24]
 844              	.LVL68:
 845 004e FFF7FEFF 		bl	_ZN3Pin3setEv
 846              	.LVL69:
 847              	.LBE959:
 848              	.LBE958:
 849              	.LBB960:
 850              	.LBB961:
 851 0052 A069     		ldr	r0, [r4, #24]
 852 0054 FFF7FEFF 		bl	_ZN3Pin5clearEv
 853              	.LVL70:
 854              	.LBE961:
 855              	.LBE960:
 221:../../src/hd44780.h ****             step = Step::_3;
 856              		.loc 10 221 0
 857 0058 E369     		ldr	r3, [r4, #28]
 858              	.LVL71:
 859              	.LBB962:
 860              	.LBB963:
 861              		.loc 9 31 0
 862 005a E26A     		ldr	r2, [r4, #44]
 863 005c 1A61     		str	r2, [r3, #16]
 864              	.LVL72:
 865              	.LBE963:
 866              	.LBE962:
 222:../../src/hd44780.h ****         break;
 867              		.loc 10 222 0
 868 005e 0223     		movs	r3, #2
 869 0060 F2E7     		b	.L50
 870              	.LVL73:
 871              	.L49:
 872              	.LBB964:
 873              	.LBB965:
 874              		.loc 8 33 0
 875 0062 8069     		ldr	r0, [r0, #24]
 876              	.LVL74:
 877 0064 FFF7FEFF 		bl	_ZN3Pin3setEv
 878              	.LVL75:
 879              	.LBE965:
 880              	.LBE964:
 881              	.LBB966:
 882              	.LBB967:
 883 0068 A069     		ldr	r0, [r4, #24]
 884 006a FFF7FEFF 		bl	_ZN3Pin5clearEv
 885              	.LVL76:
ARM GAS  /tmp/ccCYtDPO.s 			page 45


 886              	.LBE967:
 887              	.LBE966:
 227:../../src/hd44780.h ****         break;
 888              		.loc 10 227 0
 889 006e 0023     		movs	r3, #0
 890 0070 EAE7     		b	.L50
 891              	.L52:
 892 0072 C046     		.align	2
 893              	.L51:
 894 0074 00000000 		.word	_ZN7HD447808Symbol_n5tableE
 895              	.LBE968:
 896              	.LBE984:
 897              		.cfi_endproc
 898              	.LFE2584:
 900              		.section	.text._ZN3Pin6is_setEv,"axG",%progbits,_ZN3Pin6is_setEv,comdat
 901              		.align	1
 902              		.weak	_ZN3Pin6is_setEv
 903              		.syntax unified
 904              		.code	16
 905              		.thumb_func
 906              		.fpu softvfp
 908              	_ZN3Pin6is_setEv:
 909              	.LFB2207:
  30:../../src/pin.h ****    void toggle()    { port.toggle(n);          }
 910              		.loc 8 30 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 0
 913              		@ frame_needed = 0, uses_anonymous_args = 0
 914              		@ link register save eliminated.
 915              	.LVL77:
  30:../../src/pin.h ****    void toggle()    { port.toggle(n);          }
 916              		.loc 8 30 0
 917 0000 0368     		ldr	r3, [r0]
 918              	.LVL78:
 919              	.LBB985:
 920              	.LBB986:
  29:../../src/periph/gpio_f1.h ****    void toggle     (size_t n) { is_set(n) ? clear(n) : set(n); }
 921              		.loc 9 29 0
 922 0002 4268     		ldr	r2, [r0, #4]
 923 0004 0120     		movs	r0, #1
 924              	.LVL79:
 925 0006 9040     		lsls	r0, r0, r2
 926 0008 9B68     		ldr	r3, [r3, #8]
 927              	.LVL80:
 928              	.LBE986:
 929              	.LBE985:
  30:../../src/pin.h ****    void toggle()    { port.toggle(n);          }
 930              		.loc 8 30 0
 931              		@ sp needed
 932              	.LBB988:
 933              	.LBB987:
  29:../../src/periph/gpio_f1.h ****    void toggle     (size_t n) { is_set(n) ? clear(n) : set(n); }
 934              		.loc 9 29 0
 935 000a 1840     		ands	r0, r3
 936 000c 431E     		subs	r3, r0, #1
 937 000e 9841     		sbcs	r0, r0, r3
 938              	.LBE987:
ARM GAS  /tmp/ccCYtDPO.s 			page 46


 939              	.LBE988:
  30:../../src/pin.h ****    void toggle()    { port.toggle(n);          }
 940              		.loc 8 30 0
 941 0010 C0B2     		uxtb	r0, r0
 942 0012 7047     		bx	lr
 943              		.cfi_endproc
 944              	.LFE2207:
 946              		.section	.text._ZN9Publisher6notifyEv,"axG",%progbits,_ZN9Publisher6notifyEv,comdat
 947              		.align	1
 948              		.weak	_ZN9Publisher6notifyEv
 949              		.syntax unified
 950              		.code	16
 951              		.thumb_func
 952              		.fpu softvfp
 954              	_ZN9Publisher6notifyEv:
 955              	.LFB2495:
 956              		.file 11 "../../src/subscriber.h"
   1:../../src/subscriber.h **** #pragma once
   2:../../src/subscriber.h **** 
   3:../../src/subscriber.h **** #include "list.h"
   4:../../src/subscriber.h **** #include "systick.h"
   5:../../src/subscriber.h **** 
   6:../../src/subscriber.h **** struct Subscriber : Listable<Subscriber> {
   7:../../src/subscriber.h ****     virtual void notify() = 0;
   8:../../src/subscriber.h **** };
   9:../../src/subscriber.h **** 
  10:../../src/subscriber.h **** struct Publisher : private List<Subscriber>
  11:../../src/subscriber.h **** {
  12:../../src/subscriber.h ****     
  13:../../src/subscriber.h ****     void clear(){clear_subscribe();}
  14:../../src/subscriber.h ****     void subscribe  (Subscriber& v) { push_back(v); }
  15:../../src/subscriber.h ****     void unsubscribe(Subscriber& v) { remove(v);    }
  16:../../src/subscriber.h ****     // —Å—Å—ã–ª–∫–∞, —á—Ç–æ–±—ã –Ω–µ –∫–æ–ø–∏—Ä–æ–≤–∞–ª –∫–∞–∂–¥—ã–π subscriber –∏–∑ *this
  17:../../src/subscriber.h ****     void notify() {
 957              		.loc 11 17 0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 0
 960              		@ frame_needed = 0, uses_anonymous_args = 0
 961              	.LVL81:
 962 0000 10B5     		push	{r4, lr}
 963              	.LCFI7:
 964              		.cfi_def_cfa_offset 8
 965              		.cfi_offset 4, -8
 966              		.cfi_offset 14, -4
 967              	.LBB989:
  18:../../src/subscriber.h ****         for (auto& subscriber : *this)
 968              		.loc 11 18 0
 969 0002 0468     		ldr	r4, [r0]
 970              	.LVL82:
 971              	.L56:
 972              		.loc 11 18 0 is_stmt 0 discriminator 3
 973 0004 002C     		cmp	r4, #0
 974 0006 05D0     		beq	.L54
  19:../../src/subscriber.h ****             subscriber.notify();
 975              		.loc 11 19 0 is_stmt 1
 976 0008 2368     		ldr	r3, [r4]
 977 000a 2000     		movs	r0, r4
ARM GAS  /tmp/ccCYtDPO.s 			page 47


 978 000c 1B68     		ldr	r3, [r3]
 979 000e 9847     		blx	r3
 980              	.LVL83:
 981              	.LBB990:
 982              	.LBB991:
 983              		.file 12 "../../src/list.h"
   1:../../src/list.h **** #pragma once
   2:../../src/list.h **** 
   3:../../src/list.h **** #include <algorithm>
   4:../../src/list.h **** 
   5:../../src/list.h **** 
   6:../../src/list.h **** template<class T> struct Listable
   7:../../src/list.h **** {
   8:../../src/list.h ****    T* prev {nullptr};
   9:../../src/list.h ****    T* next {nullptr};
  10:../../src/list.h **** };
  11:../../src/list.h **** 
  12:../../src/list.h **** template<class T> class List
  13:../../src/list.h **** {
  14:../../src/list.h ****    T* first {nullptr};
  15:../../src/list.h ****    T* last  {nullptr};
  16:../../src/list.h **** public:
  17:../../src/list.h ****    class Iterator
  18:../../src/list.h ****    {
  19:../../src/list.h ****       T* p {nullptr};
  20:../../src/list.h ****    public:
  21:../../src/list.h ****       using iterator_category = std::input_iterator_tag;
  22:../../src/list.h ****       using value_type        = T;
  23:../../src/list.h ****       using difference_type   = T;
  24:../../src/list.h ****       using pointer           = const T*;
  25:../../src/list.h ****       using reference         = T;
  26:../../src/list.h ****       Iterator (T*);
  27:../../src/list.h ****       Iterator() = default;
  28:../../src/list.h ****       operator T*() { return p; }
  29:../../src/list.h ****       T&        operator*  () const;
  30:../../src/list.h ****       T*        operator-> () const { return p; }
  31:../../src/list.h ****       bool      operator!= (const Iterator&) const;
  32:../../src/list.h ****       Iterator& operator++ ();
  33:../../src/list.h ****    };
  34:../../src/list.h **** 
  35:../../src/list.h ****    void clear_subscribe(){first = nullptr; last = nullptr;}
  36:../../src/list.h ****    void push_back  (T&);
  37:../../src/list.h ****    void push_front (T&);
  38:../../src/list.h ****    void remove     (T&);
  39:../../src/list.h ****    void insert  (Iterator, T&);
  40:../../src/list.h ****    void clear();
  41:../../src/list.h ****    Iterator begin();
  42:../../src/list.h ****    Iterator end();
  43:../../src/list.h **** };
  44:../../src/list.h **** 
  45:../../src/list.h **** 
  46:../../src/list.h **** 
  47:../../src/list.h **** 
  48:../../src/list.h **** 
  49:../../src/list.h **** 
  50:../../src/list.h **** template<class T>
  51:../../src/list.h **** void List<T>::push_back (T& v)
ARM GAS  /tmp/ccCYtDPO.s 			page 48


  52:../../src/list.h **** {
  53:../../src/list.h ****    v.prev = last;
  54:../../src/list.h ****    if (last)
  55:../../src/list.h ****       last->next = &v;
  56:../../src/list.h ****    last = &v;
  57:../../src/list.h ****    if (not first)
  58:../../src/list.h ****       first = &v;
  59:../../src/list.h **** }
  60:../../src/list.h **** 
  61:../../src/list.h **** 
  62:../../src/list.h **** template<class T>
  63:../../src/list.h **** void List<T>::push_front (T& v)
  64:../../src/list.h **** {
  65:../../src/list.h ****    v.next = first;
  66:../../src/list.h ****    if (first)
  67:../../src/list.h ****       first->prev = &v;
  68:../../src/list.h ****    first = &v;
  69:../../src/list.h ****    if (not last)
  70:../../src/list.h ****       last = &v;
  71:../../src/list.h **** }
  72:../../src/list.h **** 
  73:../../src/list.h **** 
  74:../../src/list.h **** template<class T>
  75:../../src/list.h **** void List<T>::remove (T& v)
  76:../../src/list.h **** {
  77:../../src/list.h ****    if (v.prev and v.next) {         // –µ—Å–ª–∏ –≤ —Å–µ—Ä–µ–¥–∏–Ω–∫–µ
  78:../../src/list.h ****       v.prev->next = v.next;
  79:../../src/list.h ****       v.next->prev = v.prev;
  80:../../src/list.h ****    } else if (v.next) {             // –µ—Å–ª–∏ –ø–µ—Ä–≤—ã–π
  81:../../src/list.h ****       first = v.next;
  82:../../src/list.h ****       first->prev = nullptr;
  83:../../src/list.h ****       if (not first) last = nullptr;
  84:../../src/list.h ****    } else if (v.prev) {             // –µ—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π
  85:../../src/list.h ****       last = v.prev;
  86:../../src/list.h ****       last->next = nullptr;
  87:../../src/list.h ****       if (not last) first = nullptr;
  88:../../src/list.h ****    } else {                         // –µ—Å–ª–∏ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π 
  89:../../src/list.h ****       first = nullptr;
  90:../../src/list.h ****       last  = nullptr;
  91:../../src/list.h ****    }
  92:../../src/list.h ****    v.prev = nullptr;
  93:../../src/list.h ****    v.next = nullptr;
  94:../../src/list.h **** 
  95:../../src/list.h **** }
  96:../../src/list.h **** 
  97:../../src/list.h **** 
  98:../../src/list.h **** 
  99:../../src/list.h **** template<class T>
 100:../../src/list.h **** void List<T>::insert (typename List<T>::Iterator it, T& v)
 101:../../src/list.h **** {
 102:../../src/list.h ****    if (it == begin()) {
 103:../../src/list.h ****       push_front (v);
 104:../../src/list.h ****    } else if (it == end()) {
 105:../../src/list.h ****       push_back (v);
 106:../../src/list.h ****    } else {
 107:../../src/list.h ****       v.prev = it->prev;
 108:../../src/list.h ****       v.next = it;
ARM GAS  /tmp/ccCYtDPO.s 			page 49


 109:../../src/list.h ****       it->prev = &v;
 110:../../src/list.h ****       v.prev->next = &v;
 111:../../src/list.h ****    }
 112:../../src/list.h **** }
 113:../../src/list.h **** 
 114:../../src/list.h **** template<class T>
 115:../../src/list.h **** void List<T>::clear()
 116:../../src/list.h **** {
 117:../../src/list.h ****    for (auto& v : *this) {
 118:../../src/list.h ****       v.prev = nullptr;
 119:../../src/list.h ****       v.next = nullptr;
 120:../../src/list.h ****    }
 121:../../src/list.h ****    first = nullptr;
 122:../../src/list.h ****    last  = nullptr;
 123:../../src/list.h **** }
 124:../../src/list.h **** 
 125:../../src/list.h **** 
 126:../../src/list.h **** template<class T>
 127:../../src/list.h **** typename List<T>::Iterator List<T>::begin()
 128:../../src/list.h **** {
 129:../../src/list.h ****    return List<T>::Iterator {first};
 130:../../src/list.h **** }
 131:../../src/list.h **** 
 132:../../src/list.h **** 
 133:../../src/list.h **** template<class T>
 134:../../src/list.h **** typename List<T>::Iterator List<T>::end()
 135:../../src/list.h **** {
 136:../../src/list.h ****    return List<T>::Iterator();
 137:../../src/list.h **** }
 138:../../src/list.h **** 
 139:../../src/list.h **** 
 140:../../src/list.h **** 
 141:../../src/list.h **** /// Iterator
 142:../../src/list.h **** template<class T>
 143:../../src/list.h **** List<T>::Iterator::Iterator (T* other) : p {other} {}
 144:../../src/list.h **** 
 145:../../src/list.h **** template<class T>
 146:../../src/list.h **** T& List<T>::Iterator::operator* () const 
 147:../../src/list.h **** {
 148:../../src/list.h ****    return *p;
 149:../../src/list.h **** }
 150:../../src/list.h **** 
 151:../../src/list.h **** template<class T>
 152:../../src/list.h **** bool List<T>::Iterator::operator!= (const List<T>::Iterator& other) const
 153:../../src/list.h **** {
 154:../../src/list.h ****    return p != other.p;
 155:../../src/list.h **** }
 156:../../src/list.h **** 
 157:../../src/list.h **** template<class T>
 158:../../src/list.h **** typename List<T>::Iterator& List<T>::Iterator::operator++ ()
 159:../../src/list.h **** {
 160:../../src/list.h ****    p = p->next;
 984              		.loc 12 160 0
 985 0010 A468     		ldr	r4, [r4, #8]
 986              	.LVL84:
 987 0012 F7E7     		b	.L56
 988              	.LVL85:
ARM GAS  /tmp/ccCYtDPO.s 			page 50


 989              	.L54:
 990              	.LBE991:
 991              	.LBE990:
 992              	.LBE989:
  20:../../src/subscriber.h ****     }
 993              		.loc 11 20 0
 994              		@ sp needed
 995              	.LVL86:
 996 0014 10BD     		pop	{r4, pc}
 997              		.cfi_endproc
 998              	.LFE2495:
 1000              		.section	.text._ZN11TickUpdater9interruptEv,"ax",%progbits
 1001              		.align	1
 1002              		.global	_ZN11TickUpdater9interruptEv
 1003              		.syntax unified
 1004              		.code	16
 1005              		.thumb_func
 1006              		.fpu softvfp
 1008              	_ZN11TickUpdater9interruptEv:
 1009              	.LFB2529:
  82:../../src/timers.h **** };
  83:../../src/timers.h **** 
  84:../../src/timers.h **** 
  85:../../src/timers.h **** 
  86:../../src/timers.h **** 
  87:../../src/timers.h **** 
  88:../../src/timers.h **** 
  89:../../src/timers.h **** 
  90:../../src/timers.h **** 
  91:../../src/timers.h **** template<Faster multiplier> // how many subticks in tick
  92:../../src/timers.h **** void TickUpdater::subscribe_subtick (Subscriber& v)
  93:../../src/timers.h **** {
  94:../../src/timers.h ****     subtick.subscribe(v);
  95:../../src/timers.h ****     subtick_qty = multiplier;
  96:../../src/timers.h ****     REF(SysTick).initInterrupt<1000_us/multiplier>();
  97:../../src/timers.h **** }
  98:../../src/timers.h **** 
  99:../../src/timers.h **** 
 100:../../src/timers.h **** 
 101:../../src/timers.h **** template<class Function>
 102:../../src/timers.h **** inline void every_qty_cnt_call(size_t& cnt, size_t qty, Function call)
 103:../../src/timers.h **** {
 104:../../src/timers.h ****     if (not(cnt++ % qty))
 105:../../src/timers.h ****         call();
 106:../../src/timers.h **** }
 107:../../src/timers.h **** 
 108:../../src/timers.h **** 
 109:../../src/timers.h **** 
 110:../../src/timers.h **** void TickUpdater::interrupt()
 111:../../src/timers.h **** {
 1010              		.loc 1 111 0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 0
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
 1014              	.LVL87:
 1015 0000 10B5     		push	{r4, lr}
 1016              	.LCFI8:
ARM GAS  /tmp/ccCYtDPO.s 			page 51


 1017              		.cfi_def_cfa_offset 8
 1018              		.cfi_offset 4, -8
 1019              		.cfi_offset 14, -4
 1020              		.loc 1 111 0
 1021 0002 0400     		movs	r4, r0
 112:../../src/timers.h ****     subtick.notify();
 1022              		.loc 1 112 0
 1023 0004 0830     		adds	r0, r0, #8
 1024              	.LVL88:
 1025 0006 FFF7FEFF 		bl	_ZN9Publisher6notifyEv
 1026              	.LVL89:
 1027              	.LBB996:
 1028              	.LBB997:
 104:../../src/timers.h ****         call();
 1029              		.loc 1 104 0
 1030 000a 2069     		ldr	r0, [r4, #16]
 1031 000c 6169     		ldr	r1, [r4, #20]
 1032 000e 431C     		adds	r3, r0, #1
 1033 0010 2361     		str	r3, [r4, #16]
 1034 0012 FFF7FEFF 		bl	__aeabi_uidivmod
 1035              	.LVL90:
 1036 0016 0029     		cmp	r1, #0
 1037 0018 02D1     		bne	.L57
 1038              	.LVL91:
 1039              	.LBB998:
 1040              	.LBB999:
 113:../../src/timers.h ****     every_qty_cnt_call (subtick_cnt, subtick_qty, [this]{
 114:../../src/timers.h ****         notify();
 1041              		.loc 1 114 0
 1042 001a 2000     		movs	r0, r4
 1043 001c FFF7FEFF 		bl	_ZN9Publisher6notifyEv
 1044              	.LVL92:
 1045              	.L57:
 1046              	.LBE999:
 1047              	.LBE998:
 1048              	.LBE997:
 1049              	.LBE996:
 115:../../src/timers.h ****     });
 116:../../src/timers.h **** }
 1050              		.loc 1 116 0
 1051              		@ sp needed
 1052              	.LVL93:
 1053 0020 10BD     		pop	{r4, pc}
 1054              		.cfi_endproc
 1055              	.LFE2529:
 1057              		.section	.text.SysTick_Handler,"ax",%progbits
 1058              		.align	1
 1059              		.global	SysTick_Handler
 1060              		.syntax unified
 1061              		.code	16
 1062              		.thumb_func
 1063              		.fpu softvfp
 1065              	SysTick_Handler:
 1066              	.LFB2510:
  38:../../src/timers.h ****     tickUpdater.interrupt();
 1067              		.loc 1 38 0
 1068              		.cfi_startproc
ARM GAS  /tmp/ccCYtDPO.s 			page 52


 1069              		@ args = 0, pretend = 0, frame = 0
 1070              		@ frame_needed = 0, uses_anonymous_args = 0
 1071 0000 10B5     		push	{r4, lr}
 1072              	.LCFI9:
 1073              		.cfi_def_cfa_offset 8
 1074              		.cfi_offset 4, -8
 1075              		.cfi_offset 14, -4
  39:../../src/timers.h **** }
 1076              		.loc 1 39 0
 1077 0002 0248     		ldr	r0, .L60
 1078 0004 FFF7FEFF 		bl	_ZN11TickUpdater9interruptEv
 1079              	.LVL94:
  40:../../src/timers.h **** 
 1080              		.loc 1 40 0
 1081              		@ sp needed
 1082 0008 10BD     		pop	{r4, pc}
 1083              	.L61:
 1084 000a C046     		.align	2
 1085              	.L60:
 1086 000c 00000000 		.word	.LANCHOR0
 1087              		.cfi_endproc
 1088              	.LFE2510:
 1090              		.section	.text._ZN5Timer5eventEv,"ax",%progbits
 1091              		.align	1
 1092              		.global	_ZN5Timer5eventEv
 1093              		.syntax unified
 1094              		.code	16
 1095              		.thumb_func
 1096              		.fpu softvfp
 1098              	_ZN5Timer5eventEv:
 1099              	.LFB2532:
 117:../../src/timers.h **** 
 118:../../src/timers.h **** 
 119:../../src/timers.h **** 
 120:../../src/timers.h **** void Timer::start (uint32_t ms)
 121:../../src/timers.h **** {
 122:../../src/timers.h ****     timeSet = ms;
 123:../../src/timers.h ****     tick_subscribe();
 124:../../src/timers.h **** }
 125:../../src/timers.h **** 
 126:../../src/timers.h **** 
 127:../../src/timers.h **** 
 128:../../src/timers.h **** bool Timer::event()
 129:../../src/timers.h **** {
 1100              		.loc 1 129 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104              		@ link register save eliminated.
 1105              	.LVL95:
 130:../../src/timers.h ****     if (timePassed_ >= timeSet) {
 1106              		.loc 1 130 0
 1107 0000 4169     		ldr	r1, [r0, #20]
 1108 0002 0269     		ldr	r2, [r0, #16]
 1109 0004 0023     		movs	r3, #0
 1110 0006 9142     		cmp	r1, r2
 1111 0008 01D3     		bcc	.L63
ARM GAS  /tmp/ccCYtDPO.s 			page 53


 131:../../src/timers.h ****         timePassed_ = 0;
 1112              		.loc 1 131 0
 1113 000a 4361     		str	r3, [r0, #20]
 132:../../src/timers.h ****         return (true);
 1114              		.loc 1 132 0
 1115 000c 0133     		adds	r3, r3, #1
 1116              	.L63:
 133:../../src/timers.h ****     } else {
 134:../../src/timers.h ****         return (false);
 135:../../src/timers.h ****     }
 136:../../src/timers.h **** }
 1117              		.loc 1 136 0
 1118 000e 1800     		movs	r0, r3
 1119              	.LVL96:
 1120              		@ sp needed
 1121 0010 7047     		bx	lr
 1122              		.cfi_endproc
 1123              	.LFE2532:
 1125              		.section	.text._ZN5Timer4doneEv,"ax",%progbits
 1126              		.align	1
 1127              		.global	_ZN5Timer4doneEv
 1128              		.syntax unified
 1129              		.code	16
 1130              		.thumb_func
 1131              		.fpu softvfp
 1133              	_ZN5Timer4doneEv:
 1134              	.LFB2535:
 137:../../src/timers.h **** 
 138:../../src/timers.h **** 
 139:../../src/timers.h **** 
 140:../../src/timers.h **** template<class Functor>
 141:../../src/timers.h **** void Timer::event (Functor functor)
 142:../../src/timers.h **** {
 143:../../src/timers.h ****     if (timePassed_ >= timeSet) {
 144:../../src/timers.h ****         timePassed_ = 0;
 145:../../src/timers.h ****         functor();
 146:../../src/timers.h ****     }
 147:../../src/timers.h **** }
 148:../../src/timers.h **** 
 149:../../src/timers.h **** 
 150:../../src/timers.h **** 
 151:../../src/timers.h **** void Timer::stop()
 152:../../src/timers.h **** {
 153:../../src/timers.h ****     timePassed_ = 0;
 154:../../src/timers.h ****     tick_unsubscribe();
 155:../../src/timers.h **** }
 156:../../src/timers.h **** 
 157:../../src/timers.h **** 
 158:../../src/timers.h **** 
 159:../../src/timers.h **** bool     Timer::done()       { return timePassed_ >= timeSet; }
 1135              		.loc 1 159 0
 1136              		.cfi_startproc
 1137              		@ args = 0, pretend = 0, frame = 0
 1138              		@ frame_needed = 0, uses_anonymous_args = 0
 1139              		@ link register save eliminated.
 1140              	.LVL97:
 1141              		.loc 1 159 0
ARM GAS  /tmp/ccCYtDPO.s 			page 54


 1142 0000 4269     		ldr	r2, [r0, #20]
 1143 0002 0369     		ldr	r3, [r0, #16]
 1144 0004 0020     		movs	r0, #0
 1145              	.LVL98:
 1146 0006 9A42     		cmp	r2, r3
 1147 0008 4041     		adcs	r0, r0, r0
 1148              		@ sp needed
 1149 000a C0B2     		uxtb	r0, r0
 1150 000c 7047     		bx	lr
 1151              		.cfi_endproc
 1152              	.LFE2535:
 1154              		.section	.text._ZN5Timer7isCountEv,"ax",%progbits
 1155              		.align	1
 1156              		.global	_ZN5Timer7isCountEv
 1157              		.syntax unified
 1158              		.code	16
 1159              		.thumb_func
 1160              		.fpu softvfp
 1162              	_ZN5Timer7isCountEv:
 1163              	.LFB2538:
 160:../../src/timers.h **** void     Timer::pause()      { tick_unsubscribe(); }
 161:../../src/timers.h **** void     Timer::start()      { tick_subscribe();  }
 162:../../src/timers.h **** bool     Timer::isCount()    { return subscribed; }
 1164              		.loc 1 162 0
 1165              		.cfi_startproc
 1166              		@ args = 0, pretend = 0, frame = 0
 1167              		@ frame_needed = 0, uses_anonymous_args = 0
 1168              		@ link register save eliminated.
 1169              	.LVL99:
 1170              		.loc 1 162 0
 1171 0000 007B     		ldrb	r0, [r0, #12]
 1172              	.LVL100:
 1173              		@ sp needed
 1174 0002 7047     		bx	lr
 1175              		.cfi_endproc
 1176              	.LFE2538:
 1178              		.section	.text._ZN5Timer10timePassedEv,"ax",%progbits
 1179              		.align	1
 1180              		.global	_ZN5Timer10timePassedEv
 1181              		.syntax unified
 1182              		.code	16
 1183              		.thumb_func
 1184              		.fpu softvfp
 1186              	_ZN5Timer10timePassedEv:
 1187              	.LFB2539:
 163:../../src/timers.h **** uint32_t Timer::timePassed() { return timePassed_; }
 1188              		.loc 1 163 0
 1189              		.cfi_startproc
 1190              		@ args = 0, pretend = 0, frame = 0
 1191              		@ frame_needed = 0, uses_anonymous_args = 0
 1192              		@ link register save eliminated.
 1193              	.LVL101:
 1194              		.loc 1 163 0
 1195 0000 4069     		ldr	r0, [r0, #20]
 1196              	.LVL102:
 1197              		@ sp needed
 1198 0002 7047     		bx	lr
ARM GAS  /tmp/ccCYtDPO.s 			page 55


 1199              		.cfi_endproc
 1200              	.LFE2539:
 1202              		.section	.text._ZN5Timer8timeLeftEv,"ax",%progbits
 1203              		.align	1
 1204              		.global	_ZN5Timer8timeLeftEv
 1205              		.syntax unified
 1206              		.code	16
 1207              		.thumb_func
 1208              		.fpu softvfp
 1210              	_ZN5Timer8timeLeftEv:
 1211              	.LFB2540:
 164:../../src/timers.h **** uint32_t Timer::timeLeft(  ) { return timeSet - timePassed_; }
 1212              		.loc 1 164 0
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 0
 1215              		@ frame_needed = 0, uses_anonymous_args = 0
 1216              		@ link register save eliminated.
 1217              	.LVL103:
 1218              		.loc 1 164 0
 1219 0000 0369     		ldr	r3, [r0, #16]
 1220 0002 4069     		ldr	r0, [r0, #20]
 1221              	.LVL104:
 1222              		@ sp needed
 1223 0004 181A     		subs	r0, r3, r0
 1224 0006 7047     		bx	lr
 1225              		.cfi_endproc
 1226              	.LFE2540:
 1228              		.section	.text._ZN5Timer9isGreaterEm,"ax",%progbits
 1229              		.align	1
 1230              		.global	_ZN5Timer9isGreaterEm
 1231              		.syntax unified
 1232              		.code	16
 1233              		.thumb_func
 1234              		.fpu softvfp
 1236              	_ZN5Timer9isGreaterEm:
 1237              	.LFB2541:
 165:../../src/timers.h **** bool     Timer::isGreater (uint32_t val) { return timePassed_ > val; }
 1238              		.loc 1 165 0
 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 0
 1241              		@ frame_needed = 0, uses_anonymous_args = 0
 1242              		@ link register save eliminated.
 1243              	.LVL105:
 1244              		.loc 1 165 0
 1245 0000 4069     		ldr	r0, [r0, #20]
 1246              	.LVL106:
 1247              		@ sp needed
 1248 0002 8142     		cmp	r1, r0
 1249 0004 8041     		sbcs	r0, r0, r0
 1250 0006 4042     		rsbs	r0, r0, #0
 1251 0008 7047     		bx	lr
 1252              		.cfi_endproc
 1253              	.LFE2541:
 1255              		.section	.text._ZN14TickSubscriber16tick_unsubscribeEv,"ax",%progbits
 1256              		.align	1
 1257              		.global	_ZN14TickSubscriber16tick_unsubscribeEv
 1258              		.syntax unified
ARM GAS  /tmp/ccCYtDPO.s 			page 56


 1259              		.code	16
 1260              		.thumb_func
 1261              		.fpu softvfp
 1263              	_ZN14TickSubscriber16tick_unsubscribeEv:
 1264              	.LFB2542:
 166:../../src/timers.h **** 
 167:../../src/timers.h **** 
 168:../../src/timers.h **** 
 169:../../src/timers.h **** void TickSubscriber::tick_unsubscribe()
 170:../../src/timers.h **** {
 1265              		.loc 1 170 0
 1266              		.cfi_startproc
 1267              		@ args = 0, pretend = 0, frame = 0
 1268              		@ frame_needed = 0, uses_anonymous_args = 0
 1269              		@ link register save eliminated.
 1270              	.LVL107:
 171:../../src/timers.h ****     if (subscribed) {
 1271              		.loc 1 171 0
 1272 0000 037B     		ldrb	r3, [r0, #12]
 1273 0002 002B     		cmp	r3, #0
 1274 0004 0DD0     		beq	.L70
 1275              	.LVL108:
 1276              	.LBB1006:
 1277              	.LBB1007:
 172:../../src/timers.h ****         subscribed = false;
 1278              		.loc 1 172 0
 1279 0006 0023     		movs	r3, #0
 1280              	.LBB1008:
 1281              	.LBB1009:
 1282              	.LBB1010:
  77:../../src/list.h ****       v.prev->next = v.next;
 1283              		.loc 12 77 0
 1284 0008 4268     		ldr	r2, [r0, #4]
 1285              	.LBE1010:
 1286              	.LBE1009:
 1287              	.LBE1008:
 1288              		.loc 1 172 0
 1289 000a 0373     		strb	r3, [r0, #12]
 1290              	.LVL109:
 1291 000c 8368     		ldr	r3, [r0, #8]
 1292              	.LBB1015:
 1293              	.LBB1013:
 1294              	.LBB1011:
  77:../../src/list.h ****       v.prev->next = v.next;
 1295              		.loc 12 77 0
 1296 000e 002A     		cmp	r2, #0
 1297 0010 0ED0     		beq	.L72
 1298 0012 002B     		cmp	r3, #0
 1299 0014 08D0     		beq	.L73
  78:../../src/list.h ****       v.next->prev = v.prev;
 1300              		.loc 12 78 0
 1301 0016 9360     		str	r3, [r2, #8]
  79:../../src/list.h ****    } else if (v.next) {             // –µ—Å–ª–∏ –ø–µ—Ä–≤—ã–π
 1302              		.loc 12 79 0
 1303 0018 8368     		ldr	r3, [r0, #8]
 1304              	.L81:
  82:../../src/list.h ****       if (not first) last = nullptr;
ARM GAS  /tmp/ccCYtDPO.s 			page 57


 1305              		.loc 12 82 0
 1306 001a 5A60     		str	r2, [r3, #4]
 1307              	.L74:
  92:../../src/list.h ****    v.next = nullptr;
 1308              		.loc 12 92 0
 1309 001c 0023     		movs	r3, #0
 1310 001e 4360     		str	r3, [r0, #4]
  93:../../src/list.h **** 
 1311              		.loc 12 93 0
 1312 0020 8360     		str	r3, [r0, #8]
 1313              	.LVL110:
 1314              	.L70:
 1315              	.LBE1011:
 1316              	.LBE1013:
 1317              	.LBE1015:
 1318              	.LBE1007:
 1319              	.LBE1006:
 173:../../src/timers.h ****         tickUpdater.unsubscribe (*this);
 174:../../src/timers.h ****     }
 175:../../src/timers.h **** }
 1320              		.loc 1 175 0
 1321              		@ sp needed
 1322 0022 7047     		bx	lr
 1323              	.LVL111:
 1324              	.L75:
 1325              	.LBB1018:
 1326              	.LBB1017:
 1327              	.LBB1016:
 1328              	.LBB1014:
 1329              	.LBB1012:
  81:../../src/list.h ****       first->prev = nullptr;
 1330              		.loc 12 81 0
 1331 0024 0B60     		str	r3, [r1]
 1332 0026 F8E7     		b	.L81
 1333              	.L73:
  85:../../src/list.h ****       last->next = nullptr;
 1334              		.loc 12 85 0
 1335 0028 0449     		ldr	r1, .L82
  86:../../src/list.h ****       if (not last) first = nullptr;
 1336              		.loc 12 86 0
 1337 002a 9360     		str	r3, [r2, #8]
  85:../../src/list.h ****       last->next = nullptr;
 1338              		.loc 12 85 0
 1339 002c 4A60     		str	r2, [r1, #4]
 1340 002e F5E7     		b	.L74
 1341              	.L72:
 1342 0030 0249     		ldr	r1, .L82
  80:../../src/list.h ****       first = v.next;
 1343              		.loc 12 80 0
 1344 0032 002B     		cmp	r3, #0
 1345 0034 F6D1     		bne	.L75
  89:../../src/list.h ****       last  = nullptr;
 1346              		.loc 12 89 0
 1347 0036 0B60     		str	r3, [r1]
  90:../../src/list.h ****    }
 1348              		.loc 12 90 0
 1349 0038 4B60     		str	r3, [r1, #4]
ARM GAS  /tmp/ccCYtDPO.s 			page 58


 1350 003a EFE7     		b	.L74
 1351              	.L83:
 1352              		.align	2
 1353              	.L82:
 1354 003c 00000000 		.word	.LANCHOR0
 1355              	.LBE1012:
 1356              	.LBE1014:
 1357              	.LBE1016:
 1358              	.LBE1017:
 1359              	.LBE1018:
 1360              		.cfi_endproc
 1361              	.LFE2542:
 1363              		.section	.text._ZN3mcu6Button6notifyEv,"axG",%progbits,_ZN3mcu6Button6notifyEv,comdat
 1364              		.align	1
 1365              		.weak	_ZN3mcu6Button6notifyEv
 1366              		.syntax unified
 1367              		.code	16
 1368              		.thumb_func
 1369              		.fpu softvfp
 1371              	_ZN3mcu6Button6notifyEv:
 1372              	.LFB2600:
 1373              		.file 13 "../../src/buttons.h"
   1:../../src/buttons.h **** #pragma once
   2:../../src/buttons.h **** 
   3:../../src/buttons.h **** #include "timers.h"
   4:../../src/buttons.h **** #include "literals.h"
   5:../../src/buttons.h **** #if not defined (TEST)
   6:../../src/buttons.h ****    #include "pin.h"
   7:../../src/buttons.h **** #endif
   8:../../src/buttons.h **** #include <tuple>
   9:../../src/buttons.h **** #include <algorithm>
  10:../../src/buttons.h **** 
  11:../../src/buttons.h **** namespace mcu {
  12:../../src/buttons.h **** 
  13:../../src/buttons.h **** class Button : TickSubscriber
  14:../../src/buttons.h **** {
  15:../../src/buttons.h ****    Pin& pin;
  16:../../src/buttons.h **** 
  17:../../src/buttons.h ****    int time {0};
  18:../../src/buttons.h ****    bool short_press {false};
  19:../../src/buttons.h ****    bool long_press {false};
  20:../../src/buttons.h ****    bool increment  {false};
  21:../../src/buttons.h ****    bool inverted   {false};
  22:../../src/buttons.h ****    bool click_     {false};
  23:../../src/buttons.h ****    int  inc {1};
  24:../../src/buttons.h ****    int  value{0};
  25:../../src/buttons.h ****    int  tmp{0};
  26:../../src/buttons.h **** 
  27:../../src/buttons.h ****    Button (Pin& pin, bool inverted) : pin {pin}, inverted {inverted} {}
  28:../../src/buttons.h **** 
  29:../../src/buttons.h **** public:
  30:../../src/buttons.h **** 
  31:../../src/buttons.h ****    template<class Pin_, bool inverted = false> 
  32:../../src/buttons.h ****    static auto& make()
  33:../../src/buttons.h ****    {
  34:../../src/buttons.h ****       static auto button = Button {Pin::template make<Pin_, PinMode::Input>(), inverted};
  35:../../src/buttons.h ****       return button;
ARM GAS  /tmp/ccCYtDPO.s 			page 59


  36:../../src/buttons.h ****    }
  37:../../src/buttons.h **** 
  38:../../src/buttons.h ****    bool push()
  39:../../src/buttons.h ****    {
  40:../../src/buttons.h ****       if (inverted) {
  41:../../src/buttons.h ****          if (not pin) 
  42:../../src/buttons.h ****             tick_subscribe();
  43:../../src/buttons.h ****       } else {
  44:../../src/buttons.h ****          if (pin)
  45:../../src/buttons.h ****             tick_subscribe();
  46:../../src/buttons.h ****       }
  47:../../src/buttons.h **** 
  48:../../src/buttons.h ****       return time >= 10 and not short_press ? (short_press = true) : false;
  49:../../src/buttons.h ****    }
  50:../../src/buttons.h **** 
  51:../../src/buttons.h ****    bool push_long()
  52:../../src/buttons.h ****    {
  53:../../src/buttons.h ****       if (inverted) {
  54:../../src/buttons.h ****          if (not pin) 
  55:../../src/buttons.h ****             tick_subscribe();
  56:../../src/buttons.h ****       } else {
  57:../../src/buttons.h ****          if (pin)
  58:../../src/buttons.h ****             tick_subscribe();
  59:../../src/buttons.h ****       }
  60:../../src/buttons.h **** 
  61:../../src/buttons.h ****       return time >= 1000 and not long_press ? (long_press = true) : false;
  62:../../src/buttons.h ****    }
  63:../../src/buttons.h **** 
  64:../../src/buttons.h ****    // bool click()
  65:../../src/buttons.h ****    // {
  66:../../src/buttons.h ****    //    if (inverted) {
  67:../../src/buttons.h ****    //       if (not pin) 
  68:../../src/buttons.h ****    //          tick_subscribe();
  69:../../src/buttons.h ****    //    } else {
  70:../../src/buttons.h ****    //       if (pin)
  71:../../src/buttons.h ****    //          tick_subscribe();
  72:../../src/buttons.h ****    //    }
  73:../../src/buttons.h ****    //    if (time > 10 and time < 1000)
  74:../../src/buttons.h ****    //       click_ = true;
  75:../../src/buttons.h ****    //    return not pin and click_ ? (not (click_ = false)) : false;
  76:../../src/buttons.h ****    // }
  77:../../src/buttons.h **** 
  78:../../src/buttons.h ****    operator int()
  79:../../src/buttons.h ****    {
  80:../../src/buttons.h ****       if (increment) {
  81:../../src/buttons.h ****          if (time <= 2000)
  82:../../src/buttons.h ****             value = (time >= tmp + 200) ? tmp = time, inc : 0;
  83:../../src/buttons.h ****          else if (time < 3000)
  84:../../src/buttons.h ****             value = (time >= tmp + 100) ? tmp = time, inc : 0;
  85:../../src/buttons.h ****          else if (time < 4000)
  86:../../src/buttons.h ****             value = (time >= tmp + 50 ) ? tmp = time, inc : 0;
  87:../../src/buttons.h ****          else if (time < 5000)
  88:../../src/buttons.h ****             value = (time >= tmp + 25 ) ? tmp = time, inc : 0;
  89:../../src/buttons.h ****          else if (time >= 5000) {
  90:../../src/buttons.h ****             value = (time >= tmp + 25 ) ? tmp = time, inc : 0;
  91:../../src/buttons.h ****             inc += (time % 1000) == 0;
  92:../../src/buttons.h ****          }
ARM GAS  /tmp/ccCYtDPO.s 			page 60


  93:../../src/buttons.h ****          
  94:../../src/buttons.h ****       } else if (push()) 
  95:../../src/buttons.h ****          value = 1;
  96:../../src/buttons.h ****        else if (push_long()) {
  97:../../src/buttons.h ****          increment = true;
  98:../../src/buttons.h ****          tmp = time;
  99:../../src/buttons.h ****          value = 1;
 100:../../src/buttons.h ****       } else 
 101:../../src/buttons.h ****          value = 0;
 102:../../src/buttons.h **** 
 103:../../src/buttons.h ****       return value;
 104:../../src/buttons.h ****    }
 105:../../src/buttons.h **** 
 106:../../src/buttons.h ****    void notify () override
 1374              		.loc 13 106 0
 1375              		.cfi_startproc
 1376              		@ args = 0, pretend = 0, frame = 0
 1377              		@ frame_needed = 0, uses_anonymous_args = 0
 1378              	.LVL112:
 1379 0000 70B5     		push	{r4, r5, r6, lr}
 1380              	.LCFI10:
 1381              		.cfi_def_cfa_offset 16
 1382              		.cfi_offset 4, -16
 1383              		.cfi_offset 5, -12
 1384              		.cfi_offset 6, -8
 1385              		.cfi_offset 14, -4
 1386              		.loc 13 106 0
 1387 0002 0400     		movs	r4, r0
 107:../../src/buttons.h ****    {
 108:../../src/buttons.h ****       if (inverted) {
 1388              		.loc 13 108 0
 1389 0004 E37E     		ldrb	r3, [r4, #27]
 1390 0006 0069     		ldr	r0, [r0, #16]
 1391              	.LVL113:
 1392 0008 002B     		cmp	r3, #0
 1393 000a 0ED0     		beq	.L85
 1394              	.LVL114:
 1395              	.LBB1029:
 1396              	.LBB1030:
  34:../../src/pin.h ****    bool operator^= (bool v) 
  35:../../src/pin.h ****    {
  36:../../src/pin.h ****       auto tmp {is_set()};
  37:../../src/pin.h ****       if (v) toggle();
  38:../../src/pin.h ****       return tmp ^ v;
  39:../../src/pin.h ****    }
  40:../../src/pin.h ****    operator bool() { return is_set(); }
 1397              		.loc 8 40 0
 1398 000c FFF7FEFF 		bl	_ZN3Pin6is_setEv
 1399              	.LVL115:
 1400              	.LBE1030:
 1401              	.LBE1029:
 109:../../src/buttons.h ****          if (pin) {
 1402              		.loc 13 109 0
 1403 0010 0028     		cmp	r0, #0
 1404 0012 17D0     		beq	.L88
 110:../../src/buttons.h ****             tick_unsubscribe();
 1405              		.loc 13 110 0
ARM GAS  /tmp/ccCYtDPO.s 			page 61


 1406 0014 2000     		movs	r0, r4
 1407 0016 FFF7FEFF 		bl	_ZN14TickSubscriber16tick_unsubscribeEv
 1408              	.LVL116:
 111:../../src/buttons.h ****             time = 0;
 1409              		.loc 13 111 0
 1410 001a 0023     		movs	r3, #0
 1411 001c 6361     		str	r3, [r4, #20]
 112:../../src/buttons.h ****             short_press = false;
 1412              		.loc 13 112 0
 1413 001e 2376     		strb	r3, [r4, #24]
 113:../../src/buttons.h ****             long_press = false;
 1414              		.loc 13 113 0
 1415 0020 6376     		strb	r3, [r4, #25]
 114:../../src/buttons.h ****             increment  = false;
 1416              		.loc 13 114 0
 1417 0022 A376     		strb	r3, [r4, #26]
 1418              	.L89:
 1419              	.LBB1031:
 1420              	.LBB1032:
 115:../../src/buttons.h ****             inc        = 1;
 116:../../src/buttons.h ****          } else 
 117:../../src/buttons.h ****             time++;
 118:../../src/buttons.h ****       } else {
 119:../../src/buttons.h ****          if (not pin) {
 120:../../src/buttons.h ****             tick_unsubscribe();
 121:../../src/buttons.h ****             time = 0;
 122:../../src/buttons.h ****             short_press = false;
 123:../../src/buttons.h ****             long_press = false;
 124:../../src/buttons.h ****             increment  = false;
 125:../../src/buttons.h ****             click_     = false;
 126:../../src/buttons.h ****             inc        = 1;
 1421              		.loc 13 126 0
 1422 0024 0123     		movs	r3, #1
 1423 0026 2362     		str	r3, [r4, #32]
 1424              	.L84:
 1425              	.LBE1032:
 1426              	.LBE1031:
 127:../../src/buttons.h ****          } else 
 128:../../src/buttons.h ****             time++;
 129:../../src/buttons.h ****       }
 130:../../src/buttons.h ****    }
 1427              		.loc 13 130 0
 1428              		@ sp needed
 1429              	.LVL117:
 1430 0028 70BD     		pop	{r4, r5, r6, pc}
 1431              	.LVL118:
 1432              	.L85:
 1433              	.LBB1034:
 1434              	.LBB1035:
 1435              		.loc 8 40 0
 1436 002a FFF7FEFF 		bl	_ZN3Pin6is_setEv
 1437              	.LVL119:
 1438 002e 051E     		subs	r5, r0, #0
 1439              	.LBE1035:
 1440              	.LBE1034:
 119:../../src/buttons.h ****             tick_unsubscribe();
 1441              		.loc 13 119 0
ARM GAS  /tmp/ccCYtDPO.s 			page 62


 1442 0030 08D1     		bne	.L88
 1443              	.LVL120:
 1444              	.LBB1036:
 1445              	.LBB1033:
 120:../../src/buttons.h ****             time = 0;
 1446              		.loc 13 120 0
 1447 0032 2000     		movs	r0, r4
 1448 0034 FFF7FEFF 		bl	_ZN14TickSubscriber16tick_unsubscribeEv
 1449              	.LVL121:
 121:../../src/buttons.h ****             short_press = false;
 1450              		.loc 13 121 0
 1451 0038 6561     		str	r5, [r4, #20]
 122:../../src/buttons.h ****             long_press = false;
 1452              		.loc 13 122 0
 1453 003a 2576     		strb	r5, [r4, #24]
 123:../../src/buttons.h ****             increment  = false;
 1454              		.loc 13 123 0
 1455 003c 6576     		strb	r5, [r4, #25]
 124:../../src/buttons.h ****             click_     = false;
 1456              		.loc 13 124 0
 1457 003e A576     		strb	r5, [r4, #26]
 125:../../src/buttons.h ****             inc        = 1;
 1458              		.loc 13 125 0
 1459 0040 2577     		strb	r5, [r4, #28]
 1460 0042 EFE7     		b	.L89
 1461              	.LVL122:
 1462              	.L88:
 1463              	.LBE1033:
 1464              	.LBE1036:
 128:../../src/buttons.h ****       }
 1465              		.loc 13 128 0
 1466 0044 6369     		ldr	r3, [r4, #20]
 1467 0046 0133     		adds	r3, r3, #1
 1468 0048 6361     		str	r3, [r4, #20]
 1469              		.loc 13 130 0
 1470 004a EDE7     		b	.L84
 1471              		.cfi_endproc
 1472              	.LFE2600:
 1474              		.section	.text._ZN5Timer4stopEv,"ax",%progbits
 1475              		.align	1
 1476              		.global	_ZN5Timer4stopEv
 1477              		.syntax unified
 1478              		.code	16
 1479              		.thumb_func
 1480              		.fpu softvfp
 1482              	_ZN5Timer4stopEv:
 1483              	.LFB2534:
 152:../../src/timers.h ****     timePassed_ = 0;
 1484              		.loc 1 152 0
 1485              		.cfi_startproc
 1486              		@ args = 0, pretend = 0, frame = 0
 1487              		@ frame_needed = 0, uses_anonymous_args = 0
 1488              	.LVL123:
 153:../../src/timers.h ****     tick_unsubscribe();
 1489              		.loc 1 153 0
 1490 0000 0023     		movs	r3, #0
 152:../../src/timers.h ****     timePassed_ = 0;
ARM GAS  /tmp/ccCYtDPO.s 			page 63


 1491              		.loc 1 152 0
 1492 0002 10B5     		push	{r4, lr}
 1493              	.LCFI11:
 1494              		.cfi_def_cfa_offset 8
 1495              		.cfi_offset 4, -8
 1496              		.cfi_offset 14, -4
 153:../../src/timers.h ****     tick_unsubscribe();
 1497              		.loc 1 153 0
 1498 0004 4361     		str	r3, [r0, #20]
 154:../../src/timers.h **** }
 1499              		.loc 1 154 0
 1500 0006 FFF7FEFF 		bl	_ZN14TickSubscriber16tick_unsubscribeEv
 1501              	.LVL124:
 155:../../src/timers.h **** 
 1502              		.loc 1 155 0
 1503              		@ sp needed
 1504 000a 10BD     		pop	{r4, pc}
 1505              		.cfi_endproc
 1506              	.LFE2534:
 1508              		.section	.text._ZN5Timer5pauseEv,"ax",%progbits
 1509              		.align	1
 1510              		.global	_ZN5Timer5pauseEv
 1511              		.syntax unified
 1512              		.code	16
 1513              		.thumb_func
 1514              		.fpu softvfp
 1516              	_ZN5Timer5pauseEv:
 1517              	.LFB2536:
 160:../../src/timers.h **** void     Timer::start()      { tick_subscribe();  }
 1518              		.loc 1 160 0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 0
 1521              		@ frame_needed = 0, uses_anonymous_args = 0
 1522              	.LVL125:
 1523 0000 10B5     		push	{r4, lr}
 1524              	.LCFI12:
 1525              		.cfi_def_cfa_offset 8
 1526              		.cfi_offset 4, -8
 1527              		.cfi_offset 14, -4
 160:../../src/timers.h **** void     Timer::start()      { tick_subscribe();  }
 1528              		.loc 1 160 0
 1529 0002 FFF7FEFF 		bl	_ZN14TickSubscriber16tick_unsubscribeEv
 1530              	.LVL126:
 1531              		@ sp needed
 1532 0006 10BD     		pop	{r4, pc}
 1533              		.cfi_endproc
 1534              	.LFE2536:
 1536              		.section	.text._ZN14TickSubscriber14tick_subscribeEv,"ax",%progbits
 1537              		.align	1
 1538              		.global	_ZN14TickSubscriber14tick_subscribeEv
 1539              		.syntax unified
 1540              		.code	16
 1541              		.thumb_func
 1542              		.fpu softvfp
 1544              	_ZN14TickSubscriber14tick_subscribeEv:
 1545              	.LFB2543:
 176:../../src/timers.h **** 
ARM GAS  /tmp/ccCYtDPO.s 			page 64


 177:../../src/timers.h **** 
 178:../../src/timers.h **** 
 179:../../src/timers.h **** void TickSubscriber::tick_subscribe()
 180:../../src/timers.h **** {
 1546              		.loc 1 180 0
 1547              		.cfi_startproc
 1548              		@ args = 0, pretend = 0, frame = 0
 1549              		@ frame_needed = 0, uses_anonymous_args = 0
 1550              		@ link register save eliminated.
 1551              	.LVL127:
 181:../../src/timers.h ****     if (not subscribed) {
 1552              		.loc 1 181 0
 1553 0000 037B     		ldrb	r3, [r0, #12]
 1554 0002 002B     		cmp	r3, #0
 1555 0004 0CD1     		bne	.L92
 1556              	.LVL128:
 1557              	.LBB1043:
 1558              	.LBB1044:
 182:../../src/timers.h ****         subscribed = true;
 1559              		.loc 1 182 0
 1560 0006 0133     		adds	r3, r3, #1
 1561 0008 0373     		strb	r3, [r0, #12]
 1562              	.LVL129:
 1563              	.LBB1045:
 1564              	.LBB1046:
 1565              	.LBB1047:
  53:../../src/list.h ****    if (last)
 1566              		.loc 12 53 0
 1567 000a 064B     		ldr	r3, .L100
 1568 000c 5A68     		ldr	r2, [r3, #4]
 1569 000e 4260     		str	r2, [r0, #4]
  54:../../src/list.h ****       last->next = &v;
 1570              		.loc 12 54 0
 1571 0010 002A     		cmp	r2, #0
 1572 0012 00D0     		beq	.L95
  55:../../src/list.h ****    last = &v;
 1573              		.loc 12 55 0
 1574 0014 9060     		str	r0, [r2, #8]
 1575              	.L95:
  57:../../src/list.h ****       first = &v;
 1576              		.loc 12 57 0
 1577 0016 1A68     		ldr	r2, [r3]
  56:../../src/list.h ****    if (not first)
 1578              		.loc 12 56 0
 1579 0018 5860     		str	r0, [r3, #4]
  57:../../src/list.h ****       first = &v;
 1580              		.loc 12 57 0
 1581 001a 002A     		cmp	r2, #0
 1582 001c 00D1     		bne	.L92
  58:../../src/list.h **** }
 1583              		.loc 12 58 0
 1584 001e 1860     		str	r0, [r3]
 1585              	.LVL130:
 1586              	.L92:
 1587              	.LBE1047:
 1588              	.LBE1046:
 1589              	.LBE1045:
ARM GAS  /tmp/ccCYtDPO.s 			page 65


 1590              	.LBE1044:
 1591              	.LBE1043:
 183:../../src/timers.h ****         tickUpdater.subscribe (*this);
 184:../../src/timers.h ****     }
 185:../../src/timers.h **** }
 1592              		.loc 1 185 0
 1593              		@ sp needed
 1594 0020 7047     		bx	lr
 1595              	.L101:
 1596 0022 C046     		.align	2
 1597              	.L100:
 1598 0024 00000000 		.word	.LANCHOR0
 1599              		.cfi_endproc
 1600              	.LFE2543:
 1602              		.section	.text._ZN5Timer5startEm,"ax",%progbits
 1603              		.align	1
 1604              		.global	_ZN5Timer5startEm
 1605              		.syntax unified
 1606              		.code	16
 1607              		.thumb_func
 1608              		.fpu softvfp
 1610              	_ZN5Timer5startEm:
 1611              	.LFB2531:
 121:../../src/timers.h ****     timeSet = ms;
 1612              		.loc 1 121 0
 1613              		.cfi_startproc
 1614              		@ args = 0, pretend = 0, frame = 0
 1615              		@ frame_needed = 0, uses_anonymous_args = 0
 1616              	.LVL131:
 1617 0000 10B5     		push	{r4, lr}
 1618              	.LCFI13:
 1619              		.cfi_def_cfa_offset 8
 1620              		.cfi_offset 4, -8
 1621              		.cfi_offset 14, -4
 122:../../src/timers.h ****     tick_subscribe();
 1622              		.loc 1 122 0
 1623 0002 0161     		str	r1, [r0, #16]
 123:../../src/timers.h **** }
 1624              		.loc 1 123 0
 1625 0004 FFF7FEFF 		bl	_ZN14TickSubscriber14tick_subscribeEv
 1626              	.LVL132:
 124:../../src/timers.h **** 
 1627              		.loc 1 124 0
 1628              		@ sp needed
 1629 0008 10BD     		pop	{r4, pc}
 1630              		.cfi_endproc
 1631              	.LFE2531:
 1633              		.section	.text._ZN5Timer5startEv,"ax",%progbits
 1634              		.align	1
 1635              		.global	_ZN5Timer5startEv
 1636              		.syntax unified
 1637              		.code	16
 1638              		.thumb_func
 1639              		.fpu softvfp
 1641              	_ZN5Timer5startEv:
 1642              	.LFB2537:
 161:../../src/timers.h **** bool     Timer::isCount()    { return subscribed; }
ARM GAS  /tmp/ccCYtDPO.s 			page 66


 1643              		.loc 1 161 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 0
 1646              		@ frame_needed = 0, uses_anonymous_args = 0
 1647              	.LVL133:
 1648 0000 10B5     		push	{r4, lr}
 1649              	.LCFI14:
 1650              		.cfi_def_cfa_offset 8
 1651              		.cfi_offset 4, -8
 1652              		.cfi_offset 14, -4
 161:../../src/timers.h **** bool     Timer::isCount()    { return subscribed; }
 1653              		.loc 1 161 0
 1654 0002 FFF7FEFF 		bl	_ZN14TickSubscriber14tick_subscribeEv
 1655              	.LVL134:
 1656              		@ sp needed
 1657 0006 10BD     		pop	{r4, pc}
 1658              		.cfi_endproc
 1659              	.LFE2537:
 1661              		.section	.text._ZN5Delay2msEm,"axG",%progbits,_ZN5Delay2msEm,comdat
 1662              		.align	1
 1663              		.weak	_ZN5Delay2msEm
 1664              		.syntax unified
 1665              		.code	16
 1666              		.thumb_func
 1667              		.fpu softvfp
 1669              	_ZN5Delay2msEm:
 1670              	.LFB2551:
  25:../../src/delay.h ****    {
 1671              		.loc 3 25 0
 1672              		.cfi_startproc
 1673              		@ args = 0, pretend = 0, frame = 0
 1674              		@ frame_needed = 0, uses_anonymous_args = 0
 1675              	.LVL135:
 1676 0000 70B5     		push	{r4, r5, r6, lr}
 1677              	.LCFI15:
 1678              		.cfi_def_cfa_offset 16
 1679              		.cfi_offset 4, -16
 1680              		.cfi_offset 5, -12
 1681              		.cfi_offset 6, -8
 1682              		.cfi_offset 14, -4
 1683 0002 0600     		movs	r6, r0
  27:../../src/delay.h ****          first_time_ms = false;
 1684              		.loc 3 27 0
 1685 0004 437A     		ldrb	r3, [r0, #9]
  25:../../src/delay.h ****    {
 1686              		.loc 3 25 0
 1687 0006 0400     		movs	r4, r0
 1688 0008 0C36     		adds	r6, r6, #12
  27:../../src/delay.h ****          first_time_ms = false;
 1689              		.loc 3 27 0
 1690 000a 002B     		cmp	r3, #0
 1691 000c 05D0     		beq	.L105
  28:../../src/delay.h ****          timer.start(ms);
 1692              		.loc 3 28 0
 1693 000e 0023     		movs	r3, #0
 1694              	.LBB1048:
 1695              	.LBB1049:
ARM GAS  /tmp/ccCYtDPO.s 			page 67


 122:../../src/timers.h ****     tick_subscribe();
 1696              		.loc 1 122 0
 1697 0010 C161     		str	r1, [r0, #28]
 1698              	.LBE1049:
 1699              	.LBE1048:
  28:../../src/delay.h ****          timer.start(ms);
 1700              		.loc 3 28 0
 1701 0012 4372     		strb	r3, [r0, #9]
 1702              	.LVL136:
 1703              	.LBB1051:
 1704              	.LBB1050:
 123:../../src/timers.h **** }
 1705              		.loc 1 123 0
 1706 0014 3000     		movs	r0, r6
 1707              	.LVL137:
 1708 0016 FFF7FEFF 		bl	_ZN14TickSubscriber14tick_subscribeEv
 1709              	.LVL138:
 1710              	.L105:
 1711              	.LBE1050:
 1712              	.LBE1051:
  32:../../src/delay.h ****       else {
 1713              		.loc 3 32 0
 1714 001a 3000     		movs	r0, r6
 1715 001c FFF7FEFF 		bl	_ZN5Timer5eventEv
 1716              	.LVL139:
 1717 0020 0125     		movs	r5, #1
 1718 0022 0028     		cmp	r0, #0
 1719 0024 04D0     		beq	.L106
  34:../../src/delay.h ****          first_time_ms = true;
 1720              		.loc 3 34 0
 1721 0026 3000     		movs	r0, r6
 1722 0028 FFF7FEFF 		bl	_ZN5Timer4stopEv
 1723              	.LVL140:
  35:../../src/delay.h ****          return false;
 1724              		.loc 3 35 0
 1725 002c 6572     		strb	r5, [r4, #9]
  36:../../src/delay.h ****       }
 1726              		.loc 3 36 0
 1727 002e 0025     		movs	r5, #0
 1728              	.L106:
  38:../../src/delay.h **** 
 1729              		.loc 3 38 0
 1730 0030 2800     		movs	r0, r5
 1731              		@ sp needed
 1732              	.LVL141:
 1733              	.LVL142:
 1734 0032 70BD     		pop	{r4, r5, r6, pc}
 1735              		.cfi_endproc
 1736              	.LFE2551:
 1738              		.section	.text._Z11block_delayj,"ax",%progbits
 1739              		.align	1
 1740              		.global	_Z11block_delayj
 1741              		.syntax unified
 1742              		.code	16
 1743              		.thumb_func
 1744              		.fpu softvfp
 1746              	_Z11block_delayj:
ARM GAS  /tmp/ccCYtDPO.s 			page 68


 1747              	.LFB2553:
  82:../../src/delay.h ****    
  83:../../src/delay.h **** };
  84:../../src/delay.h **** 
  85:../../src/delay.h **** void block_delay (volatile size_t cnt)
  86:../../src/delay.h **** {
 1748              		.loc 3 86 0
 1749              		.cfi_startproc
 1750              		@ args = 0, pretend = 0, frame = 8
 1751              		@ frame_needed = 0, uses_anonymous_args = 0
 1752              		@ link register save eliminated.
 1753              	.LVL143:
 1754 0000 82B0     		sub	sp, sp, #8
 1755              	.LCFI16:
 1756              		.cfi_def_cfa_offset 8
 1757 0002 0190     		str	r0, [sp, #4]
 1758              	.L113:
  87:../../src/delay.h ****    while (cnt--) {}
 1759              		.loc 3 87 0
 1760 0004 019B     		ldr	r3, [sp, #4]
 1761 0006 5A1E     		subs	r2, r3, #1
 1762 0008 0192     		str	r2, [sp, #4]
 1763 000a 002B     		cmp	r3, #0
 1764 000c FAD1     		bne	.L113
  88:../../src/delay.h **** }
 1765              		.loc 3 88 0
 1766 000e 02B0     		add	sp, sp, #8
 1767              		@ sp needed
 1768 0010 7047     		bx	lr
 1769              		.cfi_endproc
 1770              	.LFE2553:
 1772              		.section	.text._ZN7HD447804initEv,"ax",%progbits
 1773              		.align	1
 1774              		.global	_ZN7HD447804initEv
 1775              		.syntax unified
 1776              		.code	16
 1777              		.thumb_func
 1778              		.fpu softvfp
 1780              	_ZN7HD447804initEv:
 1781              	.LFB2576:
 154:../../src/hd44780.h ****     enum Set {
 1782              		.loc 10 154 0
 1783              		.cfi_startproc
 1784              		@ args = 0, pretend = 0, frame = 56
 1785              		@ frame_needed = 0, uses_anonymous_args = 0
 1786              	.LVL144:
 1787 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1788              	.LCFI17:
 1789              		.cfi_def_cfa_offset 20
 1790              		.cfi_offset 4, -20
 1791              		.cfi_offset 5, -16
 1792              		.cfi_offset 6, -12
 1793              		.cfi_offset 7, -8
 1794              		.cfi_offset 14, -4
 1795              	.LBB1088:
 1796              	.LBB1089:
 1797              	.LBB1090:
ARM GAS  /tmp/ccCYtDPO.s 			page 69


  23:../../src/delay.h ****    
 1798              		.loc 3 23 0
 1799 0002 0026     		movs	r6, #0
 1800              	.LBE1090:
 1801              	.LBE1089:
 1802              	.LBE1088:
 154:../../src/hd44780.h ****     enum Set {
 1803              		.loc 10 154 0
 1804 0004 8FB0     		sub	sp, sp, #60
 1805              	.LCFI18:
 1806              		.cfi_def_cfa_offset 80
 1807              	.LVL145:
 1808              	.LBB1099:
 1809              	.LBB1096:
 1810              	.LBB1093:
  23:../../src/delay.h ****    
 1811              		.loc 3 23 0
 1812 0006 05AC     		add	r4, sp, #20
 1813              	.LVL146:
 1814              	.LBE1093:
 1815              	.LBE1096:
 1816              	.LBE1099:
 154:../../src/hd44780.h ****     enum Set {
 1817              		.loc 10 154 0
 1818 0008 0500     		movs	r5, r0
 1819              	.LBB1100:
 1820              	.LBB1097:
 1821              	.LBB1094:
  23:../../src/delay.h ****    
 1822              		.loc 3 23 0
 1823 000a 0C22     		movs	r2, #12
 1824 000c 3100     		movs	r1, r6
 1825 000e 09A8     		add	r0, sp, #36
 1826              	.LVL147:
 1827 0010 0596     		str	r6, [sp, #20]
 1828 0012 6660     		str	r6, [r4, #4]
 1829 0014 FFF7FEFF 		bl	memset
 1830              	.LVL148:
 1831 0018 0123     		movs	r3, #1
 1832 001a 6372     		strb	r3, [r4, #9]
 1833 001c 2372     		strb	r3, [r4, #8]
 1834              	.LBE1094:
 1835              	.LBE1097:
 1836              	.LBE1100:
 179:../../src/hd44780.h ****     
 1837              		.loc 10 179 0
 1838 001e 6B46     		mov	r3, sp
 1839              	.LBB1101:
 1840              	.LBB1098:
 1841              	.LBB1095:
 1842              	.LBB1091:
 1843              	.LBB1092:
  59:../../src/timers.h ****     Timer (uint32_t ms) { start(ms); }
 1844              		.loc 1 59 0
 1845 0020 354F     		ldr	r7, .L128
 1846 0022 E661     		str	r6, [r4, #28]
 1847 0024 E760     		str	r7, [r4, #12]
ARM GAS  /tmp/ccCYtDPO.s 			page 70


 1848 0026 2662     		str	r6, [r4, #32]
 1849              	.LVL149:
 1850              	.LBE1092:
 1851              	.LBE1091:
 1852              	.LBE1095:
 1853              	.LBE1098:
 1854              	.LBE1101:
 170:../../src/hd44780.h **** 
 1855              		.loc 10 170 0
 1856 0028 0095     		str	r5, [sp]
 1857 002a 0194     		str	r4, [sp, #4]
 179:../../src/hd44780.h ****     
 1858              		.loc 10 179 0
 1859 002c 0295     		str	r5, [sp, #8]
 1860 002e 0393     		str	r3, [sp, #12]
 1861 0030 0494     		str	r4, [sp, #16]
 1862              	.L116:
 181:../../src/hd44780.h ****     rs = false;
 1863              		.loc 10 181 0
 1864 0032 1421     		movs	r1, #20
 1865 0034 2000     		movs	r0, r4
 1866 0036 FFF7FEFF 		bl	_ZN5Delay2msEm
 1867              	.LVL150:
 1868 003a 0028     		cmp	r0, #0
 1869 003c F9D1     		bne	.L116
 1870              	.LVL151:
 1871              	.LBB1102:
 1872              	.LBB1103:
  33:../../src/pin.h ****    bool operator^= (bool v) 
 1873              		.loc 8 33 0
 1874 003e 2869     		ldr	r0, [r5, #16]
 1875 0040 FFF7FEFF 		bl	_ZN3Pin5clearEv
 1876              	.LVL152:
 1877              	.LBE1103:
 1878              	.LBE1102:
 1879              	.LBB1104:
 1880              	.LBB1105:
 1881 0044 6869     		ldr	r0, [r5, #20]
 1882 0046 FFF7FEFF 		bl	_ZN3Pin5clearEv
 1883              	.LVL153:
 1884              	.LBE1105:
 1885              	.LBE1104:
 1886              	.LBB1106:
 1887              	.LBB1107:
 1888 004a A869     		ldr	r0, [r5, #24]
 1889 004c FFF7FEFF 		bl	_ZN3Pin3setEv
 1890              	.LVL154:
 1891              	.LBE1107:
 1892              	.LBE1106:
 185:../../src/hd44780.h ****     strob_e();
 1893              		.loc 10 185 0
 1894 0050 AA6A     		ldr	r2, [r5, #40]
 1895 0052 EB69     		ldr	r3, [r5, #28]
 1896 0054 D269     		ldr	r2, [r2, #28]
 1897              	.LVL155:
 186:../../src/hd44780.h ****     while(delay.ms(5)) {}
 1898              		.loc 10 186 0
ARM GAS  /tmp/ccCYtDPO.s 			page 71


 1899 0056 6846     		mov	r0, sp
 1900              	.LBB1108:
 1901              	.LBB1109:
 1902              		.loc 9 31 0
 1903 0058 1A61     		str	r2, [r3, #16]
 1904              	.LVL156:
 1905              	.LBE1109:
 1906              	.LBE1108:
 186:../../src/hd44780.h ****     while(delay.ms(5)) {}
 1907              		.loc 10 186 0
 1908 005a FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlvE_clEv
 1909              	.LVL157:
 1910              	.L117:
 187:../../src/hd44780.h ****     port.atomic_write(command[0x03].second);
 1911              		.loc 10 187 0
 1912 005e 0521     		movs	r1, #5
 1913 0060 2000     		movs	r0, r4
 1914 0062 FFF7FEFF 		bl	_ZN5Delay2msEm
 1915              	.LVL158:
 1916 0066 0028     		cmp	r0, #0
 1917 0068 F9D1     		bne	.L117
 188:../../src/hd44780.h ****     strob_e();
 1918              		.loc 10 188 0
 1919 006a AA6A     		ldr	r2, [r5, #40]
 1920 006c EB69     		ldr	r3, [r5, #28]
 1921 006e D269     		ldr	r2, [r2, #28]
 1922              	.LVL159:
 189:../../src/hd44780.h ****     while(delay.us(100)) {}
 1923              		.loc 10 189 0
 1924 0070 6846     		mov	r0, sp
 1925              	.LBB1110:
 1926              	.LBB1111:
 1927              		.loc 9 31 0
 1928 0072 1A61     		str	r2, [r3, #16]
 1929              	.LVL160:
 1930              	.LBE1111:
 1931              	.LBE1110:
 189:../../src/hd44780.h ****     while(delay.us(100)) {}
 1932              		.loc 10 189 0
 1933 0074 FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlvE_clEv
 1934              	.LVL161:
 1935              	.L118:
 1936              	.LBB1112:
 1937              	.LBB1113:
 1938 0078 6421     		movs	r1, #100
 1939 007a 2000     		movs	r0, r4
 1940 007c FFF7FEFF 		bl	_ZN5Delay2usEm.part.9
 1941              	.LVL162:
 1942              	.LBE1113:
 1943              	.LBE1112:
 190:../../src/hd44780.h ****     port.atomic_write(command[0x03].second);
 1944              		.loc 10 190 0
 1945 0080 0028     		cmp	r0, #0
 1946 0082 F9D1     		bne	.L118
 191:../../src/hd44780.h ****     strob_e();
 1947              		.loc 10 191 0
 1948 0084 AA6A     		ldr	r2, [r5, #40]
ARM GAS  /tmp/ccCYtDPO.s 			page 72


 1949 0086 EB69     		ldr	r3, [r5, #28]
 1950 0088 D269     		ldr	r2, [r2, #28]
 1951              	.LVL163:
 192:../../src/hd44780.h ****     while(delay.us(50)) {}
 1952              		.loc 10 192 0
 1953 008a 6846     		mov	r0, sp
 1954              	.LBB1114:
 1955              	.LBB1115:
 1956              		.loc 9 31 0
 1957 008c 1A61     		str	r2, [r3, #16]
 1958              	.LVL164:
 1959              	.LBE1115:
 1960              	.LBE1114:
 192:../../src/hd44780.h ****     while(delay.us(50)) {}
 1961              		.loc 10 192 0
 1962 008e FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlvE_clEv
 1963              	.LVL165:
 1964              	.L119:
 1965              	.LBB1116:
 1966              	.LBB1117:
 1967 0092 3221     		movs	r1, #50
 1968 0094 2000     		movs	r0, r4
 1969 0096 FFF7FEFF 		bl	_ZN5Delay2usEm.part.9
 1970              	.LVL166:
 1971              	.LBE1117:
 1972              	.LBE1116:
 193:../../src/hd44780.h ****     port.atomic_write(command[0x02].second);
 1973              		.loc 10 193 0
 1974 009a 0028     		cmp	r0, #0
 1975 009c F9D1     		bne	.L119
 194:../../src/hd44780.h ****     strob_e();
 1976              		.loc 10 194 0
 1977 009e AA6A     		ldr	r2, [r5, #40]
 1978 00a0 EB69     		ldr	r3, [r5, #28]
 1979 00a2 5269     		ldr	r2, [r2, #20]
 1980              	.LVL167:
 195:../../src/hd44780.h ****     while(delay.us(50)) {}
 1981              		.loc 10 195 0
 1982 00a4 6846     		mov	r0, sp
 1983              	.LBB1118:
 1984              	.LBB1119:
 1985              		.loc 9 31 0
 1986 00a6 1A61     		str	r2, [r3, #16]
 1987              	.LVL168:
 1988              	.LBE1119:
 1989              	.LBE1118:
 195:../../src/hd44780.h ****     while(delay.us(50)) {}
 1990              		.loc 10 195 0
 1991 00a8 FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlvE_clEv
 1992              	.LVL169:
 1993              	.L120:
 1994              	.LBB1120:
 1995              	.LBB1121:
 1996 00ac 3221     		movs	r1, #50
 1997 00ae 2000     		movs	r0, r4
 1998 00b0 FFF7FEFF 		bl	_ZN5Delay2usEm.part.9
 1999              	.LVL170:
ARM GAS  /tmp/ccCYtDPO.s 			page 73


 2000              	.LBE1121:
 2001              	.LBE1120:
 196:../../src/hd44780.h ****     instruction (_4_bit_mode);
 2002              		.loc 10 196 0
 2003 00b4 0028     		cmp	r0, #0
 2004 00b6 F9D1     		bne	.L120
 197:../../src/hd44780.h ****     instruction (display_on);
 2005              		.loc 10 197 0
 2006 00b8 2821     		movs	r1, #40
 2007 00ba 02A8     		add	r0, sp, #8
 2008 00bc FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlmE0_clEm
 2009              	.LVL171:
 198:../../src/hd44780.h ****     instruction (dir_shift_right);
 2010              		.loc 10 198 0
 2011 00c0 0C21     		movs	r1, #12
 2012 00c2 02A8     		add	r0, sp, #8
 2013 00c4 FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlmE0_clEm
 2014              	.LVL172:
 199:../../src/hd44780.h ****     instruction (display_clear);
 2015              		.loc 10 199 0
 2016 00c8 0621     		movs	r1, #6
 2017 00ca 02A8     		add	r0, sp, #8
 2018 00cc FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlmE0_clEm
 2019              	.LVL173:
 200:../../src/hd44780.h ****     instruction (set_to_zero);
 2020              		.loc 10 200 0
 2021 00d0 0121     		movs	r1, #1
 2022 00d2 02A8     		add	r0, sp, #8
 2023 00d4 FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlmE0_clEm
 2024              	.LVL174:
 201:../../src/hd44780.h ****     while(delay.ms(1)) {}
 2025              		.loc 10 201 0
 2026 00d8 8021     		movs	r1, #128
 2027 00da 02A8     		add	r0, sp, #8
 2028 00dc FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlmE0_clEm
 2029              	.LVL175:
 2030              	.L121:
 202:../../src/hd44780.h **** }
 2031              		.loc 10 202 0
 2032 00e0 0121     		movs	r1, #1
 2033 00e2 2000     		movs	r0, r4
 2034 00e4 FFF7FEFF 		bl	_ZN5Delay2msEm
 2035              	.LVL176:
 2036 00e8 0028     		cmp	r0, #0
 2037 00ea F9D1     		bne	.L121
 2038              	.LVL177:
 2039              	.LBB1122:
 2040              	.LBB1123:
 2041              	.LBB1124:
  61:../../src/timers.h **** 
 2042              		.loc 1 61 0
 2043 00ec 08A8     		add	r0, sp, #32
 2044              	.LVL178:
 2045 00ee E760     		str	r7, [r4, #12]
 2046 00f0 FFF7FEFF 		bl	_ZN14TickSubscriber16tick_unsubscribeEv
 2047              	.LVL179:
 2048              	.LBE1124:
ARM GAS  /tmp/ccCYtDPO.s 			page 74


 2049              	.LBE1123:
 2050              	.LBE1122:
 203:../../src/hd44780.h **** 
 2051              		.loc 10 203 0
 2052 00f4 0FB0     		add	sp, sp, #60
 2053              		@ sp needed
 2054              	.LVL180:
 2055 00f6 F0BD     		pop	{r4, r5, r6, r7, pc}
 2056              	.L129:
 2057              		.align	2
 2058              	.L128:
 2059 00f8 08000000 		.word	_ZTV5Timer+8
 2060              		.cfi_endproc
 2061              	.LFE2576:
 2063              		.section	.text._ZN3mcu6Button4pushEv,"axG",%progbits,_ZN3mcu6Button4pushEv,comdat
 2064              		.align	1
 2065              		.weak	_ZN3mcu6Button4pushEv
 2066              		.syntax unified
 2067              		.code	16
 2068              		.thumb_func
 2069              		.fpu softvfp
 2071              	_ZN3mcu6Button4pushEv:
 2072              	.LFB2597:
  38:../../src/buttons.h ****    {
 2073              		.loc 13 38 0
 2074              		.cfi_startproc
 2075              		@ args = 0, pretend = 0, frame = 0
 2076              		@ frame_needed = 0, uses_anonymous_args = 0
 2077              	.LVL181:
 2078 0000 10B5     		push	{r4, lr}
 2079              	.LCFI19:
 2080              		.cfi_def_cfa_offset 8
 2081              		.cfi_offset 4, -8
 2082              		.cfi_offset 14, -4
  38:../../src/buttons.h ****    {
 2083              		.loc 13 38 0
 2084 0002 0400     		movs	r4, r0
  40:../../src/buttons.h ****          if (not pin) 
 2085              		.loc 13 40 0
 2086 0004 E37E     		ldrb	r3, [r4, #27]
 2087 0006 0069     		ldr	r0, [r0, #16]
 2088              	.LVL182:
 2089 0008 002B     		cmp	r3, #0
 2090 000a 10D0     		beq	.L131
 2091              	.LVL183:
 2092              	.LBB1125:
 2093              	.LBB1126:
 2094              		.loc 8 40 0
 2095 000c FFF7FEFF 		bl	_ZN3Pin6is_setEv
 2096              	.LVL184:
 2097              	.LBE1126:
 2098              	.LBE1125:
  41:../../src/buttons.h ****             tick_subscribe();
 2099              		.loc 13 41 0
 2100 0010 0028     		cmp	r0, #0
 2101 0012 02D1     		bne	.L133
 2102              	.L132:
ARM GAS  /tmp/ccCYtDPO.s 			page 75


  42:../../src/buttons.h ****       } else {
 2103              		.loc 13 42 0
 2104 0014 2000     		movs	r0, r4
 2105 0016 FFF7FEFF 		bl	_ZN14TickSubscriber14tick_subscribeEv
 2106              	.LVL185:
 2107              	.L133:
  48:../../src/buttons.h ****    }
 2108              		.loc 13 48 0
 2109 001a 6369     		ldr	r3, [r4, #20]
 2110 001c 0020     		movs	r0, #0
 2111 001e 092B     		cmp	r3, #9
 2112 0020 04DD     		ble	.L135
  48:../../src/buttons.h ****    }
 2113              		.loc 13 48 0 is_stmt 0 discriminator 1
 2114 0022 237E     		ldrb	r3, [r4, #24]
 2115 0024 8342     		cmp	r3, r0
 2116 0026 01D1     		bne	.L135
  48:../../src/buttons.h ****    }
 2117              		.loc 13 48 0 discriminator 3
 2118 0028 0130     		adds	r0, r0, #1
 2119 002a 2076     		strb	r0, [r4, #24]
 2120              	.L135:
  49:../../src/buttons.h **** 
 2121              		.loc 13 49 0 is_stmt 1 discriminator 8
 2122              		@ sp needed
 2123              	.LVL186:
 2124 002c 10BD     		pop	{r4, pc}
 2125              	.LVL187:
 2126              	.L131:
 2127              	.LBB1127:
 2128              	.LBB1128:
 2129              		.loc 8 40 0
 2130 002e FFF7FEFF 		bl	_ZN3Pin6is_setEv
 2131              	.LVL188:
 2132              	.LBE1128:
 2133              	.LBE1127:
  44:../../src/buttons.h ****             tick_subscribe();
 2134              		.loc 13 44 0
 2135 0032 0028     		cmp	r0, #0
 2136 0034 F1D0     		beq	.L133
 2137 0036 EDE7     		b	.L132
 2138              		.cfi_endproc
 2139              	.LFE2597:
 2141              		.section	.text._ZN3mcu6Button6is_setEv,"axG",%progbits,_ZN3mcu6Button6is_setEv,comdat
 2142              		.align	1
 2143              		.weak	_ZN3mcu6Button6is_setEv
 2144              		.syntax unified
 2145              		.code	16
 2146              		.thumb_func
 2147              		.fpu softvfp
 2149              	_ZN3mcu6Button6is_setEv:
 2150              	.LFB2601:
 131:../../src/buttons.h **** 
 132:../../src/buttons.h ****    bool is_set()
 2151              		.loc 13 132 0
 2152              		.cfi_startproc
 2153              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccCYtDPO.s 			page 76


 2154              		@ frame_needed = 0, uses_anonymous_args = 0
 2155              	.LVL189:
 2156 0000 0300     		movs	r3, r0
 2157 0002 10B5     		push	{r4, lr}
 2158              	.LCFI20:
 2159              		.cfi_def_cfa_offset 8
 2160              		.cfi_offset 4, -8
 2161              		.cfi_offset 14, -4
 133:../../src/buttons.h ****    {
 134:../../src/buttons.h ****       if (inverted) return not pin;
 2162              		.loc 13 134 0
 2163 0004 DB7E     		ldrb	r3, [r3, #27]
 2164 0006 0069     		ldr	r0, [r0, #16]
 2165              	.LVL190:
 2166 0008 002B     		cmp	r3, #0
 2167 000a 06D0     		beq	.L142
 2168              	.LVL191:
 2169              	.LBB1129:
 2170              	.LBB1130:
 2171              		.loc 8 40 0 discriminator 1
 2172 000c FFF7FEFF 		bl	_ZN3Pin6is_setEv
 2173              	.LVL192:
 2174 0010 0300     		movs	r3, r0
 2175              	.LBE1130:
 2176              	.LBE1129:
 2177              		.loc 13 134 0 discriminator 1
 2178 0012 0120     		movs	r0, #1
 2179 0014 5840     		eors	r0, r3
 2180 0016 C0B2     		uxtb	r0, r0
 2181              	.L143:
 135:../../src/buttons.h ****       else return pin;
 136:../../src/buttons.h ****    }
 2182              		.loc 13 136 0
 2183              		@ sp needed
 2184 0018 10BD     		pop	{r4, pc}
 2185              	.L142:
 2186              	.LVL193:
 2187              	.LBB1131:
 2188              	.LBB1132:
 2189              		.loc 8 40 0
 2190 001a FFF7FEFF 		bl	_ZN3Pin6is_setEv
 2191              	.LVL194:
 2192              	.LBE1132:
 2193              	.LBE1131:
 135:../../src/buttons.h ****       else return pin;
 2194              		.loc 13 135 0
 2195 001e FBE7     		b	.L143
 2196              		.cfi_endproc
 2197              	.LFE2601:
 2199              		.section	.text._ZN3mcu6Button4Some5clickEv,"axG",%progbits,_ZN3mcu6Button4Some5clickEv,comdat
 2200              		.align	1
 2201              		.weak	_ZN3mcu6Button4Some5clickEv
 2202              		.syntax unified
 2203              		.code	16
 2204              		.thumb_func
 2205              		.fpu softvfp
 2207              	_ZN3mcu6Button4Some5clickEv:
ARM GAS  /tmp/ccCYtDPO.s 			page 77


 2208              	.LFB2606:
 137:../../src/buttons.h **** 
 138:../../src/buttons.h ****    struct Some 
 139:../../src/buttons.h ****    {
 140:../../src/buttons.h ****       Button& one;
 141:../../src/buttons.h ****       Button& two;
 142:../../src/buttons.h ****       Some(Button& one, Button& two) : one{one}, two{two} {}
 143:../../src/buttons.h ****       operator bool () {
 144:../../src/buttons.h ****          if (one.is_set() and two.is_set()) {
 145:../../src/buttons.h ****             one.tick_subscribe();
 146:../../src/buttons.h ****             two.tick_subscribe(); 
 147:../../src/buttons.h ****          }
 148:../../src/buttons.h ****          bool result{false};
 149:../../src/buttons.h ****          result = not one.pin and not two.pin and (not one.short_press or not two.short_press);
 150:../../src/buttons.h ****          if (result)
 151:../../src/buttons.h ****             one.short_press = two.short_press = true;
 152:../../src/buttons.h ****          return result;
 153:../../src/buttons.h ****       }                  
 154:../../src/buttons.h **** 
 155:../../src/buttons.h ****       bool click()
 2209              		.loc 13 155 0
 2210              		.cfi_startproc
 2211              		@ args = 0, pretend = 0, frame = 0
 2212              		@ frame_needed = 0, uses_anonymous_args = 0
 2213              	.LVL195:
 2214 0000 10B5     		push	{r4, lr}
 2215              	.LCFI21:
 2216              		.cfi_def_cfa_offset 8
 2217              		.cfi_offset 4, -8
 2218              		.cfi_offset 14, -4
 2219              		.loc 13 155 0
 2220 0002 0400     		movs	r4, r0
 156:../../src/buttons.h ****       {
 157:../../src/buttons.h ****          if (one.is_set() and two.is_set()) {
 2221              		.loc 13 157 0
 2222 0004 0068     		ldr	r0, [r0]
 2223              	.LVL196:
 2224 0006 FFF7FEFF 		bl	_ZN3mcu6Button6is_setEv
 2225              	.LVL197:
 2226 000a 0028     		cmp	r0, #0
 2227 000c 0AD0     		beq	.L146
 2228              		.loc 13 157 0 is_stmt 0 discriminator 1
 2229 000e 6068     		ldr	r0, [r4, #4]
 2230 0010 FFF7FEFF 		bl	_ZN3mcu6Button6is_setEv
 2231              	.LVL198:
 2232 0014 0028     		cmp	r0, #0
 2233 0016 05D0     		beq	.L146
 158:../../src/buttons.h ****             one.tick_subscribe();
 2234              		.loc 13 158 0 is_stmt 1
 2235 0018 2068     		ldr	r0, [r4]
 2236 001a FFF7FEFF 		bl	_ZN14TickSubscriber14tick_subscribeEv
 2237              	.LVL199:
 159:../../src/buttons.h ****             two.tick_subscribe(); 
 2238              		.loc 13 159 0
 2239 001e 6068     		ldr	r0, [r4, #4]
 2240 0020 FFF7FEFF 		bl	_ZN14TickSubscriber14tick_subscribeEv
 2241              	.LVL200:
ARM GAS  /tmp/ccCYtDPO.s 			page 78


 2242              	.L146:
 160:../../src/buttons.h ****          }
 161:../../src/buttons.h ****          bool result{false};
 162:../../src/buttons.h ****          if (one.time > 100 and one.time < 200 and two.time > 100 and two.time < 200)
 2243              		.loc 13 162 0
 2244 0024 2068     		ldr	r0, [r4]
 2245 0026 4369     		ldr	r3, [r0, #20]
 2246 0028 653B     		subs	r3, r3, #101
 2247 002a 622B     		cmp	r3, #98
 2248 002c 07D8     		bhi	.L148
 2249              		.loc 13 162 0 is_stmt 0 discriminator 1
 2250 002e 6268     		ldr	r2, [r4, #4]
 2251 0030 5369     		ldr	r3, [r2, #20]
 2252 0032 653B     		subs	r3, r3, #101
 2253 0034 622B     		cmp	r3, #98
 2254 0036 02D8     		bhi	.L148
 163:../../src/buttons.h ****             one.click_ = two.click_ = true;
 2255              		.loc 13 163 0 is_stmt 1
 2256 0038 0123     		movs	r3, #1
 2257 003a 1377     		strb	r3, [r2, #28]
 2258 003c 0377     		strb	r3, [r0, #28]
 2259              	.L148:
 164:../../src/buttons.h ****          result = not one.is_set() and not two.is_set() and (one.click_ or two.click_) and not  one
 2260              		.loc 13 164 0
 2261 003e FFF7FEFF 		bl	_ZN3mcu6Button6is_setEv
 2262              	.LVL201:
 2263 0042 0028     		cmp	r0, #0
 2264 0044 01D0     		beq	.L149
 2265              	.L151:
 2266 0046 0020     		movs	r0, #0
 2267              	.L150:
 165:../../src/buttons.h ****          if (result)
 166:../../src/buttons.h ****             one.click_ = two.click_ = false;
 167:../../src/buttons.h ****          return result;
 168:../../src/buttons.h ****       }                          
 2268              		.loc 13 168 0
 2269              		@ sp needed
 2270              	.LVL202:
 2271 0048 10BD     		pop	{r4, pc}
 2272              	.LVL203:
 2273              	.L149:
 164:../../src/buttons.h ****          result = not one.is_set() and not two.is_set() and (one.click_ or two.click_) and not  one
 2274              		.loc 13 164 0 discriminator 1
 2275 004a 6068     		ldr	r0, [r4, #4]
 2276 004c FFF7FEFF 		bl	_ZN3mcu6Button6is_setEv
 2277              	.LVL204:
 2278 0050 0028     		cmp	r0, #0
 2279 0052 F8D1     		bne	.L151
 2280              	.LVL205:
 2281              	.LBB1135:
 2282              	.LBB1136:
 164:../../src/buttons.h ****          result = not one.is_set() and not two.is_set() and (one.click_ or two.click_) and not  one
 2283              		.loc 13 164 0 is_stmt 0
 2284 0054 2368     		ldr	r3, [r4]
 2285 0056 1A7F     		ldrb	r2, [r3, #28]
 2286 0058 002A     		cmp	r2, #0
 2287 005a 03D1     		bne	.L152
ARM GAS  /tmp/ccCYtDPO.s 			page 79


 2288 005c 6268     		ldr	r2, [r4, #4]
 2289 005e 127F     		ldrb	r2, [r2, #28]
 2290 0060 002A     		cmp	r2, #0
 2291 0062 F0D0     		beq	.L151
 2292              	.L152:
 2293 0064 5A7E     		ldrb	r2, [r3, #25]
 2294 0066 002A     		cmp	r2, #0
 2295 0068 EDD1     		bne	.L151
 2296 006a 6168     		ldr	r1, [r4, #4]
 2297 006c 4A7E     		ldrb	r2, [r1, #25]
 2298 006e 002A     		cmp	r2, #0
 2299 0070 E9D1     		bne	.L151
 2300              	.LVL206:
 166:../../src/buttons.h ****          return result;
 2301              		.loc 13 166 0 is_stmt 1
 2302 0072 0A77     		strb	r2, [r1, #28]
 164:../../src/buttons.h ****          result = not one.is_set() and not two.is_set() and (one.click_ or two.click_) and not  one
 2303              		.loc 13 164 0
 2304 0074 0120     		movs	r0, #1
 166:../../src/buttons.h ****          return result;
 2305              		.loc 13 166 0
 2306 0076 1A77     		strb	r2, [r3, #28]
 2307 0078 E6E7     		b	.L150
 2308              	.LBE1136:
 2309              	.LBE1135:
 2310              		.cfi_endproc
 2311              	.LFE2606:
 2313              		.section	.text._ZN13String_bufferlsERFRS_S0_E,"ax",%progbits
 2314              		.align	1
 2315              		.global	_ZN13String_bufferlsERFRS_S0_E
 2316              		.syntax unified
 2317              		.code	16
 2318              		.thumb_func
 2319              		.fpu softvfp
 2321              	_ZN13String_bufferlsERFRS_S0_E:
 2322              	.LFB2633:
 2323              		.file 14 "../../src/string_buffer.h"
   1:../../src/string_buffer.h **** #pragma once
   2:../../src/string_buffer.h **** 
   3:../../src/string_buffer.h **** #include <array>
   4:../../src/string_buffer.h **** #include <cstring>
   5:../../src/string_buffer.h **** #include <cstddef>
   6:../../src/string_buffer.h **** 
   7:../../src/string_buffer.h **** class String_buffer
   8:../../src/string_buffer.h **** {
   9:../../src/string_buffer.h ****     size_t  number_line{0};
  10:../../src/string_buffer.h ****     size_t  width_size {0};
  11:../../src/string_buffer.h ****     size_t  position   {0};
  12:../../src/string_buffer.h ****     bool    align  {false};
  13:../../src/string_buffer.h **** 
  14:../../src/string_buffer.h ****     std::array<char, 80> screen;
  15:../../src/string_buffer.h ****     static constexpr size_t line_size = 20;
  16:../../src/string_buffer.h ****     static constexpr size_t screen_size = 80;
  17:../../src/string_buffer.h **** 
  18:../../src/string_buffer.h ****     using String_buffer_ref = String_buffer&(&) (String_buffer& string_buffer);
  19:../../src/string_buffer.h ****     friend String_buffer& next_line (String_buffer& s);
  20:../../src/string_buffer.h **** 
ARM GAS  /tmp/ccCYtDPO.s 			page 80


  21:../../src/string_buffer.h **** public:
  22:../../src/string_buffer.h ****     String_buffer (){screen.fill(' ');}
  23:../../src/string_buffer.h ****     String_buffer& operator<< (std::string_view string);
  24:../../src/string_buffer.h ****     String_buffer& operator<< (int number);
  25:../../src/string_buffer.h ****     String_buffer& operator<< (String_buffer_ref& function);
  26:../../src/string_buffer.h ****     String_buffer& line   (size_t string);
  27:../../src/string_buffer.h ****     String_buffer& width  (size_t width );
  28:../../src/string_buffer.h ****     String_buffer& cursor (size_t cursor);
  29:../../src/string_buffer.h ****     String_buffer& center ();
  30:../../src/string_buffer.h ****     auto& get_buffer  (){return screen;}
  31:../../src/string_buffer.h ****     auto begin        () const {return screen.begin();}
  32:../../src/string_buffer.h ****     auto end          () const {return screen.end()  ;}
  33:../../src/string_buffer.h ****     auto get_position () const {return position;}
  34:../../src/string_buffer.h ****     auto get_line     () const {return number_line;}
  35:../../src/string_buffer.h ****     void clear        (){screen.fill(' ');}
  36:../../src/string_buffer.h ****     bool in_begin_line() const { return position % line_size == 0; }
  37:../../src/string_buffer.h **** 
  38:../../src/string_buffer.h **** };
  39:../../src/string_buffer.h **** 
  40:../../src/string_buffer.h **** String_buffer& next_line (String_buffer& s) 
  41:../../src/string_buffer.h **** {
  42:../../src/string_buffer.h ****     while (not s.in_begin_line())
  43:../../src/string_buffer.h ****         s << " ";
  44:../../src/string_buffer.h ****     return s;
  45:../../src/string_buffer.h **** }
  46:../../src/string_buffer.h **** 
  47:../../src/string_buffer.h **** 
  48:../../src/string_buffer.h **** String_buffer& String_buffer::operator<< (std::string_view string)
  49:../../src/string_buffer.h **** {
  50:../../src/string_buffer.h ****     size_t string_size = string.size();
  51:../../src/string_buffer.h ****     auto begin_line    = screen.begin() + number_line * line_size;
  52:../../src/string_buffer.h ****     auto end_line      = screen.begin() + number_line * line_size + line_size;
  53:../../src/string_buffer.h **** 
  54:../../src/string_buffer.h ****     // if (width_) {position += (width_size - string_size); width_ = false;}
  55:../../src/string_buffer.h ****     if (align){
  56:../../src/string_buffer.h ****         if (string_size < line_size) {
  57:../../src/string_buffer.h ****             auto begin_string = begin_line + (line_size - string_size)/2;
  58:../../src/string_buffer.h ****             auto end_string   = begin_string + string.size();
  59:../../src/string_buffer.h **** 
  60:../../src/string_buffer.h ****             std::fill(begin_line    , begin_string, ' ');
  61:../../src/string_buffer.h ****             std::copy(string.begin(), string.end(), begin_string);
  62:../../src/string_buffer.h ****             std::fill(end_string    , end_line    , ' ');
  63:../../src/string_buffer.h ****             align = false;
  64:../../src/string_buffer.h ****         } else {
  65:../../src/string_buffer.h ****             auto begin_string = string.begin() + (string_size - line_size)/2;
  66:../../src/string_buffer.h ****             auto end_string   = begin_string + line_size;
  67:../../src/string_buffer.h **** 
  68:../../src/string_buffer.h ****             std::copy(begin_string, end_string, begin_line);
  69:../../src/string_buffer.h ****             align = false;
  70:../../src/string_buffer.h ****         }
  71:../../src/string_buffer.h ****         position = number_line * line_size + line_size;
  72:../../src/string_buffer.h ****     } else {
  73:../../src/string_buffer.h ****         if (string_size < screen_size - position) {
  74:../../src/string_buffer.h ****             std::copy(string.begin(), string.end(), screen.begin() + position);
  75:../../src/string_buffer.h ****             position += string_size;
  76:../../src/string_buffer.h ****         } else {
  77:../../src/string_buffer.h ****             std::copy(string.begin(), string.begin() + (screen_size - position), screen.begin() + p
ARM GAS  /tmp/ccCYtDPO.s 			page 81


  78:../../src/string_buffer.h ****             size_t rest_string = string_size - (screen_size - position);
  79:../../src/string_buffer.h ****             
  80:../../src/string_buffer.h ****             while (rest_string > screen_size) {
  81:../../src/string_buffer.h ****                 auto begin_string = string.begin() + (string_size - rest_string);
  82:../../src/string_buffer.h ****                 auto end_string   = begin_string + screen_size;
  83:../../src/string_buffer.h ****                 std::copy(begin_string, end_string, screen.begin());
  84:../../src/string_buffer.h ****                 rest_string -= screen_size;
  85:../../src/string_buffer.h ****             }
  86:../../src/string_buffer.h ****             std::copy(string.begin() + (string_size - rest_string), string.end(), screen.begin());
  87:../../src/string_buffer.h ****             position += rest_string;
  88:../../src/string_buffer.h ****         }
  89:../../src/string_buffer.h ****     }
  90:../../src/string_buffer.h ****     
  91:../../src/string_buffer.h ****     return *this;
  92:../../src/string_buffer.h **** }
  93:../../src/string_buffer.h **** 
  94:../../src/string_buffer.h **** String_buffer& String_buffer::operator<< (int number)
  95:../../src/string_buffer.h **** {
  96:../../src/string_buffer.h ****     char string[10];
  97:../../src/string_buffer.h ****     sprintf(string, "%d", number);
  98:../../src/string_buffer.h ****     std::string_view str (string);
  99:../../src/string_buffer.h ****     auto qty_space = (width_size > str.size()) ? (width_size - str.size()) : 0;
 100:../../src/string_buffer.h **** 
 101:../../src/string_buffer.h ****     while (qty_space) {
 102:../../src/string_buffer.h ****         *this << " ";
 103:../../src/string_buffer.h ****         qty_space--;
 104:../../src/string_buffer.h ****     }
 105:../../src/string_buffer.h ****     *this << string;
 106:../../src/string_buffer.h ****     width_size = 0;
 107:../../src/string_buffer.h ****     return *this;
 108:../../src/string_buffer.h **** }
 109:../../src/string_buffer.h **** 
 110:../../src/string_buffer.h **** String_buffer& String_buffer::operator<< (String_buffer_ref& function)
 111:../../src/string_buffer.h **** {
 2324              		.loc 14 111 0
 2325              		.cfi_startproc
 2326              		@ args = 0, pretend = 0, frame = 0
 2327              		@ frame_needed = 0, uses_anonymous_args = 0
 2328              	.LVL207:
 2329 0000 10B5     		push	{r4, lr}
 2330              	.LCFI22:
 2331              		.cfi_def_cfa_offset 8
 2332              		.cfi_offset 4, -8
 2333              		.cfi_offset 14, -4
 112:../../src/string_buffer.h ****     return function(*this);
 2334              		.loc 14 112 0
 2335 0002 8847     		blx	r1
 2336              	.LVL208:
 113:../../src/string_buffer.h **** }
 2337              		.loc 14 113 0
 2338              		@ sp needed
 2339 0004 10BD     		pop	{r4, pc}
 2340              		.cfi_endproc
 2341              	.LFE2633:
 2343              		.section	.text._ZN13String_buffer4lineEj,"ax",%progbits
 2344              		.align	1
 2345              		.global	_ZN13String_buffer4lineEj
ARM GAS  /tmp/ccCYtDPO.s 			page 82


 2346              		.syntax unified
 2347              		.code	16
 2348              		.thumb_func
 2349              		.fpu softvfp
 2351              	_ZN13String_buffer4lineEj:
 2352              	.LFB2634:
 114:../../src/string_buffer.h **** 
 115:../../src/string_buffer.h **** String_buffer& String_buffer::line(size_t string)
 116:../../src/string_buffer.h **** {
 2353              		.loc 14 116 0
 2354              		.cfi_startproc
 2355              		@ args = 0, pretend = 0, frame = 0
 2356              		@ frame_needed = 0, uses_anonymous_args = 0
 2357              		@ link register save eliminated.
 2358              	.LVL209:
 117:../../src/string_buffer.h ****     number_line = string;
 118:../../src/string_buffer.h ****     position = number_line * line_size;
 2359              		.loc 14 118 0
 2360 0000 1423     		movs	r3, #20
 117:../../src/string_buffer.h ****     number_line = string;
 2361              		.loc 14 117 0
 2362 0002 0160     		str	r1, [r0]
 2363              		.loc 14 118 0
 2364 0004 5943     		muls	r1, r3
 2365              	.LVL210:
 119:../../src/string_buffer.h ****     return *this;
 120:../../src/string_buffer.h **** }
 2366              		.loc 14 120 0
 2367              		@ sp needed
 118:../../src/string_buffer.h ****     return *this;
 2368              		.loc 14 118 0
 2369 0006 8160     		str	r1, [r0, #8]
 2370              		.loc 14 120 0
 2371 0008 7047     		bx	lr
 2372              		.cfi_endproc
 2373              	.LFE2634:
 2375              		.section	.text._ZN13String_buffer5widthEj,"ax",%progbits
 2376              		.align	1
 2377              		.global	_ZN13String_buffer5widthEj
 2378              		.syntax unified
 2379              		.code	16
 2380              		.thumb_func
 2381              		.fpu softvfp
 2383              	_ZN13String_buffer5widthEj:
 2384              	.LFB2635:
 121:../../src/string_buffer.h **** 
 122:../../src/string_buffer.h **** // FIX dont work
 123:../../src/string_buffer.h **** String_buffer& String_buffer::width(size_t width)
 124:../../src/string_buffer.h **** {
 2385              		.loc 14 124 0
 2386              		.cfi_startproc
 2387              		@ args = 0, pretend = 0, frame = 0
 2388              		@ frame_needed = 0, uses_anonymous_args = 0
 2389              		@ link register save eliminated.
 2390              	.LVL211:
 125:../../src/string_buffer.h ****     width_size = width;
 2391              		.loc 14 125 0
ARM GAS  /tmp/ccCYtDPO.s 			page 83


 2392 0000 4160     		str	r1, [r0, #4]
 126:../../src/string_buffer.h ****     return *this;
 127:../../src/string_buffer.h **** }
 2393              		.loc 14 127 0
 2394              		@ sp needed
 2395 0002 7047     		bx	lr
 2396              		.cfi_endproc
 2397              	.LFE2635:
 2399              		.section	.text._ZN13String_buffer6cursorEj,"ax",%progbits
 2400              		.align	1
 2401              		.global	_ZN13String_buffer6cursorEj
 2402              		.syntax unified
 2403              		.code	16
 2404              		.thumb_func
 2405              		.fpu softvfp
 2407              	_ZN13String_buffer6cursorEj:
 2408              	.LFB2636:
 128:../../src/string_buffer.h **** 
 129:../../src/string_buffer.h **** String_buffer& String_buffer::cursor(size_t cursor)
 130:../../src/string_buffer.h **** {
 2409              		.loc 14 130 0
 2410              		.cfi_startproc
 2411              		@ args = 0, pretend = 0, frame = 0
 2412              		@ frame_needed = 0, uses_anonymous_args = 0
 2413              	.LVL212:
 2414 0000 10B5     		push	{r4, lr}
 2415              	.LCFI23:
 2416              		.cfi_def_cfa_offset 8
 2417              		.cfi_offset 4, -8
 2418              		.cfi_offset 14, -4
 2419              		.loc 14 130 0
 2420 0002 0400     		movs	r4, r0
 131:../../src/string_buffer.h ****     position = (cursor + number_line * line_size) % screen_size;
 2421              		.loc 14 131 0
 2422 0004 1420     		movs	r0, #20
 2423              	.LVL213:
 2424 0006 2368     		ldr	r3, [r4]
 132:../../src/string_buffer.h ****     return *this;
 133:../../src/string_buffer.h **** }
 2425              		.loc 14 133 0
 2426              		@ sp needed
 131:../../src/string_buffer.h ****     position = (cursor + number_line * line_size) % screen_size;
 2427              		.loc 14 131 0
 2428 0008 5843     		muls	r0, r3
 2429 000a 4018     		adds	r0, r0, r1
 2430 000c 5021     		movs	r1, #80
 2431              	.LVL214:
 2432 000e FFF7FEFF 		bl	__aeabi_uidivmod
 2433              	.LVL215:
 2434              		.loc 14 133 0
 2435 0012 2000     		movs	r0, r4
 131:../../src/string_buffer.h ****     position = (cursor + number_line * line_size) % screen_size;
 2436              		.loc 14 131 0
 2437 0014 A160     		str	r1, [r4, #8]
 2438              	.LVL216:
 2439              		.loc 14 133 0
 2440 0016 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccCYtDPO.s 			page 84


 2441              		.cfi_endproc
 2442              	.LFE2636:
 2444              		.section	.text._ZN13String_buffer6centerEv,"ax",%progbits
 2445              		.align	1
 2446              		.global	_ZN13String_buffer6centerEv
 2447              		.syntax unified
 2448              		.code	16
 2449              		.thumb_func
 2450              		.fpu softvfp
 2452              	_ZN13String_buffer6centerEv:
 2453              	.LFB2637:
 134:../../src/string_buffer.h **** 
 135:../../src/string_buffer.h **** String_buffer& String_buffer::center ()
 136:../../src/string_buffer.h **** {
 2454              		.loc 14 136 0
 2455              		.cfi_startproc
 2456              		@ args = 0, pretend = 0, frame = 0
 2457              		@ frame_needed = 0, uses_anonymous_args = 0
 2458              		@ link register save eliminated.
 2459              	.LVL217:
 137:../../src/string_buffer.h ****     align = true;
 2460              		.loc 14 137 0
 2461 0000 0123     		movs	r3, #1
 2462 0002 0373     		strb	r3, [r0, #12]
 138:../../src/string_buffer.h ****     return *this;
 139:../../src/string_buffer.h **** }...
 2463              		.loc 14 139 0
 2464              		@ sp needed
 2465 0004 7047     		bx	lr
 2466              		.cfi_endproc
 2467              	.LFE2637:
 2469              		.section	.text.init_clock,"ax",%progbits
 2470              		.align	1
 2471              		.global	init_clock
 2472              		.syntax unified
 2473              		.code	16
 2474              		.thumb_func
 2475              		.fpu softvfp
 2477              	init_clock:
 2478              	.LFB2651:
 2479              		.file 15 "main.cpp"
   1:main.cpp      **** #define STM32F103xB
   2:main.cpp      **** #define F_OSC   8000000UL
   3:main.cpp      **** #define F_CPU   72000000UL
   4:main.cpp      **** // #include <iostream>
   5:main.cpp      **** #include "init_clock.h"
   6:main.cpp      **** // #include "example_hd44780.h"
   7:main.cpp      **** #include "example_select_screen.h"
   8:main.cpp      **** 
   9:main.cpp      **** /// —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–µ—Ä–≤–æ–π –≤ startup —Ñ–∞–π–ª–µ
  10:main.cpp      **** extern "C" void init_clock() { init_clock<F_OSC, F_CPU>(); }
 2480              		.loc 15 10 0
 2481              		.cfi_startproc
 2482              		@ args = 0, pretend = 0, frame = 0
 2483              		@ frame_needed = 0, uses_anonymous_args = 0
 2484              		@ link register save eliminated.
 2485              	.LBB1163:
ARM GAS  /tmp/ccCYtDPO.s 			page 85


 2486              	.LBB1164:
 2487              	.LBB1165:
  40:../../src/periph/flash_f1.h ****    FLASH& lock()                     { CR.LOCK     = true; return *this; }
 2488              		.loc 6 40 0
 2489 0000 1022     		movs	r2, #16
 2490 0002 1F4B     		ldr	r3, .L171
 2491 0004 1968     		ldr	r1, [r3]
 2492 0006 0A43     		orrs	r2, r1
 2493              	.LBE1165:
 2494              	.LBE1164:
 2495              	.LBB1167:
 2496              	.LBB1168:
  39:../../src/periph/flash_f1.h ****    FLASH& enable ()                  { ACR.PRFTBE = true;  return *this; }
 2497              		.loc 6 39 0
 2498 0008 0721     		movs	r1, #7
 2499              	.LBE1168:
 2500              	.LBE1167:
 2501              	.LBB1170:
 2502              	.LBB1166:
  40:../../src/periph/flash_f1.h ****    FLASH& lock()                     { CR.LOCK     = true; return *this; }
 2503              		.loc 6 40 0
 2504 000a 1A60     		str	r2, [r3]
 2505              	.LVL218:
 2506              	.LBE1166:
 2507              	.LBE1170:
 2508              	.LBB1171:
 2509              	.LBB1169:
  39:../../src/periph/flash_f1.h ****    FLASH& enable ()                  { ACR.PRFTBE = true;  return *this; }
 2510              		.loc 6 39 0
 2511 000c 1A68     		ldr	r2, [r3]
 2512 000e 8A43     		bics	r2, r1
 2513 0010 1100     		movs	r1, r2
 2514 0012 0222     		movs	r2, #2
 2515 0014 0A43     		orrs	r2, r1
 2516 0016 1A60     		str	r2, [r3]
 2517              	.LVL219:
 2518              	.LBE1169:
 2519              	.LBE1171:
 2520              	.LBB1172:
 2521              	.LBB1173:
 2522              		.file 16 "../../src/periph/rcc_f1.h"
   1:../../src/periph/rcc_f1.h **** #pragma once
   2:../../src/periph/rcc_f1.h **** 
   3:../../src/periph/rcc_f1.h **** #include "bits_rcc_f1.h"
   4:../../src/periph/rcc_f1.h **** 
   5:../../src/periph/rcc_f1.h **** namespace mcu {
   6:../../src/periph/rcc_f1.h **** 
   7:../../src/periph/rcc_f1.h **** class RCC {
   8:../../src/periph/rcc_f1.h **** 	__IO RCC_bits::CR      CR;       // RCC clock control register,                offset: 0x00
   9:../../src/periph/rcc_f1.h **** 	__IO RCC_bits::CFGR    CFGR;     // RCC clock configuration register,          offset: 0x04
  10:../../src/periph/rcc_f1.h **** 	__IO uint32_t          CIR;      // RCC clock interrupt register,              offset: 0x08
  11:../../src/periph/rcc_f1.h **** 	__IO uint32_t          APB2RSTR; // RCC APB2 peripheral reset register,        offset: 0x0C
  12:../../src/periph/rcc_f1.h **** 	__IO uint32_t          APB1RSTR; // RCC APB1 peripheral reset register,        offset: 0x10
  13:../../src/periph/rcc_f1.h **** 	__IO RCC_bits::AHBENR  AHBENR;   // RCC AHB peripheral clock register,         offset: 0x14
  14:../../src/periph/rcc_f1.h **** 	__IO RCC_bits::APB2ENR APB2ENR;  // RCC APB2 peripheral clock enable register, offset: 0x18
  15:../../src/periph/rcc_f1.h **** 	__IO RCC_bits::APB1ENR APB1ENR;  // RCC APB1 peripheral clock enable register, offset: 0x1C
  16:../../src/periph/rcc_f1.h **** 	__IO uint32_t          BDCR;     // RCC Backup domain control register,        offset: 0x20
ARM GAS  /tmp/ccCYtDPO.s 			page 86


  17:../../src/periph/rcc_f1.h **** 	__IO uint32_t          CSR;      // RCC clock control & status register,       offset: 0x24
  18:../../src/periph/rcc_f1.h **** 
  19:../../src/periph/rcc_f1.h **** public:
  20:../../src/periph/rcc_f1.h **** 	using CMSIS_type    = RCC_TypeDef;
  21:../../src/periph/rcc_f1.h **** 	using AHBprescaler  = RCC_bits::CFGR::AHBprescaler;
  22:../../src/periph/rcc_f1.h **** 	using APBprescaler  = RCC_bits::CFGR::APBprescaler;
  23:../../src/periph/rcc_f1.h **** 	using ADCprescaler  = RCC_bits::CFGR::ADCprescaler;
  24:../../src/periph/rcc_f1.h **** 	using SystemClock   = RCC_bits::CFGR::SystemClock;
  25:../../src/periph/rcc_f1.h **** 	using PLLsource     = RCC_bits::CFGR::PLLsource;
  26:../../src/periph/rcc_f1.h **** 	using PLLmultiplier = RCC_bits::CFGR::PLLmultiplier;
  27:../../src/periph/rcc_f1.h **** 
  28:../../src/periph/rcc_f1.h **** 	auto& like_CMSIS() { return *reinterpret_cast<CMSIS_type*>(this); }
  29:../../src/periph/rcc_f1.h **** 
  30:../../src/periph/rcc_f1.h **** 	RCC& set       (AHBprescaler  v) { CFGR.HPRE   = v; return *this; } //
  31:../../src/periph/rcc_f1.h **** 	RCC& set_APB1  (APBprescaler  v) { CFGR.PPRE1  = v; return *this; } //
  32:../../src/periph/rcc_f1.h **** 	RCC& set_APB2  (APBprescaler  v) { CFGR.PPRE2  = v; return *this; } //
  33:../../src/periph/rcc_f1.h **** 	// RCC& set       (ADCprescaler  v) { CFGR.ADCPRE = v; return *this; } // dont use yet
  34:../../src/periph/rcc_f1.h **** 	RCC& set       (SystemClock   v) { CFGR.SW     = v; return *this; } //
  35:../../src/periph/rcc_f1.h **** 	RCC& set       (PLLsource     v) { CFGR.PLLSRC = v; return *this; } //
  36:../../src/periph/rcc_f1.h **** 	RCC& set       (PLLmultiplier v) { CFGR.PLLMUL = v; return *this; } //
  37:../../src/periph/rcc_f1.h **** 
  38:../../src/periph/rcc_f1.h **** 	RCC& on_HSE        () { CR.HSEON = true;         return *this; }
 2523              		.loc 16 38 0
 2524 0018 8022     		movs	r2, #128
 2525 001a 1A4B     		ldr	r3, .L171+4
 2526 001c 5202     		lsls	r2, r2, #9
 2527 001e 1968     		ldr	r1, [r3]
 2528 0020 0A43     		orrs	r2, r1
 2529 0022 1A60     		str	r2, [r3]
 2530              	.L165:
 2531              	.LBE1173:
 2532              	.LBE1172:
 2533              	.LBB1174:
 2534              	.LBB1175:
  39:../../src/periph/rcc_f1.h **** 	RCC& wait_HSE_ready() { while (not CR.HSERDY) {} return *this; }
 2535              		.loc 16 39 0
 2536 0024 1A68     		ldr	r2, [r3]
 2537 0026 9203     		lsls	r2, r2, #14
 2538 0028 FCD5     		bpl	.L165
 2539              	.LVL220:
 2540              	.LBE1175:
 2541              	.LBE1174:
 2542              	.LBB1176:
 2543              	.LBB1177:
  30:../../src/periph/rcc_f1.h **** 	RCC& set_APB1  (APBprescaler  v) { CFGR.PPRE1  = v; return *this; } //
 2544              		.loc 16 30 0
 2545 002a F021     		movs	r1, #240
 2546 002c 5A68     		ldr	r2, [r3, #4]
 2547 002e 8A43     		bics	r2, r1
 2548 0030 5A60     		str	r2, [r3, #4]
 2549              	.LVL221:
 2550              	.LBE1177:
 2551              	.LBE1176:
 2552              	.LBB1178:
 2553              	.LBB1179:
  31:../../src/periph/rcc_f1.h **** 	RCC& set_APB2  (APBprescaler  v) { CFGR.PPRE2  = v; return *this; } //
 2554              		.loc 16 31 0
ARM GAS  /tmp/ccCYtDPO.s 			page 87


 2555 0032 5A68     		ldr	r2, [r3, #4]
 2556 0034 1449     		ldr	r1, .L171+8
 2557 0036 1140     		ands	r1, r2
 2558 0038 8022     		movs	r2, #128
 2559 003a D200     		lsls	r2, r2, #3
 2560 003c 0A43     		orrs	r2, r1
 2561 003e 5A60     		str	r2, [r3, #4]
 2562              	.LVL222:
 2563              	.LBE1179:
 2564              	.LBE1178:
 2565              	.LBB1180:
 2566              	.LBB1181:
  32:../../src/periph/rcc_f1.h **** 	// RCC& set       (ADCprescaler  v) { CFGR.ADCPRE = v; return *this; } // dont use yet
 2567              		.loc 16 32 0
 2568 0040 5A68     		ldr	r2, [r3, #4]
 2569 0042 1249     		ldr	r1, .L171+12
 2570 0044 0A40     		ands	r2, r1
 2571 0046 5A60     		str	r2, [r3, #4]
 2572              	.LVL223:
 2573              	.LBE1181:
 2574              	.LBE1180:
 2575              	.LBB1182:
 2576              	.LBB1183:
  35:../../src/periph/rcc_f1.h **** 	RCC& set       (PLLmultiplier v) { CFGR.PLLMUL = v; return *this; } //
 2577              		.loc 16 35 0
 2578 0048 8022     		movs	r2, #128
 2579 004a 5968     		ldr	r1, [r3, #4]
 2580 004c 5202     		lsls	r2, r2, #9
 2581 004e 0A43     		orrs	r2, r1
 2582 0050 5A60     		str	r2, [r3, #4]
 2583              	.LVL224:
 2584              	.LBE1183:
 2585              	.LBE1182:
 2586              	.LBB1184:
 2587              	.LBB1185:
  36:../../src/periph/rcc_f1.h **** 
 2588              		.loc 16 36 0
 2589 0052 5A68     		ldr	r2, [r3, #4]
 2590 0054 0E49     		ldr	r1, .L171+16
 2591 0056 1140     		ands	r1, r2
 2592 0058 E022     		movs	r2, #224
 2593 005a 5203     		lsls	r2, r2, #13
 2594 005c 0A43     		orrs	r2, r1
 2595 005e 5A60     		str	r2, [r3, #4]
 2596              	.LVL225:
 2597              	.LBE1185:
 2598              	.LBE1184:
 2599              	.LBB1186:
 2600              	.LBB1187:
  40:../../src/periph/rcc_f1.h **** 	RCC& on_PLL        () { CR.PLLON = true;         return *this; }
 2601              		.loc 16 40 0
 2602 0060 8022     		movs	r2, #128
 2603 0062 1968     		ldr	r1, [r3]
 2604 0064 5204     		lsls	r2, r2, #17
 2605 0066 0A43     		orrs	r2, r1
 2606 0068 1A60     		str	r2, [r3]
 2607              	.L166:
ARM GAS  /tmp/ccCYtDPO.s 			page 88


 2608              	.LBE1187:
 2609              	.LBE1186:
 2610              	.LBB1188:
 2611              	.LBB1189:
  41:../../src/periph/rcc_f1.h **** 	RCC& wait_PLL_ready() { while (not CR.PLLRDY) {} return *this; }
 2612              		.loc 16 41 0
 2613 006a 1A68     		ldr	r2, [r3]
 2614 006c 9201     		lsls	r2, r2, #6
 2615 006e FCD5     		bpl	.L166
 2616              	.LVL226:
 2617              	.LBE1189:
 2618              	.LBE1188:
 2619              	.LBB1190:
 2620              	.LBB1191:
  34:../../src/periph/rcc_f1.h **** 	RCC& set       (PLLsource     v) { CFGR.PLLSRC = v; return *this; } //
 2621              		.loc 16 34 0
 2622 0070 0321     		movs	r1, #3
 2623 0072 5A68     		ldr	r2, [r3, #4]
 2624              	.LBE1191:
 2625              	.LBE1190:
 2626              	.LBE1163:
 2627              		.loc 15 10 0
 2628              		@ sp needed
 2629              	.LBB1194:
 2630              	.LBB1193:
 2631              	.LBB1192:
  34:../../src/periph/rcc_f1.h **** 	RCC& set       (PLLsource     v) { CFGR.PLLSRC = v; return *this; } //
 2632              		.loc 16 34 0
 2633 0074 8A43     		bics	r2, r1
 2634 0076 1100     		movs	r1, r2
 2635 0078 0222     		movs	r2, #2
 2636 007a 0A43     		orrs	r2, r1
 2637 007c 5A60     		str	r2, [r3, #4]
 2638              	.LVL227:
 2639              	.LBE1192:
 2640              	.LBE1193:
 2641              	.LBE1194:
 2642              		.loc 15 10 0
 2643 007e 7047     		bx	lr
 2644              	.L172:
 2645              		.align	2
 2646              	.L171:
 2647 0080 00200240 		.word	1073881088
 2648 0084 00100240 		.word	1073876992
 2649 0088 FFF8FFFF 		.word	-1793
 2650 008c FFC7FFFF 		.word	-14337
 2651 0090 FFFFC3FF 		.word	-3932161
 2652              		.cfi_endproc
 2653              	.LFE2651:
 2655              		.section	.text._ZSt4copyIPKcPcET0_T_S4_S3_,"axG",%progbits,_ZSt4copyIPKcPcET0_T_S4_S3_,comdat
 2656              		.align	1
 2657              		.weak	_ZSt4copyIPKcPcET0_T_S4_S3_
 2658              		.syntax unified
 2659              		.code	16
 2660              		.thumb_func
 2661              		.fpu softvfp
 2663              	_ZSt4copyIPKcPcET0_T_S4_S3_:
ARM GAS  /tmp/ccCYtDPO.s 			page 89


 2664              	.LFB2919:
 446:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 2665              		.loc 5 446 0
 2666              		.cfi_startproc
 2667              		@ args = 0, pretend = 0, frame = 0
 2668              		@ frame_needed = 0, uses_anonymous_args = 0
 2669              	.LVL228:
 2670 0000 70B5     		push	{r4, r5, r6, lr}
 2671              	.LCFI24:
 2672              		.cfi_def_cfa_offset 16
 2673              		.cfi_offset 4, -16
 2674              		.cfi_offset 5, -12
 2675              		.cfi_offset 6, -8
 2676              		.cfi_offset 14, -4
 446:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 2677              		.loc 5 446 0
 2678 0002 1500     		movs	r5, r2
 2679              	.LVL229:
 2680              	.LBB1200:
 2681              	.LBB1201:
 2682              	.LBB1202:
 2683              	.LBB1203:
 2684              	.LBB1204:
 366:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  if (_Num)
 2685              		.loc 5 366 0
 2686 0004 0C1A     		subs	r4, r1, r0
 367:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 2687              		.loc 5 367 0
 2688 0006 04D0     		beq	.L174
 368:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 2689              		.loc 5 368 0
 2690 0008 0100     		movs	r1, r0
 2691              	.LVL230:
 2692 000a 2200     		movs	r2, r4
 2693              	.LVL231:
 2694 000c 2800     		movs	r0, r5
 2695              	.LVL232:
 2696 000e FFF7FEFF 		bl	memmove
 2697              	.LVL233:
 2698              	.L174:
 369:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
 2699              		.loc 5 369 0
 2700 0012 2819     		adds	r0, r5, r4
 2701              	.LBE1204:
 2702              	.LBE1203:
 2703              	.LBE1202:
 2704              	.LBE1201:
 2705              	.LBE1200:
 457:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 2706              		.loc 5 457 0
 2707              		@ sp needed
 2708              	.LVL234:
 2709 0014 70BD     		pop	{r4, r5, r6, pc}
 2710              		.cfi_endproc
 2711              	.LFE2919:
 2713              		.section	.text._ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE,"ax",%progbits
 2714              		.align	1
ARM GAS  /tmp/ccCYtDPO.s 			page 90


 2715              		.global	_ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE
 2716              		.syntax unified
 2717              		.code	16
 2718              		.thumb_func
 2719              		.fpu softvfp
 2721              	_ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE:
 2722              	.LFB2628:
  49:../../src/string_buffer.h **** {
 2723              		.loc 14 49 0
 2724              		.cfi_startproc
 2725              		@ args = 0, pretend = 0, frame = 24
 2726              		@ frame_needed = 0, uses_anonymous_args = 0
 2727              	.LVL235:
 2728              	.LBB1205:
 2729              	.LBB1206:
 2730              	.LBB1207:
 2731              		.file 17 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/ar
   1:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // <array> -*- C++ -*-
   2:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
   3:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // Copyright (C) 2007-2017 Free Software Foundation, Inc.
   4:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** //
   5:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // software; you can redistribute it and/or modify it under the
   7:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // terms of the GNU General Public License as published by the
   8:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // Free Software Foundation; either version 3, or (at your option)
   9:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // any later version.
  10:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  11:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // This library is distributed in the hope that it will be useful,
  12:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // GNU General Public License for more details.
  15:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  16:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // Under Section 7 of GPL version 3, you are granted additional
  17:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // permissions described in the GCC Runtime Library Exception, version
  18:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // 3.1, as published by the Free Software Foundation.
  19:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  20:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // You should have received a copy of the GNU General Public License and
  21:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // <http://www.gnu.org/licenses/>.
  24:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  25:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** /** @file include/array
  26:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****  *  This is a Standard C++ Library header.
  27:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****  */
  28:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  29:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #ifndef _GLIBCXX_ARRAY
  30:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #define _GLIBCXX_ARRAY 1
  31:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  32:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #pragma GCC system_header
  33:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  34:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #if __cplusplus < 201103L
  35:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** # include <bits/c++0x_warning.h>
  36:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #else
  37:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  38:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #include <utility>
  39:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #include <stdexcept>
  40:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #include <bits/stl_algobase.h>
ARM GAS  /tmp/ccCYtDPO.s 			page 91


  41:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #include <bits/range_access.h>
  42:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  43:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** {
  45:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  46:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  47:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****   template<typename _Tp, std::size_t _Nm>
  48:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****     struct __array_traits
  49:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****     {
  50:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef _Tp _Type[_Nm];
  51:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef __is_swappable<_Tp> _Is_swappable;
  52:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef __is_nothrow_swappable<_Tp> _Is_nothrow_swappable;
  53:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  54:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       static constexpr _Tp&
  55:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _S_ref(const _Type& __t, std::size_t __n) noexcept
  56:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_cast<_Tp&>(__t[__n]); }
  57:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  58:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       static constexpr _Tp*
  59:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _S_ptr(const _Type& __t) noexcept
  60:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_cast<_Tp*>(__t); }
  61:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****     };
  62:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  63:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****  template<typename _Tp>
  64:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    struct __array_traits<_Tp, 0>
  65:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    {
  66:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      struct _Type { };
  67:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      typedef true_type _Is_swappable;
  68:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      typedef true_type _Is_nothrow_swappable;
  69:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  70:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      static constexpr _Tp&
  71:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      _S_ref(const _Type&, std::size_t) noexcept
  72:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      { return *static_cast<_Tp*>(nullptr); }
  73:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  74:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      static constexpr _Tp*
  75:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      _S_ptr(const _Type&) noexcept
  76:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      { return nullptr; }
  77:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    };
  78:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  79:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****   /**
  80:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  @brief A standard container for storing a fixed size sequence of elements.
  81:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *
  82:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  @ingroup sequences
  83:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *
  84:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  85:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  <a href="tables.html#66">reversible container</a>, and a
  86:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  <a href="tables.html#67">sequence</a>.
  87:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *
  88:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  Sets support random access iterators.
  89:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *
  90:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  @tparam  Tp  Type of element. Required to be a complete type.
  91:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  @tparam  N  Number of elements.
  92:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****   */
  93:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****   template<typename _Tp, std::size_t _Nm>
  94:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****     struct array
  95:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****     {
  96:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef _Tp 	    			      value_type;
  97:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef value_type*			      pointer;
ARM GAS  /tmp/ccCYtDPO.s 			page 92


  98:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef const value_type*                       const_pointer;
  99:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef value_type&                   	      reference;
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef const value_type&             	      const_reference;
 101:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef value_type*          		      iterator;
 102:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef const value_type*			      const_iterator;
 103:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef std::size_t                    	      size_type;
 104:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef std::ptrdiff_t                   	      difference_type;
 105:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef std::reverse_iterator<iterator>	      reverse_iterator;
 106:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;
 107:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 108:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       // Support for zero-sized arrays mandatory.
 109:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef _GLIBCXX_STD_C::__array_traits<_Tp, _Nm> _AT_Type;
 110:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typename _AT_Type::_Type                         _M_elems;
 111:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 112:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       // No explicit construct/copy/destroy for aggregate type.
 113:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 114:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       // DR 776.
 115:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       void
 116:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       fill(const value_type& __u)
 117:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { std::fill_n(begin(), size(), __u); }
 118:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 119:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       void
 120:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       swap(array& __other)
 121:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       noexcept(_AT_Type::_Is_nothrow_swappable::value)
 122:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { std::swap_ranges(begin(), end(), __other.begin()); }
 123:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 124:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       // Iterators.
 125:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR iterator
 126:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       begin() noexcept
 127:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return iterator(data()); }
 128:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 129:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 130:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       begin() const noexcept
 131:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_iterator(data()); }
 132:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 133:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR iterator
 134:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       end() noexcept
 135:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return iterator(data() + _Nm); }
 136:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 137:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 138:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       end() const noexcept
 139:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_iterator(data() + _Nm); }
 140:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 141:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 142:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       rbegin() noexcept
 143:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return reverse_iterator(end()); }
 144:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 145:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 146:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       rbegin() const noexcept
 147:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_reverse_iterator(end()); }
 148:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 149:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 150:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       rend() noexcept
 151:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return reverse_iterator(begin()); }
 152:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 153:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 154:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       rend() const noexcept
ARM GAS  /tmp/ccCYtDPO.s 			page 93


 155:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_reverse_iterator(begin()); }
 156:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 157:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 158:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       cbegin() const noexcept
 159:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_iterator(data()); }
 160:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 161:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 162:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       cend() const noexcept
 163:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_iterator(data() + _Nm); }
 164:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 165:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 166:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       crbegin() const noexcept
 167:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_reverse_iterator(end()); }
 168:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 169:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 170:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       crend() const noexcept
 171:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_reverse_iterator(begin()); }
 172:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 173:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       // Capacity.
 174:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       constexpr size_type
 175:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       size() const noexcept { return _Nm; }
 176:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 177:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       constexpr size_type
 178:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       max_size() const noexcept { return _Nm; }
 179:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 180:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       constexpr bool
 181:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       empty() const noexcept { return size() == 0; }
 182:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 183:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       // Element access.
 184:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR reference
 185:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       operator[](size_type __n) noexcept
 186:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return _AT_Type::_S_ref(_M_elems, __n); }
 187:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 188:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       constexpr const_reference
 189:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       operator[](size_type __n) const noexcept
 190:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return _AT_Type::_S_ref(_M_elems, __n); }
 191:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 192:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR reference
 193:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       at(size_type __n)
 194:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       {
 195:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	if (__n >= _Nm)
 196:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	  std::__throw_out_of_range_fmt(__N("array::at: __n (which is %zu) "
 197:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 					    ">= _Nm (which is %zu)"),
 198:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 					__n, _Nm);
 199:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	return _AT_Type::_S_ref(_M_elems, __n);
 200:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       }
 201:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 202:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       constexpr const_reference
 203:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       at(size_type __n) const
 204:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       {
 205:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	// Result of conditional expression must be an lvalue so use
 206:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	// boolean ? lvalue : (throw-expr, lvalue)
 207:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	return __n < _Nm ? _AT_Type::_S_ref(_M_elems, __n)
 208:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	  : (std::__throw_out_of_range_fmt(__N("array::at: __n (which is %zu) "
 209:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 					       ">= _Nm (which is %zu)"),
 210:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 					   __n, _Nm),
 211:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	     _AT_Type::_S_ref(_M_elems, 0));
ARM GAS  /tmp/ccCYtDPO.s 			page 94


 212:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       }
 213:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 214:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR reference
 215:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       front() noexcept
 216:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return *begin(); }
 217:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 218:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       constexpr const_reference
 219:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       front() const noexcept
 220:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return _AT_Type::_S_ref(_M_elems, 0); }
 221:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 222:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR reference
 223:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       back() noexcept
 224:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return _Nm ? *(end() - 1) : *end(); }
 225:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 226:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       constexpr const_reference
 227:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       back() const noexcept
 228:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       {
 229:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	return _Nm ? _AT_Type::_S_ref(_M_elems, _Nm - 1)
 230:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****  	           : _AT_Type::_S_ref(_M_elems, 0);
 231:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       }
 232:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 233:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR pointer
 234:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       data() noexcept
 235:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return _AT_Type::_S_ptr(_M_elems); }
 2732              		.loc 17 235 0
 2733 0000 0300     		movs	r3, r0
 2734              	.LBE1207:
 2735              	.LBE1206:
 2736              	.LBE1205:
  49:../../src/string_buffer.h **** {
 2737              		.loc 14 49 0
 2738 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 2739              	.LCFI25:
 2740              		.cfi_def_cfa_offset 20
 2741              		.cfi_offset 4, -20
 2742              		.cfi_offset 5, -16
 2743              		.cfi_offset 6, -12
 2744              		.cfi_offset 7, -8
 2745              		.cfi_offset 14, -4
 2746              	.LBB1212:
 2747              	.LBB1210:
 2748              	.LBB1208:
 2749              		.loc 17 235 0
 2750 0004 0D33     		adds	r3, r3, #13
 2751              	.LBE1208:
 2752              	.LBE1210:
 2753              	.LBE1212:
  49:../../src/string_buffer.h **** {
 2754              		.loc 14 49 0
 2755 0006 87B0     		sub	sp, sp, #28
 2756              	.LCFI26:
 2757              		.cfi_def_cfa_offset 48
 2758              	.LBB1213:
 2759              	.LBB1211:
 2760              	.LBB1209:
 2761              		.loc 17 235 0
 2762 0008 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccCYtDPO.s 			page 95


 2763              	.LBE1209:
 2764              	.LBE1211:
 2765              	.LBE1213:
 2766              	.LBB1214:
  55:../../src/string_buffer.h ****     if (align){
 2767              		.loc 14 55 0
 2768 000a 037B     		ldrb	r3, [r0, #12]
 2769              	.LBE1214:
  49:../../src/string_buffer.h **** {
 2770              		.loc 14 49 0
 2771 000c 0500     		movs	r5, r0
 2772 000e 0C00     		movs	r4, r1
 2773              	.LVL236:
 2774 0010 1600     		movs	r6, r2
 2775              	.LVL237:
 2776              	.LBB1236:
  55:../../src/string_buffer.h ****     if (align){
 2777              		.loc 14 55 0
 2778 0012 002B     		cmp	r3, #0
 2779 0014 2FD0     		beq	.L179
 2780              	.LBE1236:
  51:../../src/string_buffer.h ****     auto begin_line    = screen.begin() + number_line * line_size;
 2781              		.loc 14 51 0
 2782 0016 1427     		movs	r7, #20
 2783 0018 0368     		ldr	r3, [r0]
 2784 001a 7B43     		muls	r3, r7
 2785 001c 0293     		str	r3, [sp, #8]
 2786 001e 029A     		ldr	r2, [sp, #8]
 2787 0020 019B     		ldr	r3, [sp, #4]
 2788 0022 9A18     		adds	r2, r3, r2
 2789              	.LBB1237:
 2790              	.LBB1215:
 2791              	.LBB1216:
  56:../../src/string_buffer.h ****         if (string_size < line_size) {
 2792              		.loc 14 56 0
 2793 0024 1329     		cmp	r1, #19
 2794 0026 1ED8     		bhi	.L180
 2795              	.LBB1217:
  57:../../src/string_buffer.h ****             auto begin_string = begin_line + (line_size - string_size)/2;
 2796              		.loc 14 57 0
 2797 0028 7F1A     		subs	r7, r7, r1
 2798 002a 7F08     		lsrs	r7, r7, #1
 2799 002c D719     		adds	r7, r2, r7
 2800              	.LVL238:
  58:../../src/string_buffer.h ****             auto end_string   = begin_string + string.size();
 2801              		.loc 14 58 0
 2802 002e 7B18     		adds	r3, r7, r1
 2803              	.LBB1218:
 2804              	.LBB1219:
 709:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 710:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
 711:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief Fills the range [first,last) with copies of value.
 712:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 713:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __first  A forward iterator.
 714:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __last   A forward iterator.
 715:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 716:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
ARM GAS  /tmp/ccCYtDPO.s 			page 96


 717:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 718:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 719:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 720:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  to @c memset or @c wmemset.
 721:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
 722:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 723:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline void
 724:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
 725:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 726:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       // concept requirements
 727:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 728:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 				  _ForwardIterator>)
 729:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 730:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 731:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       std::__fill_a(std::__niter_base(__first), std::__niter_base(__last),
 2805              		.loc 5 731 0
 2806 0030 1000     		movs	r0, r2
 2807              	.LVL239:
 2808 0032 3900     		movs	r1, r7
 2809              	.LBE1219:
 2810              	.LBE1218:
  58:../../src/string_buffer.h ****             auto end_string   = begin_string + string.size();
 2811              		.loc 14 58 0
 2812 0034 0393     		str	r3, [sp, #12]
 2813              	.LVL240:
 2814              	.LBB1221:
 2815              	.LBB1220:
 2816              		.loc 5 731 0
 2817 0036 FFF7FEFF 		bl	_ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_.isr
 2818              	.LVL241:
 2819              	.LBE1220:
 2820              	.LBE1221:
 2821              	.LBB1222:
 2822              	.LBB1223:
 2823              		.file 18 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/st
   1:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // Components for manipulating non-owning sequences of characters -*- C++ -*-
   2:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
   3:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // Copyright (C) 2013-2017 Free Software Foundation, Inc.
   4:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** //
   5:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // software; you can redistribute it and/or modify it under the
   7:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // terms of the GNU General Public License as published by the
   8:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // Free Software Foundation; either version 3, or (at your option)
   9:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // any later version.
  10:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  11:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // This library is distributed in the hope that it will be useful,
  12:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // GNU General Public License for more details.
  15:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  16:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // Under Section 7 of GPL version 3, you are granted additional
  17:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // permissions described in the GCC Runtime Library Exception, version
  18:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // 3.1, as published by the Free Software Foundation.
  19:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  20:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // You should have received a copy of the GNU General Public License and
  21:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
ARM GAS  /tmp/ccCYtDPO.s 			page 97


  23:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // <http://www.gnu.org/licenses/>.
  24:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  25:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** /** @file string_view
  26:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****  *  This is a Standard C++ Library header.
  27:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****  */
  28:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  29:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** //
  30:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // N3762 basic_string_view library
  31:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** //
  32:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  33:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** #ifndef _GLIBCXX_STRING_VIEW
  34:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** #define _GLIBCXX_STRING_VIEW 1
  35:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  36:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** #pragma GCC system_header
  37:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  38:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** #if __cplusplus >= 201703L
  39:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  40:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** #include <limits>
  41:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** #include <iosfwd>
  42:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** #include <bits/char_traits.h>
  43:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** #include <bits/functional_hash.h>
  44:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** #include <bits/range_access.h>
  45:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  46:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** namespace std _GLIBCXX_VISIBILITY(default)
  47:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** {
  48:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  50:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** #define __cpp_lib_string_view 201603
  51:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  52:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****   /**
  53:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *  @class basic_string_view <string_view>
  54:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *  @brief  A non-owning reference to a string.
  55:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *
  56:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *  @ingroup strings
  57:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *  @ingroup sequences
  58:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *
  59:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *  @tparam _CharT  Type of character
  60:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *  @tparam _Traits  Traits for character type, defaults to
  61:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *                   char_traits<_CharT>.
  62:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *
  63:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *  A basic_string_view looks like this:
  64:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *
  65:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *  @code
  66:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *    _CharT*    _M_str
  67:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *    size_t     _M_len
  68:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *  @endcode
  69:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    */
  70:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****   template<typename _CharT, typename _Traits = std::char_traits<_CharT>>
  71:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****     class basic_string_view
  72:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****     {
  73:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****     public:
  74:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  75:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       // types
  76:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using traits_type = _Traits;
  77:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using value_type = _CharT;
  78:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using pointer = const _CharT*;
  79:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using const_pointer = const _CharT*;
ARM GAS  /tmp/ccCYtDPO.s 			page 98


  80:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using reference = const _CharT&;
  81:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using const_reference = const _CharT&;
  82:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using const_iterator = const _CharT*;
  83:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using iterator = const_iterator;
  84:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using const_reverse_iterator = std::reverse_iterator<const_iterator>;
  85:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using reverse_iterator = const_reverse_iterator;
  86:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using size_type = size_t;
  87:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using difference_type = ptrdiff_t;
  88:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       static constexpr size_type npos = size_type(-1);
  89:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  90:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       // [string.view.cons], construct/copy
  91:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  92:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       constexpr
  93:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       basic_string_view() noexcept
  94:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       : _M_len{0}, _M_str{nullptr}
  95:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       { }
  96:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  97:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       constexpr basic_string_view(const basic_string_view&) noexcept = default;
  98:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  99:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       constexpr basic_string_view(const _CharT* __str)
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       : _M_len{__str == nullptr ? 0 : traits_type::length(__str)},
 101:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 102:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       { }
 103:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
 104:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       constexpr basic_string_view(const _CharT* __str, size_type __len)
 105:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       : _M_len{__len},
 106:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****         _M_str{__str}
 107:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       { }
 108:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
 109:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       constexpr basic_string_view&
 110:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       operator=(const basic_string_view&) noexcept = default;
 111:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
 112:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       // [string.view.iterators], iterators
 113:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
 114:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       constexpr const_iterator
 115:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       begin() const noexcept
 116:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       { return this->_M_str; }
 117:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
 118:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       constexpr const_iterator
 119:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       end() const noexcept
 120:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       { return this->_M_str + this->_M_len; }
 2824              		.loc 18 120 0
 2825 003a 3119     		adds	r1, r6, r4
 2826              	.LBE1223:
 2827              	.LBE1222:
  61:../../src/string_buffer.h ****             std::copy(string.begin(), string.end(), begin_string);
 2828              		.loc 14 61 0
 2829 003c 3A00     		movs	r2, r7
 2830 003e 3000     		movs	r0, r6
 2831 0040 FFF7FEFF 		bl	_ZSt4copyIPKcPcET0_T_S4_S3_
 2832              	.LVL242:
 2833              	.LBE1217:
 2834              	.LBE1216:
 2835              	.LBE1215:
 2836              	.LBE1237:
  52:../../src/string_buffer.h ****     auto end_line      = screen.begin() + number_line * line_size + line_size;
 2837              		.loc 14 52 0
ARM GAS  /tmp/ccCYtDPO.s 			page 99


 2838 0044 0299     		ldr	r1, [sp, #8]
 2839 0046 019B     		ldr	r3, [sp, #4]
 2840 0048 1431     		adds	r1, r1, #20
 2841 004a 5918     		adds	r1, r3, r1
 2842              	.LBB1238:
 2843              	.LBB1231:
 2844              	.LBB1229:
 2845              	.LBB1226:
 2846              	.LBB1224:
 2847              	.LBB1225:
 2848              		.loc 5 731 0
 2849 004c 0398     		ldr	r0, [sp, #12]
 2850 004e FFF7FEFF 		bl	_ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_.isr
 2851              	.LVL243:
 2852              	.L186:
 2853              	.LBE1225:
 2854              	.LBE1224:
 2855              	.LBE1226:
 2856              	.LBB1227:
  69:../../src/string_buffer.h ****             align = false;
 2857              		.loc 14 69 0
 2858 0052 0023     		movs	r3, #0
 2859 0054 2B73     		strb	r3, [r5, #12]
 2860              	.LBE1227:
 2861              	.LBE1229:
  71:../../src/string_buffer.h ****         position = number_line * line_size + line_size;
 2862              		.loc 14 71 0
 2863 0056 2B68     		ldr	r3, [r5]
 2864 0058 5A1C     		adds	r2, r3, #1
 2865 005a 1423     		movs	r3, #20
 2866 005c 5343     		muls	r3, r2
 2867 005e AB60     		str	r3, [r5, #8]
 2868              	.L182:
 2869              	.LBE1231:
 2870              	.LBE1238:
  92:../../src/string_buffer.h **** }
 2871              		.loc 14 92 0
 2872 0060 2800     		movs	r0, r5
 2873 0062 07B0     		add	sp, sp, #28
 2874              		@ sp needed
 2875              	.LVL244:
 2876 0064 F0BD     		pop	{r4, r5, r6, r7, pc}
 2877              	.LVL245:
 2878              	.L180:
 2879              	.LBB1239:
 2880              	.LBB1232:
 2881              	.LBB1230:
 2882              	.LBB1228:
  65:../../src/string_buffer.h ****             auto begin_string = string.begin() + (string_size - line_size)/2;
 2883              		.loc 14 65 0
 2884 0066 143C     		subs	r4, r4, #20
 2885 0068 6408     		lsrs	r4, r4, #1
 2886 006a 3019     		adds	r0, r6, r4
 2887              	.LVL246:
  66:../../src/string_buffer.h ****             auto end_string   = begin_string + line_size;
 2888              		.loc 14 66 0
 2889 006c 0100     		movs	r1, r0
ARM GAS  /tmp/ccCYtDPO.s 			page 100


 2890 006e 1431     		adds	r1, r1, #20
 2891              	.LVL247:
  68:../../src/string_buffer.h ****             std::copy(begin_string, end_string, begin_line);
 2892              		.loc 14 68 0
 2893 0070 FFF7FEFF 		bl	_ZSt4copyIPKcPcET0_T_S4_S3_
 2894              	.LVL248:
 2895 0074 EDE7     		b	.L186
 2896              	.LVL249:
 2897              	.L179:
 2898              	.LBE1228:
 2899              	.LBE1230:
 2900              	.LBE1232:
 2901              	.LBB1233:
  73:../../src/string_buffer.h ****         if (string_size < screen_size - position) {
 2902              		.loc 14 73 0
 2903 0076 5021     		movs	r1, #80
 2904 0078 8268     		ldr	r2, [r0, #8]
 2905 007a 019B     		ldr	r3, [sp, #4]
 2906 007c 891A     		subs	r1, r1, r2
 2907 007e 9A18     		adds	r2, r3, r2
 2908 0080 3319     		adds	r3, r6, r4
 2909 0082 0293     		str	r3, [sp, #8]
 2910 0084 A142     		cmp	r1, r4
 2911 0086 07D9     		bls	.L183
 2912              	.LVL250:
  74:../../src/string_buffer.h ****             std::copy(string.begin(), string.end(), screen.begin() + position);
 2913              		.loc 14 74 0
 2914 0088 1900     		movs	r1, r3
 2915 008a 3000     		movs	r0, r6
 2916              	.LVL251:
 2917 008c FFF7FEFF 		bl	_ZSt4copyIPKcPcET0_T_S4_S3_
 2918              	.LVL252:
  75:../../src/string_buffer.h ****             position += string_size;
 2919              		.loc 14 75 0
 2920 0090 AB68     		ldr	r3, [r5, #8]
 2921 0092 1C19     		adds	r4, r3, r4
 2922 0094 AC60     		str	r4, [r5, #8]
 2923 0096 E3E7     		b	.L182
 2924              	.LVL253:
 2925              	.L183:
 2926              	.LBB1234:
  78:../../src/string_buffer.h ****             size_t rest_string = string_size - (screen_size - position);
 2927              		.loc 14 78 0
 2928 0098 2700     		movs	r7, r4
  77:../../src/string_buffer.h ****             std::copy(string.begin(), string.begin() + (screen_size - position), screen.begin() + p
 2929              		.loc 14 77 0
 2930 009a 7118     		adds	r1, r6, r1
 2931 009c 3000     		movs	r0, r6
 2932              	.LVL254:
 2933 009e FFF7FEFF 		bl	_ZSt4copyIPKcPcET0_T_S4_S3_
 2934              	.LVL255:
  78:../../src/string_buffer.h ****             size_t rest_string = string_size - (screen_size - position);
 2935              		.loc 14 78 0
 2936 00a2 AB68     		ldr	r3, [r5, #8]
 2937 00a4 503F     		subs	r7, r7, #80
 2938 00a6 FF18     		adds	r7, r7, r3
 2939              	.LVL256:
ARM GAS  /tmp/ccCYtDPO.s 			page 101


 2940 00a8 E41B     		subs	r4, r4, r7
 2941 00aa 3619     		adds	r6, r6, r4
 2942              	.L185:
 2943 00ac 3000     		movs	r0, r6
  86:../../src/string_buffer.h ****             std::copy(string.begin() + (string_size - rest_string), string.end(), screen.begin());
 2944              		.loc 14 86 0
 2945 00ae 019A     		ldr	r2, [sp, #4]
 2946 00b0 5036     		adds	r6, r6, #80
  80:../../src/string_buffer.h ****             while (rest_string > screen_size) {
 2947              		.loc 14 80 0
 2948 00b2 502F     		cmp	r7, #80
 2949 00b4 04D9     		bls	.L184
 2950              	.LVL257:
 2951              	.LBB1235:
  83:../../src/string_buffer.h ****                 std::copy(begin_string, end_string, screen.begin());
 2952              		.loc 14 83 0
 2953 00b6 3100     		movs	r1, r6
 2954 00b8 FFF7FEFF 		bl	_ZSt4copyIPKcPcET0_T_S4_S3_
 2955              	.LVL258:
  84:../../src/string_buffer.h ****                 rest_string -= screen_size;
 2956              		.loc 14 84 0
 2957 00bc 503F     		subs	r7, r7, #80
 2958              	.LVL259:
 2959              	.LBE1235:
  80:../../src/string_buffer.h ****             while (rest_string > screen_size) {
 2960              		.loc 14 80 0
 2961 00be F5E7     		b	.L185
 2962              	.LVL260:
 2963              	.L184:
  86:../../src/string_buffer.h ****             std::copy(string.begin() + (string_size - rest_string), string.end(), screen.begin());
 2964              		.loc 14 86 0
 2965 00c0 0299     		ldr	r1, [sp, #8]
 2966 00c2 FFF7FEFF 		bl	_ZSt4copyIPKcPcET0_T_S4_S3_
 2967              	.LVL261:
  87:../../src/string_buffer.h ****             position += rest_string;
 2968              		.loc 14 87 0
 2969 00c6 AB68     		ldr	r3, [r5, #8]
 2970 00c8 DF19     		adds	r7, r3, r7
 2971              	.LVL262:
 2972 00ca AF60     		str	r7, [r5, #8]
 2973 00cc C8E7     		b	.L182
 2974              	.LBE1234:
 2975              	.LBE1233:
 2976              	.LBE1239:
 2977              		.cfi_endproc
 2978              	.LFE2628:
 2980              		.section	.text._Z9next_lineR13String_buffer,"ax",%progbits
 2981              		.align	1
 2982              		.global	_Z9next_lineR13String_buffer
 2983              		.syntax unified
 2984              		.code	16
 2985              		.thumb_func
 2986              		.fpu softvfp
 2988              	_Z9next_lineR13String_buffer:
 2989              	.LFB2624:
  41:../../src/string_buffer.h **** {
 2990              		.loc 14 41 0
ARM GAS  /tmp/ccCYtDPO.s 			page 102


 2991              		.cfi_startproc
 2992              		@ args = 0, pretend = 0, frame = 8
 2993              		@ frame_needed = 0, uses_anonymous_args = 0
 2994              	.LVL263:
 2995 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2996              	.LCFI27:
 2997              		.cfi_def_cfa_offset 24
 2998              		.cfi_offset 0, -24
 2999              		.cfi_offset 1, -20
 3000              		.cfi_offset 2, -16
 3001              		.cfi_offset 4, -12
 3002              		.cfi_offset 5, -8
 3003              		.cfi_offset 14, -4
 3004 0002 0400     		movs	r4, r0
 3005              	.LVL264:
 3006              	.L189:
 3007              	.LBB1247:
 3008              	.LBB1248:
  36:../../src/string_buffer.h ****     bool in_begin_line() const { return position % line_size == 0; }
 3009              		.loc 14 36 0
 3010 0004 1421     		movs	r1, #20
 3011 0006 A068     		ldr	r0, [r4, #8]
 3012 0008 FFF7FEFF 		bl	__aeabi_uidivmod
 3013              	.LVL265:
 3014              	.LBE1248:
 3015              	.LBE1247:
  42:../../src/string_buffer.h ****     while (not s.in_begin_line())
 3016              		.loc 14 42 0
 3017 000c 0029     		cmp	r1, #0
 3018 000e 09D0     		beq	.L188
 3019              	.LVL266:
 3020              	.LBB1249:
 3021              	.LBB1250:
 3022              	.LBB1251:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 3023              		.loc 18 100 0
 3024 0010 054D     		ldr	r5, .L190
 3025 0012 2800     		movs	r0, r5
 3026 0014 FFF7FEFF 		bl	_ZNSt11char_traitsIcE6lengthEPKc
 3027              	.LVL267:
 3028              	.LBE1251:
 3029              	.LBE1250:
 3030              	.LBE1249:
  43:../../src/string_buffer.h ****         s << " ";
 3031              		.loc 14 43 0
 3032 0018 2A00     		movs	r2, r5
 3033              	.LBB1254:
 3034              	.LBB1253:
 3035              	.LBB1252:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 3036              		.loc 18 100 0
 3037 001a 0100     		movs	r1, r0
 3038              	.LVL268:
 3039              	.LBE1252:
 3040              	.LBE1253:
 3041              	.LBE1254:
  43:../../src/string_buffer.h ****         s << " ";
ARM GAS  /tmp/ccCYtDPO.s 			page 103


 3042              		.loc 14 43 0
 3043 001c 2000     		movs	r0, r4
 3044 001e FFF7FEFF 		bl	_ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE
 3045              	.LVL269:
  42:../../src/string_buffer.h ****     while (not s.in_begin_line())
 3046              		.loc 14 42 0
 3047 0022 EFE7     		b	.L189
 3048              	.L188:
  45:../../src/string_buffer.h **** }
 3049              		.loc 14 45 0
 3050 0024 2000     		movs	r0, r4
 3051              		@ sp needed
 3052              	.LVL270:
 3053 0026 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 3054              	.L191:
 3055              		.align	2
 3056              	.L190:
 3057 0028 00000000 		.word	.LC5
 3058              		.cfi_endproc
 3059              	.LFE2624:
 3061              		.section	.text._ZN13String_bufferlsEi,"ax",%progbits
 3062              		.align	1
 3063              		.global	_ZN13String_bufferlsEi
 3064              		.syntax unified
 3065              		.code	16
 3066              		.thumb_func
 3067              		.fpu softvfp
 3069              	_ZN13String_bufferlsEi:
 3070              	.LFB2632:
  95:../../src/string_buffer.h **** {
 3071              		.loc 14 95 0
 3072              		.cfi_startproc
 3073              		@ args = 0, pretend = 0, frame = 24
 3074              		@ frame_needed = 0, uses_anonymous_args = 0
 3075              	.LVL271:
 3076 0000 70B5     		push	{r4, r5, r6, lr}
 3077              	.LCFI28:
 3078              		.cfi_def_cfa_offset 16
 3079              		.cfi_offset 4, -16
 3080              		.cfi_offset 5, -12
 3081              		.cfi_offset 6, -8
 3082              		.cfi_offset 14, -4
 3083 0002 86B0     		sub	sp, sp, #24
 3084              	.LCFI29:
 3085              		.cfi_def_cfa_offset 40
  95:../../src/string_buffer.h **** {
 3086              		.loc 14 95 0
 3087 0004 0A00     		movs	r2, r1
 3088 0006 0500     		movs	r5, r0
  97:../../src/string_buffer.h ****     sprintf(string, "%d", number);
 3089              		.loc 14 97 0
 3090 0008 1149     		ldr	r1, .L196
 3091              	.LVL272:
 3092 000a 03A8     		add	r0, sp, #12
 3093              	.LVL273:
 3094 000c FFF7FEFF 		bl	sprintf
 3095              	.LVL274:
ARM GAS  /tmp/ccCYtDPO.s 			page 104


 3096              	.LBB1270:
 3097              	.LBB1271:
 3098              	.LBB1272:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 3099              		.loc 18 100 0
 3100 0010 03A8     		add	r0, sp, #12
 3101              	.LVL275:
 3102 0012 FFF7FEFF 		bl	_ZNSt11char_traitsIcE6lengthEPKc
 3103              	.LVL276:
 3104              	.LBE1272:
 3105              	.LBE1271:
 3106              	.LBE1270:
  99:../../src/string_buffer.h ****     auto qty_space = (width_size > str.size()) ? (width_size - str.size()) : 0;
 3107              		.loc 14 99 0
 3108 0016 6C68     		ldr	r4, [r5, #4]
 3109              	.LVL277:
 3110 0018 8442     		cmp	r4, r0
 3111 001a 0CD9     		bls	.L193
 3112              	.LVL278:
  99:../../src/string_buffer.h ****     auto qty_space = (width_size > str.size()) ? (width_size - str.size()) : 0;
 3113              		.loc 14 99 0 is_stmt 0 discriminator 1
 3114 001c 241A     		subs	r4, r4, r0
 3115              	.LVL279:
 3116              	.L194:
 3117              	.LBB1273:
 3118              	.LBB1274:
 3119              	.LBB1275:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 3120              		.loc 18 100 0 is_stmt 1
 3121 001e 0D4E     		ldr	r6, .L196+4
 3122              	.LBE1275:
 3123              	.LBE1274:
 3124              	.LBE1273:
 103:../../src/string_buffer.h ****         qty_space--;
 3125              		.loc 14 103 0
 3126 0020 013C     		subs	r4, r4, #1
 3127              	.LVL280:
 3128              	.LBB1280:
 3129              	.LBB1278:
 3130              	.LBB1276:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 3131              		.loc 18 100 0
 3132 0022 3000     		movs	r0, r6
 3133 0024 FFF7FEFF 		bl	_ZNSt11char_traitsIcE6lengthEPKc
 3134              	.LVL281:
 3135              	.LBE1276:
 3136              	.LBE1278:
 3137              	.LBE1280:
 102:../../src/string_buffer.h ****         *this << " ";
 3138              		.loc 14 102 0
 3139 0028 3200     		movs	r2, r6
 3140              	.LBB1281:
 3141              	.LBB1279:
 3142              	.LBB1277:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 3143              		.loc 18 100 0
 3144 002a 0100     		movs	r1, r0
ARM GAS  /tmp/ccCYtDPO.s 			page 105


 3145              	.LVL282:
 3146              	.LBE1277:
 3147              	.LBE1279:
 3148              	.LBE1281:
 102:../../src/string_buffer.h ****         *this << " ";
 3149              		.loc 14 102 0
 3150 002c 2800     		movs	r0, r5
 3151 002e FFF7FEFF 		bl	_ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE
 3152              	.LVL283:
 101:../../src/string_buffer.h ****     while (qty_space) {
 3153              		.loc 14 101 0
 3154 0032 002C     		cmp	r4, #0
 3155 0034 F3D1     		bne	.L194
 3156              	.LVL284:
 3157              	.L193:
 3158              	.LBB1282:
 3159              	.LBB1283:
 3160              	.LBB1284:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 3161              		.loc 18 100 0
 3162 0036 03A8     		add	r0, sp, #12
 3163              	.LVL285:
 3164 0038 FFF7FEFF 		bl	_ZNSt11char_traitsIcE6lengthEPKc
 3165              	.LVL286:
 3166              	.LBE1284:
 3167              	.LBE1283:
 3168              	.LBE1282:
 105:../../src/string_buffer.h ****     *this << string;
 3169              		.loc 14 105 0
 3170 003c 03AA     		add	r2, sp, #12
 3171              	.LVL287:
 3172              	.LBB1287:
 3173              	.LBB1286:
 3174              	.LBB1285:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 3175              		.loc 18 100 0
 3176 003e 0100     		movs	r1, r0
 3177              	.LVL288:
 3178              	.LBE1285:
 3179              	.LBE1286:
 3180              	.LBE1287:
 105:../../src/string_buffer.h ****     *this << string;
 3181              		.loc 14 105 0
 3182 0040 2800     		movs	r0, r5
 3183 0042 FFF7FEFF 		bl	_ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE
 3184              	.LVL289:
 106:../../src/string_buffer.h ****     width_size = 0;
 3185              		.loc 14 106 0
 3186 0046 0023     		movs	r3, #0
 108:../../src/string_buffer.h **** }
 3187              		.loc 14 108 0
 3188 0048 2800     		movs	r0, r5
 106:../../src/string_buffer.h ****     width_size = 0;
 3189              		.loc 14 106 0
 3190 004a 6B60     		str	r3, [r5, #4]
 108:../../src/string_buffer.h **** }
 3191              		.loc 14 108 0
ARM GAS  /tmp/ccCYtDPO.s 			page 106


 3192 004c 06B0     		add	sp, sp, #24
 3193              		@ sp needed
 3194              	.LVL290:
 3195 004e 70BD     		pop	{r4, r5, r6, pc}
 3196              	.L197:
 3197              		.align	2
 3198              	.L196:
 3199 0050 00000000 		.word	.LC7
 3200 0054 00000000 		.word	.LC5
 3201              		.cfi_endproc
 3202              	.LFE2632:
 3204              		.section	.text._Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_
 3205              		.align	1
 3206              		.weak	_Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi
 3207              		.syntax unified
 3208              		.code	16
 3209              		.thumb_func
 3210              		.fpu softvfp
 3212              	_Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2
 3213              	.LFB3142:
  41:../../src/pin.h **** };
  42:../../src/pin.h **** 
  43:../../src/pin.h **** template<mcu::PinMode mode, class ... Pins>
  44:../../src/pin.h **** meta::tuple_generate_t<Pin&, sizeof...(Pins)> make_pins ()
 3214              		.loc 8 44 0
 3215              		.cfi_startproc
 3216              		@ args = 0, pretend = 0, frame = 0
 3217              		@ frame_needed = 0, uses_anonymous_args = 0
 3218              	.LVL291:
 3219 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3220              	.LCFI30:
 3221              		.cfi_def_cfa_offset 24
 3222              		.cfi_offset 3, -24
 3223              		.cfi_offset 4, -20
 3224              		.cfi_offset 5, -16
 3225              		.cfi_offset 6, -12
 3226              		.cfi_offset 7, -8
 3227              		.cfi_offset 14, -4
 3228              	.LBB1347:
 3229              	.LBB1348:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3230              		.loc 8 21 0
 3231 0002 4A4C     		ldr	r4, .L223
 3232              	.LBE1348:
 3233              	.LBE1347:
 3234              		.loc 8 44 0
 3235 0004 0500     		movs	r5, r0
 3236              	.LBB1382:
 3237              	.LBB1380:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3238              		.loc 8 21 0
 3239 0006 2378     		ldrb	r3, [r4]
 3240 0008 BFF35B8F 		dmb	ish
 3241 000c DB07     		lsls	r3, r3, #31
 3242 000e 0CD4     		bmi	.L200
 3243 0010 2000     		movs	r0, r4
 3244              	.LVL292:
ARM GAS  /tmp/ccCYtDPO.s 			page 107


 3245 0012 FFF7FEFF 		bl	__cxa_guard_acquire
 3246              	.LVL293:
 3247 0016 0028     		cmp	r0, #0
 3248 0018 07D0     		beq	.L200
 3249              	.LVL294:
 3250              	.LBB1349:
 3251              	.LBB1350:
 3252              	.LBB1351:
  17:../../src/pin.h **** 
 3253              		.loc 8 17 0
 3254 001a 454B     		ldr	r3, .L223+4
 3255 001c 454A     		ldr	r2, .L223+8
 3256              	.LBE1351:
 3257              	.LBE1350:
 3258              	.LBE1349:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3259              		.loc 8 21 0
 3260 001e 2000     		movs	r0, r4
 3261              	.LBB1354:
 3262              	.LBB1353:
 3263              	.LBB1352:
  17:../../src/pin.h **** 
 3264              		.loc 8 17 0
 3265 0020 1360     		str	r3, [r2]
 3266 0022 0423     		movs	r3, #4
 3267 0024 5360     		str	r3, [r2, #4]
 3268              	.LVL295:
 3269              	.LBE1352:
 3270              	.LBE1353:
 3271              	.LBE1354:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3272              		.loc 8 21 0
 3273 0026 FFF7FEFF 		bl	__cxa_guard_release
 3274              	.LVL296:
 3275              	.L200:
 3276              	.LBB1355:
 3277              	.LBB1356:
  42:../../src/periph/rcc_f1.h **** 
  43:../../src/periph/rcc_f1.h **** 	size_t get_APB1_clock(){return get_APB_clock (CFGR.PPRE1);}
  44:../../src/periph/rcc_f1.h **** 	size_t get_APB2_clock(){return get_APB_clock (CFGR.PPRE2);}
  45:../../src/periph/rcc_f1.h **** 
  46:../../src/periph/rcc_f1.h **** 	template<Periph p> void clock_enable()
  47:../../src/periph/rcc_f1.h **** 	{
  48:../../src/periph/rcc_f1.h **** 		if      constexpr (p == Periph::GPIOA) APB2ENR.IOPAEN = true;
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOB) APB2ENR.IOPBEN = true;
 3278              		.loc 16 49 0
 3279 002a 0823     		movs	r3, #8
 3280              	.LBE1356:
 3281              	.LBE1355:
 3282              	.LBB1359:
 3283              	.LBB1360:
 3284              	.LBB1361:
  50:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
  51:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOD) APB2ENR.IOPDEN = true;
  52:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOE) APB2ENR.IOPEEN = true;
  53:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::AFIO ) APB2ENR.AFIOEN = true;
 3285              		.loc 16 53 0
ARM GAS  /tmp/ccCYtDPO.s 			page 108


 3286 002c 0121     		movs	r1, #1
 3287              	.LBE1361:
 3288              	.LBE1360:
 3289              	.LBE1359:
 3290              	.LBB1374:
 3291              	.LBB1357:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 3292              		.loc 16 49 0
 3293 002e 424C     		ldr	r4, .L223+12
 3294              	.LBE1357:
 3295              	.LBE1374:
 3296              	.LBB1375:
 3297              	.LBB1363:
 3298              	.LBB1364:
 3299              		.file 19 "../../src/periph/periph_afio.h"
   1:../../src/periph/periph_afio.h **** #pragma once
   2:../../src/periph/periph_afio.h **** 
   3:../../src/periph/periph_afio.h **** #include "periph.h"
   4:../../src/periph/periph_afio.h **** #include "bits_afio_f1.h"
   5:../../src/periph/periph_afio.h **** 
   6:../../src/periph/periph_afio.h **** namespace mcu {
   7:../../src/periph/periph_afio.h **** 
   8:../../src/periph/periph_afio.h **** class AFIO {
   9:../../src/periph/periph_afio.h ****    volatile AFIO_bits::EVCR   EVCR;      // Event control register                         offset: 
  10:../../src/periph/periph_afio.h ****    volatile AFIO_bits::MAPR   MAPR;      // AF remap and debug I/O configuration register  offset: 
  11:../../src/periph/periph_afio.h ****    volatile AFIO_bits::EXTICR EXTICR;    // External interrupt configuration register      offset: 
  12:../../src/periph/periph_afio.h ****             uint32_t          RESERVED0; //
  13:../../src/periph/periph_afio.h ****    volatile AFIO_bits::MAPR2  MAPR2;     // AF remap and debug I/O configuration register2 offset: 
  14:../../src/periph/periph_afio.h **** 
  15:../../src/periph/periph_afio.h **** public:
  16:../../src/periph/periph_afio.h ****    using CMSIS_type = AFIO_TypeDef;
  17:../../src/periph/periph_afio.h ****    using Port       = AFIO_bits::Port;
  18:../../src/periph/periph_afio.h ****    using Pin        = AFIO_bits::EVCR::Pin;
  19:../../src/periph/periph_afio.h ****    using Remap      = AFIO_bits::MAPR::Remap;
  20:../../src/periph/periph_afio.h ****    using SWJ        = AFIO_bits::MAPR::SWJ;
  21:../../src/periph/periph_afio.h **** 
  22:../../src/periph/periph_afio.h ****    // AFIO& event_enable()        {EVCR.EVOE = true;   return *this;}
  23:../../src/periph/periph_afio.h ****    AFIO& set_JTAG (SWJ v) {MAPR.SWJ_CFG = v; return *this;}
 3300              		.loc 19 23 0
 3301 0030 424E     		ldr	r6, .L223+16
 3302              	.LBE1364:
 3303              	.LBE1363:
 3304              	.LBE1375:
 3305              	.LBB1376:
 3306              	.LBB1358:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 3307              		.loc 16 49 0
 3308 0032 A269     		ldr	r2, [r4, #24]
 3309 0034 1343     		orrs	r3, r2
 3310 0036 A361     		str	r3, [r4, #24]
 3311              	.LBE1358:
 3312              	.LBE1376:
  24:../../src/pin.h ****       return pin;
 3313              		.loc 8 24 0
 3314 0038 3E4B     		ldr	r3, .L223+8
 3315              	.LBB1377:
 3316              	.LBB1367:
ARM GAS  /tmp/ccCYtDPO.s 			page 109


 3317              	.LBB1365:
 3318              		.loc 19 23 0
 3319 003a 414A     		ldr	r2, .L223+20
 3320              	.LBE1365:
 3321              	.LBE1367:
 3322              	.LBE1377:
  24:../../src/pin.h ****       return pin;
 3323              		.loc 8 24 0
 3324 003c 1868     		ldr	r0, [r3]
 3325              	.LVL297:
 3326              	.LBB1378:
 3327              	.LBB1368:
 3328              	.LBB1362:
 3329              		.loc 16 53 0
 3330 003e A369     		ldr	r3, [r4, #24]
 3331 0040 0B43     		orrs	r3, r1
 3332 0042 A361     		str	r3, [r4, #24]
 3333              	.LVL298:
 3334              	.LBE1362:
 3335              	.LBE1368:
 3336              	.LBB1369:
 3337              	.LBB1366:
 3338              		.loc 19 23 0
 3339 0044 7368     		ldr	r3, [r6, #4]
 3340 0046 1A40     		ands	r2, r3
 3341 0048 8023     		movs	r3, #128
 3342 004a 9B04     		lsls	r3, r3, #18
 3343 004c 1343     		orrs	r3, r2
 3344 004e 7360     		str	r3, [r6, #4]
 3345              	.LVL299:
 3346              	.LBE1366:
 3347              	.LBE1369:
 3348              	.LBB1370:
 3349              	.LBB1371:
  32:../../src/periph/gpio_f1.h **** 
  33:../../src/periph/gpio_f1.h ****    template<class Pin_, PinMode> void init();
  34:../../src/periph/gpio_f1.h **** 
  35:../../src/periph/gpio_f1.h **** private:
  36:../../src/periph/gpio_f1.h ****    template<size_t> GPIO& set (Mode);
  37:../../src/periph/gpio_f1.h **** };
  38:../../src/periph/gpio_f1.h **** 
  39:../../src/periph/gpio_f1.h **** 
  40:../../src/periph/gpio_f1.h **** 
  41:../../src/periph/gpio_f1.h **** #if not defined(USE_MOCK_GPIO)
  42:../../src/periph/gpio_f1.h **** template<Periph gpio> std::enable_if_t<gpio == Periph::GPIOA, GPIO&> make_reference() { return *rei
  43:../../src/periph/gpio_f1.h **** template<Periph gpio> std::enable_if_t<gpio == Periph::GPIOB, GPIO&> make_reference() { return *rei
  44:../../src/periph/gpio_f1.h **** template<Periph gpio> std::enable_if_t<gpio == Periph::GPIOC, GPIO&> make_reference() { return *rei
  45:../../src/periph/gpio_f1.h **** template<Periph gpio> std::enable_if_t<gpio == Periph::GPIOD, GPIO&> make_reference() { return *rei
  46:../../src/periph/gpio_f1.h **** template<Periph gpio> std::enable_if_t<gpio == Periph::GPIOE, GPIO&> make_reference() { return *rei
  47:../../src/periph/gpio_f1.h **** #endif // #if not defined(USE_MOCK_GPIO)
  48:../../src/periph/gpio_f1.h **** 
  49:../../src/periph/gpio_f1.h **** 
  50:../../src/periph/gpio_f1.h **** 
  51:../../src/periph/gpio_f1.h **** 
  52:../../src/periph/gpio_f1.h **** 
  53:../../src/periph/gpio_f1.h **** 
  54:../../src/periph/gpio_f1.h **** 
ARM GAS  /tmp/ccCYtDPO.s 			page 110


  55:../../src/periph/gpio_f1.h **** 
  56:../../src/periph/gpio_f1.h **** 
  57:../../src/periph/gpio_f1.h **** 
  58:../../src/periph/gpio_f1.h **** 
  59:../../src/periph/gpio_f1.h **** 
  60:../../src/periph/gpio_f1.h **** 
  61:../../src/periph/gpio_f1.h **** 
  62:../../src/periph/gpio_f1.h **** 
  63:../../src/periph/gpio_f1.h **** 
  64:../../src/periph/gpio_f1.h **** 
  65:../../src/periph/gpio_f1.h **** 
  66:../../src/periph/gpio_f1.h **** template<size_t n> GPIO& GPIO::set (Mode v) 
  67:../../src/periph/gpio_f1.h **** {
  68:../../src/periph/gpio_f1.h ****    if      constexpr (n == 0)  { CR.CNF_MODE0  = v; return *this; }
  69:../../src/periph/gpio_f1.h ****    else if constexpr (n == 1)  { CR.CNF_MODE1  = v; return *this; }
  70:../../src/periph/gpio_f1.h ****    else if constexpr (n == 2)  { CR.CNF_MODE2  = v; return *this; }
  71:../../src/periph/gpio_f1.h ****    else if constexpr (n == 3)  { CR.CNF_MODE3  = v; return *this; }
  72:../../src/periph/gpio_f1.h ****    else if constexpr (n == 4)  { CR.CNF_MODE4  = v; return *this; }
 3350              		.loc 9 72 0
 3351 0050 0368     		ldr	r3, [r0]
 3352 0052 3C4A     		ldr	r2, .L223+24
 3353              	.LBE1371:
 3354              	.LBE1370:
 3355              	.LBE1378:
 3356              	.LBE1380:
 3357              	.LBE1382:
 3358              	.LBB1383:
 3359              	.LBB1384:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3360              		.loc 8 21 0
 3361 0054 3C4E     		ldr	r6, .L223+28
 3362              	.LBE1384:
 3363              	.LBE1383:
 3364              	.LBB1403:
 3365              	.LBB1381:
 3366              	.LBB1379:
 3367              	.LBB1373:
 3368              	.LBB1372:
 3369              		.loc 9 72 0
 3370 0056 1A40     		ands	r2, r3
 3371 0058 8023     		movs	r3, #128
 3372 005a 9B02     		lsls	r3, r3, #10
 3373 005c 1343     		orrs	r3, r2
 3374 005e 0360     		str	r3, [r0]
 3375              	.LVL300:
 3376              	.LBE1372:
 3377              	.LBE1373:
 3378              	.LBE1379:
 3379              	.LBE1381:
 3380              	.LBE1403:
 3381              	.LBB1404:
 3382              	.LBB1401:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3383              		.loc 8 21 0
 3384 0060 3378     		ldrb	r3, [r6]
 3385 0062 BFF35B8F 		dmb	ish
 3386 0066 0B42     		tst	r3, r1
ARM GAS  /tmp/ccCYtDPO.s 			page 111


 3387 0068 0CD1     		bne	.L203
 3388 006a 3000     		movs	r0, r6
 3389 006c FFF7FEFF 		bl	__cxa_guard_acquire
 3390              	.LVL301:
 3391 0070 0028     		cmp	r0, #0
 3392 0072 07D0     		beq	.L203
 3393              	.LVL302:
 3394              	.LBB1385:
 3395              	.LBB1386:
 3396              	.LBB1387:
  17:../../src/pin.h **** 
 3397              		.loc 8 17 0
 3398 0074 2E4B     		ldr	r3, .L223+4
 3399 0076 354A     		ldr	r2, .L223+32
 3400              	.LBE1387:
 3401              	.LBE1386:
 3402              	.LBE1385:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3403              		.loc 8 21 0
 3404 0078 3000     		movs	r0, r6
 3405              	.LBB1390:
 3406              	.LBB1389:
 3407              	.LBB1388:
  17:../../src/pin.h **** 
 3408              		.loc 8 17 0
 3409 007a 1360     		str	r3, [r2]
 3410 007c 0523     		movs	r3, #5
 3411 007e 5360     		str	r3, [r2, #4]
 3412              	.LVL303:
 3413              	.LBE1388:
 3414              	.LBE1389:
 3415              	.LBE1390:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3416              		.loc 8 21 0
 3417 0080 FFF7FEFF 		bl	__cxa_guard_release
 3418              	.LVL304:
 3419              	.L203:
 3420              	.LBB1391:
 3421              	.LBB1392:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 3422              		.loc 16 49 0
 3423 0084 0823     		movs	r3, #8
 3424 0086 A269     		ldr	r2, [r4, #24]
 3425              	.LBE1392:
 3426              	.LBE1391:
 3427              	.LBE1401:
 3428              	.LBE1404:
 3429              	.LBB1405:
 3430              	.LBB1406:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3431              		.loc 8 21 0
 3432 0088 314F     		ldr	r7, .L223+36
 3433              	.LBE1406:
 3434              	.LBE1405:
 3435              	.LBB1419:
 3436              	.LBB1402:
 3437              	.LBB1394:
ARM GAS  /tmp/ccCYtDPO.s 			page 112


 3438              	.LBB1393:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 3439              		.loc 16 49 0
 3440 008a 1343     		orrs	r3, r2
 3441 008c A361     		str	r3, [r4, #24]
 3442              	.LBE1393:
 3443              	.LBE1394:
  24:../../src/pin.h ****       return pin;
 3444              		.loc 8 24 0
 3445 008e 2F4B     		ldr	r3, .L223+32
 3446              	.LBB1395:
 3447              	.LBB1396:
 3448              	.LBB1397:
  73:../../src/periph/gpio_f1.h ****    else if constexpr (n == 5)  { CR.CNF_MODE5  = v; return *this; }
 3449              		.loc 9 73 0
 3450 0090 304A     		ldr	r2, .L223+40
 3451              	.LBE1397:
 3452              	.LBE1396:
 3453              	.LBE1395:
  24:../../src/pin.h ****       return pin;
 3454              		.loc 8 24 0
 3455 0092 1968     		ldr	r1, [r3]
 3456              	.LVL305:
 3457              	.LBB1400:
 3458              	.LBB1399:
 3459              	.LBB1398:
 3460              		.loc 9 73 0
 3461 0094 0B68     		ldr	r3, [r1]
 3462 0096 1A40     		ands	r2, r3
 3463 0098 8023     		movs	r3, #128
 3464 009a 9B03     		lsls	r3, r3, #14
 3465 009c 1343     		orrs	r3, r2
 3466 009e 0B60     		str	r3, [r1]
 3467              	.LVL306:
 3468              	.LBE1398:
 3469              	.LBE1399:
 3470              	.LBE1400:
 3471              	.LBE1402:
 3472              	.LBE1419:
 3473              	.LBB1420:
 3474              	.LBB1418:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3475              		.loc 8 21 0
 3476 00a0 3B78     		ldrb	r3, [r7]
 3477 00a2 BFF35B8F 		dmb	ish
 3478 00a6 2C4E     		ldr	r6, .L223+44
 3479 00a8 DB07     		lsls	r3, r3, #31
 3480 00aa 0BD4     		bmi	.L206
 3481 00ac 3800     		movs	r0, r7
 3482 00ae FFF7FEFF 		bl	__cxa_guard_acquire
 3483              	.LVL307:
 3484 00b2 0028     		cmp	r0, #0
 3485 00b4 06D0     		beq	.L206
 3486              	.LVL308:
 3487              	.LBB1407:
 3488              	.LBB1408:
 3489              	.LBB1409:
ARM GAS  /tmp/ccCYtDPO.s 			page 113


  17:../../src/pin.h **** 
 3490              		.loc 8 17 0
 3491 00b6 1E4B     		ldr	r3, .L223+4
 3492              	.LBE1409:
 3493              	.LBE1408:
 3494              	.LBE1407:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3495              		.loc 8 21 0
 3496 00b8 3800     		movs	r0, r7
 3497              	.LBB1412:
 3498              	.LBB1411:
 3499              	.LBB1410:
  17:../../src/pin.h **** 
 3500              		.loc 8 17 0
 3501 00ba 3360     		str	r3, [r6]
 3502 00bc 0623     		movs	r3, #6
 3503 00be 7360     		str	r3, [r6, #4]
 3504              	.LVL309:
 3505              	.LBE1410:
 3506              	.LBE1411:
 3507              	.LBE1412:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3508              		.loc 8 21 0
 3509 00c0 FFF7FEFF 		bl	__cxa_guard_release
 3510              	.LVL310:
 3511              	.L206:
 3512              	.LBB1413:
 3513              	.LBB1414:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 3514              		.loc 16 49 0
 3515 00c4 0823     		movs	r3, #8
 3516 00c6 A269     		ldr	r2, [r4, #24]
 3517 00c8 1343     		orrs	r3, r2
 3518 00ca A361     		str	r3, [r4, #24]
 3519              	.LBE1414:
 3520              	.LBE1413:
  24:../../src/pin.h ****       return pin;
 3521              		.loc 8 24 0
 3522 00cc 3168     		ldr	r1, [r6]
 3523              	.LVL311:
 3524              	.LBB1415:
 3525              	.LBB1416:
 3526              	.LBB1417:
  74:../../src/periph/gpio_f1.h ****    else if constexpr (n == 6)  { CR.CNF_MODE6  = v; return *this; }
 3527              		.loc 9 74 0
 3528 00ce 234A     		ldr	r2, .L223+48
 3529 00d0 0B68     		ldr	r3, [r1]
 3530 00d2 1A40     		ands	r2, r3
 3531 00d4 8023     		movs	r3, #128
 3532 00d6 9B04     		lsls	r3, r3, #18
 3533 00d8 1343     		orrs	r3, r2
 3534 00da 0B60     		str	r3, [r1]
 3535              	.LVL312:
 3536              	.LBE1417:
 3537              	.LBE1416:
 3538              	.LBE1415:
 3539              	.LBE1418:
ARM GAS  /tmp/ccCYtDPO.s 			page 114


 3540              	.LBE1420:
 3541              	.LBB1421:
 3542              	.LBB1422:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3543              		.loc 8 21 0
 3544 00dc 204B     		ldr	r3, .L223+52
 3545 00de 1B78     		ldrb	r3, [r3]
 3546 00e0 BFF35B8F 		dmb	ish
 3547 00e4 1F4F     		ldr	r7, .L223+56
 3548 00e6 DB07     		lsls	r3, r3, #31
 3549 00e8 0BD4     		bmi	.L209
 3550 00ea 1D48     		ldr	r0, .L223+52
 3551 00ec FFF7FEFF 		bl	__cxa_guard_acquire
 3552              	.LVL313:
 3553 00f0 0028     		cmp	r0, #0
 3554 00f2 06D0     		beq	.L209
 3555              	.LVL314:
 3556              	.LBB1423:
 3557              	.LBB1424:
 3558              	.LBB1425:
  17:../../src/pin.h **** 
 3559              		.loc 8 17 0
 3560 00f4 0E4B     		ldr	r3, .L223+4
 3561              	.LBE1425:
 3562              	.LBE1424:
 3563              	.LBE1423:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3564              		.loc 8 21 0
 3565 00f6 1A48     		ldr	r0, .L223+52
 3566              	.LBB1428:
 3567              	.LBB1427:
 3568              	.LBB1426:
  17:../../src/pin.h **** 
 3569              		.loc 8 17 0
 3570 00f8 3B60     		str	r3, [r7]
 3571 00fa 0723     		movs	r3, #7
 3572 00fc 7B60     		str	r3, [r7, #4]
 3573              	.LVL315:
 3574              	.LBE1426:
 3575              	.LBE1427:
 3576              	.LBE1428:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3577              		.loc 8 21 0
 3578 00fe FFF7FEFF 		bl	__cxa_guard_release
 3579              	.LVL316:
 3580              	.L209:
 3581              	.LBB1429:
 3582              	.LBB1430:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 3583              		.loc 16 49 0
 3584 0102 0823     		movs	r3, #8
 3585              	.LBE1430:
 3586              	.LBE1429:
 3587              	.LBB1433:
 3588              	.LBB1434:
 3589              	.LBB1435:
  75:../../src/periph/gpio_f1.h ****    else if constexpr (n == 7)  { CR.CNF_MODE7  = v; return *this; }
ARM GAS  /tmp/ccCYtDPO.s 			page 115


 3590              		.loc 9 75 0
 3591 0104 8021     		movs	r1, #128
 3592              	.LBE1435:
 3593              	.LBE1434:
 3594              	.LBE1433:
 3595              	.LBB1442:
 3596              	.LBB1431:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 3597              		.loc 16 49 0
 3598 0106 A269     		ldr	r2, [r4, #24]
 3599              	.LBE1431:
 3600              	.LBE1442:
 3601              	.LBB1443:
 3602              	.LBB1439:
 3603              	.LBB1436:
 3604              		.loc 9 75 0
 3605 0108 8905     		lsls	r1, r1, #22
 3606              	.LBE1436:
 3607              	.LBE1439:
 3608              	.LBE1443:
 3609              	.LBB1444:
 3610              	.LBB1432:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 3611              		.loc 16 49 0
 3612 010a 1343     		orrs	r3, r2
 3613 010c A361     		str	r3, [r4, #24]
 3614              	.LBE1432:
 3615              	.LBE1444:
  24:../../src/pin.h ****       return pin;
 3616              		.loc 8 24 0
 3617 010e 3A68     		ldr	r2, [r7]
 3618              	.LVL317:
 3619              	.LBE1422:
 3620              	.LBE1421:
  45:../../src/pin.h **** {
  46:../../src/pin.h ****    return std::tie(Pin::make<Pins, mode>()...);
  47:../../src/pin.h **** }
 3621              		.loc 8 47 0
 3622 0110 2800     		movs	r0, r5
 3623              	.LBB1449:
 3624              	.LBB1447:
 3625              	.LBB1445:
 3626              	.LBB1440:
 3627              	.LBB1437:
 3628              		.loc 9 75 0
 3629 0112 1368     		ldr	r3, [r2]
 3630              	.LBE1437:
 3631              	.LBE1440:
 3632              	.LBE1445:
 3633              	.LBE1447:
 3634              	.LBE1449:
 3635              		.loc 8 47 0
 3636              		@ sp needed
 3637              	.LBB1450:
 3638              	.LBB1448:
 3639              	.LBB1446:
 3640              	.LBB1441:
ARM GAS  /tmp/ccCYtDPO.s 			page 116


 3641              	.LBB1438:
 3642              		.loc 9 75 0
 3643 0114 1B01     		lsls	r3, r3, #4
 3644 0116 1B09     		lsrs	r3, r3, #4
 3645 0118 0B43     		orrs	r3, r1
 3646 011a 1360     		str	r3, [r2]
 3647              	.LVL318:
 3648              	.LBE1438:
 3649              	.LBE1441:
 3650              	.LBE1446:
 3651              	.LBE1448:
 3652              	.LBE1450:
 3653              	.LBB1451:
 3654              	.LBB1452:
 3655              	.LBB1453:
 3656              	.LBB1454:
 3657              	.LBB1455:
 3658              	.LBB1456:
 3659              		.file 20 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tu
   1:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // <tuple> -*- C++ -*-
   2:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
   3:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // Copyright (C) 2007-2017 Free Software Foundation, Inc.
   4:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** //
   5:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // software; you can redistribute it and/or modify it under the
   7:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // terms of the GNU General Public License as published by the
   8:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // Free Software Foundation; either version 3, or (at your option)
   9:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // any later version.
  10:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  11:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // This library is distributed in the hope that it will be useful,
  12:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // GNU General Public License for more details.
  15:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  16:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // Under Section 7 of GPL version 3, you are granted additional
  17:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // permissions described in the GCC Runtime Library Exception, version
  18:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // 3.1, as published by the Free Software Foundation.
  19:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  20:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // You should have received a copy of the GNU General Public License and
  21:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // <http://www.gnu.org/licenses/>.
  24:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  25:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** /** @file include/tuple
  26:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****  *  This is a Standard C++ Library header.
  27:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****  */
  28:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  29:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #ifndef _GLIBCXX_TUPLE
  30:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #define _GLIBCXX_TUPLE 1
  31:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  32:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #pragma GCC system_header
  33:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  34:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #if __cplusplus < 201103L
  35:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** # include <bits/c++0x_warning.h>
  36:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #else
  37:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  38:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #include <utility>
ARM GAS  /tmp/ccCYtDPO.s 			page 117


  39:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #include <array>
  40:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #include <bits/uses_allocator.h>
  41:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #include <bits/invoke.h>
  42:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  43:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** {
  45:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  47:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   /**
  48:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****    *  @addtogroup utilities
  49:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****    *  @{
  50:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****    */
  51:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  52:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   template<typename... _Elements>
  53:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     class tuple;
  54:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  55:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   template<typename _Tp>
  56:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     struct __is_empty_non_tuple : is_empty<_Tp> { };
  57:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  58:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   // Using EBO for elements that are tuples causes ambiguous base errors.
  59:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   template<typename _El0, typename... _El>
  60:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     struct __is_empty_non_tuple<tuple<_El0, _El...>> : false_type { };
  61:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  62:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   // Use the Empty Base-class Optimization for empty, non-final types.
  63:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   template<typename _Tp>
  64:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     using __empty_not_final
  65:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     = typename conditional<__is_final(_Tp), false_type,
  66:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 			   __is_empty_non_tuple<_Tp>>::type;
  67:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  68:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   template<std::size_t _Idx, typename _Head,
  69:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	   bool = __empty_not_final<_Head>::value>
  70:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     struct _Head_base;
  71:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  72:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   template<std::size_t _Idx, typename _Head>
  73:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     struct _Head_base<_Idx, _Head, true>
  74:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     : public _Head
  75:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     {
  76:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       constexpr _Head_base()
  77:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       : _Head() { }
  78:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  79:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       constexpr _Head_base(const _Head& __h)
  80:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       : _Head(__h) { }
  81:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  82:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       constexpr _Head_base(const _Head_base&) = default;
  83:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       constexpr _Head_base(_Head_base&&) = default;
  84:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  85:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       template<typename _UHead>
  86:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****         constexpr _Head_base(_UHead&& __h)
  87:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	: _Head(std::forward<_UHead>(__h)) { }
  88:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  89:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       _Head_base(allocator_arg_t, __uses_alloc0)
  90:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       : _Head() { }
  91:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  92:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       template<typename _Alloc>
  93:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc1<_Alloc> __a)
  94:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	: _Head(allocator_arg, *__a._M_a) { }
  95:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
ARM GAS  /tmp/ccCYtDPO.s 			page 118


  96:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       template<typename _Alloc>
  97:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc2<_Alloc> __a)
  98:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	: _Head(*__a._M_a) { }
  99:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       template<typename _UHead>
 101:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	_Head_base(__uses_alloc0, _UHead&& __uhead)
 102:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	: _Head(std::forward<_UHead>(__uhead)) { }
 103:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 104:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       template<typename _Alloc, typename _UHead>
 105:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	_Head_base(__uses_alloc1<_Alloc> __a, _UHead&& __uhead)
 106:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	: _Head(allocator_arg, *__a._M_a, std::forward<_UHead>(__uhead)) { }
 107:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 108:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       template<typename _Alloc, typename _UHead>
 109:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	_Head_base(__uses_alloc2<_Alloc> __a, _UHead&& __uhead)
 110:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	: _Head(std::forward<_UHead>(__uhead), *__a._M_a) { }
 111:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 112:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       static constexpr _Head&
 113:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       _M_head(_Head_base& __b) noexcept { return __b; }
 114:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 115:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       static constexpr const _Head&
 116:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       _M_head(const _Head_base& __b) noexcept { return __b; }
 117:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     };
 118:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 119:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   template<std::size_t _Idx, typename _Head>
 120:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     struct _Head_base<_Idx, _Head, false>
 121:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     {
 122:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       constexpr _Head_base()
 123:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       : _M_head_impl() { }
 124:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 125:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       constexpr _Head_base(const _Head& __h)
 126:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       : _M_head_impl(__h) { }
 3660              		.loc 20 126 0
 3661 011c 0B4B     		ldr	r3, .L223+32
 3662              	.LBE1456:
 3663              	.LBE1455:
 3664              	.LBB1458:
 3665              	.LBB1459:
 3666              	.LBB1460:
 3667              	.LBB1461:
 3668 011e 2F60     		str	r7, [r5]
 3669              	.LVL319:
 3670              	.LBE1461:
 3671              	.LBE1460:
 3672              	.LBE1459:
 3673              	.LBE1458:
 3674              	.LBB1464:
 3675              	.LBB1457:
 3676 0120 AB60     		str	r3, [r5, #8]
 3677              	.LBE1457:
 3678              	.LBE1464:
 3679              	.LBE1454:
 3680              	.LBB1466:
 3681              	.LBB1467:
 3682 0122 044B     		ldr	r3, .L223+8
 3683              	.LBE1467:
 3684              	.LBE1466:
 3685              	.LBB1469:
ARM GAS  /tmp/ccCYtDPO.s 			page 119


 3686              	.LBB1465:
 3687              	.LBB1462:
 3688              	.LBB1463:
 3689 0124 6E60     		str	r6, [r5, #4]
 3690              	.LVL320:
 3691              	.LBE1463:
 3692              	.LBE1462:
 3693              	.LBE1465:
 3694              	.LBE1469:
 3695              	.LBB1470:
 3696              	.LBB1468:
 3697 0126 EB60     		str	r3, [r5, #12]
 3698              	.LVL321:
 3699              	.LVL322:
 3700              	.LBE1468:
 3701              	.LBE1470:
 3702              	.LBE1453:
 3703              	.LBE1452:
 3704              	.LBE1451:
 3705              		.loc 8 47 0
 3706 0128 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3707              	.L224:
 3708 012a C046     		.align	2
 3709              	.L223:
 3710 012c 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin
 3711 0130 000C0140 		.word	1073810432
 3712 0134 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin
 3713 0138 00100240 		.word	1073876992
 3714 013c 00000140 		.word	1073807360
 3715 0140 FFFFFFF8 		.word	-117440513
 3716 0144 FFFFF0FF 		.word	-983041
 3717 0148 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin
 3718 014c 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin
 3719 0150 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin
 3720 0154 FFFF0FFF 		.word	-15728641
 3721 0158 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin
 3722 015c FFFFFFF0 		.word	-251658241
 3723 0160 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin
 3724 0164 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin
 3725              		.cfi_endproc
 3726              	.LFE3142:
 3728              		.weak	_Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi
 3729              		.thumb_set _Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3
 3730              		.section	.text._ZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EE
 3731              		.align	1
 3732              		.weak	_ZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3
 3733              		.syntax unified
 3734              		.code	16
 3735              		.thumb_func
 3736              		.fpu softvfp
 3738              	_ZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4E
 3739              	.LFB3027:
 127:../../src/hd44780.h **** {
 3740              		.loc 10 127 0
 3741              		.cfi_startproc
 3742              		@ args = 0, pretend = 0, frame = 24
 3743              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccCYtDPO.s 			page 120


 3744              	.LVL323:
 3745 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3746              	.LCFI31:
 3747              		.cfi_def_cfa_offset 20
 3748              		.cfi_offset 4, -20
 3749              		.cfi_offset 5, -16
 3750              		.cfi_offset 6, -12
 3751              		.cfi_offset 7, -8
 3752              		.cfi_offset 14, -4
 134:../../src/hd44780.h ****         Pin::template make<RS, mcu::PinMode::Output>(),
 3753              		.loc 10 134 0
 3754 0002 0126     		movs	r6, #1
 3755 0004 604B     		ldr	r3, .L256
 127:../../src/hd44780.h **** {
 3756              		.loc 10 127 0
 3757 0006 87B0     		sub	sp, sp, #28
 3758              	.LCFI32:
 3759              		.cfi_def_cfa_offset 48
 127:../../src/hd44780.h **** {
 3760              		.loc 10 127 0
 3761 0008 0190     		str	r0, [sp, #4]
 134:../../src/hd44780.h ****         Pin::template make<RS, mcu::PinMode::Output>(),
 3762              		.loc 10 134 0
 3763 000a 1B78     		ldrb	r3, [r3]
 3764 000c BFF35B8F 		dmb	ish
 3765 0010 5E4C     		ldr	r4, .L256+4
 3766 0012 3342     		tst	r3, r6
 3767 0014 00D0     		beq	.LCB3421
 3768 0016 87E0     		b	.L227	@long jump
 3769              	.LCB3421:
 134:../../src/hd44780.h ****         Pin::template make<RS, mcu::PinMode::Output>(),
 3770              		.loc 10 134 0 is_stmt 0 discriminator 1
 3771 0018 5B48     		ldr	r0, .L256
 3772              	.LVL324:
 3773 001a FFF7FEFF 		bl	__cxa_guard_acquire
 3774              	.LVL325:
 3775 001e 0028     		cmp	r0, #0
 3776 0020 00D1     		bne	.LCB3427
 3777 0022 81E0     		b	.L227	@long jump
 3778              	.LCB3427:
 3779              	.LBB1537:
 3780              	.LBB1538:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3781              		.loc 8 21 0 is_stmt 1
 3782 0024 5A4D     		ldr	r5, .L256+8
 3783 0026 2B78     		ldrb	r3, [r5]
 3784 0028 BFF35B8F 		dmb	ish
 3785 002c 594F     		ldr	r7, .L256+12
 3786 002e 3342     		tst	r3, r6
 3787 0030 0BD1     		bne	.L230
 3788 0032 2800     		movs	r0, r5
 3789 0034 FFF7FEFF 		bl	__cxa_guard_acquire
 3790              	.LVL326:
 3791 0038 0028     		cmp	r0, #0
 3792 003a 06D0     		beq	.L230
 3793              	.LVL327:
 3794              	.LBB1539:
ARM GAS  /tmp/ccCYtDPO.s 			page 121


 3795              	.LBB1540:
 3796              	.LBB1541:
  17:../../src/pin.h **** 
 3797              		.loc 8 17 0
 3798 003c 564B     		ldr	r3, .L256+16
 3799              	.LBE1541:
 3800              	.LBE1540:
 3801              	.LBE1539:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3802              		.loc 8 21 0
 3803 003e 2800     		movs	r0, r5
 3804              	.LBB1544:
 3805              	.LBB1543:
 3806              	.LBB1542:
  17:../../src/pin.h **** 
 3807              		.loc 8 17 0
 3808 0040 3B60     		str	r3, [r7]
 3809 0042 0C23     		movs	r3, #12
 3810 0044 7B60     		str	r3, [r7, #4]
 3811              	.LVL328:
 3812              	.LBE1542:
 3813              	.LBE1543:
 3814              	.LBE1544:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3815              		.loc 8 21 0
 3816 0046 FFF7FEFF 		bl	__cxa_guard_release
 3817              	.LVL329:
 3818              	.L230:
 3819              	.LBB1545:
 3820              	.LBB1546:
  50:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOD) APB2ENR.IOPDEN = true;
 3821              		.loc 16 50 0
 3822 004a 1023     		movs	r3, #16
 3823 004c 534D     		ldr	r5, .L256+20
 3824 004e AA69     		ldr	r2, [r5, #24]
 3825 0050 1343     		orrs	r3, r2
 3826 0052 AB61     		str	r3, [r5, #24]
 3827              	.LVL330:
 3828              	.LBE1546:
 3829              	.LBE1545:
  24:../../src/pin.h ****       return pin;
 3830              		.loc 8 24 0
 3831 0054 3968     		ldr	r1, [r7]
 3832              	.LVL331:
 3833              	.LBB1547:
 3834              	.LBB1548:
 3835              	.LBB1549:
  76:../../src/periph/gpio_f1.h ****    else if constexpr (n == 8)  { CR.CNF_MODE8  = v; return *this; }
  77:../../src/periph/gpio_f1.h ****    else if constexpr (n == 9)  { CR.CNF_MODE9  = v; return *this; }
  78:../../src/periph/gpio_f1.h ****    else if constexpr (n == 10) { CR.CNF_MODE10 = v; return *this; }
  79:../../src/periph/gpio_f1.h ****    else if constexpr (n == 11) { CR.CNF_MODE11 = v; return *this; }
  80:../../src/periph/gpio_f1.h ****    else if constexpr (n == 12) { CR.CNF_MODE12 = v; return *this; }
 3836              		.loc 9 80 0
 3837 0056 524A     		ldr	r2, .L256+24
 3838 0058 4B68     		ldr	r3, [r1, #4]
 3839 005a 1A40     		ands	r2, r3
 3840 005c 8023     		movs	r3, #128
ARM GAS  /tmp/ccCYtDPO.s 			page 122


 3841 005e 9B02     		lsls	r3, r3, #10
 3842 0060 1343     		orrs	r3, r2
 3843 0062 4B60     		str	r3, [r1, #4]
 3844              	.LVL332:
 3845              	.LBE1549:
 3846              	.LBE1548:
 3847              	.LBE1547:
 3848              	.LBE1538:
 3849              	.LBE1537:
 3850              	.LBB1550:
 3851              	.LBB1551:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3852              		.loc 8 21 0
 3853 0064 4F4B     		ldr	r3, .L256+28
 3854 0066 1B78     		ldrb	r3, [r3]
 3855 0068 BFF35B8F 		dmb	ish
 3856 006c 4E4E     		ldr	r6, .L256+32
 3857 006e DB07     		lsls	r3, r3, #31
 3858 0070 0BD4     		bmi	.L233
 3859 0072 4C48     		ldr	r0, .L256+28
 3860 0074 FFF7FEFF 		bl	__cxa_guard_acquire
 3861              	.LVL333:
 3862 0078 0028     		cmp	r0, #0
 3863 007a 06D0     		beq	.L233
 3864              	.LVL334:
 3865              	.LBB1552:
 3866              	.LBB1553:
 3867              	.LBB1554:
  17:../../src/pin.h **** 
 3868              		.loc 8 17 0
 3869 007c 4B4B     		ldr	r3, .L256+36
 3870              	.LBE1554:
 3871              	.LBE1553:
 3872              	.LBE1552:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3873              		.loc 8 21 0
 3874 007e 4948     		ldr	r0, .L256+28
 3875              	.LBB1557:
 3876              	.LBB1556:
 3877              	.LBB1555:
  17:../../src/pin.h **** 
 3878              		.loc 8 17 0
 3879 0080 3360     		str	r3, [r6]
 3880 0082 0223     		movs	r3, #2
 3881 0084 7360     		str	r3, [r6, #4]
 3882              	.LVL335:
 3883              	.LBE1555:
 3884              	.LBE1556:
 3885              	.LBE1557:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3886              		.loc 8 21 0
 3887 0086 FFF7FEFF 		bl	__cxa_guard_release
 3888              	.LVL336:
 3889              	.L233:
 3890              	.LBB1558:
 3891              	.LBB1559:
  51:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOE) APB2ENR.IOPEEN = true;
ARM GAS  /tmp/ccCYtDPO.s 			page 123


 3892              		.loc 16 51 0
 3893 008a 2023     		movs	r3, #32
 3894 008c AA69     		ldr	r2, [r5, #24]
 3895 008e 1343     		orrs	r3, r2
 3896 0090 AB61     		str	r3, [r5, #24]
 3897              	.LBE1559:
 3898              	.LBE1558:
  24:../../src/pin.h ****       return pin;
 3899              		.loc 8 24 0
 3900 0092 3168     		ldr	r1, [r6]
 3901              	.LVL337:
 3902              	.LBB1560:
 3903              	.LBB1561:
 3904              	.LBB1562:
  70:../../src/periph/gpio_f1.h ****    else if constexpr (n == 3)  { CR.CNF_MODE3  = v; return *this; }
 3905              		.loc 9 70 0
 3906 0094 464A     		ldr	r2, .L256+40
 3907 0096 0B68     		ldr	r3, [r1]
 3908              	.LBE1562:
 3909              	.LBE1561:
 3910              	.LBE1560:
 3911              	.LBE1551:
 3912              	.LBE1550:
 3913              	.LBB1567:
 3914              	.LBB1568:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3915              		.loc 8 21 0
 3916 0098 464E     		ldr	r6, .L256+44
 3917              	.LBE1568:
 3918              	.LBE1567:
 3919              	.LBB1594:
 3920              	.LBB1566:
 3921              	.LBB1565:
 3922              	.LBB1564:
 3923              	.LBB1563:
  70:../../src/periph/gpio_f1.h ****    else if constexpr (n == 3)  { CR.CNF_MODE3  = v; return *this; }
 3924              		.loc 9 70 0
 3925 009a 1A40     		ands	r2, r3
 3926 009c 8023     		movs	r3, #128
 3927 009e 9B00     		lsls	r3, r3, #2
 3928 00a0 1343     		orrs	r3, r2
 3929 00a2 0B60     		str	r3, [r1]
 3930              	.LVL338:
 3931              	.LBE1563:
 3932              	.LBE1564:
 3933              	.LBE1565:
 3934              	.LBE1566:
 3935              	.LBE1594:
 3936              	.LBB1595:
 3937              	.LBB1593:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3938              		.loc 8 21 0
 3939 00a4 3378     		ldrb	r3, [r6]
 3940 00a6 BFF35B8F 		dmb	ish
 3941 00aa DB07     		lsls	r3, r3, #31
 3942 00ac 0BD4     		bmi	.L236
 3943 00ae 3000     		movs	r0, r6
ARM GAS  /tmp/ccCYtDPO.s 			page 124


 3944 00b0 FFF7FEFF 		bl	__cxa_guard_acquire
 3945              	.LVL339:
 3946 00b4 0028     		cmp	r0, #0
 3947 00b6 06D0     		beq	.L236
 3948              	.LVL340:
 3949              	.LBB1569:
 3950              	.LBB1570:
 3951              	.LBB1571:
  17:../../src/pin.h **** 
 3952              		.loc 8 17 0
 3953 00b8 0322     		movs	r2, #3
 3954 00ba 3F4B     		ldr	r3, .L256+48
 3955 00bc 3F49     		ldr	r1, .L256+52
 3956              	.LBE1571:
 3957              	.LBE1570:
 3958              	.LBE1569:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3959              		.loc 8 21 0
 3960 00be 3000     		movs	r0, r6
 3961              	.LBB1574:
 3962              	.LBB1573:
 3963              	.LBB1572:
  17:../../src/pin.h **** 
 3964              		.loc 8 17 0
 3965 00c0 06C3     		stmia	r3!, {r1, r2}
 3966              	.LVL341:
 3967              	.LBE1572:
 3968              	.LBE1573:
 3969              	.LBE1574:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3970              		.loc 8 21 0
 3971 00c2 FFF7FEFF 		bl	__cxa_guard_release
 3972              	.LVL342:
 3973              	.L236:
 3974              	.LBB1575:
 3975              	.LBB1576:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 3976              		.loc 16 49 0
 3977 00c6 0823     		movs	r3, #8
 3978 00c8 AA69     		ldr	r2, [r5, #24]
 3979              	.LBE1576:
 3980              	.LBE1575:
  24:../../src/pin.h ****       return pin;
 3981              		.loc 8 24 0
 3982 00ca 3B49     		ldr	r1, .L256+48
 3983              	.LBB1578:
 3984              	.LBB1577:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 3985              		.loc 16 49 0
 3986 00cc 1343     		orrs	r3, r2
 3987 00ce AB61     		str	r3, [r5, #24]
 3988              	.LBE1577:
 3989              	.LBE1578:
 3990              	.LBB1579:
 3991              	.LBB1580:
 3992              	.LBB1581:
 3993              		.loc 16 53 0
ARM GAS  /tmp/ccCYtDPO.s 			page 125


 3994 00d0 0123     		movs	r3, #1
 3995 00d2 AA69     		ldr	r2, [r5, #24]
 3996              	.LBE1581:
 3997              	.LBE1580:
 3998              	.LBE1579:
  24:../../src/pin.h ****       return pin;
 3999              		.loc 8 24 0
 4000 00d4 0868     		ldr	r0, [r1]
 4001              	.LVL343:
 4002              	.LBB1592:
 4003              	.LBB1584:
 4004              	.LBB1582:
 4005              		.loc 16 53 0
 4006 00d6 1343     		orrs	r3, r2
 4007              	.LBE1582:
 4008              	.LBE1584:
 4009              	.LBB1585:
 4010              	.LBB1586:
 4011              		.loc 19 23 0
 4012 00d8 394A     		ldr	r2, .L256+56
 4013              	.LBE1586:
 4014              	.LBE1585:
 4015              	.LBB1588:
 4016              	.LBB1583:
 4017              		.loc 16 53 0
 4018 00da AB61     		str	r3, [r5, #24]
 4019              	.LVL344:
 4020              	.LBE1583:
 4021              	.LBE1588:
 4022              	.LBB1589:
 4023              	.LBB1587:
 4024              		.loc 19 23 0
 4025 00dc 5368     		ldr	r3, [r2, #4]
 4026 00de 394D     		ldr	r5, .L256+60
 4027 00e0 1D40     		ands	r5, r3
 4028 00e2 8023     		movs	r3, #128
 4029 00e4 9B04     		lsls	r3, r3, #18
 4030 00e6 2B43     		orrs	r3, r5
 4031 00e8 5360     		str	r3, [r2, #4]
 4032              	.LVL345:
 4033              	.LBE1587:
 4034              	.LBE1589:
 4035              	.LBB1590:
 4036              	.LBB1591:
  71:../../src/periph/gpio_f1.h ****    else if constexpr (n == 4)  { CR.CNF_MODE4  = v; return *this; }
 4037              		.loc 9 71 0
 4038 00ea 0368     		ldr	r3, [r0]
 4039 00ec 364A     		ldr	r2, .L256+64
 4040 00ee 1A40     		ands	r2, r3
 4041 00f0 8023     		movs	r3, #128
 4042 00f2 9B01     		lsls	r3, r3, #6
 4043 00f4 1343     		orrs	r3, r2
 4044 00f6 0360     		str	r3, [r0]
 4045              	.LVL346:
 4046              	.LBE1591:
 4047              	.LBE1590:
 4048              	.LBE1592:
ARM GAS  /tmp/ccCYtDPO.s 			page 126


 4049              	.LBE1593:
 4050              	.LBE1595:
 4051              	.LBB1596:
 4052              	.LBB1597:
 4053              	.LBB1598:
 4054              	.LBB1599:
 4055              	.LBB1600:
 4056              	.LBB1601:
 4057              	.LBB1602:
 4058              	.LBB1603:
   6:../../src/list.h **** {
 4059              		.loc 12 6 0
 4060 00f8 0023     		movs	r3, #0
 4061              	.LBE1603:
 4062              	.LBE1602:
 4063              	.LBE1601:
 4064              	.LBE1600:
 4065              	.LBE1599:
  65:../../src/hd44780.h ****     {}
 4066              		.loc 10 65 0
 4067 00fa 344A     		ldr	r2, .L256+68
 4068              	.LBB1613:
 4069              	.LBB1610:
 4070              	.LBB1608:
 4071              	.LBB1606:
 4072              	.LBB1604:
   6:../../src/list.h **** {
 4073              		.loc 12 6 0
 4074 00fc 6360     		str	r3, [r4, #4]
 4075              	.LBE1604:
 4076              	.LBE1606:
 4077              	.LBE1608:
 4078              	.LBE1610:
 4079              	.LBE1613:
  65:../../src/hd44780.h ****     {}
 4080              		.loc 10 65 0
 4081 00fe 0832     		adds	r2, r2, #8
 4082 0100 2260     		str	r2, [r4]
 4083 0102 294A     		ldr	r2, .L256+32
 4084              	.LBB1614:
 4085              	.LBB1611:
 4086              	.LBB1609:
 4087              	.LBB1607:
 4088              	.LBB1605:
   6:../../src/list.h **** {
 4089              		.loc 12 6 0
 4090 0104 A360     		str	r3, [r4, #8]
 4091              	.LVL347:
 4092              	.LBE1605:
 4093              	.LBE1607:
 4094              	.LBE1609:
 4095              	.LBE1611:
 4096              	.LBE1614:
  65:../../src/hd44780.h ****     {}
 4097              		.loc 10 65 0
 4098 0106 6261     		str	r2, [r4, #20]
 4099 0108 2C4A     		ldr	r2, .L256+52
ARM GAS  /tmp/ccCYtDPO.s 			page 127


 4100              	.LBB1615:
 4101              	.LBB1612:
  44:../../src/timers.h **** {
 4102              		.loc 1 44 0
 4103 010a 2373     		strb	r3, [r4, #12]
 4104              	.LVL348:
 4105              	.LBE1612:
 4106              	.LBE1615:
  65:../../src/hd44780.h ****     {}
 4107              		.loc 10 65 0
 4108 010c E261     		str	r2, [r4, #28]
 4109 010e 019A     		ldr	r2, [sp, #4]
 4110              	.LBE1598:
 4111              	.LBE1597:
 4112              	.LBE1596:
 134:../../src/hd44780.h ****         Pin::template make<RS, mcu::PinMode::Output>(),
 4113              		.loc 10 134 0
 4114 0110 1D48     		ldr	r0, .L256
 4115              	.LBB1618:
 4116              	.LBB1617:
 4117              	.LBB1616:
  65:../../src/hd44780.h ****     {}
 4118              		.loc 10 65 0
 4119 0112 2262     		str	r2, [r4, #32]
 4120 0114 2E4A     		ldr	r2, .L256+72
 4121 0116 6373     		strb	r3, [r4, #13]
 4122 0118 6262     		str	r2, [r4, #36]
 4123 011a 2E4A     		ldr	r2, .L256+76
 4124 011c 2761     		str	r7, [r4, #16]
 4125 011e A161     		str	r1, [r4, #24]
 4126 0120 A262     		str	r2, [r4, #40]
 4127 0122 2363     		str	r3, [r4, #48]
 4128              	.LVL349:
 4129              	.LBE1616:
 4130              	.LBE1617:
 4131              	.LBE1618:
 134:../../src/hd44780.h ****         Pin::template make<RS, mcu::PinMode::Output>(),
 4132              		.loc 10 134 0
 4133 0124 FFF7FEFF 		bl	__cxa_guard_release
 4134              	.LVL350:
 4135              	.L227:
 144:../../src/hd44780.h **** 
 4136              		.loc 10 144 0
 4137 0128 02A8     		add	r0, sp, #8
 4138 012a FFF7FEFF 		bl	_Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EE
 4139              	.LVL351:
 146:../../src/hd44780.h ****     screen.tick_subscribe<Faster::x10>();
 4140              		.loc 10 146 0
 4141 012e 2000     		movs	r0, r4
 4142 0130 FFF7FEFF 		bl	_ZN7HD447804initEv
 4143              	.LVL352:
 4144              	.LBB1619:
 4145              	.LBB1620:
 186:../../src/timers.h **** 
 187:../../src/timers.h **** 
 188:../../src/timers.h **** 
 189:../../src/timers.h **** template<Faster x> // –Ω–∞ —Å–∫–æ–ª—å–∫–æ –±—ã—Å—Ç—Ä–µ–µ
ARM GAS  /tmp/ccCYtDPO.s 			page 128


 190:../../src/timers.h **** void TickSubscriber::tick_subscribe()
 191:../../src/timers.h **** {
 192:../../src/timers.h ****     if (not subscribed) {
 4146              		.loc 1 192 0
 4147 0134 237B     		ldrb	r3, [r4, #12]
 4148 0136 002B     		cmp	r3, #0
 4149 0138 22D1     		bne	.L238
 193:../../src/timers.h ****         subscribed = true;
 4150              		.loc 1 193 0
 4151 013a 0133     		adds	r3, r3, #1
 4152 013c 2373     		strb	r3, [r4, #12]
 4153              	.LVL353:
 4154              	.LBB1621:
 4155              	.LBB1622:
 4156              	.LBB1623:
 4157              	.LBB1624:
 4158              	.LBB1625:
  53:../../src/list.h ****    if (last)
 4159              		.loc 12 53 0
 4160 013e 264B     		ldr	r3, .L256+80
 4161 0140 DA68     		ldr	r2, [r3, #12]
 4162 0142 6260     		str	r2, [r4, #4]
  54:../../src/list.h ****       last->next = &v;
 4163              		.loc 12 54 0
 4164 0144 002A     		cmp	r2, #0
 4165 0146 00D0     		beq	.L239
  55:../../src/list.h ****    last = &v;
 4166              		.loc 12 55 0
 4167 0148 9460     		str	r4, [r2, #8]
 4168              	.L239:
  57:../../src/list.h ****       first = &v;
 4169              		.loc 12 57 0
 4170 014a 9A68     		ldr	r2, [r3, #8]
  56:../../src/list.h ****    if (not first)
 4171              		.loc 12 56 0
 4172 014c DC60     		str	r4, [r3, #12]
  57:../../src/list.h ****       first = &v;
 4173              		.loc 12 57 0
 4174 014e 002A     		cmp	r2, #0
 4175 0150 00D1     		bne	.L240
  58:../../src/list.h **** }
 4176              		.loc 12 58 0
 4177 0152 9C60     		str	r4, [r3, #8]
 4178              	.L240:
 4179              	.LVL354:
 4180              	.LBE1625:
 4181              	.LBE1624:
 4182              	.LBE1623:
  95:../../src/timers.h ****     REF(SysTick).initInterrupt<1000_us/multiplier>();
 4183              		.loc 1 95 0
 4184 0154 0A22     		movs	r2, #10
 4185 0156 5A61     		str	r2, [r3, #20]
 4186              	.LVL355:
 4187              	.LBB1626:
 4188              	.LBB1627:
 4189              	.LBB1628:
 4190              	.LBB1629:
ARM GAS  /tmp/ccCYtDPO.s 			page 129


  25:../../src/periph/systick.h ****     uint32_t get()             { return VAL; }
 4191              		.loc 4 25 0
 4192 0158 204B     		ldr	r3, .L256+84
 4193 015a 093A     		subs	r2, r2, #9
 4194 015c 1968     		ldr	r1, [r3]
 4195 015e 9143     		bics	r1, r2
 4196 0160 1960     		str	r1, [r3]
 4197              	.LVL356:
 4198              	.LBE1629:
 4199              	.LBE1628:
 4200              	.LBB1630:
 4201              	.LBB1631:
  21:../../src/periph/systick.h ****     void clear()               { VAL = 0; }
 4202              		.loc 4 21 0
 4203 0162 1F49     		ldr	r1, .L256+88
 4204 0164 5960     		str	r1, [r3, #4]
 4205              	.LVL357:
 4206              	.LBE1631:
 4207              	.LBE1630:
 4208              	.LBB1632:
 4209              	.LBB1633:
  22:../../src/periph/systick.h ****     void setSource (Clock v)   { CTRL.CLKSOURCE = v; }
 4210              		.loc 4 22 0
 4211 0166 0021     		movs	r1, #0
 4212 0168 9960     		str	r1, [r3, #8]
 4213              	.LVL358:
 4214              	.LBE1633:
 4215              	.LBE1632:
 4216              	.LBB1634:
 4217              	.LBB1635:
  23:../../src/periph/systick.h ****     void enableInterrupt()     { CTRL.TICKINT = true; }
 4218              		.loc 4 23 0
 4219 016a 1868     		ldr	r0, [r3]
 4220 016c 0431     		adds	r1, r1, #4
 4221 016e 0143     		orrs	r1, r0
 4222 0170 1960     		str	r1, [r3]
 4223              	.LVL359:
 4224              	.LBE1635:
 4225              	.LBE1634:
 4226              	.LBB1636:
 4227              	.LBB1637:
  24:../../src/periph/systick.h ****     void enable(bool v = true) { CTRL.ENABLE = v; }
 4228              		.loc 4 24 0
 4229 0172 0221     		movs	r1, #2
 4230 0174 1868     		ldr	r0, [r3]
 4231 0176 0143     		orrs	r1, r0
 4232 0178 1960     		str	r1, [r3]
 4233              	.LVL360:
 4234              	.LBE1637:
 4235              	.LBE1636:
 4236              	.LBB1638:
 4237              	.LBB1639:
  25:../../src/periph/systick.h ****     uint32_t get()             { return VAL; }
 4238              		.loc 4 25 0
 4239 017a 1968     		ldr	r1, [r3]
 4240 017c 0A43     		orrs	r2, r1
 4241 017e 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccCYtDPO.s 			page 130


 4242              	.LVL361:
 4243              	.L238:
 4244              	.LBE1639:
 4245              	.LBE1638:
 4246              	.LBE1627:
 4247              	.LBE1626:
 4248              	.LBE1622:
 4249              	.LBE1621:
 4250              	.LBE1620:
 4251              	.LBE1619:
 150:../../src/hd44780.h **** 
 4252              		.loc 10 150 0
 4253 0180 2000     		movs	r0, r4
 4254 0182 07B0     		add	sp, sp, #28
 4255              		@ sp needed
 4256 0184 F0BD     		pop	{r4, r5, r6, r7, pc}
 4257              	.L257:
 4258 0186 C046     		.align	2
 4259              	.L256:
 4260 0188 00000000 		.word	_ZGVZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_I
 4261 018c 00000000 		.word	_ZZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS
 4262 0190 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin
 4263 0194 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin
 4264 0198 00100140 		.word	1073811456
 4265 019c 00100240 		.word	1073876992
 4266 01a0 FFFFF0FF 		.word	-983041
 4267 01a4 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin
 4268 01a8 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin
 4269 01ac 00140140 		.word	1073812480
 4270 01b0 FFF0FFFF 		.word	-3841
 4271 01b4 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin
 4272 01b8 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin
 4273 01bc 000C0140 		.word	1073810432
 4274 01c0 00000140 		.word	1073807360
 4275 01c4 FFFFFFF8 		.word	-117440513
 4276 01c8 FF0FFFFF 		.word	-61441
 4277 01cc 00000000 		.word	.LANCHOR1
 4278 01d0 00000000 		.word	_ZN4metaL8generateIL_Z10BSRR_valueIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5EEENS3_ILS4
 4279 01d4 00000000 		.word	_ZN4metaL8generateIL_Z12BSRR_commandIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5EEENS3_IL
 4280 01d8 00000000 		.word	.LANCHOR0
 4281 01dc 10E000E0 		.word	-536813552
 4282 01e0 1F1C0000 		.word	7199
 4283              		.cfi_endproc
 4284              	.LFE3027:
 4286              		.section	.text._ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_I
 4287              		.align	1
 4288              		.weak	_ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3
 4289              		.syntax unified
 4290              		.code	16
 4291              		.thumb_func
 4292              		.fpu softvfp
 4294              	_ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_
 4295              	.LFB2944:
 4296              		.file 21 "../../src/example/example_select_screen.h"
   1:../../src/example/example_select_screen.h **** #pragma once
   2:../../src/example/example_select_screen.h **** #include "hd44780.h"
   3:../../src/example/example_select_screen.h **** // #include "string_buffer.h"
ARM GAS  /tmp/ccCYtDPO.s 			page 131


   4:../../src/example/example_select_screen.h **** #include "timers.h"
   5:../../src/example/example_select_screen.h **** #include "select_screen.h"
   6:../../src/example/example_select_screen.h **** 
   7:../../src/example/example_select_screen.h **** namespace EO81 {
   8:../../src/example/example_select_screen.h ****     using E    = mcu::PB3;       
   9:../../src/example/example_select_screen.h ****     using RW   = mcu::PD2;       
  10:../../src/example/example_select_screen.h ****     using RS   = mcu::PC12;      
  11:../../src/example/example_select_screen.h ****     using DB4  = mcu::PB4;       
  12:../../src/example/example_select_screen.h ****     using DB5  = mcu::PB5;
  13:../../src/example/example_select_screen.h ****     using DB6  = mcu::PB6;    
  14:../../src/example/example_select_screen.h ****     using DB7  = mcu::PB7;
  15:../../src/example/example_select_screen.h ****     using Up   = mcu::PB8;
  16:../../src/example/example_select_screen.h ****     using Down = mcu::PB9;
  17:../../src/example/example_select_screen.h **** }
  18:../../src/example/example_select_screen.h **** 
  19:../../src/example/example_select_screen.h **** namespace mcu::example {
  20:../../src/example/example_select_screen.h **** 
  21:../../src/example/example_select_screen.h **** template<class RS, class RW, class E, class DB4, class DB5, class DB6, class DB7, class Up, class D
  22:../../src/example/example_select_screen.h **** struct select_screen : TickSubscriber {
  23:../../src/example/example_select_screen.h **** 
  24:../../src/example/example_select_screen.h ****     String_buffer lcd;
  25:../../src/example/example_select_screen.h ****     HD44780& _;
  26:../../src/example/example_select_screen.h ****     Button& up;
  27:../../src/example/example_select_screen.h ****     Button& down;
  28:../../src/example/example_select_screen.h ****     Timer timer{50_ms};
  29:../../src/example/example_select_screen.h ****     
  30:../../src/example/example_select_screen.h ****     Screen<6> screen;
  31:../../src/example/example_select_screen.h **** 
  32:../../src/example/example_select_screen.h ****     select_screen()
 4297              		.loc 21 32 0
 4298              		.cfi_startproc
 4299              		@ args = 0, pretend = 0, frame = 16
 4300              		@ frame_needed = 0, uses_anonymous_args = 0
 4301              	.LVL362:
 4302              	.LBB1765:
  33:../../src/example/example_select_screen.h ****         : lcd  {}
  34:../../src/example/example_select_screen.h ****         , _    { HD44780::make<RS, RW, E, DB4, DB5, DB6, DB7>(lcd.get_buffer()) }
  35:../../src/example/example_select_screen.h ****         , up   { mcu::Button::make<Up>()   }
  36:../../src/example/example_select_screen.h ****         , down { mcu::Button::make<Down>() }
  37:../../src/example/example_select_screen.h ****         , screen {
  38:../../src/example/example_select_screen.h ****               up, down, lcd
  39:../../src/example/example_select_screen.h ****             , Line {"–ê–≤–∞—Ä–∏–∏"      ,[]{}}
  40:../../src/example/example_select_screen.h ****             , Line {"–ù–∞—Ä–∞–±–æ—Ç–∫–∞"   ,[]{}}
  41:../../src/example/example_select_screen.h ****             , Line {"–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è",[]{}}
  42:../../src/example/example_select_screen.h ****             , Line {"–õ–æ–≥ —Ä–∞–±–æ—Ç—ã"  ,[]{}}
  43:../../src/example/example_select_screen.h ****             , Line {"–ù–∞—Å—Ç—Ä–æ–π–∫–∏"   ,[]{}}
  44:../../src/example/example_select_screen.h ****             , Line {"–ù–∞—Ä–∞–±–æ—Ç–∫–∞"   ,[]{}}
  45:../../src/example/example_select_screen.h ****         }
 4303              		.loc 21 45 0
 4304 0000 AB4A     		ldr	r2, .L319
 4305              	.LBE1765:
  32:../../src/example/example_select_screen.h ****         : lcd  {}
 4306              		.loc 21 32 0
 4307 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 4308              	.LCFI33:
 4309              		.cfi_def_cfa_offset 20
 4310              		.cfi_offset 4, -20
ARM GAS  /tmp/ccCYtDPO.s 			page 132


 4311              		.cfi_offset 5, -16
 4312              		.cfi_offset 6, -12
 4313              		.cfi_offset 7, -8
 4314              		.cfi_offset 14, -4
 4315              	.LBB1977:
 4316              	.LBB1766:
 4317              	.LBB1767:
 4318              	.LBB1768:
 4319              	.LBB1769:
 4320              	.LBB1770:
 4321              	.LBB1771:
 4322              		.loc 17 235 0
 4323 0004 0400     		movs	r4, r0
 4324              	.LBE1771:
 4325              	.LBE1770:
 4326              	.LBE1769:
 4327              	.LBE1768:
 4328              	.LBE1767:
 4329              	.LBE1766:
 4330              	.LBB1793:
 4331              	.LBB1794:
 4332              	.LBB1795:
 4333              	.LBB1796:
 4334              	.LBB1797:
   6:../../src/list.h **** {
 4335              		.loc 12 6 0
 4336 0006 0023     		movs	r3, #0
 4337              	.LBE1797:
 4338              	.LBE1796:
 4339              	.LBE1795:
 4340              	.LBE1794:
 4341              	.LBE1793:
 4342              		.loc 21 45 0
 4343 0008 0260     		str	r2, [r0]
 4344              	.LBB1802:
 4345              	.LBB1788:
 4346              	.LBB1784:
 4347              	.LBB1774:
 4348              	.LBB1775:
 4349              	.LBB1776:
 732:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 		    __value);
 733:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 734:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 735:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
 736:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline typename
 737:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type
 738:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
 739:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 740:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       for (__decltype(__n + 0) __niter = __n;
 741:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 742:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	*__first = __value;
 743:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return __first;
 744:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 745:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 746:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
 747:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline typename
 748:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type
ARM GAS  /tmp/ccCYtDPO.s 			page 133


 749:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
 750:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 751:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 752:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       for (__decltype(__n + 0) __niter = __n;
 753:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 754:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 755:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return __first;
 756:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 757:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 758:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _Size, typename _Tp>
 759:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline typename
 760:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp*>::__type
 761:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __fill_n_a(_Tp* __first, _Size __n, const _Tp& __c)
 762:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 763:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       std::__fill_a(__first, __first + __n, __c);
 4350              		.loc 5 763 0
 4351 000a 0100     		movs	r1, r0
 4352              	.LBE1776:
 4353              	.LBE1775:
 4354              	.LBE1774:
 4355              	.LBE1784:
 4356              	.LBE1788:
 4357              	.LBE1802:
 4358              		.loc 21 45 0
 4359 000c 0200     		movs	r2, r0
 4360              	.LBB1803:
 4361              	.LBB1789:
 4362              	.LBB1785:
 4363              	.LBB1781:
 4364              	.LBB1773:
 4365              	.LBB1772:
 4366              		.loc 17 235 0
 4367 000e 1D34     		adds	r4, r4, #29
 4368              	.LBE1772:
 4369              	.LBE1773:
 4370              	.LBE1781:
 4371              	.LBE1785:
 4372              	.LBE1789:
 4373              	.LBE1803:
 4374              	.LBB1804:
 4375              	.LBB1801:
 4376              	.LBB1800:
 4377              	.LBB1799:
 4378              	.LBB1798:
   6:../../src/list.h **** {
 4379              		.loc 12 6 0
 4380 0010 4360     		str	r3, [r0, #4]
 4381 0012 8360     		str	r3, [r0, #8]
 4382              	.LVL363:
 4383              	.LBE1798:
 4384              	.LBE1799:
 4385              	.LBE1800:
  44:../../src/timers.h **** {
 4386              		.loc 1 44 0
 4387 0014 0373     		strb	r3, [r0, #12]
 4388              	.LVL364:
 4389              	.LBE1801:
ARM GAS  /tmp/ccCYtDPO.s 			page 134


 4390              	.LBE1804:
 4391              		.loc 21 45 0
 4392 0016 1032     		adds	r2, r2, #16
 4393              	.LBB1805:
 4394              	.LBB1790:
  22:../../src/string_buffer.h ****     String_buffer (){screen.fill(' ');}
 4395              		.loc 14 22 0
 4396 0018 0361     		str	r3, [r0, #16]
 4397 001a 4361     		str	r3, [r0, #20]
 4398 001c 8361     		str	r3, [r0, #24]
 4399 001e 0377     		strb	r3, [r0, #28]
 4400              	.LBE1790:
 4401              	.LBE1805:
 4402              	.LBE1977:
  32:../../src/example/example_select_screen.h ****         : lcd  {}
 4403              		.loc 21 32 0
 4404 0020 85B0     		sub	sp, sp, #20
 4405              	.LCFI34:
 4406              		.cfi_def_cfa_offset 40
  32:../../src/example/example_select_screen.h ****         : lcd  {}
 4407              		.loc 21 32 0
 4408 0022 0600     		movs	r6, r0
 4409              	.LBB1978:
 4410              	.LBB1806:
 4411              	.LBB1791:
 4412              	.LBB1786:
 4413              	.LBB1782:
 4414              	.LBB1779:
 4415              	.LBB1777:
 4416              		.loc 5 763 0
 4417 0024 6D31     		adds	r1, r1, #109
 4418 0026 2000     		movs	r0, r4
 4419              	.LVL365:
 4420              	.LBE1777:
 4421              	.LBE1779:
 4422              	.LBE1782:
 4423              	.LBE1786:
 4424              	.LBE1791:
 4425              	.LBE1806:
 4426              		.loc 21 45 0
 4427 0028 0192     		str	r2, [sp, #4]
 4428              	.LVL366:
 4429              	.LBB1807:
 4430              	.LBB1792:
 4431              	.LBB1787:
 4432              	.LBB1783:
 4433              	.LBB1780:
 4434              	.LBB1778:
 4435              		.loc 5 763 0
 4436 002a FFF7FEFF 		bl	_ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_.isr
 4437              	.LVL367:
 4438              	.LBE1778:
 4439              	.LBE1780:
 4440              	.LBE1783:
 4441              	.LBE1787:
 4442              	.LBE1792:
 4443              	.LBE1807:
ARM GAS  /tmp/ccCYtDPO.s 			page 135


  34:../../src/example/example_select_screen.h ****         , up   { mcu::Button::make<Up>()   }
 4444              		.loc 21 34 0
 4445 002e 2000     		movs	r0, r4
 4446 0030 FFF7FEFF 		bl	_ZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2E
 4447              	.LVL368:
 4448              	.LBB1808:
 4449              	.LBB1809:
  34:../../src/buttons.h ****       return button;
 4450              		.loc 13 34 0
 4451 0034 0122     		movs	r2, #1
 4452 0036 9F4B     		ldr	r3, .L319+4
 4453              	.LBE1809:
 4454              	.LBE1808:
 4455              		.loc 21 45 0
 4456 0038 3067     		str	r0, [r6, #112]
 4457              	.LBB1854:
 4458              	.LBB1853:
  34:../../src/buttons.h ****       return button;
 4459              		.loc 13 34 0
 4460 003a 1B78     		ldrb	r3, [r3]
 4461 003c BFF35B8F 		dmb	ish
 4462 0040 9D4C     		ldr	r4, .L319+8
 4463 0042 1342     		tst	r3, r2
 4464 0044 39D1     		bne	.L260
 4465 0046 9B48     		ldr	r0, .L319+4
 4466 0048 FFF7FEFF 		bl	__cxa_guard_acquire
 4467              	.LVL369:
 4468 004c 0028     		cmp	r0, #0
 4469 004e 34D0     		beq	.L260
 4470              	.LBB1810:
 4471              	.LBB1811:
 4472              	.LBB1812:
 4473              	.LBB1813:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 4474              		.loc 8 21 0
 4475 0050 0122     		movs	r2, #1
 4476 0052 9A4F     		ldr	r7, .L319+12
 4477 0054 3B78     		ldrb	r3, [r7]
 4478 0056 BFF35B8F 		dmb	ish
 4479 005a 994D     		ldr	r5, .L319+16
 4480 005c 1342     		tst	r3, r2
 4481 005e 0BD1     		bne	.L263
 4482 0060 3800     		movs	r0, r7
 4483 0062 FFF7FEFF 		bl	__cxa_guard_acquire
 4484              	.LVL370:
 4485 0066 0028     		cmp	r0, #0
 4486 0068 06D0     		beq	.L263
 4487              	.LVL371:
 4488              	.LBB1814:
 4489              	.LBB1815:
 4490              	.LBB1816:
  17:../../src/pin.h **** 
 4491              		.loc 8 17 0
 4492 006a 964B     		ldr	r3, .L319+20
 4493              	.LBE1816:
 4494              	.LBE1815:
 4495              	.LBE1814:
ARM GAS  /tmp/ccCYtDPO.s 			page 136


  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 4496              		.loc 8 21 0
 4497 006c 3800     		movs	r0, r7
 4498              	.LBB1819:
 4499              	.LBB1818:
 4500              	.LBB1817:
  17:../../src/pin.h **** 
 4501              		.loc 8 17 0
 4502 006e 2B60     		str	r3, [r5]
 4503 0070 0823     		movs	r3, #8
 4504 0072 6B60     		str	r3, [r5, #4]
 4505              	.LVL372:
 4506              	.LBE1817:
 4507              	.LBE1818:
 4508              	.LBE1819:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 4509              		.loc 8 21 0
 4510 0074 FFF7FEFF 		bl	__cxa_guard_release
 4511              	.LVL373:
 4512              	.L263:
 4513              	.LBB1820:
 4514              	.LBB1821:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 4515              		.loc 16 49 0
 4516 0078 0823     		movs	r3, #8
 4517 007a 934A     		ldr	r2, .L319+24
 4518              	.LBE1821:
 4519              	.LBE1820:
 4520              	.LBE1813:
 4521              	.LBE1812:
  34:../../src/buttons.h ****       return button;
 4522              		.loc 13 34 0
 4523 007c 8D48     		ldr	r0, .L319+4
 4524              	.LBB1835:
 4525              	.LBB1833:
 4526              	.LBB1823:
 4527              	.LBB1822:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 4528              		.loc 16 49 0
 4529 007e 9169     		ldr	r1, [r2, #24]
 4530 0080 0B43     		orrs	r3, r1
 4531 0082 9361     		str	r3, [r2, #24]
 4532              	.LBE1822:
 4533              	.LBE1823:
 4534              	.LBB1824:
 4535              	.LBB1825:
 4536              	.LBB1826:
  76:../../src/periph/gpio_f1.h ****    else if constexpr (n == 9)  { CR.CNF_MODE9  = v; return *this; }
 4537              		.loc 9 76 0
 4538 0084 0F22     		movs	r2, #15
 4539              	.LBE1826:
 4540              	.LBE1825:
 4541              	.LBE1824:
  24:../../src/pin.h ****       return pin;
 4542              		.loc 8 24 0
 4543 0086 2968     		ldr	r1, [r5]
 4544              	.LVL374:
ARM GAS  /tmp/ccCYtDPO.s 			page 137


 4545              	.LBB1831:
 4546              	.LBB1829:
 4547              	.LBB1827:
  76:../../src/periph/gpio_f1.h ****    else if constexpr (n == 9)  { CR.CNF_MODE9  = v; return *this; }
 4548              		.loc 9 76 0
 4549 0088 4B68     		ldr	r3, [r1, #4]
 4550 008a 9343     		bics	r3, r2
 4551 008c 1A00     		movs	r2, r3
 4552 008e 0423     		movs	r3, #4
 4553 0090 1343     		orrs	r3, r2
 4554              	.LBE1827:
 4555              	.LBE1829:
 4556              	.LBE1831:
 4557              	.LBE1833:
 4558              	.LBE1835:
 4559              	.LBB1836:
 4560              	.LBB1837:
 4561              	.LBB1838:
  27:../../src/buttons.h **** 
 4562              		.loc 13 27 0
 4563 0092 8E4A     		ldr	r2, .L319+28
 4564              	.LBE1838:
 4565              	.LBE1837:
 4566              	.LBE1836:
 4567              	.LBB1851:
 4568              	.LBB1834:
 4569              	.LBB1832:
 4570              	.LBB1830:
 4571              	.LBB1828:
  76:../../src/periph/gpio_f1.h ****    else if constexpr (n == 9)  { CR.CNF_MODE9  = v; return *this; }
 4572              		.loc 9 76 0
 4573 0094 4B60     		str	r3, [r1, #4]
 4574              	.LVL375:
 4575              	.LBE1828:
 4576              	.LBE1830:
 4577              	.LBE1832:
 4578              	.LBE1834:
 4579              	.LBE1851:
 4580              	.LBB1852:
 4581              	.LBB1850:
 4582              	.LBB1849:
 4583              	.LBB1839:
 4584              	.LBB1840:
 4585              	.LBB1841:
 4586              	.LBB1842:
 4587              	.LBB1843:
   6:../../src/list.h **** {
 4588              		.loc 12 6 0
 4589 0096 0023     		movs	r3, #0
 4590              	.LBE1843:
 4591              	.LBE1842:
 4592              	.LBE1841:
 4593              	.LBE1840:
 4594              	.LBE1839:
  27:../../src/buttons.h **** 
 4595              		.loc 13 27 0
 4596 0098 2260     		str	r2, [r4]
ARM GAS  /tmp/ccCYtDPO.s 			page 138


 4597 009a 0122     		movs	r2, #1
 4598              	.LBB1848:
 4599              	.LBB1847:
 4600              	.LBB1846:
 4601              	.LBB1845:
 4602              	.LBB1844:
   6:../../src/list.h **** {
 4603              		.loc 12 6 0
 4604 009c 6360     		str	r3, [r4, #4]
 4605 009e A360     		str	r3, [r4, #8]
 4606              	.LVL376:
 4607              	.LBE1844:
 4608              	.LBE1845:
 4609              	.LBE1846:
  44:../../src/timers.h **** {
 4610              		.loc 1 44 0
 4611 00a0 2373     		strb	r3, [r4, #12]
 4612              	.LVL377:
 4613              	.LBE1847:
 4614              	.LBE1848:
  27:../../src/buttons.h **** 
 4615              		.loc 13 27 0
 4616 00a2 2561     		str	r5, [r4, #16]
 4617 00a4 6361     		str	r3, [r4, #20]
 4618 00a6 2376     		strb	r3, [r4, #24]
 4619 00a8 6376     		strb	r3, [r4, #25]
 4620 00aa A376     		strb	r3, [r4, #26]
 4621 00ac E376     		strb	r3, [r4, #27]
 4622 00ae 2377     		strb	r3, [r4, #28]
 4623 00b0 2262     		str	r2, [r4, #32]
 4624 00b2 6362     		str	r3, [r4, #36]
 4625 00b4 A362     		str	r3, [r4, #40]
 4626              	.LVL378:
 4627              	.LBE1849:
 4628              	.LBE1850:
 4629              	.LBE1852:
  34:../../src/buttons.h ****       return button;
 4630              		.loc 13 34 0
 4631 00b6 FFF7FEFF 		bl	__cxa_guard_release
 4632              	.LVL379:
 4633              	.L260:
 4634              	.LBE1811:
 4635              	.LBE1810:
 4636              	.LBE1853:
 4637              	.LBE1854:
 4638              	.LBB1855:
 4639              	.LBB1856:
 4640 00ba 0122     		movs	r2, #1
 4641 00bc 844B     		ldr	r3, .L319+32
 4642              	.LBE1856:
 4643              	.LBE1855:
 4644              		.loc 21 45 0
 4645 00be 7467     		str	r4, [r6, #116]
 4646              	.LBB1901:
 4647              	.LBB1900:
  34:../../src/buttons.h ****       return button;
 4648              		.loc 13 34 0
ARM GAS  /tmp/ccCYtDPO.s 			page 139


 4649 00c0 1B78     		ldrb	r3, [r3]
 4650 00c2 BFF35B8F 		dmb	ish
 4651 00c6 834C     		ldr	r4, .L319+36
 4652 00c8 1342     		tst	r3, r2
 4653 00ca 39D1     		bne	.L266
 4654 00cc 8048     		ldr	r0, .L319+32
 4655 00ce FFF7FEFF 		bl	__cxa_guard_acquire
 4656              	.LVL380:
 4657 00d2 0028     		cmp	r0, #0
 4658 00d4 34D0     		beq	.L266
 4659              	.LBB1857:
 4660              	.LBB1858:
 4661              	.LBB1859:
 4662              	.LBB1860:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 4663              		.loc 8 21 0
 4664 00d6 0122     		movs	r2, #1
 4665 00d8 7F4F     		ldr	r7, .L319+40
 4666 00da 3B78     		ldrb	r3, [r7]
 4667 00dc BFF35B8F 		dmb	ish
 4668 00e0 7E4D     		ldr	r5, .L319+44
 4669 00e2 1342     		tst	r3, r2
 4670 00e4 0BD1     		bne	.L269
 4671 00e6 3800     		movs	r0, r7
 4672 00e8 FFF7FEFF 		bl	__cxa_guard_acquire
 4673              	.LVL381:
 4674 00ec 0028     		cmp	r0, #0
 4675 00ee 06D0     		beq	.L269
 4676              	.LVL382:
 4677              	.LBB1861:
 4678              	.LBB1862:
 4679              	.LBB1863:
  17:../../src/pin.h **** 
 4680              		.loc 8 17 0
 4681 00f0 744B     		ldr	r3, .L319+20
 4682              	.LBE1863:
 4683              	.LBE1862:
 4684              	.LBE1861:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 4685              		.loc 8 21 0
 4686 00f2 3800     		movs	r0, r7
 4687              	.LBB1866:
 4688              	.LBB1865:
 4689              	.LBB1864:
  17:../../src/pin.h **** 
 4690              		.loc 8 17 0
 4691 00f4 2B60     		str	r3, [r5]
 4692 00f6 0923     		movs	r3, #9
 4693 00f8 6B60     		str	r3, [r5, #4]
 4694              	.LVL383:
 4695              	.LBE1864:
 4696              	.LBE1865:
 4697              	.LBE1866:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 4698              		.loc 8 21 0
 4699 00fa FFF7FEFF 		bl	__cxa_guard_release
 4700              	.LVL384:
ARM GAS  /tmp/ccCYtDPO.s 			page 140


 4701              	.L269:
 4702              	.LBB1867:
 4703              	.LBB1868:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 4704              		.loc 16 49 0
 4705 00fe 0823     		movs	r3, #8
 4706 0100 714A     		ldr	r2, .L319+24
 4707              	.LBE1868:
 4708              	.LBE1867:
 4709              	.LBE1860:
 4710              	.LBE1859:
  34:../../src/buttons.h ****       return button;
 4711              		.loc 13 34 0
 4712 0102 7348     		ldr	r0, .L319+32
 4713              	.LBB1882:
 4714              	.LBB1880:
 4715              	.LBB1870:
 4716              	.LBB1869:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 4717              		.loc 16 49 0
 4718 0104 9169     		ldr	r1, [r2, #24]
 4719 0106 0B43     		orrs	r3, r1
 4720 0108 9361     		str	r3, [r2, #24]
 4721              	.LBE1869:
 4722              	.LBE1870:
 4723              	.LBB1871:
 4724              	.LBB1872:
 4725              	.LBB1873:
  77:../../src/periph/gpio_f1.h ****    else if constexpr (n == 10) { CR.CNF_MODE10 = v; return *this; }
 4726              		.loc 9 77 0
 4727 010a F022     		movs	r2, #240
 4728              	.LBE1873:
 4729              	.LBE1872:
 4730              	.LBE1871:
  24:../../src/pin.h ****       return pin;
 4731              		.loc 8 24 0
 4732 010c 2968     		ldr	r1, [r5]
 4733              	.LVL385:
 4734              	.LBB1878:
 4735              	.LBB1876:
 4736              	.LBB1874:
  77:../../src/periph/gpio_f1.h ****    else if constexpr (n == 10) { CR.CNF_MODE10 = v; return *this; }
 4737              		.loc 9 77 0
 4738 010e 4B68     		ldr	r3, [r1, #4]
 4739 0110 9343     		bics	r3, r2
 4740 0112 1A00     		movs	r2, r3
 4741 0114 4023     		movs	r3, #64
 4742 0116 1343     		orrs	r3, r2
 4743              	.LBE1874:
 4744              	.LBE1876:
 4745              	.LBE1878:
 4746              	.LBE1880:
 4747              	.LBE1882:
 4748              	.LBB1883:
 4749              	.LBB1884:
 4750              	.LBB1885:
  27:../../src/buttons.h **** 
ARM GAS  /tmp/ccCYtDPO.s 			page 141


 4751              		.loc 13 27 0
 4752 0118 6C4A     		ldr	r2, .L319+28
 4753              	.LBE1885:
 4754              	.LBE1884:
 4755              	.LBE1883:
 4756              	.LBB1898:
 4757              	.LBB1881:
 4758              	.LBB1879:
 4759              	.LBB1877:
 4760              	.LBB1875:
  77:../../src/periph/gpio_f1.h ****    else if constexpr (n == 10) { CR.CNF_MODE10 = v; return *this; }
 4761              		.loc 9 77 0
 4762 011a 4B60     		str	r3, [r1, #4]
 4763              	.LVL386:
 4764              	.LBE1875:
 4765              	.LBE1877:
 4766              	.LBE1879:
 4767              	.LBE1881:
 4768              	.LBE1898:
 4769              	.LBB1899:
 4770              	.LBB1897:
 4771              	.LBB1896:
 4772              	.LBB1886:
 4773              	.LBB1887:
 4774              	.LBB1888:
 4775              	.LBB1889:
 4776              	.LBB1890:
   6:../../src/list.h **** {
 4777              		.loc 12 6 0
 4778 011c 0023     		movs	r3, #0
 4779              	.LBE1890:
 4780              	.LBE1889:
 4781              	.LBE1888:
 4782              	.LBE1887:
 4783              	.LBE1886:
  27:../../src/buttons.h **** 
 4784              		.loc 13 27 0
 4785 011e 2260     		str	r2, [r4]
 4786 0120 0122     		movs	r2, #1
 4787              	.LBB1895:
 4788              	.LBB1894:
 4789              	.LBB1893:
 4790              	.LBB1892:
 4791              	.LBB1891:
   6:../../src/list.h **** {
 4792              		.loc 12 6 0
 4793 0122 6360     		str	r3, [r4, #4]
 4794 0124 A360     		str	r3, [r4, #8]
 4795              	.LVL387:
 4796              	.LBE1891:
 4797              	.LBE1892:
 4798              	.LBE1893:
  44:../../src/timers.h **** {
 4799              		.loc 1 44 0
 4800 0126 2373     		strb	r3, [r4, #12]
 4801              	.LVL388:
 4802              	.LBE1894:
ARM GAS  /tmp/ccCYtDPO.s 			page 142


 4803              	.LBE1895:
  27:../../src/buttons.h **** 
 4804              		.loc 13 27 0
 4805 0128 2561     		str	r5, [r4, #16]
 4806 012a 6361     		str	r3, [r4, #20]
 4807 012c 2376     		strb	r3, [r4, #24]
 4808 012e 6376     		strb	r3, [r4, #25]
 4809 0130 A376     		strb	r3, [r4, #26]
 4810 0132 E376     		strb	r3, [r4, #27]
 4811 0134 2377     		strb	r3, [r4, #28]
 4812 0136 2262     		str	r2, [r4, #32]
 4813 0138 6362     		str	r3, [r4, #36]
 4814 013a A362     		str	r3, [r4, #40]
 4815              	.LVL389:
 4816              	.LBE1896:
 4817              	.LBE1897:
 4818              	.LBE1899:
  34:../../src/buttons.h ****       return button;
 4819              		.loc 13 34 0
 4820 013c FFF7FEFF 		bl	__cxa_guard_release
 4821              	.LVL390:
 4822              	.L266:
 4823              	.LBE1858:
 4824              	.LBE1857:
 4825              	.LBE1900:
 4826              	.LBE1901:
 4827              	.LBB1902:
 4828              	.LBB1903:
 4829              	.LBB1904:
 4830              	.LBB1905:
 4831              	.LBB1906:
 4832              	.LBB1907:
 4833              	.LBB1908:
   6:../../src/list.h **** {
 4834              		.loc 12 6 0
 4835 0140 0022     		movs	r2, #0
 4836              	.LBE1908:
 4837              	.LBE1907:
 4838              	.LBE1906:
  44:../../src/timers.h **** {
 4839              		.loc 1 44 0
 4840 0142 3000     		movs	r0, r6
 4841              	.LBB1913:
 4842              	.LBB1911:
 4843              	.LBB1909:
   6:../../src/list.h **** {
 4844              		.loc 12 6 0
 4845 0144 331D     		adds	r3, r6, #4
 4846              	.LBE1909:
 4847              	.LBE1911:
 4848              	.LBE1913:
 4849              	.LBE1905:
 4850              	.LBE1904:
 4851              	.LBE1903:
 4852              	.LBE1902:
 4853              		.loc 21 45 0
 4854 0146 B467     		str	r4, [r6, #120]
ARM GAS  /tmp/ccCYtDPO.s 			page 143


 4855              	.LVL391:
 4856              	.LBB1922:
 4857              	.LBB1921:
 4858              	.LBB1917:
 4859              	.LBB1915:
 4860              	.LBB1914:
 4861              	.LBB1912:
 4862              	.LBB1910:
   6:../../src/list.h **** {
 4863              		.loc 12 6 0
 4864 0148 0433     		adds	r3, r3, #4
 4865 014a 9A67     		str	r2, [r3, #120]
 4866 014c DA67     		str	r2, [r3, #124]
 4867              	.LVL392:
 4868              	.LBE1910:
 4869              	.LBE1912:
 4870              	.LBE1914:
 4871              	.LBE1915:
 4872              	.LBE1917:
  60:../../src/timers.h ****     ~Timer () {tick_unsubscribe();}
 4873              		.loc 1 60 0
 4874 014e 644B     		ldr	r3, .L319+48
 4875              	.LBB1918:
 4876              	.LBB1916:
  44:../../src/timers.h **** {
 4877              		.loc 1 44 0
 4878 0150 7C30     		adds	r0, r0, #124
 4879              	.LVL393:
 4880 0152 0273     		strb	r2, [r0, #12]
 4881              	.LVL394:
 4882              	.LBE1916:
 4883              	.LBE1918:
  60:../../src/timers.h ****     ~Timer () {tick_unsubscribe();}
 4884              		.loc 1 60 0
 4885 0154 3100     		movs	r1, r6
 4886 0156 F367     		str	r3, [r6, #124]
 4887 0158 3300     		movs	r3, r6
 4888 015a 9031     		adds	r1, r1, #144
 4889 015c 8C33     		adds	r3, r3, #140
 4890 015e 1A60     		str	r2, [r3]
 4891 0160 0A60     		str	r2, [r1]
 4892              	.LVL395:
 4893              	.LBB1919:
 4894              	.LBB1920:
 122:../../src/timers.h ****     tick_subscribe();
 4895              		.loc 1 122 0
 4896 0162 3232     		adds	r2, r2, #50
 4897 0164 1A60     		str	r2, [r3]
 123:../../src/timers.h **** }
 4898              		.loc 1 123 0
 4899 0166 FFF7FEFF 		bl	_ZN14TickSubscriber14tick_subscribeEv
 4900              	.LVL396:
 4901              	.LBE1920:
 4902              	.LBE1919:
 4903              	.LBE1921:
 4904              	.LBE1922:
 4905              		.loc 21 45 0
ARM GAS  /tmp/ccCYtDPO.s 			page 144


 4906 016a 736F     		ldr	r3, [r6, #116]
 4907              	.LBB1923:
 4908              	.LBB1924:
  15:../../src/function.h ****         functor_pointer = &holder;
 4909              		.loc 2 15 0
 4910 016c 5D4C     		ldr	r4, .L319+52
 4911              	.LBE1924:
 4912              	.LBE1923:
 4913              		.loc 21 45 0
 4914 016e 0293     		str	r3, [sp, #8]
 4915 0170 B36F     		ldr	r3, [r6, #120]
 4916 0172 0393     		str	r3, [sp, #12]
 4917              	.LVL397:
 4918              	.LBB1932:
 4919              	.LBB1931:
  15:../../src/function.h ****         functor_pointer = &holder;
 4920              		.loc 2 15 0
 4921 0174 2378     		ldrb	r3, [r4]
 4922 0176 BFF35B8F 		dmb	ish
 4923 017a DB07     		lsls	r3, r3, #31
 4924 017c 0AD4     		bmi	.L272
 4925 017e 2000     		movs	r0, r4
 4926 0180 FFF7FEFF 		bl	__cxa_guard_acquire
 4927              	.LVL398:
 4928 0184 0028     		cmp	r0, #0
 4929 0186 05D0     		beq	.L272
 4930              	.LVL399:
 4931              	.LBB1925:
 4932              	.LBB1926:
 4933              	.LBB1927:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 4934              		.loc 2 33 0
 4935 0188 574B     		ldr	r3, .L319+56
 4936 018a 584A     		ldr	r2, .L319+60
 4937              	.LBE1927:
 4938              	.LBE1926:
 4939              	.LBE1925:
  15:../../src/function.h ****         functor_pointer = &holder;
 4940              		.loc 2 15 0
 4941 018c 2000     		movs	r0, r4
 4942              	.LBB1930:
 4943              	.LBB1929:
 4944              	.LBB1928:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 4945              		.loc 2 33 0
 4946 018e 1360     		str	r3, [r2]
 4947              	.LVL400:
 4948              	.LBE1928:
 4949              	.LBE1929:
 4950              	.LBE1930:
  15:../../src/function.h ****         functor_pointer = &holder;
 4951              		.loc 2 15 0
 4952 0190 FFF7FEFF 		bl	__cxa_guard_release
 4953              	.LVL401:
 4954              	.L272:
 4955              	.LBE1931:
 4956              	.LBE1932:
ARM GAS  /tmp/ccCYtDPO.s 			page 145


 4957              	.LBB1933:
 4958              	.LBB1934:
 4959 0194 564C     		ldr	r4, .L319+64
 4960 0196 2378     		ldrb	r3, [r4]
 4961 0198 BFF35B8F 		dmb	ish
 4962 019c 554D     		ldr	r5, .L319+68
 4963 019e DB07     		lsls	r3, r3, #31
 4964 01a0 09D4     		bmi	.L275
 4965 01a2 2000     		movs	r0, r4
 4966 01a4 FFF7FEFF 		bl	__cxa_guard_acquire
 4967              	.LVL402:
 4968 01a8 0028     		cmp	r0, #0
 4969 01aa 04D0     		beq	.L275
 4970              	.LVL403:
 4971              	.LBB1935:
 4972              	.LBB1936:
 4973              	.LBB1937:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 4974              		.loc 2 33 0
 4975 01ac 524B     		ldr	r3, .L319+72
 4976              	.LBE1937:
 4977              	.LBE1936:
 4978              	.LBE1935:
  15:../../src/function.h ****         functor_pointer = &holder;
 4979              		.loc 2 15 0
 4980 01ae 2000     		movs	r0, r4
 4981              	.LBB1940:
 4982              	.LBB1939:
 4983              	.LBB1938:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 4984              		.loc 2 33 0
 4985 01b0 2B60     		str	r3, [r5]
 4986              	.LVL404:
 4987              	.LBE1938:
 4988              	.LBE1939:
 4989              	.LBE1940:
  15:../../src/function.h ****         functor_pointer = &holder;
 4990              		.loc 2 15 0
 4991 01b2 FFF7FEFF 		bl	__cxa_guard_release
 4992              	.LVL405:
 4993              	.L275:
 4994              	.LBE1934:
 4995              	.LBE1933:
 4996              	.LBB1941:
 4997              	.LBB1942:
 4998 01b6 514C     		ldr	r4, .L319+76
 4999 01b8 2378     		ldrb	r3, [r4]
 5000 01ba BFF35B8F 		dmb	ish
 5001 01be 504F     		ldr	r7, .L319+80
 5002 01c0 DB07     		lsls	r3, r3, #31
 5003 01c2 09D4     		bmi	.L278
 5004 01c4 2000     		movs	r0, r4
 5005 01c6 FFF7FEFF 		bl	__cxa_guard_acquire
 5006              	.LVL406:
 5007 01ca 0028     		cmp	r0, #0
 5008 01cc 04D0     		beq	.L278
 5009              	.LVL407:
ARM GAS  /tmp/ccCYtDPO.s 			page 146


 5010              	.LBB1943:
 5011              	.LBB1944:
 5012              	.LBB1945:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 5013              		.loc 2 33 0
 5014 01ce 4D4B     		ldr	r3, .L319+84
 5015              	.LBE1945:
 5016              	.LBE1944:
 5017              	.LBE1943:
  15:../../src/function.h ****         functor_pointer = &holder;
 5018              		.loc 2 15 0
 5019 01d0 2000     		movs	r0, r4
 5020              	.LBB1948:
 5021              	.LBB1947:
 5022              	.LBB1946:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 5023              		.loc 2 33 0
 5024 01d2 3B60     		str	r3, [r7]
 5025              	.LVL408:
 5026              	.LBE1946:
 5027              	.LBE1947:
 5028              	.LBE1948:
  15:../../src/function.h ****         functor_pointer = &holder;
 5029              		.loc 2 15 0
 5030 01d4 FFF7FEFF 		bl	__cxa_guard_release
 5031              	.LVL409:
 5032              	.L278:
 5033              	.LBE1942:
 5034              	.LBE1941:
 5035              	.LBB1949:
 5036              	.LBB1950:
 5037 01d8 4B4C     		ldr	r4, .L319+88
 5038 01da 2378     		ldrb	r3, [r4]
 5039 01dc BFF35B8F 		dmb	ish
 5040 01e0 DB07     		lsls	r3, r3, #31
 5041 01e2 0AD4     		bmi	.L281
 5042 01e4 2000     		movs	r0, r4
 5043 01e6 FFF7FEFF 		bl	__cxa_guard_acquire
 5044              	.LVL410:
 5045 01ea 0028     		cmp	r0, #0
 5046 01ec 05D0     		beq	.L281
 5047              	.LVL411:
 5048              	.LBB1951:
 5049              	.LBB1952:
 5050              	.LBB1953:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 5051              		.loc 2 33 0
 5052 01ee 474B     		ldr	r3, .L319+92
 5053 01f0 474A     		ldr	r2, .L319+96
 5054              	.LBE1953:
 5055              	.LBE1952:
 5056              	.LBE1951:
  15:../../src/function.h ****         functor_pointer = &holder;
 5057              		.loc 2 15 0
 5058 01f2 2000     		movs	r0, r4
 5059              	.LBB1956:
 5060              	.LBB1955:
ARM GAS  /tmp/ccCYtDPO.s 			page 147


 5061              	.LBB1954:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 5062              		.loc 2 33 0
 5063 01f4 1A60     		str	r2, [r3]
 5064              	.LVL412:
 5065              	.LBE1954:
 5066              	.LBE1955:
 5067              	.LBE1956:
  15:../../src/function.h ****         functor_pointer = &holder;
 5068              		.loc 2 15 0
 5069 01f6 FFF7FEFF 		bl	__cxa_guard_release
 5070              	.LVL413:
 5071              	.L281:
 5072              	.LBE1950:
 5073              	.LBE1949:
 5074              	.LBB1957:
 5075              	.LBB1958:
 5076 01fa 464C     		ldr	r4, .L319+100
 5077 01fc 2378     		ldrb	r3, [r4]
 5078 01fe BFF35B8F 		dmb	ish
 5079 0202 DB07     		lsls	r3, r3, #31
 5080 0204 0AD4     		bmi	.L284
 5081 0206 2000     		movs	r0, r4
 5082 0208 FFF7FEFF 		bl	__cxa_guard_acquire
 5083              	.LVL414:
 5084 020c 0028     		cmp	r0, #0
 5085 020e 05D0     		beq	.L284
 5086              	.LVL415:
 5087              	.LBB1959:
 5088              	.LBB1960:
 5089              	.LBB1961:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 5090              		.loc 2 33 0
 5091 0210 414B     		ldr	r3, .L319+104
 5092 0212 424A     		ldr	r2, .L319+108
 5093              	.LBE1961:
 5094              	.LBE1960:
 5095              	.LBE1959:
  15:../../src/function.h ****         functor_pointer = &holder;
 5096              		.loc 2 15 0
 5097 0214 2000     		movs	r0, r4
 5098              	.LBB1964:
 5099              	.LBB1963:
 5100              	.LBB1962:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 5101              		.loc 2 33 0
 5102 0216 1A60     		str	r2, [r3]
 5103              	.LVL416:
 5104              	.LBE1962:
 5105              	.LBE1963:
 5106              	.LBE1964:
  15:../../src/function.h ****         functor_pointer = &holder;
 5107              		.loc 2 15 0
 5108 0218 FFF7FEFF 		bl	__cxa_guard_release
 5109              	.LVL417:
 5110              	.L284:
 5111              	.LBE1958:
ARM GAS  /tmp/ccCYtDPO.s 			page 148


 5112              	.LBE1957:
 5113              	.LBB1965:
 5114              	.LBB1966:
 5115 021c 404C     		ldr	r4, .L319+112
 5116 021e 2378     		ldrb	r3, [r4]
 5117 0220 BFF35B8F 		dmb	ish
 5118 0224 DB07     		lsls	r3, r3, #31
 5119 0226 0AD4     		bmi	.L287
 5120 0228 2000     		movs	r0, r4
 5121 022a FFF7FEFF 		bl	__cxa_guard_acquire
 5122              	.LVL418:
 5123 022e 0028     		cmp	r0, #0
 5124 0230 05D0     		beq	.L287
 5125              	.LVL419:
 5126              	.LBB1967:
 5127              	.LBB1968:
 5128              	.LBB1969:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 5129              		.loc 2 33 0
 5130 0232 3C4B     		ldr	r3, .L319+116
 5131 0234 3C4A     		ldr	r2, .L319+120
 5132              	.LBE1969:
 5133              	.LBE1968:
 5134              	.LBE1967:
  15:../../src/function.h ****         functor_pointer = &holder;
 5135              		.loc 2 15 0
 5136 0236 2000     		movs	r0, r4
 5137              	.LBB1972:
 5138              	.LBB1971:
 5139              	.LBB1970:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 5140              		.loc 2 33 0
 5141 0238 1A60     		str	r2, [r3]
 5142              	.LVL420:
 5143              	.LBE1970:
 5144              	.LBE1971:
 5145              	.LBE1972:
  15:../../src/function.h ****         functor_pointer = &holder;
 5146              		.loc 2 15 0
 5147 023a FFF7FEFF 		bl	__cxa_guard_release
 5148              	.LVL421:
 5149              	.L287:
 5150              	.LBE1966:
 5151              	.LBE1965:
 5152              	.LBB1973:
 5153              	.LBB1974:
 5154              		.file 22 "../../src/middleware/select_screen.h"
   1:../../src/middleware/select_screen.h **** #pragma once
   2:../../src/middleware/select_screen.h **** #include <utility>
   3:../../src/middleware/select_screen.h **** #include "buttons.h"
   4:../../src/middleware/select_screen.h **** #include "function.h"
   5:../../src/middleware/select_screen.h **** #include "string_buffer.h"
   6:../../src/middleware/select_screen.h **** 
   7:../../src/middleware/select_screen.h **** struct Line {
   8:../../src/middleware/select_screen.h ****     std::string_view name;
   9:../../src/middleware/select_screen.h ****     Function<void()> callback;
  10:../../src/middleware/select_screen.h **** };
ARM GAS  /tmp/ccCYtDPO.s 			page 149


  11:../../src/middleware/select_screen.h **** 
  12:../../src/middleware/select_screen.h **** template <int qty>
  13:../../src/middleware/select_screen.h **** class Screen
  14:../../src/middleware/select_screen.h **** {
  15:../../src/middleware/select_screen.h **** public:
  16:../../src/middleware/select_screen.h ****     template <class...Line> Screen (
  17:../../src/middleware/select_screen.h ****           Button& up
  18:../../src/middleware/select_screen.h ****         , Button& down
  19:../../src/middleware/select_screen.h ****         , String_buffer& lcd
  20:../../src/middleware/select_screen.h ****         , Line ... lines
  21:../../src/middleware/select_screen.h ****     ) : up    {up}
  22:../../src/middleware/select_screen.h ****       , down  {down}
  23:../../src/middleware/select_screen.h ****       , lcd   {lcd}
  24:../../src/middleware/select_screen.h ****       , lines {lines...}
 5155              		.loc 22 24 0
 5156 023e 3300     		movs	r3, r6
 5157 0240 029A     		ldr	r2, [sp, #8]
 5158 0242 9433     		adds	r3, r3, #148
 5159 0244 1A60     		str	r2, [r3]
 5160 0246 039A     		ldr	r2, [sp, #12]
 5161 0248 0621     		movs	r1, #6
 5162 024a 5A60     		str	r2, [r3, #4]
 5163 024c 019A     		ldr	r2, [sp, #4]
 5164 024e 3000     		movs	r0, r6
 5165 0250 9A60     		str	r2, [r3, #8]
 5166 0252 3200     		movs	r2, r6
 5167 0254 A032     		adds	r2, r2, #160
 5168 0256 1160     		str	r1, [r2]
 5169 0258 3449     		ldr	r1, .L319+124
 5170 025a 0C24     		movs	r4, #12
 5171 025c 5160     		str	r1, [r2, #4]
 5172 025e 2349     		ldr	r1, .L319+60
 5173 0260 B030     		adds	r0, r0, #176
 5174 0262 9160     		str	r1, [r2, #8]
 5175 0264 3100     		movs	r1, r6
 5176 0266 0922     		movs	r2, #9
 5177 0268 AC31     		adds	r1, r1, #172
 5178 026a 0A60     		str	r2, [r1]
 5179 026c 8460     		str	r4, [r0, #8]
 5180 026e 304C     		ldr	r4, .L319+128
 5181 0270 0262     		str	r2, [r0, #32]
 5182 0272 C460     		str	r4, [r0, #12]
 5183 0274 0A24     		movs	r4, #10
 5184 0276 C262     		str	r2, [r0, #44]
 5185 0278 3200     		movs	r2, r6
 5186 027a 4461     		str	r4, [r0, #20]
 5187 027c 2D4C     		ldr	r4, .L319+132
 5188 027e 2E49     		ldr	r1, .L319+136
 5189 0280 8461     		str	r4, [r0, #24]
 5190 0282 224C     		ldr	r4, .L319+92
 5191 0284 E032     		adds	r2, r2, #224
 5192 0286 C461     		str	r4, [r0, #28]
 5193 0288 2C4C     		ldr	r4, .L319+140
 5194 028a 0160     		str	r1, [r0]
 5195 028c 4462     		str	r4, [r0, #36]
 5196 028e 224C     		ldr	r4, .L319+104
 5197 0290 4560     		str	r5, [r0, #4]
ARM GAS  /tmp/ccCYtDPO.s 			page 150


 5198 0292 0761     		str	r7, [r0, #16]
 5199 0294 8462     		str	r4, [r0, #40]
 5200 0296 1160     		str	r1, [r2]
 5201 0298 2249     		ldr	r1, .L319+116
 5202              	.LBE1974:
 5203              	.LBE1973:
  46:../../src/example/example_select_screen.h ****     {
  47:../../src/example/example_select_screen.h ****         tick_subscribe();
 5204              		.loc 21 47 0
 5205 029a 3000     		movs	r0, r6
 5206              	.LBB1976:
 5207              	.LBB1975:
 5208              		.loc 22 24 0
 5209 029c 5160     		str	r1, [r2, #4]
 5210 029e 0022     		movs	r2, #0
 5211 02a0 1A66     		str	r2, [r3, #96]
 5212 02a2 5A66     		str	r2, [r3, #100]
 5213 02a4 9A66     		str	r2, [r3, #104]
 5214              	.LVL422:
 5215              	.LBE1975:
 5216              	.LBE1976:
 5217              		.loc 21 47 0
 5218 02a6 FFF7FEFF 		bl	_ZN14TickSubscriber14tick_subscribeEv
 5219              	.LVL423:
 5220              	.LBE1978:
  48:../../src/example/example_select_screen.h ****     }
 5221              		.loc 21 48 0
 5222 02aa 3000     		movs	r0, r6
 5223 02ac 05B0     		add	sp, sp, #20
 5224              		@ sp needed
 5225              	.LVL424:
 5226 02ae F0BD     		pop	{r4, r5, r6, r7, pc}
 5227              	.L320:
 5228              		.align	2
 5229              	.L319:
 5230 02b0 08000000 		.word	_ZTVN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2EL
 5231 02b4 00000000 		.word	_ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button
 5232 02b8 00000000 		.word	_ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button
 5233 02bc 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin
 5234 02c0 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin
 5235 02c4 000C0140 		.word	1073810432
 5236 02c8 00100240 		.word	1073876992
 5237 02cc 08000000 		.word	_ZTVN3mcu6ButtonE+8
 5238 02d0 00000000 		.word	_ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button
 5239 02d4 00000000 		.word	_ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button
 5240 02d8 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin
 5241 02dc 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin
 5242 02e0 08000000 		.word	_ZTV5Timer+8
 5243 02e4 00000000 		.word	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 5244 02e8 08000000 		.word	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 5245 02ec 00000000 		.word	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 5246 02f0 00000000 		.word	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 5247 02f4 00000000 		.word	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 5248 02f8 08000000 		.word	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 5249 02fc 00000000 		.word	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 5250 0300 00000000 		.word	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 5251 0304 08000000 		.word	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
ARM GAS  /tmp/ccCYtDPO.s 			page 151


 5252 0308 00000000 		.word	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 5253 030c 00000000 		.word	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 5254 0310 08000000 		.word	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 5255 0314 00000000 		.word	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 5256 0318 00000000 		.word	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 5257 031c 08000000 		.word	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 5258 0320 00000000 		.word	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 5259 0324 00000000 		.word	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 5260 0328 08000000 		.word	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 5261 032c 00000000 		.word	.LC60
 5262 0330 11000000 		.word	.LC64
 5263 0334 1E000000 		.word	.LC66
 5264 0338 07000000 		.word	.LC62
 5265 033c 29000000 		.word	.LC68
 5266              		.cfi_endproc
 5267              	.LFE2944:
 5269              		.weak	_ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3
 5270              		.thumb_set _ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_
 5271              		.section	.text.startup.main,"ax",%progbits
 5272              		.align	1
 5273              		.global	main
 5274              		.syntax unified
 5275              		.code	16
 5276              		.thumb_func
 5277              		.fpu softvfp
 5279              	main:
 5280              	.LFB2652:
  11:main.cpp      **** 
  12:main.cpp      **** int main()
  13:main.cpp      **** {
 5281              		.loc 15 13 0
 5282              		.cfi_startproc
 5283              		@ Volatile: function does not return.
 5284              		@ args = 0, pretend = 0, frame = 256
 5285              		@ frame_needed = 0, uses_anonymous_args = 0
 5286 0000 00B5     		push	{lr}
 5287              	.LCFI35:
 5288              		.cfi_def_cfa_offset 4
 5289              		.cfi_offset 14, -4
 5290 0002 C1B0     		sub	sp, sp, #260
 5291              	.LCFI36:
 5292              		.cfi_def_cfa_offset 264
  14:main.cpp      ****     // // value dont need
  15:main.cpp      ****     // auto _ = mcu::example::hd44780<
  16:main.cpp      ****     //     EO81::RS , EO81::RW , EO81::E,
  17:main.cpp      ****     //     EO81::DB4, EO81::DB5, EO81::DB6, EO81::DB7
  18:main.cpp      ****     // >();
  19:main.cpp      **** 
  20:main.cpp      ****     // value dont need
  21:main.cpp      ****     auto _ = mcu::example::select_screen<
  22:main.cpp      ****         EO81::RS , EO81::RW , EO81::E,
  23:main.cpp      ****         EO81::DB4, EO81::DB5, EO81::DB6, EO81::DB7,
  24:main.cpp      ****         EO81::Up, EO81::Down
  25:main.cpp      ****     >();
 5293              		.loc 15 25 0
 5294 0004 6846     		mov	r0, sp
 5295 0006 FFF7FEFF 		bl	_ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEE
ARM GAS  /tmp/ccCYtDPO.s 			page 152


 5296              	.LVL425:
 5297              	.L322:
 5298              	.LBB1979:
 5299              	.LBB1980:
 5300              		.file 23 "../../STM32F1_files/CMSIS/cmsis_gcc.h"
   1:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**************************************************************************//**
   2:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  * @version  V4.30
   5:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  * @date     20. October 2015
   6:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  ******************************************************************************/
   7:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
   9:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    All rights reserved.
  10:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:../../STM32F1_files/CMSIS/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../../STM32F1_files/CMSIS/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:../../STM32F1_files/CMSIS/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../../STM32F1_files/CMSIS/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:../../STM32F1_files/CMSIS/cmsis_gcc.h ****      specific prior written permission.
  20:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    *
  21:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  34:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  35:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  38:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #endif
  45:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  46:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  47:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:../../STM32F1_files/CMSIS/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   @{
  51:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
  52:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
ARM GAS  /tmp/ccCYtDPO.s 			page 153


  53:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
  54:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:../../STM32F1_files/CMSIS/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
  58:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
  60:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
  62:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  63:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  64:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
  65:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
  69:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
  71:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
  73:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  74:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  75:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
  76:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Get Control Register
  77:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \return               Control Register value
  79:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
  80:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
  82:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   uint32_t result;
  83:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  84:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   return(result);
  86:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
  87:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  88:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  89:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
  90:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Set Control Register
  91:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
  94:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
  96:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
  98:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  99:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 100:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 101:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \return               IPSR Register value
 104:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 105:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 107:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   uint32_t result;
 108:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 109:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
ARM GAS  /tmp/ccCYtDPO.s 			page 154


 110:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   return(result);
 111:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 112:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 113:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 114:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 115:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Get APSR Register
 116:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \return               APSR Register value
 118:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 119:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 121:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   uint32_t result;
 122:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 123:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   return(result);
 125:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 126:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 127:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 128:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 129:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 132:../../STM32F1_files/CMSIS/cmsis_gcc.h ****     \return               xPSR Register value
 133:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 134:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 136:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   uint32_t result;
 137:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 138:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   return(result);
 140:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 141:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 142:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 143:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 144:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \return               PSP Register value
 147:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 148:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 150:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   register uint32_t result;
 151:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 152:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   return(result);
 154:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 155:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 156:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 157:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 158:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 162:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 164:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 166:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
ARM GAS  /tmp/ccCYtDPO.s 			page 155


 167:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 168:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 169:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \return               MSP Register value
 172:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 173:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 175:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   register uint32_t result;
 176:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 177:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   return(result);
 179:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 180:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 181:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 182:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 183:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 186:../../STM32F1_files/CMSIS/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 188:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 190:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 192:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 193:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 194:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 195:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \return               Priority Mask value
 198:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 199:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 201:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   uint32_t result;
 202:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 203:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   return(result);
 205:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 206:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 207:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 208:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 209:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 213:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 215:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 217:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 218:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 219:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 221:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 222:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Enable FIQ
 223:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
ARM GAS  /tmp/ccCYtDPO.s 			page 156


 224:../../STM32F1_files/CMSIS/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 226:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 228:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 230:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 231:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 232:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 233:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Disable FIQ
 234:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:../../STM32F1_files/CMSIS/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 237:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 239:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 241:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 242:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 243:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 244:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Get Base Priority
 245:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \return               Base Priority register value
 247:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 248:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 250:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   uint32_t result;
 251:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 252:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   return(result);
 254:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 255:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 256:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 257:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 258:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Set Base Priority
 259:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 262:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 264:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 266:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 267:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 268:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 269:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:../../STM32F1_files/CMSIS/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 274:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 276:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 278:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 279:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 280:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccCYtDPO.s 			page 157


 281:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \return               Fault Mask register value
 284:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 285:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 287:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   uint32_t result;
 288:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 289:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   return(result);
 291:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 292:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 293:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 294:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 295:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 299:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 301:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 303:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 304:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 306:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 307:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 309:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 310:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Get FPSCR
 311:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 314:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 316:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   uint32_t result;
 318:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 319:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("");
 321:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("");
 323:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   return(result);
 324:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #else
 325:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    return(0);
 326:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #endif
 327:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 328:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 329:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 330:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 331:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Set FPSCR
 332:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 335:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 337:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
ARM GAS  /tmp/ccCYtDPO.s 			page 158


 338:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("");
 340:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("");
 342:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #endif
 343:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 344:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 345:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 347:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 348:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 349:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 351:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 352:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   Access to dedicated instructions
 355:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   @{
 356:../../STM32F1_files/CMSIS/cmsis_gcc.h **** */
 357:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 358:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #else
 365:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #endif
 368:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 369:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 370:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   No Operation
 371:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 373:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 375:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 377:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 378:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 379:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 380:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 383:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 385:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("wfi");
 5301              		.loc 23 385 0 discriminator 1
 5302              		.syntax divided
 5303              	@ 385 "../../STM32F1_files/CMSIS/cmsis_gcc.h" 1
 5304 000a 30BF     		wfi
 5305              	@ 0 "" 2
 5306              		.thumb
 5307              		.syntax unified
 5308 000c FDE7     		b	.L322
 5309              	.LBE1980:
ARM GAS  /tmp/ccCYtDPO.s 			page 159


 5310              	.LBE1979:
 5311              		.cfi_endproc
 5312              	.LFE2652:
 5314              		.section	.text._ZN8FunctionIFvvEEclEv,"axG",%progbits,_ZN8FunctionIFvvEEclEv,comdat
 5315              		.align	1
 5316              		.weak	_ZN8FunctionIFvvEEclEv
 5317              		.syntax unified
 5318              		.code	16
 5319              		.thumb_func
 5320              		.fpu softvfp
 5322              	_ZN8FunctionIFvvEEclEv:
 5323              	.LFB3369:
  19:../../src/function.h **** 		return functor_pointer->call(args...);
 5324              		.loc 2 19 0
 5325              		.cfi_startproc
 5326              		@ args = 0, pretend = 0, frame = 0
 5327              		@ frame_needed = 0, uses_anonymous_args = 0
 5328              	.LVL426:
 5329 0000 10B5     		push	{r4, lr}
 5330              	.LCFI37:
 5331              		.cfi_def_cfa_offset 8
 5332              		.cfi_offset 4, -8
 5333              		.cfi_offset 14, -4
  20:../../src/function.h **** 	}
 5334              		.loc 2 20 0
 5335 0002 0068     		ldr	r0, [r0]
 5336              	.LVL427:
  21:../../src/function.h **** 
 5337              		.loc 2 21 0
 5338              		@ sp needed
  20:../../src/function.h **** 	}
 5339              		.loc 2 20 0
 5340 0004 0368     		ldr	r3, [r0]
 5341 0006 1B68     		ldr	r3, [r3]
 5342 0008 9847     		blx	r3
 5343              	.LVL428:
  21:../../src/function.h **** 
 5344              		.loc 2 21 0
 5345 000a 10BD     		pop	{r4, pc}
 5346              		.cfi_endproc
 5347              	.LFE3369:
 5349              		.section	.text._ZN6ScreenILi6EEclE8FunctionIFvvEE,"axG",%progbits,_ZN6ScreenILi6EEclE8FunctionIFvv
 5350              		.align	1
 5351              		.weak	_ZN6ScreenILi6EEclE8FunctionIFvvEE
 5352              		.syntax unified
 5353              		.code	16
 5354              		.thumb_func
 5355              		.fpu softvfp
 5357              	_ZN6ScreenILi6EEclE8FunctionIFvvEE:
 5358              	.LFB3362:
  25:../../src/middleware/select_screen.h ****     {}
  26:../../src/middleware/select_screen.h **** 
  27:../../src/middleware/select_screen.h ****     void operator() (Function<void()> f)
 5359              		.loc 22 27 0
 5360              		.cfi_startproc
 5361              		@ args = 0, pretend = 0, frame = 16
 5362              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccCYtDPO.s 			page 160


 5363              	.LVL429:
 5364 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5365              	.LCFI38:
 5366              		.cfi_def_cfa_offset 20
 5367              		.cfi_offset 4, -20
 5368              		.cfi_offset 5, -16
 5369              		.cfi_offset 6, -12
 5370              		.cfi_offset 7, -8
 5371              		.cfi_offset 14, -4
 5372 0002 0400     		movs	r4, r0
  28:../../src/middleware/select_screen.h ****     {
  29:../../src/middleware/select_screen.h ****         lcd.clear();
 5373              		.loc 22 29 0
 5374 0004 8068     		ldr	r0, [r0, #8]
 5375              	.LVL430:
  27:../../src/middleware/select_screen.h ****     {
 5376              		.loc 22 27 0
 5377 0006 85B0     		sub	sp, sp, #20
 5378              	.LCFI39:
 5379              		.cfi_def_cfa_offset 40
  27:../../src/middleware/select_screen.h ****     {
 5380              		.loc 22 27 0
 5381 0008 0191     		str	r1, [sp, #4]
 5382              	.LBB2033:
 5383              	.LBB2034:
 5384              	.LBB2035:
 5385              	.LBB2036:
 5386              	.LBB2037:
 5387              		.loc 5 763 0
 5388 000a 0100     		movs	r1, r0
 5389              	.LBE2037:
 5390              	.LBE2036:
 5391              	.LBE2035:
 5392              	.LBB2040:
 5393              	.LBB2041:
 5394              	.LBB2042:
 5395              		.loc 17 235 0
 5396 000c 0D30     		adds	r0, r0, #13
 5397              	.LVL431:
 5398              	.LBE2042:
 5399              	.LBE2041:
 5400              	.LBE2040:
 5401              	.LBB2043:
 5402              	.LBB2039:
 5403              	.LBB2038:
 5404              		.loc 5 763 0
 5405 000e 5D31     		adds	r1, r1, #93
 5406              	.LVL432:
 5407 0010 FFF7FEFF 		bl	_ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_.isr
 5408              	.LVL433:
 5409              	.LBE2038:
 5410              	.LBE2039:
 5411              	.LBE2043:
 5412              	.LBE2034:
 5413              	.LBE2033:
 5414              	.LBB2044:
 5415              	.LBB2045:
ARM GAS  /tmp/ccCYtDPO.s 			page 161


  30:../../src/middleware/select_screen.h **** 
  31:../../src/middleware/select_screen.h ****         if (qty <= 4) {
  32:../../src/middleware/select_screen.h ****             for (int i = 0; i < qty; i++) {
  33:../../src/middleware/select_screen.h ****                 lcd.line(i) << lines[i].name;
  34:../../src/middleware/select_screen.h ****                 lcd.line(i).cursor(19) << " ";
  35:../../src/middleware/select_screen.h ****                 if (i == carriage)
  36:../../src/middleware/select_screen.h ****                     lcd.line(i).cursor(19) << "~";
  37:../../src/middleware/select_screen.h ****             }
  38:../../src/middleware/select_screen.h **** 
  39:../../src/middleware/select_screen.h ****             carriage_v = carriage =
  40:../../src/middleware/select_screen.h ****                 up.push()   ? carriage < 1        ? qty - 1  : carriage - 1 :
  41:../../src/middleware/select_screen.h ****                 down.push() ? carriage >= qty - 1 ? 0        : carriage + 1 : carriage;
  42:../../src/middleware/select_screen.h **** 
  43:../../src/middleware/select_screen.h ****         } else {
  44:../../src/middleware/select_screen.h ****             
  45:../../src/middleware/select_screen.h ****             for (int i = 0; i < 4; i++) {
 5416              		.loc 22 45 0
 5417 0014 0025     		movs	r5, #0
 5418              	.LVL434:
 5419              	.L326:
 5420 0016 1426     		movs	r6, #20
  46:../../src/middleware/select_screen.h ****                 lcd.line(i) << lines[scroll + i].name;
 5421              		.loc 22 46 0
 5422 0018 0C22     		movs	r2, #12
 5423 001a 6E43     		muls	r6, r5
 5424 001c A068     		ldr	r0, [r4, #8]
 5425              	.LVL435:
 5426              	.LBB2046:
 5427              	.LBB2047:
 118:../../src/string_buffer.h ****     position = number_line * line_size;
 5428              		.loc 14 118 0
 5429 001e 8660     		str	r6, [r0, #8]
 5430              	.LVL436:
 117:../../src/string_buffer.h ****     number_line = string;
 5431              		.loc 14 117 0
 5432 0020 0560     		str	r5, [r0]
 5433              	.LBE2047:
 5434              	.LBE2046:
 5435              	.LBB2048:
 5436              	.LBB2049:
 5437              	.LBB2050:
  56:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 5438              		.loc 17 56 0
 5439 0022 A36E     		ldr	r3, [r4, #104]
 5440 0024 1336     		adds	r6, r6, #19
 5441 0026 EB18     		adds	r3, r5, r3
 5442              	.LBE2050:
 5443              	.LBE2049:
 5444              	.LBE2048:
 5445              		.loc 22 46 0
 5446 0028 5343     		muls	r3, r2
 5447 002a E318     		adds	r3, r4, r3
 5448 002c D968     		ldr	r1, [r3, #12]
 5449 002e 1A69     		ldr	r2, [r3, #16]
 5450 0030 FFF7FEFF 		bl	_ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE
 5451              	.LVL437:
  47:../../src/middleware/select_screen.h ****                 lcd.line(i).cursor(19) << " ";
ARM GAS  /tmp/ccCYtDPO.s 			page 162


 5452              		.loc 22 47 0
 5453 0034 A768     		ldr	r7, [r4, #8]
 5454              	.LVL438:
 5455 0036 0096     		str	r6, [sp]
 5456              	.LBB2051:
 5457              	.LBB2052:
 131:../../src/string_buffer.h ****     position = (cursor + number_line * line_size) % screen_size;
 5458              		.loc 14 131 0
 5459 0038 BE60     		str	r6, [r7, #8]
 5460              	.LBE2052:
 5461              	.LBE2051:
 5462              	.LBB2053:
 5463              	.LBB2054:
 5464              	.LBB2055:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 5465              		.loc 18 100 0
 5466 003a 4C4E     		ldr	r6, .L359
 5467              	.LBE2055:
 5468              	.LBE2054:
 5469              	.LBE2053:
 5470              	.LBB2062:
 5471              	.LBB2063:
 117:../../src/string_buffer.h ****     number_line = string;
 5472              		.loc 14 117 0
 5473 003c 3D60     		str	r5, [r7]
 5474              	.LVL439:
 5475              	.LBE2063:
 5476              	.LBE2062:
 5477              	.LBB2064:
 5478              	.LBB2059:
 5479              	.LBB2056:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 5480              		.loc 18 100 0
 5481 003e 3000     		movs	r0, r6
 5482 0040 FFF7FEFF 		bl	_ZNSt11char_traitsIcE6lengthEPKc
 5483              	.LVL440:
 5484              	.LBE2056:
 5485              	.LBE2059:
 5486              	.LBE2064:
 5487              		.loc 22 47 0
 5488 0044 3200     		movs	r2, r6
 5489              	.LBB2065:
 5490              	.LBB2060:
 5491              	.LBB2057:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 5492              		.loc 18 100 0
 5493 0046 0100     		movs	r1, r0
 101:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       { }
 5494              		.loc 18 101 0
 5495 0048 0290     		str	r0, [sp, #8]
 5496              	.LBE2057:
 5497              	.LBE2060:
 5498              	.LBE2065:
 5499              		.loc 22 47 0
 5500 004a 3800     		movs	r0, r7
 5501              	.LBB2066:
 5502              	.LBB2061:
ARM GAS  /tmp/ccCYtDPO.s 			page 163


 5503              	.LBB2058:
 101:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       { }
 5504              		.loc 18 101 0
 5505 004c 0396     		str	r6, [sp, #12]
 5506              	.LVL441:
 5507              	.LBE2058:
 5508              	.LBE2061:
 5509              	.LBE2066:
 5510              		.loc 22 47 0
 5511 004e FFF7FEFF 		bl	_ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE
 5512              	.LVL442:
  48:../../src/middleware/select_screen.h ****                 if (i == carriage)
 5513              		.loc 22 48 0
 5514 0052 236E     		ldr	r3, [r4, #96]
 5515 0054 AB42     		cmp	r3, r5
 5516 0056 0ED1     		bne	.L325
  49:../../src/middleware/select_screen.h ****                     lcd.line(i).cursor(19) << "~";
 5517              		.loc 22 49 0
 5518 0058 A768     		ldr	r7, [r4, #8]
 5519              	.LVL443:
 5520              	.LBB2067:
 5521              	.LBB2068:
 5522              	.LBB2069:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 5523              		.loc 18 100 0
 5524 005a 454E     		ldr	r6, .L359+4
 5525              	.LBE2069:
 5526              	.LBE2068:
 5527              	.LBE2067:
 5528              	.LBB2076:
 5529              	.LBB2077:
 131:../../src/string_buffer.h ****     position = (cursor + number_line * line_size) % screen_size;
 5530              		.loc 14 131 0
 5531 005c 009B     		ldr	r3, [sp]
 5532              	.LBE2077:
 5533              	.LBE2076:
 5534              	.LBB2079:
 5535              	.LBB2080:
 117:../../src/string_buffer.h ****     number_line = string;
 5536              		.loc 14 117 0
 5537 005e 3D60     		str	r5, [r7]
 5538              	.LVL444:
 5539              	.LBE2080:
 5540              	.LBE2079:
 5541              	.LBB2081:
 5542              	.LBB2078:
 131:../../src/string_buffer.h ****     position = (cursor + number_line * line_size) % screen_size;
 5543              		.loc 14 131 0
 5544 0060 BB60     		str	r3, [r7, #8]
 5545              	.LVL445:
 5546              	.LBE2078:
 5547              	.LBE2081:
 5548              	.LBB2082:
 5549              	.LBB2073:
 5550              	.LBB2070:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 5551              		.loc 18 100 0
ARM GAS  /tmp/ccCYtDPO.s 			page 164


 5552 0062 3000     		movs	r0, r6
 5553 0064 FFF7FEFF 		bl	_ZNSt11char_traitsIcE6lengthEPKc
 5554              	.LVL446:
 5555              	.LBE2070:
 5556              	.LBE2073:
 5557              	.LBE2082:
 5558              		.loc 22 49 0
 5559 0068 3200     		movs	r2, r6
 5560              	.LBB2083:
 5561              	.LBB2074:
 5562              	.LBB2071:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 5563              		.loc 18 100 0
 5564 006a 0100     		movs	r1, r0
 101:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       { }
 5565              		.loc 18 101 0
 5566 006c 0290     		str	r0, [sp, #8]
 5567              	.LBE2071:
 5568              	.LBE2074:
 5569              	.LBE2083:
 5570              		.loc 22 49 0
 5571 006e 3800     		movs	r0, r7
 5572              	.LBB2084:
 5573              	.LBB2075:
 5574              	.LBB2072:
 101:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       { }
 5575              		.loc 18 101 0
 5576 0070 0396     		str	r6, [sp, #12]
 5577              	.LVL447:
 5578              	.LBE2072:
 5579              	.LBE2075:
 5580              	.LBE2084:
 5581              		.loc 22 49 0
 5582 0072 FFF7FEFF 		bl	_ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE
 5583              	.LVL448:
 5584              	.L325:
  45:../../src/middleware/select_screen.h ****                 lcd.line(i) << lines[scroll + i].name;
 5585              		.loc 22 45 0 discriminator 2
 5586 0076 0135     		adds	r5, r5, #1
 5587              	.LVL449:
 5588 0078 042D     		cmp	r5, #4
 5589 007a CCD1     		bne	.L326
 5590              	.LBE2045:
  50:../../src/middleware/select_screen.h ****             }
  51:../../src/middleware/select_screen.h ****             
  52:../../src/middleware/select_screen.h ****             if (up.push()) {
 5591              		.loc 22 52 0
 5592 007c 2068     		ldr	r0, [r4]
 5593 007e FFF7FEFF 		bl	_ZN3mcu6Button4pushEv
 5594              	.LVL450:
 5595 0082 0028     		cmp	r0, #0
 5596 0084 17D0     		beq	.L328
  53:../../src/middleware/select_screen.h ****                 carriage_v--;
 5597              		.loc 22 53 0
 5598 0086 636E     		ldr	r3, [r4, #100]
  54:../../src/middleware/select_screen.h ****                 scroll--;
 5599              		.loc 22 54 0
ARM GAS  /tmp/ccCYtDPO.s 			page 165


 5600 0088 A26E     		ldr	r2, [r4, #104]
  53:../../src/middleware/select_screen.h ****                 carriage_v--;
 5601              		.loc 22 53 0
 5602 008a 013B     		subs	r3, r3, #1
 5603              		.loc 22 54 0
 5604 008c 013A     		subs	r2, r2, #1
  53:../../src/middleware/select_screen.h ****                 carriage_v--;
 5605              		.loc 22 53 0
 5606 008e 6366     		str	r3, [r4, #100]
 5607              		.loc 22 54 0
 5608 0090 A266     		str	r2, [r4, #104]
  55:../../src/middleware/select_screen.h ****                 if (scroll < 0) {
 5609              		.loc 22 55 0
 5610 0092 002A     		cmp	r2, #0
 5611 0094 06DA     		bge	.L329
  56:../../src/middleware/select_screen.h ****                     carriage--; 
 5612              		.loc 22 56 0
 5613 0096 226E     		ldr	r2, [r4, #96]
 5614 0098 013A     		subs	r2, r2, #1
 5615 009a 2266     		str	r2, [r4, #96]
  57:../../src/middleware/select_screen.h ****                     if (carriage < 0)
 5616              		.loc 22 57 0
 5617 009c 002A     		cmp	r2, #0
 5618 009e 61DA     		bge	.L330
  58:../../src/middleware/select_screen.h ****                         scroll = qty - 4;
 5619              		.loc 22 58 0
 5620 00a0 0222     		movs	r2, #2
 5621              	.L357:
  59:../../src/middleware/select_screen.h ****                     else 
  60:../../src/middleware/select_screen.h ****                         scroll = 0;
 5622              		.loc 22 60 0
 5623 00a2 A266     		str	r2, [r4, #104]
 5624              	.L329:
  61:../../src/middleware/select_screen.h ****                 }
  62:../../src/middleware/select_screen.h ****                 if (carriage < 0) carriage = 3;
 5625              		.loc 22 62 0
 5626 00a4 226E     		ldr	r2, [r4, #96]
 5627 00a6 002A     		cmp	r2, #0
 5628 00a8 01DA     		bge	.L331
 5629              		.loc 22 62 0 is_stmt 0 discriminator 1
 5630 00aa 0322     		movs	r2, #3
 5631 00ac 2266     		str	r2, [r4, #96]
 5632              	.L331:
  63:../../src/middleware/select_screen.h ****                 if (carriage_v < 0) carriage_v = qty -1;
 5633              		.loc 22 63 0 is_stmt 1
 5634 00ae 002B     		cmp	r3, #0
 5635 00b0 01DA     		bge	.L328
 5636              		.loc 22 63 0 is_stmt 0 discriminator 1
 5637 00b2 0523     		movs	r3, #5
 5638 00b4 6366     		str	r3, [r4, #100]
 5639              	.L328:
  64:../../src/middleware/select_screen.h ****             }
  65:../../src/middleware/select_screen.h ****             if (down.push()) {
 5640              		.loc 22 65 0 is_stmt 1
 5641 00b6 6068     		ldr	r0, [r4, #4]
 5642 00b8 FFF7FEFF 		bl	_ZN3mcu6Button4pushEv
 5643              	.LVL451:
ARM GAS  /tmp/ccCYtDPO.s 			page 166


 5644 00bc 0028     		cmp	r0, #0
 5645 00be 17D0     		beq	.L334
  66:../../src/middleware/select_screen.h ****                 carriage_v++;
 5646              		.loc 22 66 0
 5647 00c0 636E     		ldr	r3, [r4, #100]
 5648 00c2 5A1C     		adds	r2, r3, #1
  67:../../src/middleware/select_screen.h ****                 scroll++;
 5649              		.loc 22 67 0
 5650 00c4 A36E     		ldr	r3, [r4, #104]
  66:../../src/middleware/select_screen.h ****                 carriage_v++;
 5651              		.loc 22 66 0
 5652 00c6 6266     		str	r2, [r4, #100]
 5653              		.loc 22 67 0
 5654 00c8 0133     		adds	r3, r3, #1
 5655 00ca A366     		str	r3, [r4, #104]
  68:../../src/middleware/select_screen.h ****                 
  69:../../src/middleware/select_screen.h ****                 if (carriage_v >= qty) carriage_v = 0;
 5656              		.loc 22 69 0
 5657 00cc 052A     		cmp	r2, #5
 5658 00ce 01DD     		ble	.L335
 5659              		.loc 22 69 0 is_stmt 0 discriminator 1
 5660 00d0 0022     		movs	r2, #0
 5661 00d2 6266     		str	r2, [r4, #100]
 5662              	.L335:
  70:../../src/middleware/select_screen.h ****                 if (scroll > qty - 4) {
 5663              		.loc 22 70 0 is_stmt 1
 5664 00d4 022B     		cmp	r3, #2
 5665 00d6 06DD     		ble	.L336
  71:../../src/middleware/select_screen.h ****                     carriage++;
 5666              		.loc 22 71 0
 5667 00d8 236E     		ldr	r3, [r4, #96]
 5668 00da 0133     		adds	r3, r3, #1
 5669 00dc 2366     		str	r3, [r4, #96]
  72:../../src/middleware/select_screen.h ****                     if (carriage > 3)
 5670              		.loc 22 72 0
 5671 00de 032B     		cmp	r3, #3
 5672 00e0 42DD     		ble	.L337
  73:../../src/middleware/select_screen.h ****                         scroll = 0; 
 5673              		.loc 22 73 0
 5674 00e2 0023     		movs	r3, #0
 5675              	.L358:
  74:../../src/middleware/select_screen.h ****                     else 
  75:../../src/middleware/select_screen.h ****                         scroll = qty - 4; 
 5676              		.loc 22 75 0
 5677 00e4 A366     		str	r3, [r4, #104]
 5678              	.L336:
  76:../../src/middleware/select_screen.h ****                 }
  77:../../src/middleware/select_screen.h ****                 if (carriage > 3) carriage = 0;
 5679              		.loc 22 77 0
 5680 00e6 236E     		ldr	r3, [r4, #96]
 5681 00e8 032B     		cmp	r3, #3
 5682 00ea 01DD     		ble	.L334
 5683              		.loc 22 77 0 is_stmt 0 discriminator 1
 5684 00ec 0023     		movs	r3, #0
 5685 00ee 2366     		str	r3, [r4, #96]
 5686              	.L334:
 5687              	.LVL452:
ARM GAS  /tmp/ccCYtDPO.s 			page 167


 5688              	.LBE2044:
 5689              	.LBB2085:
 5690              	.LBB2086:
 5691              	.LBB2087:
 5692              	.LBB2088:
 5693              	.LBB2089:
 5694              	.LBB2090:
 142:../../src/buttons.h ****       operator bool () {
 5695              		.loc 13 142 0 is_stmt 1
 5696 00f0 2368     		ldr	r3, [r4]
 5697              	.LBE2090:
 5698              	.LBE2089:
 5699              	.LBE2088:
 5700              	.LBE2087:
  78:../../src/middleware/select_screen.h ****             }
  79:../../src/middleware/select_screen.h ****         }
  80:../../src/middleware/select_screen.h **** 
  81:../../src/middleware/select_screen.h **** 
  82:../../src/middleware/select_screen.h ****         // if (qty <= 3) {
  83:../../src/middleware/select_screen.h ****         //    for (int i = 0; i < qty; i++) {
  84:../../src/middleware/select_screen.h ****         //       lcd.line(i) << lines[i].name;
  85:../../src/middleware/select_screen.h ****         //    }
  86:../../src/middleware/select_screen.h ****         // } else if (carriage <= 3) {
  87:../../src/middleware/select_screen.h ****         //    for (int i = 0; i < 4; i++) {
  88:../../src/middleware/select_screen.h ****         //       lcd.line(i) << lines[i].name;
  89:../../src/middleware/select_screen.h ****         //    }
  90:../../src/middleware/select_screen.h ****         // } else {
  91:../../src/middleware/select_screen.h ****         //    for (int i = 0; i < 4; i++) {
  92:../../src/middleware/select_screen.h ****         //       n[i] = carriage + (i - 3);
  93:../../src/middleware/select_screen.h ****         //    }
  94:../../src/middleware/select_screen.h ****         //    for (int i = 0; i < 4; i++) {
  95:../../src/middleware/select_screen.h ****         //       lcd.line(i) << lines[n[i]].name;
  96:../../src/middleware/select_screen.h ****         //    }
  97:../../src/middleware/select_screen.h ****         // }
  98:../../src/middleware/select_screen.h **** 
  99:../../src/middleware/select_screen.h ****         // carriage = up.push()   ? carriage < 1 ? qty - 1  : carriage - 1 :
 100:../../src/middleware/select_screen.h ****         //            down.push() ? carriage >= qty - 1 ? 0 : carriage + 1 :
 101:../../src/middleware/select_screen.h ****         //            carriage;
 102:../../src/middleware/select_screen.h **** 
 103:../../src/middleware/select_screen.h ****         // if (carriage <= 3) {
 104:../../src/middleware/select_screen.h ****         //    for (int i = 0; i < 4; i++)
 105:../../src/middleware/select_screen.h ****         //    {
 106:../../src/middleware/select_screen.h ****         //       lcd.line(i).cursor(19) << " ";
 107:../../src/middleware/select_screen.h ****         //       if (i == carriage)
 108:../../src/middleware/select_screen.h ****         //          lcd.line(i).cursor(19) << "~";
 109:../../src/middleware/select_screen.h ****         //    }
 110:../../src/middleware/select_screen.h ****         // } else {
 111:../../src/middleware/select_screen.h ****         //    for (int i = 0; i < 4; i++)
 112:../../src/middleware/select_screen.h ****         //    {
 113:../../src/middleware/select_screen.h ****         //       lcd.line(i).cursor(19) << " ";
 114:../../src/middleware/select_screen.h ****         //       if (n[i] == carriage)
 115:../../src/middleware/select_screen.h ****         //          lcd.line(i).cursor(19) << "~";
 116:../../src/middleware/select_screen.h ****         //    }
 117:../../src/middleware/select_screen.h ****         // }
 118:../../src/middleware/select_screen.h **** 
 119:../../src/middleware/select_screen.h ****         if (next())
 120:../../src/middleware/select_screen.h ****             lines[carriage_v].callback();
ARM GAS  /tmp/ccCYtDPO.s 			page 168


 121:../../src/middleware/select_screen.h ****         if (back()) {
 122:../../src/middleware/select_screen.h ****             f();
 123:../../src/middleware/select_screen.h ****             carriage = 0;
 124:../../src/middleware/select_screen.h ****             carriage_v = 0;
 125:../../src/middleware/select_screen.h ****         }
 126:../../src/middleware/select_screen.h **** 
 127:../../src/middleware/select_screen.h ****     }
 128:../../src/middleware/select_screen.h **** private:
 129:../../src/middleware/select_screen.h ****     Button&               up;
 130:../../src/middleware/select_screen.h ****     Button&               down;
 131:../../src/middleware/select_screen.h ****     String_buffer&        lcd;
 132:../../src/middleware/select_screen.h ****     std::array<Line, qty> lines;
 133:../../src/middleware/select_screen.h ****     std::array<int, 3>    n;
 134:../../src/middleware/select_screen.h ****     int carriage   {0};
 135:../../src/middleware/select_screen.h ****     int carriage_v {0};
 136:../../src/middleware/select_screen.h ****     int scroll     {0};
 137:../../src/middleware/select_screen.h **** 
 138:../../src/middleware/select_screen.h ****     bool back(){return (up and down).push_long();}
 139:../../src/middleware/select_screen.h ****     bool next(){return (up and down).click();}
 5701              		.loc 22 139 0
 5702 00f2 02A8     		add	r0, sp, #8
 5703              	.LVL453:
 5704              	.LBB2094:
 5705              	.LBB2093:
 5706              	.LBB2092:
 5707              	.LBB2091:
 142:../../src/buttons.h ****       operator bool () {
 5708              		.loc 13 142 0
 5709 00f4 0293     		str	r3, [sp, #8]
 5710 00f6 6368     		ldr	r3, [r4, #4]
 5711 00f8 0393     		str	r3, [sp, #12]
 5712              	.LVL454:
 5713              	.LBE2091:
 5714              	.LBE2092:
 5715              	.LBE2093:
 5716              	.LBE2094:
 5717              		.loc 22 139 0
 5718 00fa FFF7FEFF 		bl	_ZN3mcu6Button4Some5clickEv
 5719              	.LVL455:
 5720              	.LBE2086:
 5721              	.LBE2085:
 119:../../src/middleware/select_screen.h ****             lines[carriage_v].callback();
 5722              		.loc 22 119 0
 5723 00fe 0028     		cmp	r0, #0
 5724 0100 06D0     		beq	.L339
 120:../../src/middleware/select_screen.h ****         if (back()) {
 5725              		.loc 22 120 0
 5726 0102 0C20     		movs	r0, #12
 5727 0104 636E     		ldr	r3, [r4, #100]
 5728 0106 5843     		muls	r0, r3
 5729 0108 1430     		adds	r0, r0, #20
 5730 010a 2018     		adds	r0, r4, r0
 5731 010c FFF7FEFF 		bl	_ZN8FunctionIFvvEEclEv
 5732              	.LVL456:
 5733              	.L339:
 5734              	.LBB2095:
 5735              	.LBB2096:
ARM GAS  /tmp/ccCYtDPO.s 			page 169


 138:../../src/middleware/select_screen.h ****     bool next(){return (up and down).click();}
 5736              		.loc 22 138 0
 5737 0110 2568     		ldr	r5, [r4]
 5738              	.LVL457:
 5739 0112 6668     		ldr	r6, [r4, #4]
 5740              	.LVL458:
 5741              	.LBB2097:
 5742              	.LBB2098:
 169:../../src/buttons.h **** 
 170:../../src/buttons.h ****       bool push_long() {
 171:../../src/buttons.h ****          if (one.is_set() and two.is_set()) {
 5743              		.loc 13 171 0
 5744 0114 2800     		movs	r0, r5
 5745 0116 FFF7FEFF 		bl	_ZN3mcu6Button6is_setEv
 5746              	.LVL459:
 5747 011a 0028     		cmp	r0, #0
 5748 011c 0AD0     		beq	.L341
 5749 011e 3000     		movs	r0, r6
 5750 0120 FFF7FEFF 		bl	_ZN3mcu6Button6is_setEv
 5751              	.LVL460:
 5752 0124 0028     		cmp	r0, #0
 5753 0126 05D0     		beq	.L341
 172:../../src/buttons.h ****             one.tick_subscribe();
 5754              		.loc 13 172 0
 5755 0128 2800     		movs	r0, r5
 5756 012a FFF7FEFF 		bl	_ZN14TickSubscriber14tick_subscribeEv
 5757              	.LVL461:
 173:../../src/buttons.h ****             two.tick_subscribe(); 
 5758              		.loc 13 173 0
 5759 012e 3000     		movs	r0, r6
 5760 0130 FFF7FEFF 		bl	_ZN14TickSubscriber14tick_subscribeEv
 5761              	.LVL462:
 5762              	.L341:
 174:../../src/buttons.h ****          }
 175:../../src/buttons.h ****          bool result{false};
 176:../../src/buttons.h ****          result = one.time >= 1000 and two.time >= 1000 and (not one.long_press or not two.long_pre
 5763              		.loc 13 176 0
 5764 0134 0F4B     		ldr	r3, .L359+8
 5765 0136 6A69     		ldr	r2, [r5, #20]
 5766 0138 9A42     		cmp	r2, r3
 5767 013a 11DD     		ble	.L324
 5768 013c 7269     		ldr	r2, [r6, #20]
 5769 013e 9A42     		cmp	r2, r3
 5770 0140 0EDD     		ble	.L324
 5771 0142 6B7E     		ldrb	r3, [r5, #25]
 5772 0144 002B     		cmp	r3, #0
 5773 0146 02D0     		beq	.L346
 5774 0148 737E     		ldrb	r3, [r6, #25]
 5775 014a 002B     		cmp	r3, #0
 5776 014c 08D1     		bne	.L324
 5777              	.L346:
 177:../../src/buttons.h ****          if (result)
 178:../../src/buttons.h ****             one.long_press = two.long_press = true;
 5778              		.loc 13 178 0
 5779 014e 0123     		movs	r3, #1
 5780              	.LBE2098:
 5781              	.LBE2097:
ARM GAS  /tmp/ccCYtDPO.s 			page 170


 5782              	.LBE2096:
 5783              	.LBE2095:
 122:../../src/middleware/select_screen.h ****             carriage = 0;
 5784              		.loc 22 122 0
 5785 0150 01A8     		add	r0, sp, #4
 5786              	.LBB2102:
 5787              	.LBB2101:
 5788              	.LBB2100:
 5789              	.LBB2099:
 5790              		.loc 13 178 0
 5791 0152 7376     		strb	r3, [r6, #25]
 5792 0154 6B76     		strb	r3, [r5, #25]
 5793              	.LVL463:
 5794              	.LBE2099:
 5795              	.LBE2100:
 5796              	.LBE2101:
 5797              	.LBE2102:
 122:../../src/middleware/select_screen.h ****             carriage = 0;
 5798              		.loc 22 122 0
 5799 0156 FFF7FEFF 		bl	_ZN8FunctionIFvvEEclEv
 5800              	.LVL464:
 123:../../src/middleware/select_screen.h ****             carriage_v = 0;
 5801              		.loc 22 123 0
 5802 015a 0023     		movs	r3, #0
 5803 015c 2366     		str	r3, [r4, #96]
 124:../../src/middleware/select_screen.h ****         }
 5804              		.loc 22 124 0
 5805 015e 6366     		str	r3, [r4, #100]
 5806              	.L324:
 127:../../src/middleware/select_screen.h **** private:
 5807              		.loc 22 127 0
 5808 0160 05B0     		add	sp, sp, #20
 5809              		@ sp needed
 5810              	.LVL465:
 5811 0162 F0BD     		pop	{r4, r5, r6, r7, pc}
 5812              	.LVL466:
 5813              	.L330:
 5814              	.LBB2103:
  60:../../src/middleware/select_screen.h ****                 }
 5815              		.loc 22 60 0
 5816 0164 0022     		movs	r2, #0
 5817 0166 9CE7     		b	.L357
 5818              	.L337:
  75:../../src/middleware/select_screen.h ****                 }
 5819              		.loc 22 75 0
 5820 0168 0223     		movs	r3, #2
 5821 016a BBE7     		b	.L358
 5822              	.L360:
 5823              		.align	2
 5824              	.L359:
 5825 016c 00000000 		.word	.LC5
 5826 0170 00000000 		.word	.LC71
 5827 0174 E7030000 		.word	999
 5828              	.LBE2103:
 5829              		.cfi_endproc
 5830              	.LFE3362:
 5832              		.section	.text._ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_I
ARM GAS  /tmp/ccCYtDPO.s 			page 171


 5833              		.align	1
 5834              		.weak	_ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3
 5835              		.syntax unified
 5836              		.code	16
 5837              		.thumb_func
 5838              		.fpu softvfp
 5840              	_ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_
 5841              	.LFB3355:
  49:../../src/example/example_select_screen.h **** 
  50:../../src/example/example_select_screen.h ****     void notify() override
 5842              		.loc 21 50 0
 5843              		.cfi_startproc
 5844              		@ args = 0, pretend = 0, frame = 0
 5845              		@ frame_needed = 0, uses_anonymous_args = 0
 5846              	.LVL467:
 5847 0000 70B5     		push	{r4, r5, r6, lr}
 5848              	.LCFI40:
 5849              		.cfi_def_cfa_offset 16
 5850              		.cfi_offset 4, -16
 5851              		.cfi_offset 5, -12
 5852              		.cfi_offset 6, -8
 5853              		.cfi_offset 14, -4
 5854              		.loc 21 50 0
 5855 0002 0400     		movs	r4, r0
 5856              	.LBB2114:
  51:../../src/example/example_select_screen.h ****     {
  52:../../src/example/example_select_screen.h ****         if (timer.event())
 5857              		.loc 21 52 0
 5858 0004 7C30     		adds	r0, r0, #124
 5859              	.LVL468:
 5860 0006 FFF7FEFF 		bl	_ZN5Timer5eventEv
 5861              	.LVL469:
 5862 000a 0028     		cmp	r0, #0
 5863 000c 15D0     		beq	.L361
 5864              	.LBB2115:
 5865              	.LBB2116:
 5866              	.LBB2117:
 5867              	.LBB2118:
  15:../../src/function.h ****         functor_pointer = &holder;
 5868              		.loc 2 15 0
 5869 000e 0B4D     		ldr	r5, .L372
 5870              	.LBE2118:
 5871              	.LBE2117:
 5872              	.LBE2116:
  53:../../src/example/example_select_screen.h ****             screen([]{});
 5873              		.loc 21 53 0
 5874 0010 9434     		adds	r4, r4, #148
 5875              	.LVL470:
 5876              	.LBB2127:
 5877              	.LBB2126:
 5878              	.LBB2125:
  15:../../src/function.h ****         functor_pointer = &holder;
 5879              		.loc 2 15 0
 5880 0012 2B78     		ldrb	r3, [r5]
 5881 0014 BFF35B8F 		dmb	ish
 5882 0018 094E     		ldr	r6, .L372+4
 5883 001a DB07     		lsls	r3, r3, #31
ARM GAS  /tmp/ccCYtDPO.s 			page 172


 5884 001c 09D4     		bmi	.L364
 5885 001e 2800     		movs	r0, r5
 5886 0020 FFF7FEFF 		bl	__cxa_guard_acquire
 5887              	.LVL471:
 5888 0024 0028     		cmp	r0, #0
 5889 0026 04D0     		beq	.L364
 5890              	.LVL472:
 5891              	.LBB2119:
 5892              	.LBB2120:
 5893              	.LBB2121:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 5894              		.loc 2 33 0
 5895 0028 064B     		ldr	r3, .L372+8
 5896              	.LBE2121:
 5897              	.LBE2120:
 5898              	.LBE2119:
  15:../../src/function.h ****         functor_pointer = &holder;
 5899              		.loc 2 15 0
 5900 002a 2800     		movs	r0, r5
 5901              	.LBB2124:
 5902              	.LBB2123:
 5903              	.LBB2122:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 5904              		.loc 2 33 0
 5905 002c 3360     		str	r3, [r6]
 5906              	.LVL473:
 5907              	.LBE2122:
 5908              	.LBE2123:
 5909              	.LBE2124:
  15:../../src/function.h ****         functor_pointer = &holder;
 5910              		.loc 2 15 0
 5911 002e FFF7FEFF 		bl	__cxa_guard_release
 5912              	.LVL474:
 5913              	.L364:
 5914              	.LBE2125:
 5915              	.LBE2126:
 5916              	.LBE2127:
 5917              		.loc 21 53 0
 5918 0032 3100     		movs	r1, r6
 5919 0034 2000     		movs	r0, r4
 5920 0036 FFF7FEFF 		bl	_ZN6ScreenILi6EEclE8FunctionIFvvEE
 5921              	.LVL475:
 5922              	.L361:
 5923              	.LBE2115:
 5924              	.LBE2114:
  54:../../src/example/example_select_screen.h ****     }
 5925              		.loc 21 54 0
 5926              		@ sp needed
 5927 003a 70BD     		pop	{r4, r5, r6, pc}
 5928              	.L373:
 5929              		.align	2
 5930              	.L372:
 5931 003c 00000000 		.word	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 5932 0040 00000000 		.word	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 5933 0044 08000000 		.word	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 5934              		.cfi_endproc
 5935              	.LFE3355:
ARM GAS  /tmp/ccCYtDPO.s 			page 173


 5937              		.section	.text.startup._GLOBAL__sub_I__ZN3mcu5FLASH6unlockEv,"ax",%progbits
 5938              		.align	1
 5939              		.syntax unified
 5940              		.code	16
 5941              		.thumb_func
 5942              		.fpu softvfp
 5944              	_GLOBAL__sub_I__ZN3mcu5FLASH6unlockEv:
 5945              	.LFB3372:
  26:main.cpp      **** 
  27:main.cpp      ****     while(1){
  28:main.cpp      ****         __WFI();
  29:main.cpp      ****     }
  30:main.cpp      **** }
 5946              		.loc 15 30 0
 5947              		.cfi_startproc
 5948              		@ args = 0, pretend = 0, frame = 0
 5949              		@ frame_needed = 0, uses_anonymous_args = 0
 5950              		@ link register save eliminated.
 5951              	.LVL476:
 5952              	.LBB2151:
 5953              	.LBB2152:
 5954              	.LBB2153:
 5955              	.LBB2154:
 5956              	.LBB2155:
 5957              	.LBB2156:
 5958              	.LBB2157:
 5959              	.LBB2158:
  12:../../src/list.h **** {
 5960              		.loc 12 12 0
 5961 0000 0022     		movs	r2, #0
 5962              	.LBE2158:
 5963              	.LBE2157:
 5964              	.LBE2156:
  23:../../src/timers.h ****     template<Faster multiplier> // multiplier how many subticks in tick
 5965              		.loc 1 23 0
 5966 0002 0121     		movs	r1, #1
 5967              	.LBB2163:
 5968              	.LBB2161:
 5969              	.LBB2159:
  12:../../src/list.h **** {
 5970              		.loc 12 12 0
 5971 0004 0C4B     		ldr	r3, .L375
 5972              	.LBE2159:
 5973              	.LBE2161:
 5974              	.LBE2163:
 5975              	.LBE2155:
 5976              	.LBE2154:
 5977              	.LBE2153:
 5978              	.LBE2152:
 5979              	.LBE2151:
 5980              		.loc 15 30 0
 5981              		@ sp needed
 5982              	.LBB2183:
 5983              	.LBB2182:
 5984              	.LBB2181:
 5985              	.LBB2180:
 5986              	.LBB2179:
ARM GAS  /tmp/ccCYtDPO.s 			page 174


 5987              	.LBB2164:
 5988              	.LBB2162:
 5989              	.LBB2160:
  12:../../src/list.h **** {
 5990              		.loc 12 12 0
 5991 0006 1A60     		str	r2, [r3]
 5992 0008 5A60     		str	r2, [r3, #4]
 5993              	.LVL477:
 5994              	.LBE2160:
 5995              	.LBE2162:
 5996              	.LBE2164:
  23:../../src/timers.h ****     template<Faster multiplier> // multiplier how many subticks in tick
 5997              		.loc 1 23 0
 5998 000a 9A60     		str	r2, [r3, #8]
 5999 000c DA60     		str	r2, [r3, #12]
 6000 000e 1A61     		str	r2, [r3, #16]
 6001 0010 5961     		str	r1, [r3, #20]
 6002              	.LVL478:
 6003              	.LBB2165:
 6004              	.LBB2166:
 6005              	.LBB2167:
 6006              	.LBB2168:
  25:../../src/periph/systick.h ****     uint32_t get()             { return VAL; }
 6007              		.loc 4 25 0
 6008 0012 0A4B     		ldr	r3, .L375+4
 6009 0014 1868     		ldr	r0, [r3]
 6010 0016 8843     		bics	r0, r1
 6011 0018 1860     		str	r0, [r3]
 6012              	.LVL479:
 6013              	.LBE2168:
 6014              	.LBE2167:
 6015              	.LBB2169:
 6016              	.LBB2170:
  21:../../src/periph/systick.h ****     void clear()               { VAL = 0; }
 6017              		.loc 4 21 0
 6018 001a 0948     		ldr	r0, .L375+8
 6019 001c 5860     		str	r0, [r3, #4]
 6020              	.LVL480:
 6021              	.LBE2170:
 6022              	.LBE2169:
 6023              	.LBB2171:
 6024              	.LBB2172:
  22:../../src/periph/systick.h ****     void setSource (Clock v)   { CTRL.CLKSOURCE = v; }
 6025              		.loc 4 22 0
 6026 001e 9A60     		str	r2, [r3, #8]
 6027              	.LVL481:
 6028              	.LBE2172:
 6029              	.LBE2171:
 6030              	.LBB2173:
 6031              	.LBB2174:
  23:../../src/periph/systick.h ****     void enableInterrupt()     { CTRL.TICKINT = true; }
 6032              		.loc 4 23 0
 6033 0020 1868     		ldr	r0, [r3]
 6034 0022 0432     		adds	r2, r2, #4
 6035 0024 0243     		orrs	r2, r0
 6036 0026 1A60     		str	r2, [r3]
 6037              	.LVL482:
ARM GAS  /tmp/ccCYtDPO.s 			page 175


 6038              	.LBE2174:
 6039              	.LBE2173:
 6040              	.LBB2175:
 6041              	.LBB2176:
  24:../../src/periph/systick.h ****     void enable(bool v = true) { CTRL.ENABLE = v; }
 6042              		.loc 4 24 0
 6043 0028 0222     		movs	r2, #2
 6044 002a 1868     		ldr	r0, [r3]
 6045 002c 0243     		orrs	r2, r0
 6046 002e 1A60     		str	r2, [r3]
 6047              	.LVL483:
 6048              	.LBE2176:
 6049              	.LBE2175:
 6050              	.LBB2177:
 6051              	.LBB2178:
  25:../../src/periph/systick.h ****     uint32_t get()             { return VAL; }
 6052              		.loc 4 25 0
 6053 0030 1A68     		ldr	r2, [r3]
 6054 0032 1143     		orrs	r1, r2
 6055 0034 1960     		str	r1, [r3]
 6056              	.LVL484:
 6057              	.LBE2178:
 6058              	.LBE2177:
 6059              	.LBE2166:
 6060              	.LBE2165:
 6061              	.LBE2179:
 6062              	.LBE2180:
 6063              	.LBE2181:
 6064              	.LBE2182:
 6065              	.LBE2183:
 6066              		.loc 15 30 0
 6067 0036 7047     		bx	lr
 6068              	.L376:
 6069              		.align	2
 6070              	.L375:
 6071 0038 00000000 		.word	.LANCHOR0
 6072 003c 10E000E0 		.word	-536813552
 6073 0040 3F190100 		.word	71999
 6074              		.cfi_endproc
 6075              	.LFE3372:
 6077              		.section	.init_array,"aw",%init_array
 6078              		.align	2
 6079 0000 00000000 		.word	_GLOBAL__sub_I__ZN3mcu5FLASH6unlockEv(target1)
 6080              		.weak	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 6081              		.section	.rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS
 6082              		.align	2
 6085              	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EE
 6086 0000 00000000 		.word	0
 6087 0004 00000000 		.word	0
 6088 0008 00000000 		.word	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 6089              		.weak	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 6090              		.section	.bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12E
 6091              		.align	2
 6094              	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi
 6095 0000 00000000 		.space	4
 6096              		.weak	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 6097              		.section	.bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEE
ARM GAS  /tmp/ccCYtDPO.s 			page 176


 6098              		.align	2
 6101              	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2E
 6102 0000 00000000 		.space	8
 6102      00000000 
 6103              		.weak	_ZTV5Timer
 6104              		.section	.rodata._ZTV5Timer,"aG",%progbits,_ZTV5Timer,comdat
 6105              		.align	2
 6108              	_ZTV5Timer:
 6109 0000 00000000 		.word	0
 6110 0004 00000000 		.word	0
 6111 0008 00000000 		.word	_ZN5Timer6notifyEv
 6112              		.global	_ZTV7HD44780
 6113              		.weak	_ZTVN3mcu6ButtonE
 6114              		.section	.rodata._ZTVN3mcu6ButtonE,"aG",%progbits,_ZTVN3mcu6ButtonE,comdat
 6115              		.align	2
 6118              	_ZTVN3mcu6ButtonE:
 6119 0000 00000000 		.word	0
 6120 0004 00000000 		.word	0
 6121 0008 00000000 		.word	_ZN3mcu6Button6notifyEv
 6122              		.weak	_ZTVN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2EL
 6123              		.section	.rodata._ZTVN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEEN
 6124              		.align	2
 6127              	_ZTVN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS
 6128 0000 00000000 		.word	0
 6129 0004 00000000 		.word	0
 6130 0008 00000000 		.word	_ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3
 6131              		.weak	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 6132              		.section	.rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS
 6133              		.align	2
 6136              	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EE
 6137 0000 00000000 		.word	0
 6138 0004 00000000 		.word	0
 6139 0008 00000000 		.word	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 6140              		.weak	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 6141              		.section	.rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS
 6142              		.align	2
 6145              	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EE
 6146 0000 00000000 		.word	0
 6147 0004 00000000 		.word	0
 6148 0008 00000000 		.word	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 6149              		.weak	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 6150              		.section	.rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS
 6151              		.align	2
 6154              	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EE
 6155 0000 00000000 		.word	0
 6156 0004 00000000 		.word	0
 6157 0008 00000000 		.word	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 6158              		.weak	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 6159              		.section	.rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS
 6160              		.align	2
 6163              	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EE
 6164 0000 00000000 		.word	0
 6165 0004 00000000 		.word	0
 6166 0008 00000000 		.word	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 6167              		.weak	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 6168              		.section	.rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS
 6169              		.align	2
ARM GAS  /tmp/ccCYtDPO.s 			page 177


 6172              	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EE
 6173 0000 00000000 		.word	0
 6174 0004 00000000 		.word	0
 6175 0008 00000000 		.word	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 6176              		.weak	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 6177              		.section	.rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS
 6178              		.align	2
 6181              	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EE
 6182 0000 00000000 		.word	0
 6183 0004 00000000 		.word	0
 6184 0008 00000000 		.word	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 6185              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin
 6186              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin,"awG",%n
 6187              		.align	2
 6190              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin:
 6191 0000 00000000 		.space	4
 6192              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin
 6193              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin,"awG",%nob
 6194              		.align	2
 6197              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin:
 6198 0000 00000000 		.space	8
 6198      00000000 
 6199              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin
 6200              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin,"awG",%n
 6201              		.align	2
 6204              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin:
 6205 0000 00000000 		.space	4
 6206              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin
 6207              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin,"awG",%nob
 6208              		.align	2
 6211              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin:
 6212 0000 00000000 		.space	8
 6212      00000000 
 6213              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin
 6214              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin,"awG",%n
 6215              		.align	2
 6218              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin:
 6219 0000 00000000 		.space	4
 6220              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin
 6221              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin,"awG",%nob
 6222              		.align	2
 6225              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin:
 6226 0000 00000000 		.space	8
 6226      00000000 
 6227              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin
 6228              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin,"awG",%n
 6229              		.align	2
 6232              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin:
 6233 0000 00000000 		.space	4
 6234              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin
 6235              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin,"awG",%nob
 6236              		.align	2
 6239              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin:
 6240 0000 00000000 		.space	8
 6240      00000000 
 6241              		.weak	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 6242              		.section	.bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12E
ARM GAS  /tmp/ccCYtDPO.s 			page 178


 6243              		.align	2
 6246              	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi
 6247 0000 00000000 		.space	4
 6248              		.weak	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 6249              		.section	.bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEE
 6250              		.align	2
 6253              	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2E
 6254 0000 00000000 		.space	8
 6254      00000000 
 6255              		.weak	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 6256              		.section	.bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12E
 6257              		.align	2
 6260              	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi
 6261 0000 00000000 		.space	4
 6262              		.weak	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 6263              		.section	.bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEE
 6264              		.align	2
 6267              	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2E
 6268 0000 00000000 		.space	8
 6268      00000000 
 6269              		.weak	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 6270              		.section	.bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12E
 6271              		.align	2
 6274              	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi
 6275 0000 00000000 		.space	4
 6276              		.weak	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 6277              		.section	.bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEE
 6278              		.align	2
 6281              	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2E
 6282 0000 00000000 		.space	8
 6282      00000000 
 6283              		.weak	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 6284              		.section	.bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12E
 6285              		.align	2
 6288              	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi
 6289 0000 00000000 		.space	4
 6290              		.weak	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 6291              		.section	.bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEE
 6292              		.align	2
 6295              	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2E
 6296 0000 00000000 		.space	8
 6296      00000000 
 6297              		.weak	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 6298              		.section	.bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12E
 6299              		.align	2
 6302              	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi
 6303 0000 00000000 		.space	4
 6304              		.weak	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 6305              		.section	.bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEE
 6306              		.align	2
 6309              	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2E
 6310 0000 00000000 		.space	8
 6310      00000000 
 6311              		.weak	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 6312              		.section	.bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12E
 6313              		.align	2
 6316              	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi
ARM GAS  /tmp/ccCYtDPO.s 			page 179


 6317 0000 00000000 		.space	4
 6318              		.weak	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 6319              		.section	.bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEE
 6320              		.align	2
 6323              	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2E
 6324 0000 00000000 		.space	8
 6324      00000000 
 6325              		.weak	_ZGVZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_I
 6326              		.section	.bss._ZGVZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3
 6327              		.align	2
 6330              	_ZGVZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2EL
 6331 0000 00000000 		.space	4
 6332              		.weak	_ZZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS
 6333              		.section	.bss._ZZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EE
 6334              		.align	2
 6337              	_ZZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4
 6338 0000 00000000 		.space	52
 6338      00000000 
 6338      00000000 
 6338      00000000 
 6338      00000000 
 6339              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin
 6340              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin,"awG",%n
 6341              		.align	2
 6344              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin:
 6345 0000 00000000 		.space	4
 6346              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin
 6347              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin,"awG",%nob
 6348              		.align	2
 6351              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin:
 6352 0000 00000000 		.space	8
 6352      00000000 
 6353              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin
 6354              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin,"awG",%n
 6355              		.align	2
 6358              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin:
 6359 0000 00000000 		.space	4
 6360              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin
 6361              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin,"awG",%nob
 6362              		.align	2
 6365              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin:
 6366 0000 00000000 		.space	8
 6366      00000000 
 6367              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin
 6368              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin,"awG",%
 6369              		.align	2
 6372              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin:
 6373 0000 00000000 		.space	4
 6374              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin
 6375              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin,"awG",%no
 6376              		.align	2
 6379              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin:
 6380 0000 00000000 		.space	8
 6380      00000000 
 6381              		.weak	_ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button
 6382              		.section	.bss._ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button,"awG",%nobits
 6383              		.align	2
ARM GAS  /tmp/ccCYtDPO.s 			page 180


 6386              	_ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button:
 6387 0000 00000000 		.space	4
 6388              		.weak	_ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button
 6389              		.section	.bss._ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button,"awG",%nobits,_
 6390              		.align	2
 6393              	_ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button:
 6394 0000 00000000 		.space	44
 6394      00000000 
 6394      00000000 
 6394      00000000 
 6394      00000000 
 6395              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin
 6396              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin,"awG",%n
 6397              		.align	2
 6400              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin:
 6401 0000 00000000 		.space	4
 6402              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin
 6403              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin,"awG",%nob
 6404              		.align	2
 6407              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin:
 6408 0000 00000000 		.space	8
 6408      00000000 
 6409              		.weak	_ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button
 6410              		.section	.bss._ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button,"awG",%nobits
 6411              		.align	2
 6414              	_ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button:
 6415 0000 00000000 		.space	4
 6416              		.weak	_ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button
 6417              		.section	.bss._ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button,"awG",%nobits,_
 6418              		.align	2
 6421              	_ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button:
 6422 0000 00000000 		.space	44
 6422      00000000 
 6422      00000000 
 6422      00000000 
 6422      00000000 
 6423              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin
 6424              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin,"awG",%n
 6425              		.align	2
 6428              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin:
 6429 0000 00000000 		.space	4
 6430              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin
 6431              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin,"awG",%nob
 6432              		.align	2
 6435              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin:
 6436 0000 00000000 		.space	8
 6436      00000000 
 6437              		.weak	_ZN7HD447808Symbol_n5tableE
 6438              		.section	.rodata._ZN7HD447808Symbol_n5tableE,"aG",%progbits,_ZN7HD447808Symbol_n5tableE,comdat
 6439              		.align	2
 6442              	_ZN7HD447808Symbol_n5tableE:
 6443 0000 00000000 		.word	0
 6444 0004 01000000 		.word	1
 6445 0008 02000000 		.word	2
 6446 000c 03000000 		.word	3
 6447 0010 04000000 		.word	4
 6448 0014 05000000 		.word	5
ARM GAS  /tmp/ccCYtDPO.s 			page 181


 6449 0018 06000000 		.word	6
 6450 001c 07000000 		.word	7
 6451 0020 08000000 		.word	8
 6452 0024 09000000 		.word	9
 6453 0028 0A000000 		.word	10
 6454 002c 0B000000 		.word	11
 6455 0030 0C000000 		.word	12
 6456 0034 0D000000 		.word	13
 6457 0038 0E000000 		.word	14
 6458 003c 0F000000 		.word	15
 6459 0040 10000000 		.word	16
 6460 0044 11000000 		.word	17
 6461 0048 12000000 		.word	18
 6462 004c 13000000 		.word	19
 6463 0050 28000000 		.word	40
 6464 0054 29000000 		.word	41
 6465 0058 2A000000 		.word	42
 6466 005c 2B000000 		.word	43
 6467 0060 2C000000 		.word	44
 6468 0064 2D000000 		.word	45
 6469 0068 2E000000 		.word	46
 6470 006c 2F000000 		.word	47
 6471 0070 30000000 		.word	48
 6472 0074 31000000 		.word	49
 6473 0078 32000000 		.word	50
 6474 007c 33000000 		.word	51
 6475 0080 34000000 		.word	52
 6476 0084 35000000 		.word	53
 6477 0088 36000000 		.word	54
 6478 008c 37000000 		.word	55
 6479 0090 38000000 		.word	56
 6480 0094 39000000 		.word	57
 6481 0098 3A000000 		.word	58
 6482 009c 3B000000 		.word	59
 6483 00a0 14000000 		.word	20
 6484 00a4 15000000 		.word	21
 6485 00a8 16000000 		.word	22
 6486 00ac 17000000 		.word	23
 6487 00b0 18000000 		.word	24
 6488 00b4 19000000 		.word	25
 6489 00b8 1A000000 		.word	26
 6490 00bc 1B000000 		.word	27
 6491 00c0 1C000000 		.word	28
 6492 00c4 1D000000 		.word	29
 6493 00c8 1E000000 		.word	30
 6494 00cc 1F000000 		.word	31
 6495 00d0 20000000 		.word	32
 6496 00d4 21000000 		.word	33
 6497 00d8 22000000 		.word	34
 6498 00dc 23000000 		.word	35
 6499 00e0 24000000 		.word	36
 6500 00e4 25000000 		.word	37
 6501 00e8 26000000 		.word	38
 6502 00ec 27000000 		.word	39
 6503 00f0 3C000000 		.word	60
 6504 00f4 3D000000 		.word	61
 6505 00f8 3E000000 		.word	62
ARM GAS  /tmp/ccCYtDPO.s 			page 182


 6506 00fc 3F000000 		.word	63
 6507 0100 40000000 		.word	64
 6508 0104 41000000 		.word	65
 6509 0108 42000000 		.word	66
 6510 010c 43000000 		.word	67
 6511 0110 44000000 		.word	68
 6512 0114 45000000 		.word	69
 6513 0118 46000000 		.word	70
 6514 011c 47000000 		.word	71
 6515 0120 48000000 		.word	72
 6516 0124 49000000 		.word	73
 6517 0128 4A000000 		.word	74
 6518 012c 4B000000 		.word	75
 6519 0130 4C000000 		.word	76
 6520 0134 4D000000 		.word	77
 6521 0138 4E000000 		.word	78
 6522 013c 4F000000 		.word	79
 6523              		.global	tickUpdater
 6524              		.section	.bss.tickUpdater,"aw",%nobits
 6525              		.align	2
 6526              		.set	.LANCHOR0,. + 0
 6529              	tickUpdater:
 6530 0000 00000000 		.space	24
 6530      00000000 
 6530      00000000 
 6530      00000000 
 6530      00000000 
 6531              		.section	.rodata._Z9next_lineR13String_buffer.str1.1,"aMS",%progbits,1
 6532              	.LC5:
 6533 0000 2000     		.ascii	" \000"
 6534              		.section	.rodata._ZN13String_bufferlsEi.str1.1,"aMS",%progbits,1
 6535              	.LC7:
 6536 0000 256400   		.ascii	"%d\000"
 6537              		.section	.rodata._ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2
 6538              	.LC60:
 6539 0000 C0E2E0F0 		.ascii	"\300\342\340\360\350\350\000"
 6539      E8E800
 6540              	.LC62:
 6541 0007 CDE0F0E0 		.ascii	"\315\340\360\340\341\356\362\352\340\000"
 6541      E1EEF2EA 
 6541      E000
 6542              	.LC64:
 6543 0011 CAEEEDF4 		.ascii	"\312\356\355\364\350\343\363\360\340\366\350\377\000"
 6543      E8E3F3F0 
 6543      E0F6E8FF 
 6543      00
 6544              	.LC66:
 6545 001e CBEEE320 		.ascii	"\313\356\343 \360\340\341\356\362\373\000"
 6545      F0E0E1EE 
 6545      F2FB00
 6546              	.LC68:
 6547 0029 CDE0F1F2 		.ascii	"\315\340\361\362\360\356\351\352\350\000"
 6547      F0EEE9EA 
 6547      E800
 6548              		.section	.rodata._ZN4metaL8generateIL_Z10BSRR_valueIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5
 6549              		.align	2
 6552              	_ZN4metaL8generateIL_Z10BSRR_valueIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5EEENS3_ILS4_2ELi6E
ARM GAS  /tmp/ccCYtDPO.s 			page 183


 6553 0000 0000F000 		.word	15728640
 6554 0004 0000F000 		.word	15728640
 6555 0008 0000F000 		.word	15728640
 6556 000c 1000E000 		.word	14680080
 6557 0010 0000F000 		.word	15728640
 6558 0014 2000D000 		.word	13631520
 6559 0018 0000F000 		.word	15728640
 6560 001c 3000C000 		.word	12582960
 6561 0020 0000F000 		.word	15728640
 6562 0024 4000B000 		.word	11534400
 6563 0028 0000F000 		.word	15728640
 6564 002c 5000A000 		.word	10485840
 6565 0030 0000F000 		.word	15728640
 6566 0034 60009000 		.word	9437280
 6567 0038 0000F000 		.word	15728640
 6568 003c 70008000 		.word	8388720
 6569 0040 0000F000 		.word	15728640
 6570 0044 80007000 		.word	7340160
 6571 0048 0000F000 		.word	15728640
 6572 004c 90006000 		.word	6291600
 6573 0050 0000F000 		.word	15728640
 6574 0054 A0005000 		.word	5243040
 6575 0058 0000F000 		.word	15728640
 6576 005c B0004000 		.word	4194480
 6577 0060 0000F000 		.word	15728640
 6578 0064 C0003000 		.word	3145920
 6579 0068 0000F000 		.word	15728640
 6580 006c D0002000 		.word	2097360
 6581 0070 0000F000 		.word	15728640
 6582 0074 E0001000 		.word	1048800
 6583 0078 0000F000 		.word	15728640
 6584 007c F0000000 		.word	240
 6585 0080 1000E000 		.word	14680080
 6586 0084 0000F000 		.word	15728640
 6587 0088 1000E000 		.word	14680080
 6588 008c 1000E000 		.word	14680080
 6589 0090 1000E000 		.word	14680080
 6590 0094 2000D000 		.word	13631520
 6591 0098 1000E000 		.word	14680080
 6592 009c 3000C000 		.word	12582960
 6593 00a0 1000E000 		.word	14680080
 6594 00a4 4000B000 		.word	11534400
 6595 00a8 1000E000 		.word	14680080
 6596 00ac 5000A000 		.word	10485840
 6597 00b0 1000E000 		.word	14680080
 6598 00b4 60009000 		.word	9437280
 6599 00b8 1000E000 		.word	14680080
 6600 00bc 70008000 		.word	8388720
 6601 00c0 1000E000 		.word	14680080
 6602 00c4 80007000 		.word	7340160
 6603 00c8 1000E000 		.word	14680080
 6604 00cc 90006000 		.word	6291600
 6605 00d0 1000E000 		.word	14680080
 6606 00d4 A0005000 		.word	5243040
 6607 00d8 1000E000 		.word	14680080
 6608 00dc B0004000 		.word	4194480
 6609 00e0 1000E000 		.word	14680080
ARM GAS  /tmp/ccCYtDPO.s 			page 184


 6610 00e4 C0003000 		.word	3145920
 6611 00e8 1000E000 		.word	14680080
 6612 00ec D0002000 		.word	2097360
 6613 00f0 1000E000 		.word	14680080
 6614 00f4 E0001000 		.word	1048800
 6615 00f8 1000E000 		.word	14680080
 6616 00fc F0000000 		.word	240
 6617 0100 2000D000 		.word	13631520
 6618 0104 0000F000 		.word	15728640
 6619 0108 2000D000 		.word	13631520
 6620 010c 1000E000 		.word	14680080
 6621 0110 2000D000 		.word	13631520
 6622 0114 2000D000 		.word	13631520
 6623 0118 2000D000 		.word	13631520
 6624 011c 3000C000 		.word	12582960
 6625 0120 2000D000 		.word	13631520
 6626 0124 4000B000 		.word	11534400
 6627 0128 2000D000 		.word	13631520
 6628 012c 5000A000 		.word	10485840
 6629 0130 2000D000 		.word	13631520
 6630 0134 60009000 		.word	9437280
 6631 0138 2000D000 		.word	13631520
 6632 013c 70008000 		.word	8388720
 6633 0140 2000D000 		.word	13631520
 6634 0144 80007000 		.word	7340160
 6635 0148 2000D000 		.word	13631520
 6636 014c 90006000 		.word	6291600
 6637 0150 2000D000 		.word	13631520
 6638 0154 A0005000 		.word	5243040
 6639 0158 2000D000 		.word	13631520
 6640 015c B0004000 		.word	4194480
 6641 0160 2000D000 		.word	13631520
 6642 0164 C0003000 		.word	3145920
 6643 0168 2000D000 		.word	13631520
 6644 016c D0002000 		.word	2097360
 6645 0170 2000D000 		.word	13631520
 6646 0174 E0001000 		.word	1048800
 6647 0178 2000D000 		.word	13631520
 6648 017c F0000000 		.word	240
 6649 0180 3000C000 		.word	12582960
 6650 0184 0000F000 		.word	15728640
 6651 0188 3000C000 		.word	12582960
 6652 018c 1000E000 		.word	14680080
 6653 0190 3000C000 		.word	12582960
 6654 0194 2000D000 		.word	13631520
 6655 0198 3000C000 		.word	12582960
 6656 019c 3000C000 		.word	12582960
 6657 01a0 3000C000 		.word	12582960
 6658 01a4 4000B000 		.word	11534400
 6659 01a8 3000C000 		.word	12582960
 6660 01ac 5000A000 		.word	10485840
 6661 01b0 3000C000 		.word	12582960
 6662 01b4 60009000 		.word	9437280
 6663 01b8 3000C000 		.word	12582960
 6664 01bc 70008000 		.word	8388720
 6665 01c0 3000C000 		.word	12582960
 6666 01c4 80007000 		.word	7340160
ARM GAS  /tmp/ccCYtDPO.s 			page 185


 6667 01c8 3000C000 		.word	12582960
 6668 01cc 90006000 		.word	6291600
 6669 01d0 3000C000 		.word	12582960
 6670 01d4 A0005000 		.word	5243040
 6671 01d8 3000C000 		.word	12582960
 6672 01dc B0004000 		.word	4194480
 6673 01e0 3000C000 		.word	12582960
 6674 01e4 C0003000 		.word	3145920
 6675 01e8 3000C000 		.word	12582960
 6676 01ec D0002000 		.word	2097360
 6677 01f0 3000C000 		.word	12582960
 6678 01f4 E0001000 		.word	1048800
 6679 01f8 3000C000 		.word	12582960
 6680 01fc F0000000 		.word	240
 6681 0200 4000B000 		.word	11534400
 6682 0204 0000F000 		.word	15728640
 6683 0208 4000B000 		.word	11534400
 6684 020c 1000E000 		.word	14680080
 6685 0210 4000B000 		.word	11534400
 6686 0214 2000D000 		.word	13631520
 6687 0218 4000B000 		.word	11534400
 6688 021c 3000C000 		.word	12582960
 6689 0220 4000B000 		.word	11534400
 6690 0224 4000B000 		.word	11534400
 6691 0228 4000B000 		.word	11534400
 6692 022c 5000A000 		.word	10485840
 6693 0230 4000B000 		.word	11534400
 6694 0234 60009000 		.word	9437280
 6695 0238 4000B000 		.word	11534400
 6696 023c 70008000 		.word	8388720
 6697 0240 4000B000 		.word	11534400
 6698 0244 80007000 		.word	7340160
 6699 0248 4000B000 		.word	11534400
 6700 024c 90006000 		.word	6291600
 6701 0250 4000B000 		.word	11534400
 6702 0254 A0005000 		.word	5243040
 6703 0258 4000B000 		.word	11534400
 6704 025c B0004000 		.word	4194480
 6705 0260 4000B000 		.word	11534400
 6706 0264 C0003000 		.word	3145920
 6707 0268 4000B000 		.word	11534400
 6708 026c D0002000 		.word	2097360
 6709 0270 4000B000 		.word	11534400
 6710 0274 E0001000 		.word	1048800
 6711 0278 4000B000 		.word	11534400
 6712 027c F0000000 		.word	240
 6713 0280 5000A000 		.word	10485840
 6714 0284 0000F000 		.word	15728640
 6715 0288 5000A000 		.word	10485840
 6716 028c 1000E000 		.word	14680080
 6717 0290 5000A000 		.word	10485840
 6718 0294 2000D000 		.word	13631520
 6719 0298 5000A000 		.word	10485840
 6720 029c 3000C000 		.word	12582960
 6721 02a0 5000A000 		.word	10485840
 6722 02a4 4000B000 		.word	11534400
 6723 02a8 5000A000 		.word	10485840
ARM GAS  /tmp/ccCYtDPO.s 			page 186


 6724 02ac 5000A000 		.word	10485840
 6725 02b0 5000A000 		.word	10485840
 6726 02b4 60009000 		.word	9437280
 6727 02b8 5000A000 		.word	10485840
 6728 02bc 70008000 		.word	8388720
 6729 02c0 5000A000 		.word	10485840
 6730 02c4 80007000 		.word	7340160
 6731 02c8 5000A000 		.word	10485840
 6732 02cc 90006000 		.word	6291600
 6733 02d0 5000A000 		.word	10485840
 6734 02d4 A0005000 		.word	5243040
 6735 02d8 5000A000 		.word	10485840
 6736 02dc B0004000 		.word	4194480
 6737 02e0 5000A000 		.word	10485840
 6738 02e4 C0003000 		.word	3145920
 6739 02e8 5000A000 		.word	10485840
 6740 02ec D0002000 		.word	2097360
 6741 02f0 5000A000 		.word	10485840
 6742 02f4 E0001000 		.word	1048800
 6743 02f8 5000A000 		.word	10485840
 6744 02fc F0000000 		.word	240
 6745 0300 60009000 		.word	9437280
 6746 0304 0000F000 		.word	15728640
 6747 0308 60009000 		.word	9437280
 6748 030c 1000E000 		.word	14680080
 6749 0310 60009000 		.word	9437280
 6750 0314 2000D000 		.word	13631520
 6751 0318 60009000 		.word	9437280
 6752 031c 3000C000 		.word	12582960
 6753 0320 60009000 		.word	9437280
 6754 0324 4000B000 		.word	11534400
 6755 0328 60009000 		.word	9437280
 6756 032c 5000A000 		.word	10485840
 6757 0330 60009000 		.word	9437280
 6758 0334 60009000 		.word	9437280
 6759 0338 60009000 		.word	9437280
 6760 033c 70008000 		.word	8388720
 6761 0340 60009000 		.word	9437280
 6762 0344 80007000 		.word	7340160
 6763 0348 60009000 		.word	9437280
 6764 034c 90006000 		.word	6291600
 6765 0350 60009000 		.word	9437280
 6766 0354 A0005000 		.word	5243040
 6767 0358 60009000 		.word	9437280
 6768 035c B0004000 		.word	4194480
 6769 0360 60009000 		.word	9437280
 6770 0364 C0003000 		.word	3145920
 6771 0368 60009000 		.word	9437280
 6772 036c D0002000 		.word	2097360
 6773 0370 60009000 		.word	9437280
 6774 0374 E0001000 		.word	1048800
 6775 0378 60009000 		.word	9437280
 6776 037c F0000000 		.word	240
 6777 0380 70008000 		.word	8388720
 6778 0384 0000F000 		.word	15728640
 6779 0388 70008000 		.word	8388720
 6780 038c 1000E000 		.word	14680080
ARM GAS  /tmp/ccCYtDPO.s 			page 187


 6781 0390 70008000 		.word	8388720
 6782 0394 2000D000 		.word	13631520
 6783 0398 70008000 		.word	8388720
 6784 039c 3000C000 		.word	12582960
 6785 03a0 70008000 		.word	8388720
 6786 03a4 4000B000 		.word	11534400
 6787 03a8 70008000 		.word	8388720
 6788 03ac 5000A000 		.word	10485840
 6789 03b0 70008000 		.word	8388720
 6790 03b4 60009000 		.word	9437280
 6791 03b8 70008000 		.word	8388720
 6792 03bc 70008000 		.word	8388720
 6793 03c0 70008000 		.word	8388720
 6794 03c4 80007000 		.word	7340160
 6795 03c8 70008000 		.word	8388720
 6796 03cc 90006000 		.word	6291600
 6797 03d0 70008000 		.word	8388720
 6798 03d4 A0005000 		.word	5243040
 6799 03d8 70008000 		.word	8388720
 6800 03dc B0004000 		.word	4194480
 6801 03e0 70008000 		.word	8388720
 6802 03e4 C0003000 		.word	3145920
 6803 03e8 70008000 		.word	8388720
 6804 03ec D0002000 		.word	2097360
 6805 03f0 70008000 		.word	8388720
 6806 03f4 E0001000 		.word	1048800
 6807 03f8 70008000 		.word	8388720
 6808 03fc F0000000 		.word	240
 6809 0400 80007000 		.word	7340160
 6810 0404 0000F000 		.word	15728640
 6811 0408 80007000 		.word	7340160
 6812 040c 1000E000 		.word	14680080
 6813 0410 80007000 		.word	7340160
 6814 0414 2000D000 		.word	13631520
 6815 0418 80007000 		.word	7340160
 6816 041c 3000C000 		.word	12582960
 6817 0420 80007000 		.word	7340160
 6818 0424 4000B000 		.word	11534400
 6819 0428 80007000 		.word	7340160
 6820 042c 5000A000 		.word	10485840
 6821 0430 80007000 		.word	7340160
 6822 0434 60009000 		.word	9437280
 6823 0438 80007000 		.word	7340160
 6824 043c 70008000 		.word	8388720
 6825 0440 80007000 		.word	7340160
 6826 0444 80007000 		.word	7340160
 6827 0448 80007000 		.word	7340160
 6828 044c 90006000 		.word	6291600
 6829 0450 80007000 		.word	7340160
 6830 0454 A0005000 		.word	5243040
 6831 0458 80007000 		.word	7340160
 6832 045c B0004000 		.word	4194480
 6833 0460 80007000 		.word	7340160
 6834 0464 C0003000 		.word	3145920
 6835 0468 80007000 		.word	7340160
 6836 046c D0002000 		.word	2097360
 6837 0470 80007000 		.word	7340160
ARM GAS  /tmp/ccCYtDPO.s 			page 188


 6838 0474 E0001000 		.word	1048800
 6839 0478 80007000 		.word	7340160
 6840 047c F0000000 		.word	240
 6841 0480 90006000 		.word	6291600
 6842 0484 0000F000 		.word	15728640
 6843 0488 90006000 		.word	6291600
 6844 048c 1000E000 		.word	14680080
 6845 0490 90006000 		.word	6291600
 6846 0494 2000D000 		.word	13631520
 6847 0498 90006000 		.word	6291600
 6848 049c 3000C000 		.word	12582960
 6849 04a0 90006000 		.word	6291600
 6850 04a4 4000B000 		.word	11534400
 6851 04a8 90006000 		.word	6291600
 6852 04ac 5000A000 		.word	10485840
 6853 04b0 90006000 		.word	6291600
 6854 04b4 60009000 		.word	9437280
 6855 04b8 90006000 		.word	6291600
 6856 04bc 70008000 		.word	8388720
 6857 04c0 90006000 		.word	6291600
 6858 04c4 80007000 		.word	7340160
 6859 04c8 90006000 		.word	6291600
 6860 04cc 90006000 		.word	6291600
 6861 04d0 90006000 		.word	6291600
 6862 04d4 A0005000 		.word	5243040
 6863 04d8 90006000 		.word	6291600
 6864 04dc B0004000 		.word	4194480
 6865 04e0 90006000 		.word	6291600
 6866 04e4 C0003000 		.word	3145920
 6867 04e8 90006000 		.word	6291600
 6868 04ec D0002000 		.word	2097360
 6869 04f0 90006000 		.word	6291600
 6870 04f4 E0001000 		.word	1048800
 6871 04f8 90006000 		.word	6291600
 6872 04fc F0000000 		.word	240
 6873 0500 A0005000 		.word	5243040
 6874 0504 0000F000 		.word	15728640
 6875 0508 A0005000 		.word	5243040
 6876 050c 1000E000 		.word	14680080
 6877 0510 A0005000 		.word	5243040
 6878 0514 2000D000 		.word	13631520
 6879 0518 A0005000 		.word	5243040
 6880 051c 3000C000 		.word	12582960
 6881 0520 A0005000 		.word	5243040
 6882 0524 4000B000 		.word	11534400
 6883 0528 A0005000 		.word	5243040
 6884 052c 5000A000 		.word	10485840
 6885 0530 A0005000 		.word	5243040
 6886 0534 60009000 		.word	9437280
 6887 0538 A0005000 		.word	5243040
 6888 053c 70008000 		.word	8388720
 6889 0540 A0005000 		.word	5243040
 6890 0544 80007000 		.word	7340160
 6891 0548 A0005000 		.word	5243040
 6892 054c 90006000 		.word	6291600
 6893 0550 A0005000 		.word	5243040
 6894 0554 A0005000 		.word	5243040
ARM GAS  /tmp/ccCYtDPO.s 			page 189


 6895 0558 A0005000 		.word	5243040
 6896 055c B0004000 		.word	4194480
 6897 0560 A0005000 		.word	5243040
 6898 0564 C0003000 		.word	3145920
 6899 0568 A0005000 		.word	5243040
 6900 056c D0002000 		.word	2097360
 6901 0570 A0005000 		.word	5243040
 6902 0574 E0001000 		.word	1048800
 6903 0578 A0005000 		.word	5243040
 6904 057c F0000000 		.word	240
 6905 0580 B0004000 		.word	4194480
 6906 0584 0000F000 		.word	15728640
 6907 0588 B0004000 		.word	4194480
 6908 058c 1000E000 		.word	14680080
 6909 0590 B0004000 		.word	4194480
 6910 0594 2000D000 		.word	13631520
 6911 0598 B0004000 		.word	4194480
 6912 059c 3000C000 		.word	12582960
 6913 05a0 B0004000 		.word	4194480
 6914 05a4 4000B000 		.word	11534400
 6915 05a8 B0004000 		.word	4194480
 6916 05ac 5000A000 		.word	10485840
 6917 05b0 B0004000 		.word	4194480
 6918 05b4 60009000 		.word	9437280
 6919 05b8 B0004000 		.word	4194480
 6920 05bc 70008000 		.word	8388720
 6921 05c0 B0004000 		.word	4194480
 6922 05c4 80007000 		.word	7340160
 6923 05c8 B0004000 		.word	4194480
 6924 05cc 90006000 		.word	6291600
 6925 05d0 B0004000 		.word	4194480
 6926 05d4 A0005000 		.word	5243040
 6927 05d8 B0004000 		.word	4194480
 6928 05dc B0004000 		.word	4194480
 6929 05e0 B0004000 		.word	4194480
 6930 05e4 C0003000 		.word	3145920
 6931 05e8 B0004000 		.word	4194480
 6932 05ec D0002000 		.word	2097360
 6933 05f0 B0004000 		.word	4194480
 6934 05f4 E0001000 		.word	1048800
 6935 05f8 B0004000 		.word	4194480
 6936 05fc F0000000 		.word	240
 6937 0600 4000B000 		.word	11534400
 6938 0604 1000E000 		.word	14680080
 6939 0608 A0005000 		.word	5243040
 6940 060c 0000F000 		.word	15728640
 6941 0610 4000B000 		.word	11534400
 6942 0614 2000D000 		.word	13631520
 6943 0618 A0005000 		.word	5243040
 6944 061c 1000E000 		.word	14680080
 6945 0620 E0001000 		.word	1048800
 6946 0624 0000F000 		.word	15728640
 6947 0628 4000B000 		.word	11534400
 6948 062c 5000A000 		.word	10485840
 6949 0630 A0005000 		.word	5243040
 6950 0634 3000C000 		.word	12582960
 6951 0638 A0005000 		.word	5243040
ARM GAS  /tmp/ccCYtDPO.s 			page 190


 6952 063c 4000B000 		.word	11534400
 6953 0640 A0005000 		.word	5243040
 6954 0644 5000A000 		.word	10485840
 6955 0648 A0005000 		.word	5243040
 6956 064c 60009000 		.word	9437280
 6957 0650 4000B000 		.word	11534400
 6958 0654 B0004000 		.word	4194480
 6959 0658 A0005000 		.word	5243040
 6960 065c 70008000 		.word	8388720
 6961 0660 4000B000 		.word	11534400
 6962 0664 D0002000 		.word	2097360
 6963 0668 4000B000 		.word	11534400
 6964 066c 80007000 		.word	7340160
 6965 0670 4000B000 		.word	11534400
 6966 0674 F0000000 		.word	240
 6967 0678 A0005000 		.word	5243040
 6968 067c 80007000 		.word	7340160
 6969 0680 5000A000 		.word	10485840
 6970 0684 0000F000 		.word	15728640
 6971 0688 4000B000 		.word	11534400
 6972 068c 3000C000 		.word	12582960
 6973 0690 5000A000 		.word	10485840
 6974 0694 4000B000 		.word	11534400
 6975 0698 A0005000 		.word	5243040
 6976 069c 90006000 		.word	6291600
 6977 06a0 A0005000 		.word	5243040
 6978 06a4 A0005000 		.word	5243040
 6979 06a8 5000A000 		.word	10485840
 6980 06ac 80007000 		.word	7340160
 6981 06b0 E0001000 		.word	1048800
 6982 06b4 1000E000 		.word	14680080
 6983 06b8 A0005000 		.word	5243040
 6984 06bc B0004000 		.word	4194480
 6985 06c0 A0005000 		.word	5243040
 6986 06c4 C0003000 		.word	3145920
 6987 06c8 E0001000 		.word	1048800
 6988 06cc 2000D000 		.word	13631520
 6989 06d0 A0005000 		.word	5243040
 6990 06d4 D0002000 		.word	2097360
 6991 06d8 A0005000 		.word	5243040
 6992 06dc E0001000 		.word	1048800
 6993 06e0 A0005000 		.word	5243040
 6994 06e4 D0002000 		.word	2097360
 6995 06e8 A0005000 		.word	5243040
 6996 06ec F0000000 		.word	240
 6997 06f0 B0004000 		.word	4194480
 6998 06f4 0000F000 		.word	15728640
 6999 06f8 B0004000 		.word	4194480
 7000 06fc 1000E000 		.word	14680080
 7001 0700 60009000 		.word	9437280
 7002 0704 1000E000 		.word	14680080
 7003 0708 B0004000 		.word	4194480
 7004 070c 2000D000 		.word	13631520
 7005 0710 B0004000 		.word	4194480
 7006 0714 3000C000 		.word	12582960
 7007 0718 B0004000 		.word	4194480
 7008 071c 4000B000 		.word	11534400
ARM GAS  /tmp/ccCYtDPO.s 			page 191


 7009 0720 E0001000 		.word	1048800
 7010 0724 3000C000 		.word	12582960
 7011 0728 60009000 		.word	9437280
 7012 072c 5000A000 		.word	10485840
 7013 0730 B0004000 		.word	4194480
 7014 0734 60009000 		.word	9437280
 7015 0738 B0004000 		.word	4194480
 7016 073c 70008000 		.word	8388720
 7017 0740 B0004000 		.word	4194480
 7018 0744 80007000 		.word	7340160
 7019 0748 B0004000 		.word	4194480
 7020 074c 90006000 		.word	6291600
 7021 0750 B0004000 		.word	4194480
 7022 0754 A0005000 		.word	5243040
 7023 0758 B0004000 		.word	4194480
 7024 075c B0004000 		.word	4194480
 7025 0760 B0004000 		.word	4194480
 7026 0764 C0003000 		.word	3145920
 7027 0768 B0004000 		.word	4194480
 7028 076c D0002000 		.word	2097360
 7029 0770 60009000 		.word	9437280
 7030 0774 F0000000 		.word	240
 7031 0778 B0004000 		.word	4194480
 7032 077c E0001000 		.word	1048800
 7033 0780 70008000 		.word	8388720
 7034 0784 0000F000 		.word	15728640
 7035 0788 60009000 		.word	9437280
 7036 078c 3000C000 		.word	12582960
 7037 0790 B0004000 		.word	4194480
 7038 0794 F0000000 		.word	240
 7039 0798 70008000 		.word	8388720
 7040 079c 90006000 		.word	6291600
 7041 07a0 E0001000 		.word	1048800
 7042 07a4 4000B000 		.word	11534400
 7043 07a8 70008000 		.word	8388720
 7044 07ac 80007000 		.word	7340160
 7045 07b0 E0001000 		.word	1048800
 7046 07b4 5000A000 		.word	10485840
 7047 07b8 C0003000 		.word	3145920
 7048 07bc 0000F000 		.word	15728640
 7049 07c0 C0003000 		.word	3145920
 7050 07c4 1000E000 		.word	14680080
 7051 07c8 E0001000 		.word	1048800
 7052 07cc 60009000 		.word	9437280
 7053 07d0 C0003000 		.word	3145920
 7054 07d4 2000D000 		.word	13631520
 7055 07d8 C0003000 		.word	3145920
 7056 07dc 3000C000 		.word	12582960
 7057 07e0 C0003000 		.word	3145920
 7058 07e4 4000B000 		.word	11534400
 7059 07e8 C0003000 		.word	3145920
 7060 07ec 5000A000 		.word	10485840
 7061 07f0 C0003000 		.word	3145920
 7062 07f4 60009000 		.word	9437280
 7063 07f8 C0003000 		.word	3145920
 7064 07fc 70008000 		.word	8388720
 7065              		.section	.rodata._ZN4metaL8generateIL_Z12BSRR_commandIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2EL
ARM GAS  /tmp/ccCYtDPO.s 			page 192


 7066              		.align	2
 7069              	_ZN4metaL8generateIL_Z12BSRR_commandIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5EEENS3_ILS4_2ELi
 7070 0000 0000F000 		.word	15728640
 7071 0004 0000F000 		.word	15728640
 7072 0008 0000F000 		.word	15728640
 7073 000c 1000E000 		.word	14680080
 7074 0010 0000F000 		.word	15728640
 7075 0014 2000D000 		.word	13631520
 7076 0018 0000F000 		.word	15728640
 7077 001c 3000C000 		.word	12582960
 7078 0020 0000F000 		.word	15728640
 7079 0024 4000B000 		.word	11534400
 7080 0028 0000F000 		.word	15728640
 7081 002c 5000A000 		.word	10485840
 7082 0030 0000F000 		.word	15728640
 7083 0034 60009000 		.word	9437280
 7084 0038 0000F000 		.word	15728640
 7085 003c 70008000 		.word	8388720
 7086 0040 0000F000 		.word	15728640
 7087 0044 80007000 		.word	7340160
 7088 0048 0000F000 		.word	15728640
 7089 004c 90006000 		.word	6291600
 7090 0050 0000F000 		.word	15728640
 7091 0054 A0005000 		.word	5243040
 7092 0058 0000F000 		.word	15728640
 7093 005c B0004000 		.word	4194480
 7094 0060 0000F000 		.word	15728640
 7095 0064 C0003000 		.word	3145920
 7096 0068 0000F000 		.word	15728640
 7097 006c D0002000 		.word	2097360
 7098 0070 0000F000 		.word	15728640
 7099 0074 E0001000 		.word	1048800
 7100 0078 0000F000 		.word	15728640
 7101 007c F0000000 		.word	240
 7102 0080 1000E000 		.word	14680080
 7103 0084 0000F000 		.word	15728640
 7104 0088 1000E000 		.word	14680080
 7105 008c 1000E000 		.word	14680080
 7106 0090 1000E000 		.word	14680080
 7107 0094 2000D000 		.word	13631520
 7108 0098 1000E000 		.word	14680080
 7109 009c 3000C000 		.word	12582960
 7110 00a0 1000E000 		.word	14680080
 7111 00a4 4000B000 		.word	11534400
 7112 00a8 1000E000 		.word	14680080
 7113 00ac 5000A000 		.word	10485840
 7114 00b0 1000E000 		.word	14680080
 7115 00b4 60009000 		.word	9437280
 7116 00b8 1000E000 		.word	14680080
 7117 00bc 70008000 		.word	8388720
 7118 00c0 1000E000 		.word	14680080
 7119 00c4 80007000 		.word	7340160
 7120 00c8 1000E000 		.word	14680080
 7121 00cc 90006000 		.word	6291600
 7122 00d0 1000E000 		.word	14680080
 7123 00d4 A0005000 		.word	5243040
 7124 00d8 1000E000 		.word	14680080
ARM GAS  /tmp/ccCYtDPO.s 			page 193


 7125 00dc B0004000 		.word	4194480
 7126 00e0 1000E000 		.word	14680080
 7127 00e4 C0003000 		.word	3145920
 7128 00e8 1000E000 		.word	14680080
 7129 00ec D0002000 		.word	2097360
 7130 00f0 1000E000 		.word	14680080
 7131 00f4 E0001000 		.word	1048800
 7132 00f8 1000E000 		.word	14680080
 7133 00fc F0000000 		.word	240
 7134 0100 2000D000 		.word	13631520
 7135 0104 0000F000 		.word	15728640
 7136 0108 2000D000 		.word	13631520
 7137 010c 1000E000 		.word	14680080
 7138 0110 2000D000 		.word	13631520
 7139 0114 2000D000 		.word	13631520
 7140 0118 2000D000 		.word	13631520
 7141 011c 3000C000 		.word	12582960
 7142 0120 2000D000 		.word	13631520
 7143 0124 4000B000 		.word	11534400
 7144 0128 2000D000 		.word	13631520
 7145 012c 5000A000 		.word	10485840
 7146 0130 2000D000 		.word	13631520
 7147 0134 60009000 		.word	9437280
 7148 0138 2000D000 		.word	13631520
 7149 013c 70008000 		.word	8388720
 7150 0140 2000D000 		.word	13631520
 7151 0144 80007000 		.word	7340160
 7152 0148 2000D000 		.word	13631520
 7153 014c 90006000 		.word	6291600
 7154 0150 2000D000 		.word	13631520
 7155 0154 A0005000 		.word	5243040
 7156 0158 2000D000 		.word	13631520
 7157 015c B0004000 		.word	4194480
 7158 0160 2000D000 		.word	13631520
 7159 0164 C0003000 		.word	3145920
 7160 0168 2000D000 		.word	13631520
 7161 016c D0002000 		.word	2097360
 7162 0170 2000D000 		.word	13631520
 7163 0174 E0001000 		.word	1048800
 7164 0178 2000D000 		.word	13631520
 7165 017c F0000000 		.word	240
 7166 0180 3000C000 		.word	12582960
 7167 0184 0000F000 		.word	15728640
 7168 0188 3000C000 		.word	12582960
 7169 018c 1000E000 		.word	14680080
 7170 0190 3000C000 		.word	12582960
 7171 0194 2000D000 		.word	13631520
 7172 0198 3000C000 		.word	12582960
 7173 019c 3000C000 		.word	12582960
 7174 01a0 3000C000 		.word	12582960
 7175 01a4 4000B000 		.word	11534400
 7176 01a8 3000C000 		.word	12582960
 7177 01ac 5000A000 		.word	10485840
 7178 01b0 3000C000 		.word	12582960
 7179 01b4 60009000 		.word	9437280
 7180 01b8 3000C000 		.word	12582960
 7181 01bc 70008000 		.word	8388720
ARM GAS  /tmp/ccCYtDPO.s 			page 194


 7182 01c0 3000C000 		.word	12582960
 7183 01c4 80007000 		.word	7340160
 7184 01c8 3000C000 		.word	12582960
 7185 01cc 90006000 		.word	6291600
 7186 01d0 3000C000 		.word	12582960
 7187 01d4 A0005000 		.word	5243040
 7188 01d8 3000C000 		.word	12582960
 7189 01dc B0004000 		.word	4194480
 7190 01e0 3000C000 		.word	12582960
 7191 01e4 C0003000 		.word	3145920
 7192 01e8 3000C000 		.word	12582960
 7193 01ec D0002000 		.word	2097360
 7194 01f0 3000C000 		.word	12582960
 7195 01f4 E0001000 		.word	1048800
 7196 01f8 3000C000 		.word	12582960
 7197 01fc F0000000 		.word	240
 7198 0200 4000B000 		.word	11534400
 7199 0204 0000F000 		.word	15728640
 7200 0208 4000B000 		.word	11534400
 7201 020c 1000E000 		.word	14680080
 7202 0210 4000B000 		.word	11534400
 7203 0214 2000D000 		.word	13631520
 7204 0218 4000B000 		.word	11534400
 7205 021c 3000C000 		.word	12582960
 7206 0220 4000B000 		.word	11534400
 7207 0224 4000B000 		.word	11534400
 7208 0228 4000B000 		.word	11534400
 7209 022c 5000A000 		.word	10485840
 7210 0230 4000B000 		.word	11534400
 7211 0234 60009000 		.word	9437280
 7212 0238 4000B000 		.word	11534400
 7213 023c 70008000 		.word	8388720
 7214 0240 4000B000 		.word	11534400
 7215 0244 80007000 		.word	7340160
 7216 0248 4000B000 		.word	11534400
 7217 024c 90006000 		.word	6291600
 7218 0250 4000B000 		.word	11534400
 7219 0254 A0005000 		.word	5243040
 7220 0258 4000B000 		.word	11534400
 7221 025c B0004000 		.word	4194480
 7222 0260 4000B000 		.word	11534400
 7223 0264 C0003000 		.word	3145920
 7224 0268 4000B000 		.word	11534400
 7225 026c D0002000 		.word	2097360
 7226 0270 4000B000 		.word	11534400
 7227 0274 E0001000 		.word	1048800
 7228 0278 4000B000 		.word	11534400
 7229 027c F0000000 		.word	240
 7230 0280 5000A000 		.word	10485840
 7231 0284 0000F000 		.word	15728640
 7232 0288 5000A000 		.word	10485840
 7233 028c 1000E000 		.word	14680080
 7234 0290 5000A000 		.word	10485840
 7235 0294 2000D000 		.word	13631520
 7236 0298 5000A000 		.word	10485840
 7237 029c 3000C000 		.word	12582960
 7238 02a0 5000A000 		.word	10485840
ARM GAS  /tmp/ccCYtDPO.s 			page 195


 7239 02a4 4000B000 		.word	11534400
 7240 02a8 5000A000 		.word	10485840
 7241 02ac 5000A000 		.word	10485840
 7242 02b0 5000A000 		.word	10485840
 7243 02b4 60009000 		.word	9437280
 7244 02b8 5000A000 		.word	10485840
 7245 02bc 70008000 		.word	8388720
 7246 02c0 5000A000 		.word	10485840
 7247 02c4 80007000 		.word	7340160
 7248 02c8 5000A000 		.word	10485840
 7249 02cc 90006000 		.word	6291600
 7250 02d0 5000A000 		.word	10485840
 7251 02d4 A0005000 		.word	5243040
 7252 02d8 5000A000 		.word	10485840
 7253 02dc B0004000 		.word	4194480
 7254 02e0 5000A000 		.word	10485840
 7255 02e4 C0003000 		.word	3145920
 7256 02e8 5000A000 		.word	10485840
 7257 02ec D0002000 		.word	2097360
 7258 02f0 5000A000 		.word	10485840
 7259 02f4 E0001000 		.word	1048800
 7260 02f8 5000A000 		.word	10485840
 7261 02fc F0000000 		.word	240
 7262 0300 60009000 		.word	9437280
 7263 0304 0000F000 		.word	15728640
 7264 0308 60009000 		.word	9437280
 7265 030c 1000E000 		.word	14680080
 7266 0310 60009000 		.word	9437280
 7267 0314 2000D000 		.word	13631520
 7268 0318 60009000 		.word	9437280
 7269 031c 3000C000 		.word	12582960
 7270 0320 60009000 		.word	9437280
 7271 0324 4000B000 		.word	11534400
 7272 0328 60009000 		.word	9437280
 7273 032c 5000A000 		.word	10485840
 7274 0330 60009000 		.word	9437280
 7275 0334 60009000 		.word	9437280
 7276 0338 60009000 		.word	9437280
 7277 033c 70008000 		.word	8388720
 7278 0340 60009000 		.word	9437280
 7279 0344 80007000 		.word	7340160
 7280 0348 60009000 		.word	9437280
 7281 034c 90006000 		.word	6291600
 7282 0350 60009000 		.word	9437280
 7283 0354 A0005000 		.word	5243040
 7284 0358 60009000 		.word	9437280
 7285 035c B0004000 		.word	4194480
 7286 0360 60009000 		.word	9437280
 7287 0364 C0003000 		.word	3145920
 7288 0368 60009000 		.word	9437280
 7289 036c D0002000 		.word	2097360
 7290 0370 60009000 		.word	9437280
 7291 0374 E0001000 		.word	1048800
 7292 0378 60009000 		.word	9437280
 7293 037c F0000000 		.word	240
 7294 0380 70008000 		.word	8388720
 7295 0384 0000F000 		.word	15728640
ARM GAS  /tmp/ccCYtDPO.s 			page 196


 7296 0388 70008000 		.word	8388720
 7297 038c 1000E000 		.word	14680080
 7298 0390 70008000 		.word	8388720
 7299 0394 2000D000 		.word	13631520
 7300 0398 70008000 		.word	8388720
 7301 039c 3000C000 		.word	12582960
 7302 03a0 70008000 		.word	8388720
 7303 03a4 4000B000 		.word	11534400
 7304 03a8 70008000 		.word	8388720
 7305 03ac 5000A000 		.word	10485840
 7306 03b0 70008000 		.word	8388720
 7307 03b4 60009000 		.word	9437280
 7308 03b8 70008000 		.word	8388720
 7309 03bc 70008000 		.word	8388720
 7310 03c0 70008000 		.word	8388720
 7311 03c4 80007000 		.word	7340160
 7312 03c8 70008000 		.word	8388720
 7313 03cc 90006000 		.word	6291600
 7314 03d0 70008000 		.word	8388720
 7315 03d4 A0005000 		.word	5243040
 7316 03d8 70008000 		.word	8388720
 7317 03dc B0004000 		.word	4194480
 7318 03e0 70008000 		.word	8388720
 7319 03e4 C0003000 		.word	3145920
 7320 03e8 70008000 		.word	8388720
 7321 03ec D0002000 		.word	2097360
 7322 03f0 70008000 		.word	8388720
 7323 03f4 E0001000 		.word	1048800
 7324 03f8 70008000 		.word	8388720
 7325 03fc F0000000 		.word	240
 7326 0400 80007000 		.word	7340160
 7327 0404 0000F000 		.word	15728640
 7328 0408 80007000 		.word	7340160
 7329 040c 1000E000 		.word	14680080
 7330 0410 80007000 		.word	7340160
 7331 0414 2000D000 		.word	13631520
 7332 0418 80007000 		.word	7340160
 7333 041c 3000C000 		.word	12582960
 7334 0420 80007000 		.word	7340160
 7335 0424 4000B000 		.word	11534400
 7336 0428 80007000 		.word	7340160
 7337 042c 5000A000 		.word	10485840
 7338 0430 80007000 		.word	7340160
 7339 0434 60009000 		.word	9437280
 7340 0438 80007000 		.word	7340160
 7341 043c 70008000 		.word	8388720
 7342 0440 80007000 		.word	7340160
 7343 0444 80007000 		.word	7340160
 7344 0448 80007000 		.word	7340160
 7345 044c 90006000 		.word	6291600
 7346 0450 80007000 		.word	7340160
 7347 0454 A0005000 		.word	5243040
 7348 0458 80007000 		.word	7340160
 7349 045c B0004000 		.word	4194480
 7350 0460 80007000 		.word	7340160
 7351 0464 C0003000 		.word	3145920
 7352 0468 80007000 		.word	7340160
ARM GAS  /tmp/ccCYtDPO.s 			page 197


 7353 046c D0002000 		.word	2097360
 7354 0470 80007000 		.word	7340160
 7355 0474 E0001000 		.word	1048800
 7356 0478 80007000 		.word	7340160
 7357 047c F0000000 		.word	240
 7358 0480 90006000 		.word	6291600
 7359 0484 0000F000 		.word	15728640
 7360 0488 90006000 		.word	6291600
 7361 048c 1000E000 		.word	14680080
 7362 0490 90006000 		.word	6291600
 7363 0494 2000D000 		.word	13631520
 7364 0498 90006000 		.word	6291600
 7365 049c 3000C000 		.word	12582960
 7366 04a0 90006000 		.word	6291600
 7367 04a4 4000B000 		.word	11534400
 7368 04a8 90006000 		.word	6291600
 7369 04ac 5000A000 		.word	10485840
 7370 04b0 90006000 		.word	6291600
 7371 04b4 60009000 		.word	9437280
 7372 04b8 90006000 		.word	6291600
 7373 04bc 70008000 		.word	8388720
 7374 04c0 90006000 		.word	6291600
 7375 04c4 80007000 		.word	7340160
 7376 04c8 90006000 		.word	6291600
 7377 04cc 90006000 		.word	6291600
 7378 04d0 90006000 		.word	6291600
 7379 04d4 A0005000 		.word	5243040
 7380 04d8 90006000 		.word	6291600
 7381 04dc B0004000 		.word	4194480
 7382 04e0 90006000 		.word	6291600
 7383 04e4 C0003000 		.word	3145920
 7384 04e8 90006000 		.word	6291600
 7385 04ec D0002000 		.word	2097360
 7386 04f0 90006000 		.word	6291600
 7387 04f4 E0001000 		.word	1048800
 7388 04f8 90006000 		.word	6291600
 7389 04fc F0000000 		.word	240
 7390 0500 A0005000 		.word	5243040
 7391 0504 0000F000 		.word	15728640
 7392 0508 A0005000 		.word	5243040
 7393 050c 1000E000 		.word	14680080
 7394 0510 A0005000 		.word	5243040
 7395 0514 2000D000 		.word	13631520
 7396 0518 A0005000 		.word	5243040
 7397 051c 3000C000 		.word	12582960
 7398 0520 A0005000 		.word	5243040
 7399 0524 4000B000 		.word	11534400
 7400 0528 A0005000 		.word	5243040
 7401 052c 5000A000 		.word	10485840
 7402 0530 A0005000 		.word	5243040
 7403 0534 60009000 		.word	9437280
 7404 0538 A0005000 		.word	5243040
 7405 053c 70008000 		.word	8388720
 7406 0540 A0005000 		.word	5243040
 7407 0544 80007000 		.word	7340160
 7408 0548 A0005000 		.word	5243040
 7409 054c 90006000 		.word	6291600
ARM GAS  /tmp/ccCYtDPO.s 			page 198


 7410 0550 A0005000 		.word	5243040
 7411 0554 A0005000 		.word	5243040
 7412 0558 A0005000 		.word	5243040
 7413 055c B0004000 		.word	4194480
 7414 0560 A0005000 		.word	5243040
 7415 0564 C0003000 		.word	3145920
 7416 0568 A0005000 		.word	5243040
 7417 056c D0002000 		.word	2097360
 7418 0570 A0005000 		.word	5243040
 7419 0574 E0001000 		.word	1048800
 7420 0578 A0005000 		.word	5243040
 7421 057c F0000000 		.word	240
 7422 0580 B0004000 		.word	4194480
 7423 0584 0000F000 		.word	15728640
 7424 0588 B0004000 		.word	4194480
 7425 058c 1000E000 		.word	14680080
 7426 0590 B0004000 		.word	4194480
 7427 0594 2000D000 		.word	13631520
 7428 0598 B0004000 		.word	4194480
 7429 059c 3000C000 		.word	12582960
 7430 05a0 B0004000 		.word	4194480
 7431 05a4 4000B000 		.word	11534400
 7432 05a8 B0004000 		.word	4194480
 7433 05ac 5000A000 		.word	10485840
 7434 05b0 B0004000 		.word	4194480
 7435 05b4 60009000 		.word	9437280
 7436 05b8 B0004000 		.word	4194480
 7437 05bc 70008000 		.word	8388720
 7438 05c0 B0004000 		.word	4194480
 7439 05c4 80007000 		.word	7340160
 7440 05c8 B0004000 		.word	4194480
 7441 05cc 90006000 		.word	6291600
 7442 05d0 B0004000 		.word	4194480
 7443 05d4 A0005000 		.word	5243040
 7444 05d8 B0004000 		.word	4194480
 7445 05dc B0004000 		.word	4194480
 7446 05e0 B0004000 		.word	4194480
 7447 05e4 C0003000 		.word	3145920
 7448 05e8 B0004000 		.word	4194480
 7449 05ec D0002000 		.word	2097360
 7450 05f0 B0004000 		.word	4194480
 7451 05f4 E0001000 		.word	1048800
 7452 05f8 B0004000 		.word	4194480
 7453 05fc F0000000 		.word	240
 7454 0600 C0003000 		.word	3145920
 7455 0604 0000F000 		.word	15728640
 7456 0608 C0003000 		.word	3145920
 7457 060c 1000E000 		.word	14680080
 7458 0610 C0003000 		.word	3145920
 7459 0614 2000D000 		.word	13631520
 7460 0618 C0003000 		.word	3145920
 7461 061c 3000C000 		.word	12582960
 7462 0620 C0003000 		.word	3145920
 7463 0624 4000B000 		.word	11534400
 7464 0628 C0003000 		.word	3145920
 7465 062c 5000A000 		.word	10485840
 7466 0630 C0003000 		.word	3145920
ARM GAS  /tmp/ccCYtDPO.s 			page 199


 7467 0634 60009000 		.word	9437280
 7468 0638 C0003000 		.word	3145920
 7469 063c 70008000 		.word	8388720
 7470 0640 C0003000 		.word	3145920
 7471 0644 80007000 		.word	7340160
 7472 0648 C0003000 		.word	3145920
 7473 064c 90006000 		.word	6291600
 7474 0650 C0003000 		.word	3145920
 7475 0654 A0005000 		.word	5243040
 7476 0658 C0003000 		.word	3145920
 7477 065c B0004000 		.word	4194480
 7478 0660 C0003000 		.word	3145920
 7479 0664 C0003000 		.word	3145920
 7480 0668 C0003000 		.word	3145920
 7481 066c D0002000 		.word	2097360
 7482 0670 C0003000 		.word	3145920
 7483 0674 E0001000 		.word	1048800
 7484 0678 C0003000 		.word	3145920
 7485 067c F0000000 		.word	240
 7486 0680 D0002000 		.word	2097360
 7487 0684 0000F000 		.word	15728640
 7488 0688 D0002000 		.word	2097360
 7489 068c 1000E000 		.word	14680080
 7490 0690 D0002000 		.word	2097360
 7491 0694 2000D000 		.word	13631520
 7492 0698 D0002000 		.word	2097360
 7493 069c 3000C000 		.word	12582960
 7494 06a0 D0002000 		.word	2097360
 7495 06a4 4000B000 		.word	11534400
 7496 06a8 D0002000 		.word	2097360
 7497 06ac 5000A000 		.word	10485840
 7498 06b0 D0002000 		.word	2097360
 7499 06b4 60009000 		.word	9437280
 7500 06b8 D0002000 		.word	2097360
 7501 06bc 70008000 		.word	8388720
 7502 06c0 D0002000 		.word	2097360
 7503 06c4 80007000 		.word	7340160
 7504 06c8 D0002000 		.word	2097360
 7505 06cc 90006000 		.word	6291600
 7506 06d0 D0002000 		.word	2097360
 7507 06d4 A0005000 		.word	5243040
 7508 06d8 D0002000 		.word	2097360
 7509 06dc B0004000 		.word	4194480
 7510 06e0 D0002000 		.word	2097360
 7511 06e4 C0003000 		.word	3145920
 7512 06e8 D0002000 		.word	2097360
 7513 06ec D0002000 		.word	2097360
 7514 06f0 D0002000 		.word	2097360
 7515 06f4 E0001000 		.word	1048800
 7516 06f8 D0002000 		.word	2097360
 7517 06fc F0000000 		.word	240
 7518 0700 E0001000 		.word	1048800
 7519 0704 0000F000 		.word	15728640
 7520 0708 E0001000 		.word	1048800
 7521 070c 1000E000 		.word	14680080
 7522 0710 E0001000 		.word	1048800
 7523 0714 2000D000 		.word	13631520
ARM GAS  /tmp/ccCYtDPO.s 			page 200


 7524 0718 E0001000 		.word	1048800
 7525 071c 3000C000 		.word	12582960
 7526 0720 E0001000 		.word	1048800
 7527 0724 4000B000 		.word	11534400
 7528 0728 E0001000 		.word	1048800
 7529 072c 5000A000 		.word	10485840
 7530 0730 E0001000 		.word	1048800
 7531 0734 60009000 		.word	9437280
 7532 0738 E0001000 		.word	1048800
 7533 073c 70008000 		.word	8388720
 7534 0740 E0001000 		.word	1048800
 7535 0744 80007000 		.word	7340160
 7536 0748 E0001000 		.word	1048800
 7537 074c 90006000 		.word	6291600
 7538 0750 E0001000 		.word	1048800
 7539 0754 A0005000 		.word	5243040
 7540 0758 E0001000 		.word	1048800
 7541 075c B0004000 		.word	4194480
 7542 0760 E0001000 		.word	1048800
 7543 0764 C0003000 		.word	3145920
 7544 0768 E0001000 		.word	1048800
 7545 076c D0002000 		.word	2097360
 7546 0770 E0001000 		.word	1048800
 7547 0774 E0001000 		.word	1048800
 7548 0778 E0001000 		.word	1048800
 7549 077c F0000000 		.word	240
 7550 0780 F0000000 		.word	240
 7551 0784 0000F000 		.word	15728640
 7552 0788 F0000000 		.word	240
 7553 078c 1000E000 		.word	14680080
 7554 0790 F0000000 		.word	240
 7555 0794 2000D000 		.word	13631520
 7556 0798 F0000000 		.word	240
 7557 079c 3000C000 		.word	12582960
 7558 07a0 F0000000 		.word	240
 7559 07a4 4000B000 		.word	11534400
 7560 07a8 F0000000 		.word	240
 7561 07ac 5000A000 		.word	10485840
 7562 07b0 F0000000 		.word	240
 7563 07b4 60009000 		.word	9437280
 7564 07b8 F0000000 		.word	240
 7565 07bc 70008000 		.word	8388720
 7566 07c0 F0000000 		.word	240
 7567 07c4 80007000 		.word	7340160
 7568 07c8 F0000000 		.word	240
 7569 07cc 90006000 		.word	6291600
 7570 07d0 F0000000 		.word	240
 7571 07d4 A0005000 		.word	5243040
 7572 07d8 F0000000 		.word	240
 7573 07dc B0004000 		.word	4194480
 7574 07e0 F0000000 		.word	240
 7575 07e4 C0003000 		.word	3145920
 7576 07e8 F0000000 		.word	240
 7577 07ec D0002000 		.word	2097360
 7578 07f0 F0000000 		.word	240
 7579 07f4 E0001000 		.word	1048800
 7580 07f8 F0000000 		.word	240
ARM GAS  /tmp/ccCYtDPO.s 			page 201


 7581 07fc F0000000 		.word	240
 7582              		.section	.rodata._ZN6ScreenILi6EEclE8FunctionIFvvEE.str1.1,"aMS",%progbits,1
 7583              	.LC71:
 7584 0000 7E00     		.ascii	"~\000"
 7585              		.section	.rodata._ZTV7HD44780,"a",%progbits
 7586              		.align	2
 7587              		.set	.LANCHOR1,. + 0
 7590              	_ZTV7HD44780:
 7591 0000 00000000 		.word	0
 7592 0004 00000000 		.word	0
 7593 0008 00000000 		.word	_ZN7HD447806notifyEv
 7594              		.text
 7595              	.Letext0:
 7596              		.file 24 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/ty
 7597              		.file 25 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/ar
 7598              		.file 26 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/cs
 7599              		.file 27 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/cs
 7600              		.file 28 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bi
 7601              		.file 29 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/ut
 7602              		.file 30 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/cw
 7603              		.file 31 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/ne
 7604              		.file 32 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bi
 7605              		.file 33 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/de
 7606              		.file 34 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/cl
 7607              		.file 35 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/li
 7608              		.file 36 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bi
 7609              		.file 37 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/cs
 7610              		.file 38 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/cs
 7611              		.file 39 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/sy
 7612              		.file 40 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/cw
 7613              		.file 41 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/is
 7614              		.file 42 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bi
 7615              		.file 43 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bi
 7616              		.file 44 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bi
 7617              		.file 45 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/cs
 7618              		.file 46 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/os
 7619              		.file 47 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bi
 7620              		.file 48 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bi
 7621              		.file 49 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bi
 7622              		.file 50 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/ex
 7623              		.file 51 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/ex
 7624              		.file 52 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/ex
 7625              		.file 53 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/includ
 7626              		.file 54 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_def
 7627              		.file 55 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.
 7628              		.file 56 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdint.h"
 7629              		.file 57 "<built-in>"
 7630              		.file 58 "../../src/periph/periph.h"
 7631              		.file 59 "../../src/bits/bits_rcc_f1.h"
 7632              		.file 60 "../../src/bits/bits_flash_f1.h"
 7633              		.file 61 "../../src/bits/bits_gpio_f1.h"
 7634              		.file 62 "../../src/bits/bits_afio_f1.h"
 7635              		.file 63 "../../src/bits/bits_systick_f0_f4.h"
 7636              		.file 64 "../../src/pins.h"
 7637              		.file 65 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 7638              		.file 66 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h
 7639              		.file 67 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
ARM GAS  /tmp/ccCYtDPO.s 			page 202


 7640              		.file 68 "../../STM32F1_files/CMSIS/core_cm3.h"
 7641              		.file 69 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/includ
 7642              		.file 70 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/wchar.h"
 7643              		.file 71 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/locale.h"
 7644              		.file 72 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/ctype.h"
 7645              		.file 73 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 7646              		.file 74 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdio.h"
 7647              		.file 75 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/errno.h"
 7648              		.file 76 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/wctype.h"
 7649              		.file 77 "../../src/meta.h"
 7650              		.file 78 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/string.h"
 7651              		.file 79 "../../src/periph/init_clock_f1.h"
ARM GAS  /tmp/ccCYtDPO.s 			page 203


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccCYtDPO.s:16     .text._ZN5Timer6notifyEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:23     .text._ZN5Timer6notifyEv:0000000000000000 _ZN5Timer6notifyEv
     /tmp/ccCYtDPO.s:42     .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_E4callEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:49     .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_E4callEv:0000000000000000 _ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_E4callEv
     /tmp/ccCYtDPO.s:65     .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_E4callEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:72     .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_E4callEv:0000000000000000 _ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_E4callEv
     /tmp/ccCYtDPO.s:87     .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_E4callEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:94     .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_E4callEv:0000000000000000 _ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_E4callEv
     /tmp/ccCYtDPO.s:109    .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_E4callEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:116    .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_E4callEv:0000000000000000 _ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_E4callEv
     /tmp/ccCYtDPO.s:131    .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_E4callEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:138    .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_E4callEv:0000000000000000 _ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_E4callEv
     /tmp/ccCYtDPO.s:153    .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_E4callEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:160    .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_E4callEv:0000000000000000 _ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_E4callEv
     /tmp/ccCYtDPO.s:175    .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEE6notifyEvEUlvE_E4callEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:182    .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEE6notifyEvEUlvE_E4callEv:0000000000000000 _ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEE6notifyEvEUlvE_E4callEv
     /tmp/ccCYtDPO.s:197    .text._ZN5Delay2usEm.part.9:0000000000000000 $t
     /tmp/ccCYtDPO.s:203    .text._ZN5Delay2usEm.part.9:0000000000000000 _ZN5Delay2usEm.part.9
     /tmp/ccCYtDPO.s:326    .text._ZN5Delay2usEm.part.9:0000000000000050 $d
     /tmp/ccCYtDPO.s:332    .text._ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_.isra.14.constprop.23:0000000000000000 $t
     /tmp/ccCYtDPO.s:338    .text._ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_.isra.14.constprop.23:0000000000000000 _ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_.isra.14.constprop.23
     /tmp/ccCYtDPO.s:370    .text._ZN3mcu5FLASH6unlockEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:377    .text._ZN3mcu5FLASH6unlockEv:0000000000000000 _ZN3mcu5FLASH6unlockEv
     /tmp/ccCYtDPO.s:408    .text._ZN3mcu5FLASH6unlockEv:0000000000000010 $d
     /tmp/ccCYtDPO.s:414    .text._ZNSt11char_traitsIcE6lengthEPKc:0000000000000000 $t
     /tmp/ccCYtDPO.s:421    .text._ZNSt11char_traitsIcE6lengthEPKc:0000000000000000 _ZNSt11char_traitsIcE6lengthEPKc
     /tmp/ccCYtDPO.s:444    .text._ZN3Pin3setEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:451    .text._ZN3Pin3setEv:0000000000000000 _ZN3Pin3setEv
     /tmp/ccCYtDPO.s:489    .text._ZN3Pin5clearEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:496    .text._ZN3Pin5clearEv:0000000000000000 _ZN3Pin5clearEv
     /tmp/ccCYtDPO.s:542    .text._ZZN7HD447804initEvENKUlvE_clEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:548    .text._ZZN7HD447804initEvENKUlvE_clEv:0000000000000000 _ZZN7HD447804initEvENKUlvE_clEv
     /tmp/ccCYtDPO.s:618    .text._ZZN7HD447804initEvENKUlmE0_clEm:0000000000000000 $t
     /tmp/ccCYtDPO.s:624    .text._ZZN7HD447804initEvENKUlmE0_clEm:0000000000000000 _ZZN7HD447804initEvENKUlmE0_clEm
     /tmp/ccCYtDPO.s:714    .text._ZN7HD447806notifyEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:721    .text._ZN7HD447806notifyEv:0000000000000000 _ZN7HD447806notifyEv
     /tmp/ccCYtDPO.s:894    .text._ZN7HD447806notifyEv:0000000000000074 $d
     /tmp/ccCYtDPO.s:6442   .rodata._ZN7HD447808Symbol_n5tableE:0000000000000000 _ZN7HD447808Symbol_n5tableE
     /tmp/ccCYtDPO.s:901    .text._ZN3Pin6is_setEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:908    .text._ZN3Pin6is_setEv:0000000000000000 _ZN3Pin6is_setEv
     /tmp/ccCYtDPO.s:947    .text._ZN9Publisher6notifyEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:954    .text._ZN9Publisher6notifyEv:0000000000000000 _ZN9Publisher6notifyEv
     /tmp/ccCYtDPO.s:1001   .text._ZN11TickUpdater9interruptEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:1008   .text._ZN11TickUpdater9interruptEv:0000000000000000 _ZN11TickUpdater9interruptEv
     /tmp/ccCYtDPO.s:1058   .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccCYtDPO.s:1065   .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccCYtDPO.s:1086   .text.SysTick_Handler:000000000000000c $d
     /tmp/ccCYtDPO.s:1091   .text._ZN5Timer5eventEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:1098   .text._ZN5Timer5eventEv:0000000000000000 _ZN5Timer5eventEv
     /tmp/ccCYtDPO.s:1126   .text._ZN5Timer4doneEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:1133   .text._ZN5Timer4doneEv:0000000000000000 _ZN5Timer4doneEv
     /tmp/ccCYtDPO.s:1155   .text._ZN5Timer7isCountEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:1162   .text._ZN5Timer7isCountEv:0000000000000000 _ZN5Timer7isCountEv
     /tmp/ccCYtDPO.s:1179   .text._ZN5Timer10timePassedEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:1186   .text._ZN5Timer10timePassedEv:0000000000000000 _ZN5Timer10timePassedEv
ARM GAS  /tmp/ccCYtDPO.s 			page 204


     /tmp/ccCYtDPO.s:1203   .text._ZN5Timer8timeLeftEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:1210   .text._ZN5Timer8timeLeftEv:0000000000000000 _ZN5Timer8timeLeftEv
     /tmp/ccCYtDPO.s:1229   .text._ZN5Timer9isGreaterEm:0000000000000000 $t
     /tmp/ccCYtDPO.s:1236   .text._ZN5Timer9isGreaterEm:0000000000000000 _ZN5Timer9isGreaterEm
     /tmp/ccCYtDPO.s:1256   .text._ZN14TickSubscriber16tick_unsubscribeEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:1263   .text._ZN14TickSubscriber16tick_unsubscribeEv:0000000000000000 _ZN14TickSubscriber16tick_unsubscribeEv
     /tmp/ccCYtDPO.s:1354   .text._ZN14TickSubscriber16tick_unsubscribeEv:000000000000003c $d
     /tmp/ccCYtDPO.s:1364   .text._ZN3mcu6Button6notifyEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:1371   .text._ZN3mcu6Button6notifyEv:0000000000000000 _ZN3mcu6Button6notifyEv
     /tmp/ccCYtDPO.s:1475   .text._ZN5Timer4stopEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:1482   .text._ZN5Timer4stopEv:0000000000000000 _ZN5Timer4stopEv
     /tmp/ccCYtDPO.s:1509   .text._ZN5Timer5pauseEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:1516   .text._ZN5Timer5pauseEv:0000000000000000 _ZN5Timer5pauseEv
     /tmp/ccCYtDPO.s:1537   .text._ZN14TickSubscriber14tick_subscribeEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:1544   .text._ZN14TickSubscriber14tick_subscribeEv:0000000000000000 _ZN14TickSubscriber14tick_subscribeEv
     /tmp/ccCYtDPO.s:1598   .text._ZN14TickSubscriber14tick_subscribeEv:0000000000000024 $d
     /tmp/ccCYtDPO.s:1603   .text._ZN5Timer5startEm:0000000000000000 $t
     /tmp/ccCYtDPO.s:1610   .text._ZN5Timer5startEm:0000000000000000 _ZN5Timer5startEm
     /tmp/ccCYtDPO.s:1634   .text._ZN5Timer5startEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:1641   .text._ZN5Timer5startEv:0000000000000000 _ZN5Timer5startEv
     /tmp/ccCYtDPO.s:1662   .text._ZN5Delay2msEm:0000000000000000 $t
     /tmp/ccCYtDPO.s:1669   .text._ZN5Delay2msEm:0000000000000000 _ZN5Delay2msEm
     /tmp/ccCYtDPO.s:1739   .text._Z11block_delayj:0000000000000000 $t
     /tmp/ccCYtDPO.s:1746   .text._Z11block_delayj:0000000000000000 _Z11block_delayj
     /tmp/ccCYtDPO.s:1773   .text._ZN7HD447804initEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:1780   .text._ZN7HD447804initEv:0000000000000000 _ZN7HD447804initEv
     /tmp/ccCYtDPO.s:2059   .text._ZN7HD447804initEv:00000000000000f8 $d
     /tmp/ccCYtDPO.s:6108   .rodata._ZTV5Timer:0000000000000000 _ZTV5Timer
     /tmp/ccCYtDPO.s:2064   .text._ZN3mcu6Button4pushEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:2071   .text._ZN3mcu6Button4pushEv:0000000000000000 _ZN3mcu6Button4pushEv
     /tmp/ccCYtDPO.s:2142   .text._ZN3mcu6Button6is_setEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:2149   .text._ZN3mcu6Button6is_setEv:0000000000000000 _ZN3mcu6Button6is_setEv
     /tmp/ccCYtDPO.s:2200   .text._ZN3mcu6Button4Some5clickEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:2207   .text._ZN3mcu6Button4Some5clickEv:0000000000000000 _ZN3mcu6Button4Some5clickEv
     /tmp/ccCYtDPO.s:2314   .text._ZN13String_bufferlsERFRS_S0_E:0000000000000000 $t
     /tmp/ccCYtDPO.s:2321   .text._ZN13String_bufferlsERFRS_S0_E:0000000000000000 _ZN13String_bufferlsERFRS_S0_E
     /tmp/ccCYtDPO.s:2344   .text._ZN13String_buffer4lineEj:0000000000000000 $t
     /tmp/ccCYtDPO.s:2351   .text._ZN13String_buffer4lineEj:0000000000000000 _ZN13String_buffer4lineEj
     /tmp/ccCYtDPO.s:2376   .text._ZN13String_buffer5widthEj:0000000000000000 $t
     /tmp/ccCYtDPO.s:2383   .text._ZN13String_buffer5widthEj:0000000000000000 _ZN13String_buffer5widthEj
     /tmp/ccCYtDPO.s:2400   .text._ZN13String_buffer6cursorEj:0000000000000000 $t
     /tmp/ccCYtDPO.s:2407   .text._ZN13String_buffer6cursorEj:0000000000000000 _ZN13String_buffer6cursorEj
     /tmp/ccCYtDPO.s:2445   .text._ZN13String_buffer6centerEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:2452   .text._ZN13String_buffer6centerEv:0000000000000000 _ZN13String_buffer6centerEv
     /tmp/ccCYtDPO.s:2470   .text.init_clock:0000000000000000 $t
     /tmp/ccCYtDPO.s:2477   .text.init_clock:0000000000000000 init_clock
     /tmp/ccCYtDPO.s:2647   .text.init_clock:0000000000000080 $d
     /tmp/ccCYtDPO.s:2656   .text._ZSt4copyIPKcPcET0_T_S4_S3_:0000000000000000 $t
     /tmp/ccCYtDPO.s:2663   .text._ZSt4copyIPKcPcET0_T_S4_S3_:0000000000000000 _ZSt4copyIPKcPcET0_T_S4_S3_
     /tmp/ccCYtDPO.s:2714   .text._ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE:0000000000000000 $t
     /tmp/ccCYtDPO.s:2721   .text._ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE:0000000000000000 _ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE
     /tmp/ccCYtDPO.s:2981   .text._Z9next_lineR13String_buffer:0000000000000000 $t
     /tmp/ccCYtDPO.s:2988   .text._Z9next_lineR13String_buffer:0000000000000000 _Z9next_lineR13String_buffer
     /tmp/ccCYtDPO.s:3057   .text._Z9next_lineR13String_buffer:0000000000000028 $d
     /tmp/ccCYtDPO.s:3062   .text._ZN13String_bufferlsEi:0000000000000000 $t
     /tmp/ccCYtDPO.s:3069   .text._ZN13String_bufferlsEi:0000000000000000 _ZN13String_bufferlsEi
     /tmp/ccCYtDPO.s:3199   .text._ZN13String_bufferlsEi:0000000000000050 $d
ARM GAS  /tmp/ccCYtDPO.s 			page 205


     /tmp/ccCYtDPO.s:3205   .text._Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEEN4meta19tuple_generate_implIR3PinNSt22_Make_integer_sequenceIjXsZT0_ENSt18_Build_index_tupleIXsZT0_EE6__typeEE6__typeEE4typeEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:3212   .text._Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEEN4meta19tuple_generate_implIR3PinNSt22_Make_integer_sequenceIjXsZT0_ENSt18_Build_index_tupleIXsZT0_EE6__typeEE6__typeEE4typeEv:0000000000000000 _Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEEN4meta19tuple_generate_implIR3PinNSt22_Make_integer_sequenceIjXsZT0_ENSt18_Build_index_tupleIXsZT0_EE6__typeEE6__typeEE4typeEv
     /tmp/ccCYtDPO.s:3710   .text._Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEEN4meta19tuple_generate_implIR3PinNSt22_Make_integer_sequenceIjXsZT0_ENSt18_Build_index_tupleIXsZT0_EE6__typeEE6__typeEE4typeEv:000000000000012c $d
     /tmp/ccCYtDPO.s:6232   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccCYtDPO.s:6239   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccCYtDPO.s:6218   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccCYtDPO.s:6225   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccCYtDPO.s:6204   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccCYtDPO.s:6211   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccCYtDPO.s:6190   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccCYtDPO.s:6197   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccCYtDPO.s:3212   .text._Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEEN4meta19tuple_generate_implIR3PinNSt22_Make_integer_sequenceIjXsZT0_ENSt18_Build_index_tupleIXsZT0_EE6__typeEE6__typeEE4typeEv:0000000000000000 _Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEEN4meta19tuple_generate_implIR3PinNSt22_Make_integer_sequenceIjXstDpT0_ENSt18_Build_index_tupleIXstSE_EE6__typeEE6__typeEE4typeEv
     /tmp/ccCYtDPO.s:3731   .text._ZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEERS_RKSt5arrayIcLj80EE:0000000000000000 $t
     /tmp/ccCYtDPO.s:3738   .text._ZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEERS_RKSt5arrayIcLj80EE:0000000000000000 _ZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEERS_RKSt5arrayIcLj80EE
     /tmp/ccCYtDPO.s:4260   .text._ZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEERS_RKSt5arrayIcLj80EE:0000000000000188 $d
     /tmp/ccCYtDPO.s:6330   .bss._ZGVZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEERS_RKSt5arrayIcLj80EEE6screen:0000000000000000 _ZGVZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEERS_RKSt5arrayIcLj80EEE6screen
     /tmp/ccCYtDPO.s:6337   .bss._ZZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEERS_RKSt5arrayIcLj80EEE6screen:0000000000000000 _ZZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEERS_RKSt5arrayIcLj80EEE6screen
     /tmp/ccCYtDPO.s:6372   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccCYtDPO.s:6379   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccCYtDPO.s:6358   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccCYtDPO.s:6365   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccCYtDPO.s:6344   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccCYtDPO.s:6351   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccCYtDPO.s:6552   .rodata._ZN4metaL8generateIL_Z10BSRR_valueIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5EEENS3_ILS4_2ELi6EEENS3_ILS4_2ELi7EEEEDacELj256EEE:0000000000000000 _ZN4metaL8generateIL_Z10BSRR_valueIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5EEENS3_ILS4_2ELi6EEENS3_ILS4_2ELi7EEEEDacELj256EEE
     /tmp/ccCYtDPO.s:7069   .rodata._ZN4metaL8generateIL_Z12BSRR_commandIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5EEENS3_ILS4_2ELi6EEENS3_ILS4_2ELi7EEEEDacELj256EEE:0000000000000000 _ZN4metaL8generateIL_Z12BSRR_commandIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5EEENS3_ILS4_2ELi6EEENS3_ILS4_2ELi7EEEEDacELj256EEE
     /tmp/ccCYtDPO.s:4287   .text._ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEEC2Ev:0000000000000000 $t
     /tmp/ccCYtDPO.s:4294   .text._ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEEC2Ev:0000000000000000 _ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEEC2Ev
     /tmp/ccCYtDPO.s:5230   .text._ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEEC2Ev:00000000000002b0 $d
     /tmp/ccCYtDPO.s:6127   .rodata._ZTVN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEEE:0000000000000000 _ZTVN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEEE
     /tmp/ccCYtDPO.s:6414   .bss._ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button:0000000000000000 _ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button
     /tmp/ccCYtDPO.s:6421   .bss._ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button:0000000000000000 _ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button
     /tmp/ccCYtDPO.s:6428   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin
     /tmp/ccCYtDPO.s:6435   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin
     /tmp/ccCYtDPO.s:6118   .rodata._ZTVN3mcu6ButtonE:0000000000000000 _ZTVN3mcu6ButtonE
     /tmp/ccCYtDPO.s:6386   .bss._ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button:0000000000000000 _ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button
     /tmp/ccCYtDPO.s:6393   .bss._ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button:0000000000000000 _ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button
     /tmp/ccCYtDPO.s:6400   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin
     /tmp/ccCYtDPO.s:6407   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin
     /tmp/ccCYtDPO.s:6316   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_EET_E6holder:0000000000000000 _ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_EET_E6holder
     /tmp/ccCYtDPO.s:6136   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_EE:0000000000000000 _ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_EE
     /tmp/ccCYtDPO.s:6323   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_EET_E6holder:0000000000000000 _ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_EET_E6holder
     /tmp/ccCYtDPO.s:6302   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_EET_E6holder:0000000000000000 _ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_EET_E6holder
     /tmp/ccCYtDPO.s:6309   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_EET_E6holder:0000000000000000 _ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_EET_E6holder
     /tmp/ccCYtDPO.s:6145   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_EE:0000000000000000 _ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_EE
     /tmp/ccCYtDPO.s:6288   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_EET_E6holder:0000000000000000 _ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_EET_E6holder
     /tmp/ccCYtDPO.s:6295   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_EET_E6holder:0000000000000000 _ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_EET_E6holder
     /tmp/ccCYtDPO.s:6154   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_EE:0000000000000000 _ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_EE
     /tmp/ccCYtDPO.s:6274   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_EET_E6holder:0000000000000000 _ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_EET_E6holder
     /tmp/ccCYtDPO.s:6281   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_EET_E6holder:0000000000000000 _ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_EET_E6holder
     /tmp/ccCYtDPO.s:6163   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_EE:0000000000000000 _ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_EE
     /tmp/ccCYtDPO.s:6260   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_EET_E6holder:0000000000000000 _ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_EET_E6holder
     /tmp/ccCYtDPO.s:6267   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_EET_E6holder:0000000000000000 _ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_EET_E6holder
     /tmp/ccCYtDPO.s:6172   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_EE:0000000000000000 _ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_EE
     /tmp/ccCYtDPO.s:6246   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_EET_E6holder:0000000000000000 _ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_EET_E6holder
     /tmp/ccCYtDPO.s:6253   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_EET_E6holder:0000000000000000 _ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_EET_E6holder
     /tmp/ccCYtDPO.s:6181   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_EE:0000000000000000 _ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_EE
     /tmp/ccCYtDPO.s:4294   .text._ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEEC2Ev:0000000000000000 _ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEEC1Ev
ARM GAS  /tmp/ccCYtDPO.s 			page 206


     /tmp/ccCYtDPO.s:5272   .text.startup.main:0000000000000000 $t
     /tmp/ccCYtDPO.s:5279   .text.startup.main:0000000000000000 main
     /tmp/ccCYtDPO.s:5315   .text._ZN8FunctionIFvvEEclEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:5322   .text._ZN8FunctionIFvvEEclEv:0000000000000000 _ZN8FunctionIFvvEEclEv
     /tmp/ccCYtDPO.s:5350   .text._ZN6ScreenILi6EEclE8FunctionIFvvEE:0000000000000000 $t
     /tmp/ccCYtDPO.s:5357   .text._ZN6ScreenILi6EEclE8FunctionIFvvEE:0000000000000000 _ZN6ScreenILi6EEclE8FunctionIFvvEE
     /tmp/ccCYtDPO.s:5825   .text._ZN6ScreenILi6EEclE8FunctionIFvvEE:000000000000016c $d
     /tmp/ccCYtDPO.s:5833   .text._ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEE6notifyEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:5840   .text._ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEE6notifyEv:0000000000000000 _ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEE6notifyEv
     /tmp/ccCYtDPO.s:5931   .text._ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEE6notifyEv:000000000000003c $d
     /tmp/ccCYtDPO.s:6094   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEE6notifyEvEUlvE_EET_E6holder:0000000000000000 _ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEE6notifyEvEUlvE_EET_E6holder
     /tmp/ccCYtDPO.s:6101   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEE6notifyEvEUlvE_EET_E6holder:0000000000000000 _ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEE6notifyEvEUlvE_EET_E6holder
     /tmp/ccCYtDPO.s:6085   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEE6notifyEvEUlvE_EE:0000000000000000 _ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEE6notifyEvEUlvE_EE
     /tmp/ccCYtDPO.s:5938   .text.startup._GLOBAL__sub_I__ZN3mcu5FLASH6unlockEv:0000000000000000 $t
     /tmp/ccCYtDPO.s:5944   .text.startup._GLOBAL__sub_I__ZN3mcu5FLASH6unlockEv:0000000000000000 _GLOBAL__sub_I__ZN3mcu5FLASH6unlockEv
     /tmp/ccCYtDPO.s:6071   .text.startup._GLOBAL__sub_I__ZN3mcu5FLASH6unlockEv:0000000000000038 $d
     /tmp/ccCYtDPO.s:6078   .init_array:0000000000000000 $d
     /tmp/ccCYtDPO.s:6082   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEE6notifyEvEUlvE_EE:0000000000000000 $d
     /tmp/ccCYtDPO.s:6091   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEE6notifyEvEUlvE_EET_E6holder:0000000000000000 $d
     /tmp/ccCYtDPO.s:6098   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEE6notifyEvEUlvE_EET_E6holder:0000000000000000 $d
     /tmp/ccCYtDPO.s:6105   .rodata._ZTV5Timer:0000000000000000 $d
     /tmp/ccCYtDPO.s:7590   .rodata._ZTV7HD44780:0000000000000000 _ZTV7HD44780
     /tmp/ccCYtDPO.s:6115   .rodata._ZTVN3mcu6ButtonE:0000000000000000 $d
     /tmp/ccCYtDPO.s:6124   .rodata._ZTVN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEEE:0000000000000000 $d
     /tmp/ccCYtDPO.s:6133   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_EE:0000000000000000 $d
     /tmp/ccCYtDPO.s:6142   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_EE:0000000000000000 $d
     /tmp/ccCYtDPO.s:6151   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_EE:0000000000000000 $d
     /tmp/ccCYtDPO.s:6160   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_EE:0000000000000000 $d
     /tmp/ccCYtDPO.s:6169   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_EE:0000000000000000 $d
     /tmp/ccCYtDPO.s:6178   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_EE:0000000000000000 $d
     /tmp/ccCYtDPO.s:6187   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccCYtDPO.s:6194   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccCYtDPO.s:6201   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccCYtDPO.s:6208   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccCYtDPO.s:6215   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccCYtDPO.s:6222   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccCYtDPO.s:6229   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccCYtDPO.s:6236   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccCYtDPO.s:6243   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_EET_E6holder:0000000000000000 $d
     /tmp/ccCYtDPO.s:6250   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_EET_E6holder:0000000000000000 $d
     /tmp/ccCYtDPO.s:6257   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_EET_E6holder:0000000000000000 $d
     /tmp/ccCYtDPO.s:6264   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_EET_E6holder:0000000000000000 $d
     /tmp/ccCYtDPO.s:6271   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_EET_E6holder:0000000000000000 $d
     /tmp/ccCYtDPO.s:6278   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_EET_E6holder:0000000000000000 $d
     /tmp/ccCYtDPO.s:6285   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_EET_E6holder:0000000000000000 $d
     /tmp/ccCYtDPO.s:6292   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_EET_E6holder:0000000000000000 $d
     /tmp/ccCYtDPO.s:6299   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_EET_E6holder:0000000000000000 $d
     /tmp/ccCYtDPO.s:6306   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_EET_E6holder:0000000000000000 $d
     /tmp/ccCYtDPO.s:6313   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_EET_E6holder:0000000000000000 $d
     /tmp/ccCYtDPO.s:6320   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_EET_E6holder:0000000000000000 $d
     /tmp/ccCYtDPO.s:6327   .bss._ZGVZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEERS_RKSt5arrayIcLj80EEE6screen:0000000000000000 $d
     /tmp/ccCYtDPO.s:6334   .bss._ZZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEERS_RKSt5arrayIcLj80EEE6screen:0000000000000000 $d
     /tmp/ccCYtDPO.s:6341   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccCYtDPO.s:6348   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccCYtDPO.s:6355   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccCYtDPO.s:6362   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccCYtDPO.s:6369   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
ARM GAS  /tmp/ccCYtDPO.s 			page 207


     /tmp/ccCYtDPO.s:6376   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccCYtDPO.s:6383   .bss._ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button:0000000000000000 $d
     /tmp/ccCYtDPO.s:6390   .bss._ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button:0000000000000000 $d
     /tmp/ccCYtDPO.s:6397   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin:0000000000000000 $d
     /tmp/ccCYtDPO.s:6404   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin:0000000000000000 $d
     /tmp/ccCYtDPO.s:6411   .bss._ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button:0000000000000000 $d
     /tmp/ccCYtDPO.s:6418   .bss._ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button:0000000000000000 $d
     /tmp/ccCYtDPO.s:6425   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin:0000000000000000 $d
     /tmp/ccCYtDPO.s:6432   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin:0000000000000000 $d
     /tmp/ccCYtDPO.s:6439   .rodata._ZN7HD447808Symbol_n5tableE:0000000000000000 $d
     /tmp/ccCYtDPO.s:6529   .bss.tickUpdater:0000000000000000 tickUpdater
     /tmp/ccCYtDPO.s:6525   .bss.tickUpdater:0000000000000000 $d
     /tmp/ccCYtDPO.s:6549   .rodata._ZN4metaL8generateIL_Z10BSRR_valueIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5EEENS3_ILS4_2ELi6EEENS3_ILS4_2ELi7EEEEDacELj256EEE:0000000000000000 $d
     /tmp/ccCYtDPO.s:7066   .rodata._ZN4metaL8generateIL_Z12BSRR_commandIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5EEENS3_ILS4_2ELi6EEENS3_ILS4_2ELi7EEEEDacELj256EEE:0000000000000000 $d
     /tmp/ccCYtDPO.s:7586   .rodata._ZTV7HD44780:0000000000000000 $d
                           .group:0000000000000000 _ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEEC5Ev

UNDEFINED SYMBOLS
memset
strlen
__aeabi_uidivmod
memmove
sprintf
__cxa_guard_acquire
__cxa_guard_release
