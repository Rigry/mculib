ARM GAS  /tmp/ccFxkDJm.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.cpp"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._ZN5Timer6notifyEv,"axG",%progbits,_ZN5Timer6notifyEv,comdat
  16              		.align	1
  17              		.weak	_ZN5Timer6notifyEv
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	_ZN5Timer6notifyEv:
  24              	.LFB2526:
  25              		.file 1 "../../src/timers.h"
   1:../../src/timers.h **** #pragma once
   2:../../src/timers.h **** 
   3:../../src/timers.h **** #include <cstdint>
   4:../../src/timers.h **** #include "subscriber.h"
   5:../../src/timers.h **** #include "systick.h"
   6:../../src/timers.h **** #include "literals.h"
   7:../../src/timers.h **** #include "function.h"
   8:../../src/timers.h **** #ifdef USE_MOCK_SYSTICK
   9:../../src/timers.h **** using mock::SysTick;
  10:../../src/timers.h **** #else
  11:../../src/timers.h **** using mcu::SysTick;
  12:../../src/timers.h **** #endif
  13:../../src/timers.h **** 
  14:../../src/timers.h **** 
  15:../../src/timers.h **** 
  16:../../src/timers.h **** enum Faster {
  17:../../src/timers.h ****      x2 = 2, x4 = 4, x5 = 5, x8 = 8, x10 = 10,
  18:../../src/timers.h **** };
  19:../../src/timers.h **** 
  20:../../src/timers.h **** 
  21:../../src/timers.h **** struct TickUpdater : Publisher
  22:../../src/timers.h **** {
  23:../../src/timers.h ****     TickUpdater() { REF(SysTick).initInterrupt<1000_us>(); }
  24:../../src/timers.h ****     template<Faster multiplier> // multiplier how many subticks in tick
  25:../../src/timers.h ****     void subscribe_subtick (Subscriber& v);
  26:../../src/timers.h ****     void interrupt();
  27:../../src/timers.h **** 
  28:../../src/timers.h **** 
  29:../../src/timers.h **** private:
  30:../../src/timers.h ****     struct Subtick : Publisher {} subtick {};
  31:../../src/timers.h ****     size_t subtick_cnt {0};
  32:../../src/timers.h ****     size_t subtick_qty {1};
  33:../../src/timers.h **** } tickUpdater{};
ARM GAS  /tmp/ccFxkDJm.s 			page 2


  34:../../src/timers.h **** 
  35:../../src/timers.h **** 
  36:../../src/timers.h **** 
  37:../../src/timers.h **** extern "C" void SysTick_Handler()
  38:../../src/timers.h **** {
  39:../../src/timers.h ****     tickUpdater.interrupt();
  40:../../src/timers.h **** }
  41:../../src/timers.h **** 
  42:../../src/timers.h **** 
  43:../../src/timers.h **** 
  44:../../src/timers.h **** class TickSubscriber : Subscriber
  45:../../src/timers.h **** {
  46:../../src/timers.h **** protected:
  47:../../src/timers.h ****     bool subscribed {false};
  48:../../src/timers.h ****     void tick_subscribe();
  49:../../src/timers.h ****     void tick_unsubscribe();
  50:../../src/timers.h ****     template<Faster multiplier> // multiplier how many subticks in tick
  51:../../src/timers.h ****     void tick_subscribe();
  52:../../src/timers.h **** };
  53:../../src/timers.h **** 
  54:../../src/timers.h **** 
  55:../../src/timers.h **** 
  56:../../src/timers.h **** class Timer : TickSubscriber
  57:../../src/timers.h **** {
  58:../../src/timers.h **** public:
  59:../../src/timers.h ****     Timer() = default;
  60:../../src/timers.h ****     Timer (uint32_t ms) { start(ms); }
  61:../../src/timers.h ****     ~Timer () {tick_unsubscribe();}
  62:../../src/timers.h **** 
  63:../../src/timers.h ****     void     start   (uint32_t ms); /// –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å—á—ë—Ç —Å —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–
  64:../../src/timers.h ****     bool     event();   /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ —Ç–∞–π–º–µ—Ä –Ω–∞—Ç–∏–∫–∞–ª –∏ –ø–µ
  65:../../src/timers.h ****     bool     done();    /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ —Ç–∞–π–º–µ—Ä –Ω–∞—Ç–∏–∫–∞–ª –∏ –ù–ï
  66:../../src/timers.h ****     void     pause();   /// –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—á—ë—Ç, –Ω–æ –Ω–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—
  67:../../src/timers.h ****     void     start();   /// –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å—á—ë—Ç —Å —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å—á—ë
  68:../../src/timers.h ****     void     stop();    /// –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—á—ë—Ç –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—á—ë—Ç—á–
  69:../../src/timers.h ****     bool     isGreater (uint32_t val); /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ —Å—á—ë—Ç—á–∏–∫ –Ω–∞—
  70:../../src/timers.h ****     bool     isCount(); /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –µ—Å–ª–∏ —Å—á–∏—Ç–∞–µ—Ç, –Ω–æ –Ω–µ –¥–æ—Å—á–∏
  71:../../src/timers.h ****     uint32_t timePassed(); /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –Ω–∞—Ç–∏–∫–∞–ª
  72:../../src/timers.h ****     uint32_t timeLeft();   /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å
  73:../../src/timers.h ****     template<class function>
  74:../../src/timers.h ****     void     event (function); /// –≤—ã–ø–æ–ª–Ω—è–µ—Ç function, –∫–æ–≥–¥–∞ –¥–æ—Ç–∏–∫–∞–ª –∏ –ø–µ—Ä
  75:../../src/timers.h ****     volatile uint32_t timeSet {0};
  76:../../src/timers.h **** 
  77:../../src/timers.h **** 
  78:../../src/timers.h **** private:
  79:../../src/timers.h ****     volatile uint32_t timePassed_ {0};	
  80:../../src/timers.h **** 
  81:../../src/timers.h ****     void notify() override { timePassed_++; }
  26              		.loc 1 81 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32              		.loc 1 81 0
  33 0000 4369     		ldr	r3, [r0, #20]
  34              		@ sp needed
ARM GAS  /tmp/ccFxkDJm.s 			page 3


  35 0002 0133     		adds	r3, r3, #1
  36 0004 4361     		str	r3, [r0, #20]
  37 0006 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE2526:
  41              		.section	.text._ZN13Select_screenILi6EE4initEv,"axG",%progbits,_ZN13Select_screenILi6EE4initEv,com
  42              		.align	1
  43              		.weak	_ZN13Select_screenILi6EE4initEv
  44              		.syntax unified
  45              		.code	16
  46              		.thumb_func
  47              		.fpu softvfp
  49              	_ZN13Select_screenILi6EE4initEv:
  50              	.LFB3090:
  51              		.file 2 "../../src/middleware/select_screen.h"
   1:../../src/middleware/select_screen.h **** #pragma once
   2:../../src/middleware/select_screen.h **** #include <utility>
   3:../../src/middleware/select_screen.h **** #include "buttons.h"
   4:../../src/middleware/select_screen.h **** #include "function.h"
   5:../../src/middleware/select_screen.h **** #include "string_buffer.h"
   6:../../src/middleware/select_screen.h **** 
   7:../../src/middleware/select_screen.h **** struct Screen {
   8:../../src/middleware/select_screen.h ****     virtual void init() = 0; // –ø–µ—Ä–≤–∏—á–Ω–∞—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∞
   9:../../src/middleware/select_screen.h ****     virtual void draw() = 0; // —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ 
  10:../../src/middleware/select_screen.h **** };
  11:../../src/middleware/select_screen.h **** 
  12:../../src/middleware/select_screen.h **** struct Line {
  13:../../src/middleware/select_screen.h ****     std::string_view name;
  14:../../src/middleware/select_screen.h ****     Function<void()> callback;
  15:../../src/middleware/select_screen.h **** };
  16:../../src/middleware/select_screen.h **** 
  17:../../src/middleware/select_screen.h **** template <int qty>
  18:../../src/middleware/select_screen.h **** class Select_screen : public Screen
  19:../../src/middleware/select_screen.h **** {
  20:../../src/middleware/select_screen.h **** public:
  21:../../src/middleware/select_screen.h ****     template <class...Line> Select_screen (
  22:../../src/middleware/select_screen.h ****           Button& up
  23:../../src/middleware/select_screen.h ****         , Button& down
  24:../../src/middleware/select_screen.h ****         , String_buffer& lcd
  25:../../src/middleware/select_screen.h ****         , Function<void()> out_callback 
  26:../../src/middleware/select_screen.h ****         , Line ... lines
  27:../../src/middleware/select_screen.h ****     ) : up           {up}
  28:../../src/middleware/select_screen.h ****       , down         {down}
  29:../../src/middleware/select_screen.h ****       , lcd          {lcd}
  30:../../src/middleware/select_screen.h ****       , out_callback {out_callback}
  31:../../src/middleware/select_screen.h ****       , lines        {lines...}
  32:../../src/middleware/select_screen.h ****     {}
  33:../../src/middleware/select_screen.h **** 
  34:../../src/middleware/select_screen.h ****     void init() override {}
  52              		.loc 2 34 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.LVL1:
  58              		.loc 2 34 0
  59              		@ sp needed
ARM GAS  /tmp/ccFxkDJm.s 			page 4


  60 0000 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE3090:
  64              		.section	.text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6P
  65              		.align	1
  66              		.weak	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
  67              		.syntax unified
  68              		.code	16
  69              		.thumb_func
  70              		.fpu softvfp
  72              	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEEN
  73              	.LFB3363:
  74              		.file 3 "../../src/function.h"
   1:../../src/function.h **** // –∑–∞ –æ—Å–Ω–æ–≤—É –≤–∑—è–ª –≤–æ—Ç —ç—Ç–æ https://habr.com/ru/post/159389/
   2:../../src/function.h **** // —É–±—Ä–∞–ª –≤—Å—ë, —á—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å –∫—É—á–µ–π
   3:../../src/function.h **** // –¢–£–î–£ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –º–µ—Ç–æ–¥–æ–≤ –æ–±—ä–µ–∫—Ç–æ–≤ (–Ω–æ –ø–æ–∫–∞ –Ω–µ –Ω—É–∂–Ω–∞)
   4:../../src/function.h **** #pragma once
   5:../../src/function.h **** 
   6:../../src/function.h **** template <class T>
   7:../../src/function.h **** class Function;
   8:../../src/function.h **** 
   9:../../src/function.h **** template <class Return, class ... Args>
  10:../../src/function.h **** class Function <Return (Args...)> {
  11:../../src/function.h **** public:
  12:../../src/function.h ****     Function() = default;
  13:../../src/function.h **** 	template <class Function_>
  14:../../src/function.h **** 	Function (Function_ f) {
  15:../../src/function.h ****         static Function_holder<Function_> holder (f);
  16:../../src/function.h ****         functor_pointer = &holder;
  17:../../src/function.h ****     }
  18:../../src/function.h **** 
  19:../../src/function.h **** 	Return operator() (Args ... args) {
  20:../../src/function.h **** 		return functor_pointer->call(args...);
  21:../../src/function.h **** 	}
  22:../../src/function.h **** 
  23:../../src/function.h ****     operator bool() { return functor_pointer != nullptr; }
  24:../../src/function.h **** private:
  25:../../src/function.h **** 	struct Holder {
  26:../../src/function.h **** 		virtual Return call(Args ... args) = 0;
  27:../../src/function.h **** 	};
  28:../../src/function.h **** 
  29:../../src/function.h **** 	template <class Function>
  30:../../src/function.h **** 	class Function_holder : public Holder {
  31:../../src/function.h ****         Function func;
  32:../../src/function.h **** 	public:
  33:../../src/function.h ****         Function_holder (Function func) : func{func} {}
  34:../../src/function.h **** 		virtual Return call(Args ... args) override {
  75              		.loc 3 34 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  80              	.LVL2:
  35:../../src/function.h **** 			return func(args ...);
  36:../../src/function.h **** 		}
  81              		.loc 3 36 0
  82              		@ sp needed
ARM GAS  /tmp/ccFxkDJm.s 			page 5


  83 0000 7047     		bx	lr
  84              		.cfi_endproc
  85              	.LFE3363:
  87              		.section	.text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6P
  88              		.align	1
  89              		.weak	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
  90              		.syntax unified
  91              		.code	16
  92              		.thumb_func
  93              		.fpu softvfp
  95              	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEEN
  96              	.LFB3364:
  34:../../src/function.h **** 			return func(args ...);
  97              		.loc 3 34 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.LVL3:
 103              		.loc 3 36 0
 104              		@ sp needed
 105 0000 7047     		bx	lr
 106              		.cfi_endproc
 107              	.LFE3364:
 109              		.section	.text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6P
 110              		.align	1
 111              		.weak	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 112              		.syntax unified
 113              		.code	16
 114              		.thumb_func
 115              		.fpu softvfp
 117              	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEEN
 118              	.LFB3365:
  34:../../src/function.h **** 			return func(args ...);
 119              		.loc 3 34 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124              	.LVL4:
 125              		.loc 3 36 0
 126              		@ sp needed
 127 0000 7047     		bx	lr
 128              		.cfi_endproc
 129              	.LFE3365:
 131              		.section	.text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6P
 132              		.align	1
 133              		.weak	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 134              		.syntax unified
 135              		.code	16
 136              		.thumb_func
 137              		.fpu softvfp
 139              	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEEN
 140              	.LFB3366:
  34:../../src/function.h **** 			return func(args ...);
 141              		.loc 3 34 0
 142              		.cfi_startproc
ARM GAS  /tmp/ccFxkDJm.s 			page 6


 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146              	.LVL5:
 147              		.loc 3 36 0
 148              		@ sp needed
 149 0000 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE3366:
 153              		.section	.text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6P
 154              		.align	1
 155              		.weak	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 156              		.syntax unified
 157              		.code	16
 158              		.thumb_func
 159              		.fpu softvfp
 161              	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEEN
 162              	.LFB3367:
  34:../../src/function.h **** 			return func(args ...);
 163              		.loc 3 34 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 168              	.LVL6:
 169              		.loc 3 36 0
 170              		@ sp needed
 171 0000 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE3367:
 175              		.section	.text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6P
 176              		.align	1
 177              		.weak	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 178              		.syntax unified
 179              		.code	16
 180              		.thumb_func
 181              		.fpu softvfp
 183              	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEEN
 184              	.LFB3368:
  34:../../src/function.h **** 			return func(args ...);
 185              		.loc 3 34 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 190              	.LVL7:
 191              		.loc 3 36 0
 192              		@ sp needed
 193 0000 7047     		bx	lr
 194              		.cfi_endproc
 195              	.LFE3368:
 197              		.section	.text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6P
 198              		.align	1
 199              		.weak	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 200              		.syntax unified
 201              		.code	16
 202              		.thumb_func
ARM GAS  /tmp/ccFxkDJm.s 			page 7


 203              		.fpu softvfp
 205              	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEEN
 206              	.LFB3369:
  34:../../src/function.h **** 			return func(args ...);
 207              		.loc 3 34 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 212              	.LVL8:
 213              		.loc 3 36 0
 214              		@ sp needed
 215 0000 7047     		bx	lr
 216              		.cfi_endproc
 217              	.LFE3369:
 219              		.section	.text._ZN5Delay2usEm.part.9,"ax",%progbits
 220              		.align	1
 221              		.syntax unified
 222              		.code	16
 223              		.thumb_func
 224              		.fpu softvfp
 226              	_ZN5Delay2usEm.part.9:
 227              	.LFB3387:
 228              		.file 4 "../../src/delay.h"
   1:../../src/delay.h **** #pragma once
   2:../../src/delay.h **** #include "timers.h"
   3:../../src/delay.h **** 
   4:../../src/delay.h **** #if defined (USE_MOCK_SYSTICK) or defined (USE_MOCK_TIMER)
   5:../../src/delay.h **** #define NS mock
   6:../../src/delay.h **** using namespace mock;
   7:../../src/delay.h **** #else
   8:../../src/delay.h **** #define NS
   9:../../src/delay.h **** using namespace mcu;
  10:../../src/delay.h **** #endif
  11:../../src/delay.h **** 
  12:../../src/delay.h **** class Delay {
  13:../../src/delay.h **** 
  14:../../src/delay.h ****    uint32_t begin {0};
  15:../../src/delay.h ****    uint32_t rest  {0};
  16:../../src/delay.h ****    bool first_time_us {false};
  17:../../src/delay.h ****    bool first_time_ms {false};
  18:../../src/delay.h **** 
  19:../../src/delay.h ****    NS::Timer timer {};
  20:../../src/delay.h **** 
  21:../../src/delay.h **** public:
  22:../../src/delay.h **** 
  23:../../src/delay.h ****    Delay() {first_time_us = first_time_ms = true;}
  24:../../src/delay.h ****    
  25:../../src/delay.h ****    bool ms (uint32_t ms)
  26:../../src/delay.h ****    {
  27:../../src/delay.h ****       if (first_time_ms) {
  28:../../src/delay.h ****          first_time_ms = false;
  29:../../src/delay.h ****          timer.start(ms);
  30:../../src/delay.h ****       }
  31:../../src/delay.h **** 
  32:../../src/delay.h ****       if (not timer.event()){ return true; } 
  33:../../src/delay.h ****       else {
ARM GAS  /tmp/ccFxkDJm.s 			page 8


  34:../../src/delay.h ****          timer.stop();
  35:../../src/delay.h ****          first_time_ms = true;
  36:../../src/delay.h ****          return false;
  37:../../src/delay.h ****       }
  38:../../src/delay.h ****    }
  39:../../src/delay.h **** 
  40:../../src/delay.h ****    bool us (uint32_t us)
 229              		.loc 4 40 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              	.LVL9:
 234              	.LBB866:
  41:../../src/delay.h ****    {
  42:../../src/delay.h ****       if (us >= 1000) {
  43:../../src/delay.h ****          if (ms(us/1000))
  44:../../src/delay.h ****             return false;
  45:../../src/delay.h ****          else 
  46:../../src/delay.h ****             return true;
  47:../../src/delay.h ****       } else {
  48:../../src/delay.h ****          uint32_t time = us * (F_CPU / 1'000'000);
 235              		.loc 4 48 0
 236 0000 4822     		movs	r2, #72
 237              	.LBE866:
  40:../../src/delay.h ****    {
 238              		.loc 4 40 0
 239 0002 10B5     		push	{r4, lr}
 240              	.LCFI0:
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 4, -8
 243              		.cfi_offset 14, -4
  40:../../src/delay.h ****    {
 244              		.loc 4 40 0
 245 0004 0300     		movs	r3, r0
 246              	.LBB877:
  49:../../src/delay.h ****          auto& tick = mcu::make_reference<mcu::Periph::SysTick>();
  50:../../src/delay.h ****    
  51:../../src/delay.h ****          if (first_time_us) { 
 247              		.loc 4 51 0
 248 0006 007A     		ldrb	r0, [r0, #8]
 249              	.LVL10:
  48:../../src/delay.h ****          auto& tick = mcu::make_reference<mcu::Periph::SysTick>();
 250              		.loc 4 48 0
 251 0008 5143     		muls	r1, r2
 252              	.LVL11:
 253 000a 114A     		ldr	r2, .L21
 254              		.loc 4 51 0
 255 000c 0028     		cmp	r0, #0
 256 000e 07D0     		beq	.L11
 257              	.LVL12:
 258              	.LBB867:
 259              	.LBB868:
 260              		.file 5 "../../src/periph/systick.h"
   1:../../src/periph/systick.h **** #pragma once
   2:../../src/periph/systick.h **** #define PERIPH_SYSTICK_H_
   3:../../src/periph/systick.h **** 
   4:../../src/periph/systick.h **** #include "periph.h"
ARM GAS  /tmp/ccFxkDJm.s 			page 9


   5:../../src/periph/systick.h **** #include "bits_systick_f0_f4.h"
   6:../../src/periph/systick.h **** 
   7:../../src/periph/systick.h **** 
   8:../../src/periph/systick.h **** 
   9:../../src/periph/systick.h **** namespace mcu {
  10:../../src/periph/systick.h **** 
  11:../../src/periph/systick.h **** 
  12:../../src/periph/systick.h **** class SysTick {
  13:../../src/periph/systick.h **** protected:
  14:../../src/periph/systick.h ****     volatile SysTick_bits::CTRL     CTRL;  // Offset: 0x000 (R/W)  SysTick Control and Status Regis
  15:../../src/periph/systick.h ****     volatile uint32_t               LOAD;  // Offset: 0x004 (R/W)  SysTick Reload Value Register
  16:../../src/periph/systick.h ****     volatile uint32_t               VAL;   // Offset: 0x008 (R/W)  SysTick Current Value Register
  17:../../src/periph/systick.h ****     volatile SysTick_bits::CALIB    CALIB; // Offset: 0x00C (R/ )  SysTick Calibration Register
  18:../../src/periph/systick.h **** public:
  19:../../src/periph/systick.h ****     using Clock = SysTick_bits::CTRL::Clock;
  20:../../src/periph/systick.h ****     
  21:../../src/periph/systick.h ****     void load (uint32_t v)     { LOAD = v; }
  22:../../src/periph/systick.h ****     void clear()               { VAL = 0; }
  23:../../src/periph/systick.h ****     void setSource (Clock v)   { CTRL.CLKSOURCE = v; }
  24:../../src/periph/systick.h ****     void enableInterrupt()     { CTRL.TICKINT = true; }
  25:../../src/periph/systick.h ****     void enable(bool v = true) { CTRL.ENABLE = v; }
  26:../../src/periph/systick.h ****     uint32_t get()             { return VAL; }
 261              		.loc 5 26 0
 262 0010 9068     		ldr	r0, [r2, #8]
 263              	.LVL13:
 264              	.LBE868:
 265              	.LBE867:
  52:../../src/delay.h ****             begin = tick.get();
 266              		.loc 4 52 0
 267 0012 1860     		str	r0, [r3]
  53:../../src/delay.h ****             if (time >= begin) {
 268              		.loc 4 53 0
 269 0014 8142     		cmp	r1, r0
 270 0016 01D3     		bcc	.L12
  54:../../src/delay.h ****                rest = time - begin;
 271              		.loc 4 54 0
 272 0018 081A     		subs	r0, r1, r0
 273 001a 5860     		str	r0, [r3, #4]
 274              	.L12:
  55:../../src/delay.h ****             } 
  56:../../src/delay.h **** 
  57:../../src/delay.h ****             first_time_us = false; 
 275              		.loc 4 57 0
 276 001c 0020     		movs	r0, #0
 277 001e 1872     		strb	r0, [r3, #8]
 278              	.L11:
  58:../../src/delay.h ****          } 
  59:../../src/delay.h **** 
  60:../../src/delay.h ****          if (begin >= time) {
 279              		.loc 4 60 0
 280 0020 1C68     		ldr	r4, [r3]
 281 0022 A142     		cmp	r1, r4
 282 0024 08D8     		bhi	.L13
 283              	.LVL14:
 284              	.LBB869:
 285              	.LBB870:
 286              		.loc 5 26 0
ARM GAS  /tmp/ccFxkDJm.s 			page 10


 287 0026 9268     		ldr	r2, [r2, #8]
 288              	.LVL15:
 289              	.LBE870:
 290              	.LBE869:
  61:../../src/delay.h ****             if (begin - tick.get() < time ) { 
  62:../../src/delay.h ****                return true; 
 291              		.loc 4 62 0
 292 0028 0120     		movs	r0, #1
  61:../../src/delay.h ****             if (begin - tick.get() < time ) { 
 293              		.loc 4 61 0
 294 002a A41A     		subs	r4, r4, r2
 295 002c A142     		cmp	r1, r4
 296 002e 02D8     		bhi	.L14
 297              	.LVL16:
 298              	.L15:
  63:../../src/delay.h ****             } else  {
  64:../../src/delay.h ****                first_time_us = true;  
 299              		.loc 4 64 0
 300 0030 0122     		movs	r2, #1
  65:../../src/delay.h ****                return false;
 301              		.loc 4 65 0
 302 0032 0020     		movs	r0, #0
  64:../../src/delay.h ****                return false;
 303              		.loc 4 64 0
 304 0034 1A72     		strb	r2, [r3, #8]
 305              	.L14:
 306              	.LBE877:
  66:../../src/delay.h ****             }
  67:../../src/delay.h ****          } else {
  68:../../src/delay.h ****             if (tick.get() < begin) {
  69:../../src/delay.h ****                return true;
  70:../../src/delay.h ****             } else {
  71:../../src/delay.h ****                if (tick.get_load() - tick.get() < rest)
  72:../../src/delay.h ****                   return true; 
  73:../../src/delay.h ****                else {
  74:../../src/delay.h ****                   first_time_us = true;
  75:../../src/delay.h ****                   return false;
  76:../../src/delay.h ****                } 
  77:../../src/delay.h ****             }   
  78:../../src/delay.h ****          }
  79:../../src/delay.h ****          return true;
  80:../../src/delay.h ****       }
  81:../../src/delay.h ****    }
 307              		.loc 4 81 0
 308              		@ sp needed
 309 0036 10BD     		pop	{r4, pc}
 310              	.LVL17:
 311              	.L13:
 312              	.LBB878:
 313              	.LBB871:
 314              	.LBB872:
 315              		.loc 5 26 0
 316 0038 9168     		ldr	r1, [r2, #8]
 317              	.LVL18:
 318              	.LBE872:
 319              	.LBE871:
  62:../../src/delay.h ****             } else  {
ARM GAS  /tmp/ccFxkDJm.s 			page 11


 320              		.loc 4 62 0
 321 003a 0120     		movs	r0, #1
  68:../../src/delay.h ****                return true;
 322              		.loc 4 68 0
 323 003c 8C42     		cmp	r4, r1
 324 003e FAD8     		bhi	.L14
 325              	.LVL19:
 326              	.LBB873:
 327              	.LBB874:
  27:../../src/periph/systick.h ****     uint32_t get_load()        { return LOAD; }
 328              		.loc 5 27 0
 329 0040 5168     		ldr	r1, [r2, #4]
 330              	.LVL20:
 331              	.LBE874:
 332              	.LBE873:
 333              	.LBB875:
 334              	.LBB876:
  26:../../src/periph/systick.h ****     uint32_t get_load()        { return LOAD; }
 335              		.loc 5 26 0
 336 0042 9268     		ldr	r2, [r2, #8]
 337              	.LVL21:
 338              	.LBE876:
 339              	.LBE875:
  71:../../src/delay.h ****                   return true; 
 340              		.loc 4 71 0
 341 0044 8A1A     		subs	r2, r1, r2
 342 0046 5968     		ldr	r1, [r3, #4]
 343 0048 8A42     		cmp	r2, r1
 344 004a F1D2     		bcs	.L15
 345 004c F3E7     		b	.L14
 346              	.L22:
 347 004e C046     		.align	2
 348              	.L21:
 349 0050 10E000E0 		.word	-536813552
 350              	.LBE878:
 351              		.cfi_endproc
 352              	.LFE3387:
 354              		.section	.text._ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_
 355              		.align	1
 356              		.syntax unified
 357              		.code	16
 358              		.thumb_func
 359              		.fpu softvfp
 361              	_ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_.isra.14
 362              	.LFB3399:
 363              		.file 6 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bit
   1:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
   3:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** //
   5:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // any later version.
  10:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
  11:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
ARM GAS  /tmp/ccFxkDJm.s 			page 12


  12:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
  16:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
  20:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
  25:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** /*
  26:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  *
  27:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  *
  30:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  *
  38:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  *
  39:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  *
  42:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  */
  50:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
  51:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  */
  55:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
  56:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
  59:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <bits/concept_check.h>
ARM GAS  /tmp/ccFxkDJm.s 			page 13


  69:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap and _GLIBCXX_MOVE
  71:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
  73:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** {
  75:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
  77:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
  78:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  79:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  80:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  81:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool _BoolType>
  82:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __iter_swap
  83:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
  84:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  85:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static void
  86:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  87:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         {
  88:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****           typedef typename iterator_traits<_ForwardIterator1>::value_type
  89:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****             _ValueType1;
  90:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****           _ValueType1 __tmp = _GLIBCXX_MOVE(*__a);
  91:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****           *__a = _GLIBCXX_MOVE(*__b);
  92:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****           *__b = _GLIBCXX_MOVE(__tmp);
  93:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
  94:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
  95:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
  96:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<>
  97:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __iter_swap<true>
  98:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
  99:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static void 
 101:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 102:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         {
 103:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****           swap(*__a, *__b);
 104:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         }
 105:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 106:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #endif
 107:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 108:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
 109:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 110:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 111:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 112:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 113:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
 114:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 115:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 116:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  iterators themselves.
 117:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
 118:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 119:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline void
 120:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 121:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 122:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       // concept requirements
 123:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 124:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 125:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
ARM GAS  /tmp/ccFxkDJm.s 			page 14


 126:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 127:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 128:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 129:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 130:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	_ValueType1;
 131:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 132:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	_ValueType2;
 133:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 134:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 135:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 				  _ValueType2>)
 136:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 137:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 				  _ValueType1>)
 138:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 139:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 140:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	_ReferenceType1;
 141:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 142:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	_ReferenceType2;
 143:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 144:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 145:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 146:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 147:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #else
 148:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       swap(*__a, *__b);
 149:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #endif
 150:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 151:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 152:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
 153:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 154:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 155:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 156:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 157:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 158:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 159:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 160:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 161:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 162:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  The ranges must not overlap.
 163:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
 164:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 165:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     _ForwardIterator2
 166:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 167:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 168:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 169:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       // concept requirements
 170:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 171:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 172:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 173:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 174:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 175:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 176:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 177:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 178:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return __first2;
 179:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 180:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 181:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
 182:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
ARM GAS  /tmp/ccFxkDJm.s 			page 15


 183:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 184:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 185:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 186:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 187:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 188:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 189:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 190:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 191:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
 192:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 193:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 194:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline const _Tp&
 195:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 196:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 197:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       // concept requirements
 198:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 199:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 200:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       if (__b < __a)
 201:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	return __b;
 202:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return __a;
 203:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 204:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 205:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
 206:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 207:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 208:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 209:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 210:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 211:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 212:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 213:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 214:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 215:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
 216:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 217:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 218:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline const _Tp&
 219:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 220:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 221:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       // concept requirements
 222:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 223:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 224:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       if (__a < __b)
 225:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	return __b;
 226:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return __a;
 227:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 228:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 229:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
 230:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 231:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 232:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 233:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 234:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 235:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 236:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 237:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 238:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 239:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
ARM GAS  /tmp/ccFxkDJm.s 			page 16


 240:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 241:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 242:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline const _Tp&
 243:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 244:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 245:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 246:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       if (__comp(__b, __a))
 247:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	return __b;
 248:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return __a;
 249:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 250:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 251:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
 252:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 253:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 254:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 255:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 256:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 257:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 258:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 259:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 260:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 261:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
 262:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 263:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 264:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline const _Tp&
 265:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 266:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 267:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 268:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       if (__comp(__a, __b))
 269:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	return __b;
 270:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return __a;
 271:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 272:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 273:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 274:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 275:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _Iterator>
 276:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline _Iterator
 277:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 278:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     { return __it; }
 279:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 280:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 281:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 282:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 283:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 284:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // a for loop with an explicit count.
 285:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 286:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool, bool, typename>
 287:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __copy_move
 288:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 289:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 290:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static _OI
 291:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 292:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         {
 293:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 294:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    *__result = *__first;
 295:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result;
 296:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
ARM GAS  /tmp/ccFxkDJm.s 			page 17


 297:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 298:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 299:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 300:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _Category>
 301:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 302:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 303:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 304:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static _OI
 305:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 306:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         {
 307:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 308:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 309:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result;
 310:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
 311:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 312:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #endif
 313:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 314:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<>
 315:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 316:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 317:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 318:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static _OI
 319:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 320:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         { 
 321:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 322:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 323:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    {
 324:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	      *__result = *__first;
 325:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	      ++__first;
 326:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	      ++__result;
 327:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    }
 328:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result;
 329:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
 330:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 331:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 332:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 333:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<>
 334:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 335:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 336:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 337:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static _OI
 338:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 339:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         { 
 340:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 341:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 342:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    {
 343:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 344:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	      ++__first;
 345:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	      ++__result;
 346:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    }
 347:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result;
 348:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
 349:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 350:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #endif
 351:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 352:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool _IsMove>
 353:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
ARM GAS  /tmp/ccFxkDJm.s 			page 18


 354:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 355:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _Tp>
 356:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static _Tp*
 357:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 358:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         {
 359:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 360:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 361:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 362:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 363:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 364:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 365:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #endif
 366:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 367:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  if (_Num)
 368:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 369:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 370:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
 371:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 372:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 373:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 374:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline _OI
 375:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 376:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 377:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::value_type _ValueTypeI;
 378:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
 379:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 380:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueTypeI)
 381:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	                     && __is_pointer<_II>::__value
 382:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	                     && __is_pointer<_OI>::__value
 383:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
 384:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 385:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __simple,
 386:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	                      _Category>::__copy_m(__first, __last, __result);
 387:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 388:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 389:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 390:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 391:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _CharT>
 392:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct char_traits;
 393:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 394:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 395:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     class istreambuf_iterator;
 396:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 397:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 398:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     class ostreambuf_iterator;
 399:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 400:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 401:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 402:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 403:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 404:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 405:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 406:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 407:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 408:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 409:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 410:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
ARM GAS  /tmp/ccFxkDJm.s 			page 19


 411:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 412:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 413:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 414:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 				    _CharT*>::__type
 415:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 416:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 417:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 418:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 419:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline _OI
 420:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 421:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 422:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 423:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 424:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 					     std::__niter_base(__result)));
 425:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 426:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 427:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
 428:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 429:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 430:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 431:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 432:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 433:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   result + (first - last)
 434:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 435:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 436:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 437:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 438:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 439:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 440:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 441:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 442:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  within [first,last).
 443:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
 444:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 445:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline _OI
 446:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 447:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 448:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       // concept requirements
 449:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 450:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 451:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 452:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 453:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 454:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return (std::__copy_move_a2<__is_move_iterator<_II>::__value>
 455:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 456:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	       __result));
 457:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 458:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 459:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 460:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
 461:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 462:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 463:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 464:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 465:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 466:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   result + (first - last)
 467:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
ARM GAS  /tmp/ccFxkDJm.s 			page 20


 468:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 469:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 470:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 471:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 472:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 473:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 474:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 475:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  within [first,last).
 476:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
 477:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 478:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline _OI
 479:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 480:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 481:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       // concept requirements
 482:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 483:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 484:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 485:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 486:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 487:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return std::__copy_move_a2<true>(std::__miter_base(__first),
 488:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 				       std::__miter_base(__last), __result);
 489:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 490:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 491:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 492:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #else
 493:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 494:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #endif
 495:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 496:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool, bool, typename>
 497:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __copy_move_backward
 498:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 499:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 500:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static _BI2
 501:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 502:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         {
 503:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  while (__first != __last)
 504:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 505:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result;
 506:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
 507:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 508:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 509:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 510:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _Category>
 511:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 512:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 513:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 514:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static _BI2
 515:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 516:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         {
 517:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  while (__first != __last)
 518:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 519:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result;
 520:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
 521:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 522:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #endif
 523:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 524:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<>
ARM GAS  /tmp/ccFxkDJm.s 			page 21


 525:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 526:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 527:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 528:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static _BI2
 529:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 530:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         {
 531:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 532:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 533:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 534:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result;
 535:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
 536:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 537:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 538:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 539:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<>
 540:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 541:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 542:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 543:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static _BI2
 544:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 545:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         {
 546:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 547:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 548:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 549:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result;
 550:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
 551:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 552:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #endif
 553:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 554:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool _IsMove>
 555:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 556:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 557:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       template<typename _Tp>
 558:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         static _Tp*
 559:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         __copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 560:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****         {
 561:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 562:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 563:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 564:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 565:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 566:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 567:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #endif
 568:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 569:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  if (_Num)
 570:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 571:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result - _Num;
 572:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
 573:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     };
 574:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 575:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 576:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline _BI2
 577:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
 578:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 579:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::value_type _ValueType1;
 580:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI2>::value_type _ValueType2;
 581:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
ARM GAS  /tmp/ccFxkDJm.s 			page 22


 582:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueType1)
 583:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	                     && __is_pointer<_BI1>::__value
 584:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	                     && __is_pointer<_BI2>::__value
 585:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 			     && __are_same<_ValueType1, _ValueType2>::__value);
 586:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 587:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove, __simple,
 588:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	                               _Category>::__copy_move_b(__first,
 589:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 								 __last,
 590:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 								 __result);
 591:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 592:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 593:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 594:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline _BI2
 595:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 596:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 597:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return _BI2(std::__copy_move_backward_a<_IsMove>
 598:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 599:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 600:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 601:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 602:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
 603:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 604:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 605:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 606:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 607:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 608:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   result - (first - last)
 609:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 610:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 611:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 612:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 613:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 614:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 615:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 616:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 617:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 618:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 619:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
 620:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 621:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline _BI2
 622:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 623:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 624:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       // concept requirements
 625:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 626:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 627:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 628:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 629:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 630:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 631:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 632:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return (std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
 633:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 634:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	       __result));
 635:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 636:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 637:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 638:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
ARM GAS  /tmp/ccFxkDJm.s 			page 23


 639:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 640:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 641:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 642:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 643:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 644:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   result - (first - last)
 645:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 646:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 647:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 648:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 649:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 650:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 651:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 652:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
 653:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 654:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 655:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
 656:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 657:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline _BI2
 658:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 659:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 660:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       // concept requirements
 661:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 662:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 663:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 664:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 665:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 666:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 667:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 668:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward_a2<true>(std::__miter_base(__first),
 669:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 						std::__miter_base(__last),
 670:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 						__result);
 671:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 672:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 673:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::move_backward(_Tp, _Up, _Vp)
 674:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #else
 675:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::copy_backward(_Tp, _Up, _Vp)
 676:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** #endif
 677:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 678:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 679:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline typename
 680:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
 681:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 682:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****  	     const _Tp& __value)
 683:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 684:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 685:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	*__first = __value;
 686:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 687:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     
 688:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 689:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline typename
 690:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
 691:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 692:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	     const _Tp& __value)
 693:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 694:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 695:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
ARM GAS  /tmp/ccFxkDJm.s 			page 24


 696:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 697:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 698:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 699:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   // Specialization: for char types we can use memset.
 700:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 701:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline typename
 702:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
 703:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __fill_a(_Tp* __first, _Tp* __last, const _Tp& __c)
 364              		.loc 6 703 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368              	.LVL22:
 369 0000 10B5     		push	{r4, lr}
 370              	.LCFI1:
 371              		.cfi_def_cfa_offset 8
 372              		.cfi_offset 4, -8
 373              		.cfi_offset 14, -4
 374              	.LBB879:
 704:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 705:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       const _Tp __tmp = __c;
 706:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       if (const size_t __len = __last - __first)
 375              		.loc 6 706 0
 376 0002 0A1A     		subs	r2, r1, r0
 377              	.LVL23:
 378 0004 02D0     		beq	.L23
 707:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
 379              		.loc 6 707 0
 380 0006 2021     		movs	r1, #32
 381              	.LVL24:
 382 0008 FFF7FEFF 		bl	memset
 383              	.LVL25:
 384              	.L23:
 385              	.LBE879:
 708:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 386              		.loc 6 708 0
 387              		@ sp needed
 388 000c 10BD     		pop	{r4, pc}
 389              		.cfi_endproc
 390              	.LFE3399:
 392              		.section	.text._ZN3mcu5FLASH6unlockEv,"ax",%progbits
 393              		.align	1
 394              		.global	_ZN3mcu5FLASH6unlockEv
 395              		.syntax unified
 396              		.code	16
 397              		.thumb_func
 398              		.fpu softvfp
 400              	_ZN3mcu5FLASH6unlockEv:
 401              	.LFB115:
 402              		.file 7 "../../src/periph/flash_f1.h"
   1:../../src/periph/flash_f1.h **** #pragma once
   2:../../src/periph/flash_f1.h **** 
   3:../../src/periph/flash_f1.h **** #include "bits_flash_f1.h"
   4:../../src/periph/flash_f1.h **** 
   5:../../src/periph/flash_f1.h **** namespace mcu {
   6:../../src/periph/flash_f1.h **** 
   7:../../src/periph/flash_f1.h **** class FLASH {
ARM GAS  /tmp/ccFxkDJm.s 			page 25


   8:../../src/periph/flash_f1.h **** protected:
   9:../../src/periph/flash_f1.h ****    volatile FLASH_bits::ACR ACR;      // FLASH access control register, offset: 0x00
  10:../../src/periph/flash_f1.h ****    volatile uint32_t        KEYR;     // FLASH key register,            offset: 0x04
  11:../../src/periph/flash_f1.h ****    volatile uint32_t        OPTKEYR;  // FLASH OPT key register,        offset: 0x08
  12:../../src/periph/flash_f1.h ****    volatile FLASH_bits::SR  SR;       // FLASH status register,         offset: 0x0C
  13:../../src/periph/flash_f1.h ****    volatile FLASH_bits::CR  CR;       // FLASH control register,        offset: 0x10
  14:../../src/periph/flash_f1.h ****    volatile uint32_t        AR;       // FLASH address register,        offset: 0x14
  15:../../src/periph/flash_f1.h ****    volatile uint32_t        RESERVED; //  Reserved,                             0x18
  16:../../src/periph/flash_f1.h ****    volatile uint32_t        OBR;      // FLASH option bytes register,   offset: 0x1C
  17:../../src/periph/flash_f1.h ****    volatile uint32_t        WRPR;     // FLASH option bytes register,   offset: 0x20
  18:../../src/periph/flash_f1.h **** public:
  19:../../src/periph/flash_f1.h ****    using CMSIS_type = FLASH_TypeDef;
  20:../../src/periph/flash_f1.h ****    using Latency    = FLASH_bits::ACR::Latency;
  21:../../src/periph/flash_f1.h ****    /// —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ —ç—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞, —á—Ç–æ–±—ã –±—ã–ª–æ –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω–æ —
  22:../../src/periph/flash_f1.h ****    enum Sector {  _0,  _1,  _2,  _3,  _4,  _5,  _6,  _7,  _8,  _9,
  23:../../src/periph/flash_f1.h ****                  _10, _11, _12, _13, _14, _15, _16, _17, _18, _19,
  24:../../src/periph/flash_f1.h ****                  _20, _21, _22, _23, _24, _25, _26, _27, _28, _29,
  25:../../src/periph/flash_f1.h ****                  _30, _31, _32, _33, _34, _35, _36, _37, _38, _39,
  26:../../src/periph/flash_f1.h ****                  _40, _41, _42, _43, _44, _45, _46, _47, _48, _49,
  27:../../src/periph/flash_f1.h ****                  _50, _51, _52, _53, _54, _55, _56, _57, _58, _59,
  28:../../src/periph/flash_f1.h ****                  _60, _61, _62, _63, _64, _65, _66, _67, _68, _69,
  29:../../src/periph/flash_f1.h ****                  _70, _71, _72, _73, _74, _75, _76, _77, _78, _79,
  30:../../src/periph/flash_f1.h ****                  _80, _81, _82, _83, _84, _85, _86, _87, _88, _89,
  31:../../src/periph/flash_f1.h ****                  _90, _91, _92, _93, _94, _95, _96, _97, _98, _99,
  32:../../src/periph/flash_f1.h ****                 _100,_101,_102,_103,_104,_105,_106,_107,_108,_109,
  33:../../src/periph/flash_f1.h ****                 _110,_111,_112,_113,_114,_115,_116,_117,_118,_119,
  34:../../src/periph/flash_f1.h ****                 _120,_121,_122,_123,_124,_125,_126,_127
  35:../../src/periph/flash_f1.h ****    };
  36:../../src/periph/flash_f1.h **** 
  37:../../src/periph/flash_f1.h ****    auto& like_CMSIS() { return *reinterpret_cast<CMSIS_type*>(this); }
  38:../../src/periph/flash_f1.h **** 
  39:../../src/periph/flash_f1.h ****    FLASH& set (Latency v)            { ACR.LATENCY = v;    return *this; }
  40:../../src/periph/flash_f1.h ****    FLASH& enable ()                  { ACR.PRFTBE = true;  return *this; }
  41:../../src/periph/flash_f1.h ****    FLASH& lock()                     { CR.LOCK     = true; return *this; }
  42:../../src/periph/flash_f1.h ****    bool   is_lock()                  { return CR.LOCK;                   }
  43:../../src/periph/flash_f1.h ****    FLASH& unlock();
  44:../../src/periph/flash_f1.h ****    FLASH& set_progMode()             { CR.PG       = true; return *this; }
  45:../../src/periph/flash_f1.h ****    bool   is_endOfProg()             { return SR.EOP;                    }
  46:../../src/periph/flash_f1.h ****    FLASH& clear_flag_endOfProg()     { SR.EOP      = true; return *this; }
  47:../../src/periph/flash_f1.h ****    bool   is_busy()                  { return SR.BSY;                    }
  48:../../src/periph/flash_f1.h ****    FLASH& en_interrupt_endOfProg()   { CR.EOPIE    = true; return *this; }
  49:../../src/periph/flash_f1.h **** 
  50:../../src/periph/flash_f1.h ****    template<Sector> FLASH& start_erase();
  51:../../src/periph/flash_f1.h **** 
  52:../../src/periph/flash_f1.h ****    template<Sector s> static constexpr size_t address() { return 0x08000000 + 1024 * s; }
  53:../../src/periph/flash_f1.h ****    template<Sector>   static constexpr size_t size()    { return 1024; }
  54:../../src/periph/flash_f1.h **** };
  55:../../src/periph/flash_f1.h **** 
  56:../../src/periph/flash_f1.h **** 
  57:../../src/periph/flash_f1.h **** #if not defined(USE_MOCK_FLASH)
  58:../../src/periph/flash_f1.h **** template<Periph p> std::enable_if_t<p == Periph::FLASH, FLASH&> make_reference() { return *reinterp
  59:../../src/periph/flash_f1.h **** #endif
  60:../../src/periph/flash_f1.h **** 
  61:../../src/periph/flash_f1.h **** 
  62:../../src/periph/flash_f1.h **** 
  63:../../src/periph/flash_f1.h **** FLASH& FLASH::unlock()
  64:../../src/periph/flash_f1.h **** {
ARM GAS  /tmp/ccFxkDJm.s 			page 26


 403              		.loc 7 64 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              		@ link register save eliminated.
 408              	.LVL26:
 409              	.LBB880:
 410              	.LBB881:
  42:../../src/periph/flash_f1.h ****    FLASH& unlock();
 411              		.loc 7 42 0
 412 0000 0369     		ldr	r3, [r0, #16]
 413              	.LBE881:
 414              	.LBE880:
  65:../../src/periph/flash_f1.h ****    constexpr uint32_t Key1 = 0x45670123;
  66:../../src/periph/flash_f1.h ****    constexpr uint32_t Key2 = 0xCDEF89AB;
  67:../../src/periph/flash_f1.h ****    if (is_lock()) {
 415              		.loc 7 67 0
 416 0002 1B06     		lsls	r3, r3, #24
 417 0004 03D5     		bpl	.L29
  68:../../src/periph/flash_f1.h ****       KEYR = Key1;
 418              		.loc 7 68 0
 419 0006 024B     		ldr	r3, .L33
 420 0008 4360     		str	r3, [r0, #4]
  69:../../src/periph/flash_f1.h ****       IF_TEST_WAIT_MS(10);
  70:../../src/periph/flash_f1.h ****       KEYR = Key2;
 421              		.loc 7 70 0
 422 000a 024B     		ldr	r3, .L33+4
 423 000c 4360     		str	r3, [r0, #4]
 424              	.L29:
  71:../../src/periph/flash_f1.h ****    }
  72:../../src/periph/flash_f1.h ****    return *this;
  73:../../src/periph/flash_f1.h **** }
 425              		.loc 7 73 0
 426              		@ sp needed
 427 000e 7047     		bx	lr
 428              	.L34:
 429              		.align	2
 430              	.L33:
 431 0010 23016745 		.word	1164378403
 432 0014 AB89EFCD 		.word	-839939669
 433              		.cfi_endproc
 434              	.LFE115:
 436              		.section	.text._ZNSt11char_traitsIcE6lengthEPKc,"axG",%progbits,_ZNSt11char_traitsIcE6lengthEPKc,c
 437              		.align	1
 438              		.weak	_ZNSt11char_traitsIcE6lengthEPKc
 439              		.syntax unified
 440              		.code	16
 441              		.thumb_func
 442              		.fpu softvfp
 444              	_ZNSt11char_traitsIcE6lengthEPKc:
 445              	.LFB568:
 446              		.file 8 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bit
   1:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
   3:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // Copyright (C) 1997-2017 Free Software Foundation, Inc.
   4:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** //
   5:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
ARM GAS  /tmp/ccFxkDJm.s 			page 27


   6:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // terms of the GNU General Public License as published by the
   8:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // any later version.
  10:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  11:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // GNU General Public License for more details.
  15:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  16:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  20:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  25:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** /** @file bits/char_traits.h
  26:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****  */
  29:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  30:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** //
  31:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** //
  33:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  34:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #define _CHAR_TRAITS_H 1
  36:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  37:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #pragma GCC system_header
  38:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  39:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  43:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  44:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  45:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #endif
  46:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  47:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  48:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** {
  49:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  50:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  51:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   /**
  52:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @brief  Mapping from character type to associated types.
  53:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *
  54:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @note This is an implementation class for the generic version
  55:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  56:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  57:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  58:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  types, but who don't need to change the definitions of any function
  59:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  60:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  61:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<typename _CharT>
  62:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     struct _Char_types
ARM GAS  /tmp/ccFxkDJm.s 			page 28


  63:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
  64:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef unsigned long   int_type;
  65:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef std::streampos  pos_type;
  66:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef std::streamoff  off_type;
  67:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef std::mbstate_t  state_type;
  68:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     };
  69:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  70:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  71:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   /**
  72:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  73:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *
  74:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @note For any given actual character type, this definition is
  75:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  76:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  77:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  78:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  79:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  80:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  namespace __gnu_cxx may be.
  81:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *
  82:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  83:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  84:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  85:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    */
  86:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<typename _CharT>
  87:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     struct char_traits
  88:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
  89:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef _CharT                                    char_type;
  90:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  91:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  92:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  93:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  94:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  95:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
  96:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
  97:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       { __c1 = __c2; }
  98:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
  99:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 101:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       { return __c1 == __c2; }
 102:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 103:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 104:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 105:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       { return __c1 < __c2; }
 106:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 107:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 108:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 109:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 110:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 111:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       length(const char_type* __s);
 112:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 113:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 114:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 115:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 116:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static char_type*
 117:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 118:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 119:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static char_type*
ARM GAS  /tmp/ccFxkDJm.s 			page 29


 120:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 121:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 122:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static char_type*
 123:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 124:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 125:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 126:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       to_char_type(const int_type& __c)
 127:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       { return static_cast<char_type>(__c); }
 128:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 129:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 130:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       to_int_type(const char_type& __c)
 131:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       { return static_cast<int_type>(__c); }
 132:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 133:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 134:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 135:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       { return __c1 == __c2; }
 136:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 137:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 138:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       eof()
 139:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 140:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 141:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 142:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       not_eof(const int_type& __c)
 143:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 144:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     };
 145:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 146:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<typename _CharT>
 147:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 148:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 149:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 150:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
 151:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 152:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 153:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	  return -1;
 154:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 155:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	  return 1;
 156:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       return 0;
 157:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     }
 158:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 159:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<typename _CharT>
 160:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 161:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 162:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     length(const char_type* __p)
 163:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
 164:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       std::size_t __i = 0;
 165:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       while (!eq(__p[__i], char_type()))
 166:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****         ++__i;
 167:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       return __i;
 168:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     }
 169:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 170:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<typename _CharT>
 171:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 172:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 173:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 174:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
 175:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 176:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****         if (eq(__s[__i], __a))
ARM GAS  /tmp/ccFxkDJm.s 			page 30


 177:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****           return __s + __i;
 178:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       return 0;
 179:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     }
 180:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 181:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<typename _CharT>
 182:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 183:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 184:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 185:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
 186:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 187:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 						    __n * sizeof(char_type)));
 188:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     }
 189:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 190:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<typename _CharT>
 191:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 192:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 193:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 194:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
 195:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 196:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 197:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       return __s1;
 198:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     }
 199:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 200:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<typename _CharT>
 201:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 202:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 203:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 204:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
 205:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 206:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       std::fill_n(__s, __n, __a);
 207:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       return __s;
 208:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     }
 209:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 210:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 211:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** } // namespace
 212:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 213:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 214:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** {
 215:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 216:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 217:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #if __cplusplus > 201402
 218:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #define __cpp_lib_constexpr_char_traits 201611
 219:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 220:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   /**
 221:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 222:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  string are known at compile time.
 223:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @param  __s  The string.
 224:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *
 225:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 226:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    */
 227:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<typename _CharT>
 228:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 229:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     __constant_string_p(const _CharT* __s)
 230:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
 231:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 232:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	__s++;
 233:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       return __builtin_constant_p(*__s);
ARM GAS  /tmp/ccFxkDJm.s 			page 31


 234:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     }
 235:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 236:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   /**
 237:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @brief Determine whether the characters of a character array are
 238:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  known at compile time.
 239:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @param  __a  The character array.
 240:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @param  __n  Number of characters.
 241:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *
 242:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 243:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    */
 244:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<typename _CharT>
 245:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 246:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 247:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
 248:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       size_t __i = 0;
 249:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       while (__builtin_constant_p(__a[__i]) && __i < __n)
 250:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	__i++;
 251:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       return __i == __n;
 252:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     }
 253:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #endif
 254:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 255:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   // 21.1
 256:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   /**
 257:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 258:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *
 259:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  @note  For any given actual character type, this definition is
 260:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 261:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 262:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 263:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *
 264:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 265:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 266:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 267:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   */
 268:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<class _CharT>
 269:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 270:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     { };
 271:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 272:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 273:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   /// 21.1.3.1  char_traits specializations
 274:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****   template<>
 275:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     struct char_traits<char>
 276:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****     {
 277:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef char              char_type;
 278:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef int               int_type;
 279:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef streampos         pos_type;
 280:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef streamoff         off_type;
 281:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       typedef mbstate_t         state_type;
 282:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 283:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 284:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 285:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 286:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 287:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 288:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 289:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       { return __c1 == __c2; }
 290:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
ARM GAS  /tmp/ccFxkDJm.s 			page 32


 291:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 292:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 293:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       {
 294:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	// LWG 467.
 295:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 296:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 		< static_cast<unsigned char>(__c2));
 297:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       }
 298:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 299:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 300:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 301:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       {
 302:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #if __cplusplus > 201402
 303:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 304:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 305:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 306:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 307:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #endif
 308:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	if (__n == 0)
 309:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	  return 0;
 310:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 311:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       }
 312:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 
 313:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 314:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       length(const char_type* __s)
 447              		.loc 8 314 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              	.LVL27:
 452 0000 10B5     		push	{r4, lr}
 453              	.LCFI2:
 454              		.cfi_def_cfa_offset 8
 455              		.cfi_offset 4, -8
 456              		.cfi_offset 14, -4
 315:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       {
 316:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #if __cplusplus > 201402
 317:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	if (__constant_string_p(__s))
 318:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 319:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** #endif
 320:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h **** 	return __builtin_strlen(__s);
 457              		.loc 8 320 0
 458 0002 FFF7FEFF 		bl	strlen
 459              	.LVL28:
 321:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/char_traits.h ****       }
 460              		.loc 8 321 0
 461              		@ sp needed
 462 0006 10BD     		pop	{r4, pc}
 463              		.cfi_endproc
 464              	.LFE568:
 466              		.section	.text._ZN3Pin3setEv,"axG",%progbits,_ZN3Pin3setEv,comdat
 467              		.align	1
 468              		.weak	_ZN3Pin3setEv
 469              		.syntax unified
 470              		.code	16
 471              		.thumb_func
 472              		.fpu softvfp
 474              	_ZN3Pin3setEv:
ARM GAS  /tmp/ccFxkDJm.s 			page 33


 475              	.LFB2205:
 476              		.file 9 "../../src/pin.h"
   1:../../src/pin.h **** #pragma once
   2:../../src/pin.h **** 
   3:../../src/pin.h **** #include "periph_gpio.h"
   4:../../src/pin.h **** #include "pins.h"
   5:../../src/pin.h **** #include "meta.h"
   6:../../src/pin.h **** 
   7:../../src/pin.h **** #if defined(USE_MOCK_GPIO)
   8:../../src/pin.h **** using GPIO = mock::GPIO;
   9:../../src/pin.h **** #else
  10:../../src/pin.h **** using GPIO = mcu::GPIO;
  11:../../src/pin.h **** #endif
  12:../../src/pin.h **** 
  13:../../src/pin.h **** class Pin {
  14:../../src/pin.h ****    GPIO& port;
  15:../../src/pin.h ****    const int n;
  16:../../src/pin.h **** public:
  17:../../src/pin.h ****    Pin (GPIO& port, int n) : port{port}, n{n} {}
  18:../../src/pin.h **** 
  19:../../src/pin.h ****    template<class Pin_, mcu::PinMode mode = mcu::PinMode::Input> static auto& make()
  20:../../src/pin.h ****    {
  21:../../src/pin.h ****       static Pin pin { mcu::make_reference<Pin_::periph>(), Pin_::n };
  22:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
  23:../../src/pin.h ****          .template clock_enable<Pin_::periph>();
  24:../../src/pin.h ****       pin.port.template init<Pin_, mode>();
  25:../../src/pin.h ****       return pin;
  26:../../src/pin.h ****    }
  27:../../src/pin.h **** 
  28:../../src/pin.h ****    void set()       { port.set(n);             }
 477              		.loc 9 28 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              		@ link register save eliminated.
 482              	.LVL29:
 483              	.LBB886:
 484              	.LBB887:
 485              		.file 10 "../../src/periph/gpio_f1.h"
   1:../../src/periph/gpio_f1.h **** #pragma once
   2:../../src/periph/gpio_f1.h **** 
   3:../../src/periph/gpio_f1.h **** #include "bits_gpio_f1.h"
   4:../../src/periph/gpio_f1.h **** #include "periph_rcc.h"
   5:../../src/periph/gpio_f1.h **** #include "periph_afio.h"
   6:../../src/periph/gpio_f1.h **** #include "pins.h"
   7:../../src/periph/gpio_f1.h **** 
   8:../../src/periph/gpio_f1.h **** namespace mcu {
   9:../../src/periph/gpio_f1.h **** 
  10:../../src/periph/gpio_f1.h **** enum class PinMode {Input, Output, Analog, USART1_TX, USART1_RX, USART2_TX, USART2_RX, USART3_TX, U
  11:../../src/periph/gpio_f1.h **** 
  12:../../src/periph/gpio_f1.h **** class GPIO {
  13:../../src/periph/gpio_f1.h ****   volatile GPIO_bits::CR CR;   // Port configuration register      offset: 0x00
  14:../../src/periph/gpio_f1.h ****   volatile GPIO_bits::DR IDR;  // Port input data register         offset: 0x08
  15:../../src/periph/gpio_f1.h ****   volatile uint32_t      ODR;  // Port output data register        offset: 0x0C
  16:../../src/periph/gpio_f1.h ****   volatile uint32_t      BSRR; // Port bit set/reset register      offset: 0x10
  17:../../src/periph/gpio_f1.h ****   volatile uint32_t      BRR;  // Port bit reset register          offset: 0x14
  18:../../src/periph/gpio_f1.h ****   volatile uint32_t      LCKR; // Port configuration lock register offset: 0x18
ARM GAS  /tmp/ccFxkDJm.s 			page 34


  19:../../src/periph/gpio_f1.h **** 
  20:../../src/periph/gpio_f1.h **** public:
  21:../../src/periph/gpio_f1.h ****    using CMSIS_type = GPIO_TypeDef;
  22:../../src/periph/gpio_f1.h ****    using Mode       = GPIO_bits::CR::Mode;
  23:../../src/periph/gpio_f1.h ****    using Remap      = AFIO::Remap;
  24:../../src/periph/gpio_f1.h **** 
  25:../../src/periph/gpio_f1.h ****    auto& like_CMSIS(){return *reinterpret_cast<CMSIS_type*>(this);}
  26:../../src/periph/gpio_f1.h **** 
  27:../../src/periph/gpio_f1.h ****    void set        (size_t n) { BSRR |= (1 << n);              }
 486              		.loc 10 27 0
 487 0000 0123     		movs	r3, #1
 488              	.LBE887:
 489              	.LBE886:
 490              		.loc 9 28 0
 491 0002 0268     		ldr	r2, [r0]
 492              	.LVL30:
 493              	.LBB889:
 494              	.LBB888:
 495              		.loc 10 27 0
 496 0004 4068     		ldr	r0, [r0, #4]
 497              	.LVL31:
 498 0006 1169     		ldr	r1, [r2, #16]
 499 0008 8340     		lsls	r3, r3, r0
 500 000a 0B43     		orrs	r3, r1
 501 000c 1361     		str	r3, [r2, #16]
 502              	.LVL32:
 503              	.LBE888:
 504              	.LBE889:
 505              		.loc 9 28 0
 506              		@ sp needed
 507 000e 7047     		bx	lr
 508              		.cfi_endproc
 509              	.LFE2205:
 511              		.section	.text._ZN3Pin5clearEv,"axG",%progbits,_ZN3Pin5clearEv,comdat
 512              		.align	1
 513              		.weak	_ZN3Pin5clearEv
 514              		.syntax unified
 515              		.code	16
 516              		.thumb_func
 517              		.fpu softvfp
 519              	_ZN3Pin5clearEv:
 520              	.LFB2206:
  29:../../src/pin.h ****    void clear()     { port.clear(n);           }
 521              		.loc 9 29 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              	.LVL33:
 526              	.LBB892:
 527              	.LBB893:
  28:../../src/periph/gpio_f1.h ****    void clear      (size_t n) { BSRR |= (1 << (n + 16));       }
 528              		.loc 10 28 0
 529 0000 0123     		movs	r3, #1
 530 0002 4268     		ldr	r2, [r0, #4]
 531              	.LBE893:
 532              	.LBE892:
 533              		.loc 9 29 0
ARM GAS  /tmp/ccFxkDJm.s 			page 35


 534 0004 10B5     		push	{r4, lr}
 535              	.LCFI3:
 536              		.cfi_def_cfa_offset 8
 537              		.cfi_offset 4, -8
 538              		.cfi_offset 14, -4
 539              	.LBB896:
 540              	.LBB894:
 541              		.loc 10 28 0
 542 0006 1032     		adds	r2, r2, #16
 543 0008 9340     		lsls	r3, r3, r2
 544              	.LBE894:
 545              	.LBE896:
 546              		.loc 9 29 0
 547 000a 0168     		ldr	r1, [r0]
 548              	.LVL34:
 549              		@ sp needed
 550              	.LBB897:
 551              	.LBB895:
 552              		.loc 10 28 0
 553 000c 0C69     		ldr	r4, [r1, #16]
 554 000e 2343     		orrs	r3, r4
 555 0010 0B61     		str	r3, [r1, #16]
 556              	.LVL35:
 557              	.LBE895:
 558              	.LBE897:
 559              		.loc 9 29 0
 560 0012 10BD     		pop	{r4, pc}
 561              		.cfi_endproc
 562              	.LFE2206:
 564              		.section	.text._ZZN7HD447804initEvENKUlvE_clEv,"ax",%progbits
 565              		.align	1
 566              		.syntax unified
 567              		.code	16
 568              		.thumb_func
 569              		.fpu softvfp
 571              	_ZZN7HD447804initEvENKUlvE_clEv:
 572              	.LFB2580:
 573              		.file 11 "../../src/hd44780.h"
   1:../../src/hd44780.h **** #pragma once
   2:../../src/hd44780.h **** 
   3:../../src/hd44780.h **** #include "pin.h"
   4:../../src/hd44780.h **** #include "meta.h"
   5:../../src/hd44780.h **** #include "delay.h"
   6:../../src/hd44780.h **** #include "timers.h"
   7:../../src/hd44780.h **** #include "bit_set.h"
   8:../../src/hd44780.h **** #include <initializer_list>
   9:../../src/hd44780.h **** 		
  10:../../src/hd44780.h **** #if defined (USE_MOCK_DELAY)
  11:../../src/hd44780.h **** #define NS mock
  12:../../src/hd44780.h **** using namespace mock;
  13:../../src/hd44780.h **** #else
  14:../../src/hd44780.h **** #define NS
  15:../../src/hd44780.h **** using namespace mcu;
  16:../../src/hd44780.h **** #endif
  17:../../src/hd44780.h **** 
  18:../../src/hd44780.h **** 
  19:../../src/hd44780.h **** class HD44780 : TickSubscriber
ARM GAS  /tmp/ccFxkDJm.s 			page 36


  20:../../src/hd44780.h **** {
  21:../../src/hd44780.h **** public:
  22:../../src/hd44780.h ****     template <class RS, class RW, class E, class DB4, class DB5, class DB6, class DB7>
  23:../../src/hd44780.h ****     static HD44780& make(const std::array<char, 80>& buffer);
  24:../../src/hd44780.h **** 
  25:../../src/hd44780.h **** 
  26:../../src/hd44780.h **** 
  27:../../src/hd44780.h **** private:
  28:../../src/hd44780.h ****     using BSRR = std::pair<uint32_t, uint32_t>;
  29:../../src/hd44780.h **** 
  30:../../src/hd44780.h ****     enum Step {_1, _2, _3} step {Step::_1};
  31:../../src/hd44780.h **** 
  32:../../src/hd44780.h ****     Pin& rs;
  33:../../src/hd44780.h ****     Pin& rw;
  34:../../src/hd44780.h ****     Pin& e;
  35:../../src/hd44780.h ****     GPIO& port;
  36:../../src/hd44780.h ****     const std::array<char, 80 >& buffer;
  37:../../src/hd44780.h ****     const std::array<BSRR, 256>& chars;
  38:../../src/hd44780.h ****     const std::array<BSRR, 256>& command;
  39:../../src/hd44780.h ****     uint32_t second;
  40:../../src/hd44780.h **** 
  41:../../src/hd44780.h ****     class Symbol_n {
  42:../../src/hd44780.h ****     public:
  43:../../src/hd44780.h ****         size_t operator++(int) { return table[index++ % 80]; }
  44:../../src/hd44780.h ****     private:
  45:../../src/hd44780.h ****         static constexpr auto symbol_n_function = [](size_t i) {
  46:../../src/hd44780.h ****             return i < 20 ? i      :
  47:../../src/hd44780.h ****                    i < 40 ? i + 20 :
  48:../../src/hd44780.h ****                    i < 60 ? i - 20 : i;
  49:../../src/hd44780.h ****         };
  50:../../src/hd44780.h ****         static constexpr auto table = meta::generate<symbol_n_function,80>;
  51:../../src/hd44780.h ****         size_t index {0};
  52:../../src/hd44780.h ****     } index{};
  53:../../src/hd44780.h **** 
  54:../../src/hd44780.h ****     HD44780 (
  55:../../src/hd44780.h ****         Pin& rs, Pin& rw, Pin& e, GPIO& port
  56:../../src/hd44780.h ****         , const std::array<char, 80 >& buffer
  57:../../src/hd44780.h ****         , const std::array<BSRR, 256>& chars
  58:../../src/hd44780.h ****         , const std::array<BSRR, 256>& command
  59:../../src/hd44780.h ****     ) : rs      {rs}
  60:../../src/hd44780.h ****       , rw      {rw}
  61:../../src/hd44780.h ****       , e       {e}
  62:../../src/hd44780.h ****       , port    {port}
  63:../../src/hd44780.h ****       , buffer  {buffer}
  64:../../src/hd44780.h ****       , chars   {chars}
  65:../../src/hd44780.h ****       , command {command}
  66:../../src/hd44780.h ****     {}
  67:../../src/hd44780.h **** 
  68:../../src/hd44780.h ****     void init();
  69:../../src/hd44780.h ****     void notify() override;
  70:../../src/hd44780.h **** };
  71:../../src/hd44780.h **** 
  72:../../src/hd44780.h **** 
  73:../../src/hd44780.h **** 
  74:../../src/hd44780.h **** 
  75:../../src/hd44780.h **** 
  76:../../src/hd44780.h **** 
ARM GAS  /tmp/ccFxkDJm.s 			page 37


  77:../../src/hd44780.h **** 
  78:../../src/hd44780.h **** 
  79:../../src/hd44780.h **** 
  80:../../src/hd44780.h **** 
  81:../../src/hd44780.h **** 
  82:../../src/hd44780.h **** constexpr unsigned char convert_HD44780[64] =
  83:../../src/hd44780.h **** {
  84:../../src/hd44780.h ****     0x41,0xA0,0x42,0xA1,0xE0,0x45,0xA3,0xA4,
  85:../../src/hd44780.h ****     0xA5,0xA6,0x4B,0xA7,0x4D,0x48,0x4F,0xA8,
  86:../../src/hd44780.h ****     0x50,0x43,0x54,0xA9,0xAA,0x58,0xE1,0xAB,
  87:../../src/hd44780.h ****     0xAC,0xE2,0xAD,0xAE,0xAD,0xAF,0xB0,0xB1,
  88:../../src/hd44780.h ****     0x61,0xB2,0xB3,0xB4,0xE3,0x65,0xB6,0xB7,
  89:../../src/hd44780.h ****     0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0x6F,0xBE,
  90:../../src/hd44780.h ****     0x70,0x63,0xBF,0x79,0xE4,0x78,0xE5,0xC0,
  91:../../src/hd44780.h ****     0xC1,0xE6,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7
  92:../../src/hd44780.h **** };
  93:../../src/hd44780.h **** 
  94:../../src/hd44780.h **** template<class DB4, class DB5, class DB6, class DB7>
  95:../../src/hd44780.h **** constexpr auto BSRR_command (char data)
  96:../../src/hd44780.h **** {
  97:../../src/hd44780.h ****     bit_set d {data};
  98:../../src/hd44780.h ****     bit_set<uint32_t> bsrr_high {0};
  99:../../src/hd44780.h ****     bit_set<uint32_t> bsrr_low  {0};
 100:../../src/hd44780.h **** 
 101:../../src/hd44780.h ****     bsrr_low. set (d[0] ? DB4::n : DB4::n+16);
 102:../../src/hd44780.h ****     bsrr_low. set (d[1] ? DB5::n : DB5::n+16);
 103:../../src/hd44780.h ****     bsrr_low. set (d[2] ? DB6::n : DB6::n+16);
 104:../../src/hd44780.h ****     bsrr_low. set (d[3] ? DB7::n : DB7::n+16);
 105:../../src/hd44780.h ****     bsrr_high.set (d[4] ? DB4::n : DB4::n+16);
 106:../../src/hd44780.h ****     bsrr_high.set (d[5] ? DB5::n : DB5::n+16);
 107:../../src/hd44780.h ****     bsrr_high.set (d[6] ? DB6::n : DB6::n+16);
 108:../../src/hd44780.h ****     bsrr_high.set (d[7] ? DB7::n : DB7::n+16);
 109:../../src/hd44780.h **** 
 110:../../src/hd44780.h ****     return std::pair{bsrr_high.value, bsrr_low.value};
 111:../../src/hd44780.h **** }
 112:../../src/hd44780.h **** 
 113:../../src/hd44780.h **** template<class DB4, class DB5, class DB6, class DB7>
 114:../../src/hd44780.h **** constexpr auto BSRR_value (char data)
 115:../../src/hd44780.h **** {
 116:../../src/hd44780.h ****     data = data > 191 ? convert_HD44780[data - 192] : data; // TODO 191 192 magic num
 117:../../src/hd44780.h ****     return BSRR_command<DB4, DB5, DB6, DB7>(data);
 118:../../src/hd44780.h **** }
 119:../../src/hd44780.h **** 
 120:../../src/hd44780.h **** 
 121:../../src/hd44780.h **** 
 122:../../src/hd44780.h **** 
 123:../../src/hd44780.h **** 
 124:../../src/hd44780.h **** 
 125:../../src/hd44780.h **** 
 126:../../src/hd44780.h **** template <class RS, class RW, class E, class DB4, class DB5, class DB6, class DB7>
 127:../../src/hd44780.h **** HD44780& HD44780::make(const std::array<char, 80>& buffer)
 128:../../src/hd44780.h **** {
 129:../../src/hd44780.h ****     static_assert (
 130:../../src/hd44780.h ****         meta::all_is_same(DB4::periph, DB5::periph, DB6::periph, DB7::periph)
 131:../../src/hd44780.h ****         , "–ü–∏–Ω—ã –¥–ª—è —à–∏–Ω—ã —ç–∫—Ä–∞–Ω–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞ –æ–¥–Ω–æ–º –ø–æ—Ä—Ç—É"
 132:../../src/hd44780.h ****     );
 133:../../src/hd44780.h **** 
ARM GAS  /tmp/ccFxkDJm.s 			page 38


 134:../../src/hd44780.h ****     static auto screen = HD44780 {
 135:../../src/hd44780.h ****         Pin::template make<RS, mcu::PinMode::Output>(),
 136:../../src/hd44780.h ****         Pin::template make<RW, mcu::PinMode::Output>(),
 137:../../src/hd44780.h ****         Pin::template make<E,  mcu::PinMode::Output>(),
 138:../../src/hd44780.h ****         mcu::make_reference<DB4::periph>(),
 139:../../src/hd44780.h ****         buffer,
 140:../../src/hd44780.h ****         meta::generate<BSRR_value<DB4, DB5, DB6, DB7>, 256>,
 141:../../src/hd44780.h ****         meta::generate<BSRR_command<DB4, DB5, DB6, DB7>, 256>
 142:../../src/hd44780.h ****     };
 143:../../src/hd44780.h **** 
 144:../../src/hd44780.h ****     make_pins<mcu::PinMode::Output, DB4, DB5, DB6, DB7>();
 145:../../src/hd44780.h **** 
 146:../../src/hd44780.h ****     screen.init();
 147:../../src/hd44780.h ****     screen.tick_subscribe<Faster::x10>();
 148:../../src/hd44780.h **** 
 149:../../src/hd44780.h ****     return screen;
 150:../../src/hd44780.h **** }
 151:../../src/hd44780.h **** 
 152:../../src/hd44780.h **** 
 153:../../src/hd44780.h **** void HD44780::init()
 154:../../src/hd44780.h **** {
 155:../../src/hd44780.h ****     enum Set {
 156:../../src/hd44780.h ****           _4_bit_mode     = 0x28
 157:../../src/hd44780.h ****         , display_on      = 0x0C
 158:../../src/hd44780.h ****         , dir_shift_right = 0x06
 159:../../src/hd44780.h ****         , display_clear   = 0x01
 160:../../src/hd44780.h ****         , set_to_zero     = 0x80
 161:../../src/hd44780.h ****     };
 162:../../src/hd44780.h **** 
 163:../../src/hd44780.h ****     NS::Delay delay;
 164:../../src/hd44780.h ****     
 165:../../src/hd44780.h ****     auto strob_e = [&](){
 574              		.loc 11 165 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              	.LVL36:
 166:../../src/hd44780.h ****         e = false;
 579              		.loc 11 166 0
 580 0000 0368     		ldr	r3, [r0]
 165:../../src/hd44780.h ****         e = false;
 581              		.loc 11 165 0
 582 0002 10B5     		push	{r4, lr}
 583              	.LCFI4:
 584              		.cfi_def_cfa_offset 8
 585              		.cfi_offset 4, -8
 586              		.cfi_offset 14, -4
 165:../../src/hd44780.h ****         e = false;
 587              		.loc 11 165 0
 588 0004 0400     		movs	r4, r0
 589              	.LBB898:
 590              	.LBB899:
  30:../../src/pin.h ****    bool is_set()    { return port.is_set(n);   }
  31:../../src/pin.h ****    void toggle()    { port.toggle(n);          }
  32:../../src/pin.h **** 
  33:../../src/pin.h ****    bool operator=  (bool v) { v ? set() : clear(); return v; }
 591              		.loc 9 33 0
ARM GAS  /tmp/ccFxkDJm.s 			page 39


 592 0006 9869     		ldr	r0, [r3, #24]
 593              	.LVL37:
 594 0008 FFF7FEFF 		bl	_ZN3Pin5clearEv
 595              	.LVL38:
 596              	.L39:
 597              	.LBE899:
 598              	.LBE898:
 599              	.LBB900:
 600              	.LBB901:
 601 000c 6421     		movs	r1, #100
 602 000e 6068     		ldr	r0, [r4, #4]
 603 0010 FFF7FEFF 		bl	_ZN5Delay2usEm.part.9
 604              	.LVL39:
 605              	.LBE901:
 606              	.LBE900:
 167:../../src/hd44780.h ****         while(delay.us(100)) {}
 607              		.loc 11 167 0
 608 0014 0028     		cmp	r0, #0
 609 0016 F9D1     		bne	.L39
 610              	.LVL40:
 168:../../src/hd44780.h ****         e = true;
 611              		.loc 11 168 0
 612 0018 2368     		ldr	r3, [r4]
 613              	.LBB902:
 614              	.LBB903:
 615              		.loc 9 33 0
 616 001a 9869     		ldr	r0, [r3, #24]
 617 001c FFF7FEFF 		bl	_ZN3Pin3setEv
 618              	.LVL41:
 619              	.L40:
 620              	.LBE903:
 621              	.LBE902:
 622              	.LBB904:
 623              	.LBB905:
 624 0020 6421     		movs	r1, #100
 625 0022 6068     		ldr	r0, [r4, #4]
 626 0024 FFF7FEFF 		bl	_ZN5Delay2usEm.part.9
 627              	.LVL42:
 628              	.LBE905:
 629              	.LBE904:
 169:../../src/hd44780.h ****         while(delay.us(100)) {}
 630              		.loc 11 169 0
 631 0028 0028     		cmp	r0, #0
 632 002a F9D1     		bne	.L40
 170:../../src/hd44780.h ****     };
 633              		.loc 11 170 0
 634              		@ sp needed
 635              	.LVL43:
 636 002c 10BD     		pop	{r4, pc}
 637              		.cfi_endproc
 638              	.LFE2580:
 640              		.section	.text._ZZN7HD447804initEvENKUlmE0_clEm,"ax",%progbits
 641              		.align	1
 642              		.syntax unified
 643              		.code	16
 644              		.thumb_func
 645              		.fpu softvfp
ARM GAS  /tmp/ccFxkDJm.s 			page 40


 647              	_ZZN7HD447804initEvENKUlmE0_clEm:
 648              	.LFB2581:
 171:../../src/hd44780.h **** 
 172:../../src/hd44780.h ****     auto instruction = [&](uint32_t action) {
 649              		.loc 11 172 0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              	.LVL44:
 654 0000 70B5     		push	{r4, r5, r6, lr}
 655              	.LCFI5:
 656              		.cfi_def_cfa_offset 16
 657              		.cfi_offset 4, -16
 658              		.cfi_offset 5, -12
 659              		.cfi_offset 6, -8
 660              		.cfi_offset 14, -4
 661              		.loc 11 172 0
 662 0002 0400     		movs	r4, r0
 663 0004 0D00     		movs	r5, r1
 173:../../src/hd44780.h ****         rs = false;
 664              		.loc 11 173 0
 665 0006 0368     		ldr	r3, [r0]
 174:../../src/hd44780.h ****         port.atomic_write(command[action].first);
 666              		.loc 11 174 0
 667 0008 ED00     		lsls	r5, r5, #3
 668              	.LBB906:
 669              	.LBB907:
 670              		.loc 9 33 0
 671 000a 1869     		ldr	r0, [r3, #16]
 672              	.LVL45:
 673 000c FFF7FEFF 		bl	_ZN3Pin5clearEv
 674              	.LVL46:
 675              	.LBE907:
 676              	.LBE906:
 173:../../src/hd44780.h ****         rs = false;
 677              		.loc 11 173 0
 678 0010 2368     		ldr	r3, [r4]
 175:../../src/hd44780.h ****         strob_e();
 679              		.loc 11 175 0
 680 0012 6068     		ldr	r0, [r4, #4]
 174:../../src/hd44780.h ****         port.atomic_write(command[action].first);
 681              		.loc 11 174 0
 682 0014 DA69     		ldr	r2, [r3, #28]
 683 0016 9B6A     		ldr	r3, [r3, #40]
 684 0018 EB58     		ldr	r3, [r5, r3]
 685              	.LVL47:
 686              	.LBB908:
 687              	.LBB909:
  29:../../src/periph/gpio_f1.h ****    bool is_set     (size_t n) { return IDR.reg & (1 << n);     }
  30:../../src/periph/gpio_f1.h ****    void toggle     (size_t n) { is_set(n) ? clear(n) : set(n); }
  31:../../src/periph/gpio_f1.h ****    void atomic_write (uint32_t value) { BSRR = value; }
 688              		.loc 10 31 0
 689 001a 1361     		str	r3, [r2, #16]
 690              	.LVL48:
 691              	.LBE909:
 692              	.LBE908:
 693              		.loc 11 175 0
ARM GAS  /tmp/ccFxkDJm.s 			page 41


 694 001c FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlvE_clEv
 695              	.LVL49:
 173:../../src/hd44780.h ****         port.atomic_write(command[action].first);
 696              		.loc 11 173 0
 697 0020 2368     		ldr	r3, [r4]
 176:../../src/hd44780.h ****         port.atomic_write(command[action].second);
 177:../../src/hd44780.h ****         strob_e();
 698              		.loc 11 177 0
 699 0022 6068     		ldr	r0, [r4, #4]
 176:../../src/hd44780.h ****         port.atomic_write(command[action].second);
 700              		.loc 11 176 0
 701 0024 DA69     		ldr	r2, [r3, #28]
 702 0026 9B6A     		ldr	r3, [r3, #40]
 703 0028 5D19     		adds	r5, r3, r5
 704 002a 6B68     		ldr	r3, [r5, #4]
 705              	.LVL50:
 706              	.LBB910:
 707              	.LBB911:
 708              		.loc 10 31 0
 709 002c 1361     		str	r3, [r2, #16]
 710              	.LVL51:
 711              	.LBE911:
 712              	.LBE910:
 713              		.loc 11 177 0
 714 002e FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlvE_clEv
 715              	.LVL52:
 716              	.L44:
 717              	.LBB912:
 718              	.LBB913:
 719 0032 3221     		movs	r1, #50
 720 0034 A068     		ldr	r0, [r4, #8]
 721 0036 FFF7FEFF 		bl	_ZN5Delay2usEm.part.9
 722              	.LVL53:
 723              	.LBE913:
 724              	.LBE912:
 178:../../src/hd44780.h ****         while(delay.us(50)) {}
 725              		.loc 11 178 0
 726 003a 0028     		cmp	r0, #0
 727 003c F9D1     		bne	.L44
 179:../../src/hd44780.h ****     };
 728              		.loc 11 179 0
 729              		@ sp needed
 730              	.LVL54:
 731 003e 70BD     		pop	{r4, r5, r6, pc}
 732              		.cfi_endproc
 733              	.LFE2581:
 735              		.global	__aeabi_uidivmod
 736              		.section	.text._ZN7HD447806notifyEv,"ax",%progbits
 737              		.align	1
 738              		.global	_ZN7HD447806notifyEv
 739              		.syntax unified
 740              		.code	16
 741              		.thumb_func
 742              		.fpu softvfp
 744              	_ZN7HD447806notifyEv:
 745              	.LFB2584:
 180:../../src/hd44780.h ****     
ARM GAS  /tmp/ccFxkDJm.s 			page 42


 181:../../src/hd44780.h ****     while(delay.ms(20)) {}
 182:../../src/hd44780.h ****     rs = false;
 183:../../src/hd44780.h ****     rw = false;
 184:../../src/hd44780.h ****     e = true;
 185:../../src/hd44780.h ****     port.atomic_write(command[0x03].second);
 186:../../src/hd44780.h ****     strob_e();
 187:../../src/hd44780.h ****     while(delay.ms(5)) {}
 188:../../src/hd44780.h ****     port.atomic_write(command[0x03].second);
 189:../../src/hd44780.h ****     strob_e();
 190:../../src/hd44780.h ****     while(delay.us(100)) {}
 191:../../src/hd44780.h ****     port.atomic_write(command[0x03].second);
 192:../../src/hd44780.h ****     strob_e();
 193:../../src/hd44780.h ****     while(delay.us(50)) {}
 194:../../src/hd44780.h ****     port.atomic_write(command[0x02].second);
 195:../../src/hd44780.h ****     strob_e();
 196:../../src/hd44780.h ****     while(delay.us(50)) {}
 197:../../src/hd44780.h ****     instruction (_4_bit_mode);
 198:../../src/hd44780.h ****     instruction (display_on);
 199:../../src/hd44780.h ****     instruction (dir_shift_right);
 200:../../src/hd44780.h ****     instruction (display_clear);
 201:../../src/hd44780.h ****     instruction (set_to_zero);
 202:../../src/hd44780.h ****     while(delay.ms(1)) {}
 203:../../src/hd44780.h **** }
 204:../../src/hd44780.h **** 
 205:../../src/hd44780.h **** void HD44780::notify()
 206:../../src/hd44780.h **** {
 746              		.loc 11 206 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750              	.LVL55:
 751 0000 70B5     		push	{r4, r5, r6, lr}
 752              	.LCFI6:
 753              		.cfi_def_cfa_offset 16
 754              		.cfi_offset 4, -16
 755              		.cfi_offset 5, -12
 756              		.cfi_offset 6, -8
 757              		.cfi_offset 14, -4
 758              	.LBB963:
 207:../../src/hd44780.h ****     switch (step) {
 759              		.loc 11 207 0
 760 0002 437B     		ldrb	r3, [r0, #13]
 761              	.LBE963:
 206:../../src/hd44780.h ****     switch (step) {
 762              		.loc 11 206 0
 763 0004 0400     		movs	r4, r0
 764              	.LBB976:
 765              		.loc 11 207 0
 766 0006 012B     		cmp	r3, #1
 767 0008 20D0     		beq	.L48
 768 000a 002B     		cmp	r3, #0
 769 000c 02D0     		beq	.L49
 770 000e 022B     		cmp	r3, #2
 771 0010 27D0     		beq	.L50
 772              	.LVL56:
 773              	.L46:
 774              	.LBE976:
ARM GAS  /tmp/ccFxkDJm.s 			page 43


 208:../../src/hd44780.h ****         case _1: {
 209:../../src/hd44780.h ****             rw = false;
 210:../../src/hd44780.h ****             rs = true;
 211:../../src/hd44780.h ****             auto symbol = buffer[index++];
 212:../../src/hd44780.h ****             auto [first, second] = chars[symbol];
 213:../../src/hd44780.h ****             port.atomic_write(first);
 214:../../src/hd44780.h ****             this->second = second;
 215:../../src/hd44780.h ****             step = Step::_2;
 216:../../src/hd44780.h ****         break;
 217:../../src/hd44780.h ****         }
 218:../../src/hd44780.h ****         case _2:
 219:../../src/hd44780.h ****             e = true;
 220:../../src/hd44780.h ****             e = false;
 221:../../src/hd44780.h ****             port.atomic_write(second);
 222:../../src/hd44780.h ****             step = Step::_3;
 223:../../src/hd44780.h ****         break;
 224:../../src/hd44780.h ****         case _3:
 225:../../src/hd44780.h ****             e = true;
 226:../../src/hd44780.h ****             e = false;
 227:../../src/hd44780.h ****             step = Step::_1;
 228:../../src/hd44780.h ****         break;
 229:../../src/hd44780.h ****     }
 230:../../src/hd44780.h **** }
 775              		.loc 11 230 0
 776              		@ sp needed
 777              	.LVL57:
 778 0012 70BD     		pop	{r4, r5, r6, pc}
 779              	.LVL58:
 780              	.L49:
 781              	.LBB977:
 782              	.LBB978:
 783              	.LBB979:
 784              	.LBB980:
 785              	.LBB981:
 786              		.loc 9 33 0
 787 0014 4069     		ldr	r0, [r0, #20]
 788              	.LVL59:
 789 0016 FFF7FEFF 		bl	_ZN3Pin5clearEv
 790              	.LVL60:
 791              	.LBE981:
 792              	.LBE980:
 793              	.LBB982:
 794              	.LBB983:
 795 001a 2069     		ldr	r0, [r4, #16]
 796 001c FFF7FEFF 		bl	_ZN3Pin3setEv
 797              	.LVL61:
 798              	.LBE983:
 799              	.LBE982:
 800              	.LBB984:
 801              	.LBB985:
  43:../../src/hd44780.h ****     private:
 802              		.loc 11 43 0
 803 0020 206B     		ldr	r0, [r4, #48]
 804 0022 5021     		movs	r1, #80
 805 0024 431C     		adds	r3, r0, #1
 806 0026 2363     		str	r3, [r4, #48]
 807 0028 FFF7FEFF 		bl	__aeabi_uidivmod
ARM GAS  /tmp/ccFxkDJm.s 			page 44


 808              	.LVL62:
 809              	.LBE985:
 810              	.LBE984:
 211:../../src/hd44780.h ****             auto [first, second] = chars[symbol];
 811              		.loc 11 211 0
 812 002c 114B     		ldr	r3, .L52
 813              	.LBB987:
 814              	.LBB986:
  43:../../src/hd44780.h ****     private:
 815              		.loc 11 43 0
 816 002e 8900     		lsls	r1, r1, #2
 817              	.LBE986:
 818              	.LBE987:
 211:../../src/hd44780.h ****             auto [first, second] = chars[symbol];
 819              		.loc 11 211 0
 820 0030 256A     		ldr	r5, [r4, #32]
 821              	.LVL63:
 822 0032 CB58     		ldr	r3, [r1, r3]
 212:../../src/hd44780.h ****             port.atomic_write(first);
 823              		.loc 11 212 0
 824 0034 626A     		ldr	r2, [r4, #36]
 825 0036 EB5C     		ldrb	r3, [r5, r3]
 826 0038 DB00     		lsls	r3, r3, #3
 827 003a D318     		adds	r3, r2, r3
 828 003c 1968     		ldr	r1, [r3]
 829              	.LVL64:
 213:../../src/hd44780.h ****             this->second = second;
 830              		.loc 11 213 0
 831 003e E269     		ldr	r2, [r4, #28]
 212:../../src/hd44780.h ****             port.atomic_write(first);
 832              		.loc 11 212 0
 833 0040 5B68     		ldr	r3, [r3, #4]
 834              	.LVL65:
 835              	.LBB988:
 836              	.LBB989:
 837              		.loc 10 31 0
 838 0042 1161     		str	r1, [r2, #16]
 839              	.LVL66:
 840              	.LBE989:
 841              	.LBE988:
 214:../../src/hd44780.h ****             step = Step::_2;
 842              		.loc 11 214 0
 843 0044 E362     		str	r3, [r4, #44]
 215:../../src/hd44780.h ****         break;
 844              		.loc 11 215 0
 845 0046 0123     		movs	r3, #1
 846              	.LVL67:
 847              	.L51:
 848              	.LBE979:
 849              	.LBE978:
 850              	.LBE977:
 851              	.LBB990:
 852              	.LBB964:
 227:../../src/hd44780.h ****         break;
 853              		.loc 11 227 0
 854 0048 6373     		strb	r3, [r4, #13]
 855              	.LBE964:
ARM GAS  /tmp/ccFxkDJm.s 			page 45


 856              	.LBE990:
 857              		.loc 11 230 0
 858 004a E2E7     		b	.L46
 859              	.LVL68:
 860              	.L48:
 861              	.LBB991:
 862              	.LBB975:
 863              	.LBB965:
 864              	.LBB966:
 865              		.loc 9 33 0
 866 004c 8069     		ldr	r0, [r0, #24]
 867              	.LVL69:
 868 004e FFF7FEFF 		bl	_ZN3Pin3setEv
 869              	.LVL70:
 870              	.LBE966:
 871              	.LBE965:
 872              	.LBB967:
 873              	.LBB968:
 874 0052 A069     		ldr	r0, [r4, #24]
 875 0054 FFF7FEFF 		bl	_ZN3Pin5clearEv
 876              	.LVL71:
 877              	.LBE968:
 878              	.LBE967:
 221:../../src/hd44780.h ****             step = Step::_3;
 879              		.loc 11 221 0
 880 0058 E369     		ldr	r3, [r4, #28]
 881              	.LVL72:
 882              	.LBB969:
 883              	.LBB970:
 884              		.loc 10 31 0
 885 005a E26A     		ldr	r2, [r4, #44]
 886 005c 1A61     		str	r2, [r3, #16]
 887              	.LVL73:
 888              	.LBE970:
 889              	.LBE969:
 222:../../src/hd44780.h ****         break;
 890              		.loc 11 222 0
 891 005e 0223     		movs	r3, #2
 892 0060 F2E7     		b	.L51
 893              	.LVL74:
 894              	.L50:
 895              	.LBB971:
 896              	.LBB972:
 897              		.loc 9 33 0
 898 0062 8069     		ldr	r0, [r0, #24]
 899              	.LVL75:
 900 0064 FFF7FEFF 		bl	_ZN3Pin3setEv
 901              	.LVL76:
 902              	.LBE972:
 903              	.LBE971:
 904              	.LBB973:
 905              	.LBB974:
 906 0068 A069     		ldr	r0, [r4, #24]
 907 006a FFF7FEFF 		bl	_ZN3Pin5clearEv
 908              	.LVL77:
 909              	.LBE974:
 910              	.LBE973:
ARM GAS  /tmp/ccFxkDJm.s 			page 46


 227:../../src/hd44780.h ****         break;
 911              		.loc 11 227 0
 912 006e 0023     		movs	r3, #0
 913 0070 EAE7     		b	.L51
 914              	.L53:
 915 0072 C046     		.align	2
 916              	.L52:
 917 0074 00000000 		.word	_ZN7HD447808Symbol_n5tableE
 918              	.LBE975:
 919              	.LBE991:
 920              		.cfi_endproc
 921              	.LFE2584:
 923              		.section	.text._ZN3Pin6is_setEv,"axG",%progbits,_ZN3Pin6is_setEv,comdat
 924              		.align	1
 925              		.weak	_ZN3Pin6is_setEv
 926              		.syntax unified
 927              		.code	16
 928              		.thumb_func
 929              		.fpu softvfp
 931              	_ZN3Pin6is_setEv:
 932              	.LFB2207:
  30:../../src/pin.h ****    void toggle()    { port.toggle(n);          }
 933              		.loc 9 30 0
 934              		.cfi_startproc
 935              		@ args = 0, pretend = 0, frame = 0
 936              		@ frame_needed = 0, uses_anonymous_args = 0
 937              		@ link register save eliminated.
 938              	.LVL78:
  30:../../src/pin.h ****    void toggle()    { port.toggle(n);          }
 939              		.loc 9 30 0
 940 0000 0368     		ldr	r3, [r0]
 941              	.LVL79:
 942              	.LBB992:
 943              	.LBB993:
  29:../../src/periph/gpio_f1.h ****    void toggle     (size_t n) { is_set(n) ? clear(n) : set(n); }
 944              		.loc 10 29 0
 945 0002 4268     		ldr	r2, [r0, #4]
 946 0004 0120     		movs	r0, #1
 947              	.LVL80:
 948 0006 9040     		lsls	r0, r0, r2
 949 0008 9B68     		ldr	r3, [r3, #8]
 950              	.LVL81:
 951              	.LBE993:
 952              	.LBE992:
  30:../../src/pin.h ****    void toggle()    { port.toggle(n);          }
 953              		.loc 9 30 0
 954              		@ sp needed
 955              	.LBB995:
 956              	.LBB994:
  29:../../src/periph/gpio_f1.h ****    void toggle     (size_t n) { is_set(n) ? clear(n) : set(n); }
 957              		.loc 10 29 0
 958 000a 1840     		ands	r0, r3
 959 000c 431E     		subs	r3, r0, #1
 960 000e 9841     		sbcs	r0, r0, r3
 961              	.LBE994:
 962              	.LBE995:
  30:../../src/pin.h ****    void toggle()    { port.toggle(n);          }
ARM GAS  /tmp/ccFxkDJm.s 			page 47


 963              		.loc 9 30 0
 964 0010 C0B2     		uxtb	r0, r0
 965 0012 7047     		bx	lr
 966              		.cfi_endproc
 967              	.LFE2207:
 969              		.section	.text._ZN9Publisher6notifyEv,"axG",%progbits,_ZN9Publisher6notifyEv,comdat
 970              		.align	1
 971              		.weak	_ZN9Publisher6notifyEv
 972              		.syntax unified
 973              		.code	16
 974              		.thumb_func
 975              		.fpu softvfp
 977              	_ZN9Publisher6notifyEv:
 978              	.LFB2495:
 979              		.file 12 "../../src/subscriber.h"
   1:../../src/subscriber.h **** #pragma once
   2:../../src/subscriber.h **** 
   3:../../src/subscriber.h **** #include "list.h"
   4:../../src/subscriber.h **** #include "systick.h"
   5:../../src/subscriber.h **** 
   6:../../src/subscriber.h **** struct Subscriber : Listable<Subscriber> {
   7:../../src/subscriber.h ****     virtual void notify() = 0;
   8:../../src/subscriber.h **** };
   9:../../src/subscriber.h **** 
  10:../../src/subscriber.h **** struct Publisher : private List<Subscriber>
  11:../../src/subscriber.h **** {
  12:../../src/subscriber.h ****     
  13:../../src/subscriber.h ****     void clear(){clear_subscribe();}
  14:../../src/subscriber.h ****     void subscribe  (Subscriber& v) { push_back(v); }
  15:../../src/subscriber.h ****     void unsubscribe(Subscriber& v) { remove(v);    }
  16:../../src/subscriber.h ****     // —Å—Å—ã–ª–∫–∞, —á—Ç–æ–±—ã –Ω–µ –∫–æ–ø–∏—Ä–æ–≤–∞–ª –∫–∞–∂–¥—ã–π subscriber –∏–∑ *this
  17:../../src/subscriber.h ****     void notify() {
 980              		.loc 12 17 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 0
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984              	.LVL82:
 985 0000 10B5     		push	{r4, lr}
 986              	.LCFI7:
 987              		.cfi_def_cfa_offset 8
 988              		.cfi_offset 4, -8
 989              		.cfi_offset 14, -4
 990              	.LBB996:
  18:../../src/subscriber.h ****         for (auto& subscriber : *this)
 991              		.loc 12 18 0
 992 0002 0468     		ldr	r4, [r0]
 993              	.LVL83:
 994              	.L57:
 995              		.loc 12 18 0 is_stmt 0 discriminator 3
 996 0004 002C     		cmp	r4, #0
 997 0006 05D0     		beq	.L55
  19:../../src/subscriber.h ****             subscriber.notify();
 998              		.loc 12 19 0 is_stmt 1
 999 0008 2368     		ldr	r3, [r4]
 1000 000a 2000     		movs	r0, r4
 1001 000c 1B68     		ldr	r3, [r3]
 1002 000e 9847     		blx	r3
ARM GAS  /tmp/ccFxkDJm.s 			page 48


 1003              	.LVL84:
 1004              	.LBB997:
 1005              	.LBB998:
 1006              		.file 13 "../../src/list.h"
   1:../../src/list.h **** #pragma once
   2:../../src/list.h **** 
   3:../../src/list.h **** #include <algorithm>
   4:../../src/list.h **** 
   5:../../src/list.h **** 
   6:../../src/list.h **** template<class T> struct Listable
   7:../../src/list.h **** {
   8:../../src/list.h ****    T* prev {nullptr};
   9:../../src/list.h ****    T* next {nullptr};
  10:../../src/list.h **** };
  11:../../src/list.h **** 
  12:../../src/list.h **** template<class T> class List
  13:../../src/list.h **** {
  14:../../src/list.h ****    T* first {nullptr};
  15:../../src/list.h ****    T* last  {nullptr};
  16:../../src/list.h **** public:
  17:../../src/list.h ****    class Iterator
  18:../../src/list.h ****    {
  19:../../src/list.h ****       T* p {nullptr};
  20:../../src/list.h ****    public:
  21:../../src/list.h ****       using iterator_category = std::input_iterator_tag;
  22:../../src/list.h ****       using value_type        = T;
  23:../../src/list.h ****       using difference_type   = T;
  24:../../src/list.h ****       using pointer           = const T*;
  25:../../src/list.h ****       using reference         = T;
  26:../../src/list.h ****       Iterator (T*);
  27:../../src/list.h ****       Iterator() = default;
  28:../../src/list.h ****       operator T*() { return p; }
  29:../../src/list.h ****       T&        operator*  () const;
  30:../../src/list.h ****       T*        operator-> () const { return p; }
  31:../../src/list.h ****       bool      operator!= (const Iterator&) const;
  32:../../src/list.h ****       Iterator& operator++ ();
  33:../../src/list.h ****    };
  34:../../src/list.h **** 
  35:../../src/list.h ****    void clear_subscribe(){first = nullptr; last = nullptr;}
  36:../../src/list.h ****    void push_back  (T&);
  37:../../src/list.h ****    void push_front (T&);
  38:../../src/list.h ****    void remove     (T&);
  39:../../src/list.h ****    void insert  (Iterator, T&);
  40:../../src/list.h ****    void clear();
  41:../../src/list.h ****    Iterator begin();
  42:../../src/list.h ****    Iterator end();
  43:../../src/list.h **** };
  44:../../src/list.h **** 
  45:../../src/list.h **** 
  46:../../src/list.h **** 
  47:../../src/list.h **** 
  48:../../src/list.h **** 
  49:../../src/list.h **** 
  50:../../src/list.h **** template<class T>
  51:../../src/list.h **** void List<T>::push_back (T& v)
  52:../../src/list.h **** {
  53:../../src/list.h ****    v.prev = last;
ARM GAS  /tmp/ccFxkDJm.s 			page 49


  54:../../src/list.h ****    if (last)
  55:../../src/list.h ****       last->next = &v;
  56:../../src/list.h ****    last = &v;
  57:../../src/list.h ****    if (not first)
  58:../../src/list.h ****       first = &v;
  59:../../src/list.h **** }
  60:../../src/list.h **** 
  61:../../src/list.h **** 
  62:../../src/list.h **** template<class T>
  63:../../src/list.h **** void List<T>::push_front (T& v)
  64:../../src/list.h **** {
  65:../../src/list.h ****    v.next = first;
  66:../../src/list.h ****    if (first)
  67:../../src/list.h ****       first->prev = &v;
  68:../../src/list.h ****    first = &v;
  69:../../src/list.h ****    if (not last)
  70:../../src/list.h ****       last = &v;
  71:../../src/list.h **** }
  72:../../src/list.h **** 
  73:../../src/list.h **** 
  74:../../src/list.h **** template<class T>
  75:../../src/list.h **** void List<T>::remove (T& v)
  76:../../src/list.h **** {
  77:../../src/list.h ****    if (v.prev and v.next) {         // –µ—Å–ª–∏ –≤ —Å–µ—Ä–µ–¥–∏–Ω–∫–µ
  78:../../src/list.h ****       v.prev->next = v.next;
  79:../../src/list.h ****       v.next->prev = v.prev;
  80:../../src/list.h ****    } else if (v.next) {             // –µ—Å–ª–∏ –ø–µ—Ä–≤—ã–π
  81:../../src/list.h ****       first = v.next;
  82:../../src/list.h ****       first->prev = nullptr;
  83:../../src/list.h ****       if (not first) last = nullptr;
  84:../../src/list.h ****    } else if (v.prev) {             // –µ—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π
  85:../../src/list.h ****       last = v.prev;
  86:../../src/list.h ****       last->next = nullptr;
  87:../../src/list.h ****       if (not last) first = nullptr;
  88:../../src/list.h ****    } else {                         // –µ—Å–ª–∏ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π 
  89:../../src/list.h ****       first = nullptr;
  90:../../src/list.h ****       last  = nullptr;
  91:../../src/list.h ****    }
  92:../../src/list.h ****    v.prev = nullptr;
  93:../../src/list.h ****    v.next = nullptr;
  94:../../src/list.h **** 
  95:../../src/list.h **** }
  96:../../src/list.h **** 
  97:../../src/list.h **** 
  98:../../src/list.h **** 
  99:../../src/list.h **** template<class T>
 100:../../src/list.h **** void List<T>::insert (typename List<T>::Iterator it, T& v)
 101:../../src/list.h **** {
 102:../../src/list.h ****    if (it == begin()) {
 103:../../src/list.h ****       push_front (v);
 104:../../src/list.h ****    } else if (it == end()) {
 105:../../src/list.h ****       push_back (v);
 106:../../src/list.h ****    } else {
 107:../../src/list.h ****       v.prev = it->prev;
 108:../../src/list.h ****       v.next = it;
 109:../../src/list.h ****       it->prev = &v;
 110:../../src/list.h ****       v.prev->next = &v;
ARM GAS  /tmp/ccFxkDJm.s 			page 50


 111:../../src/list.h ****    }
 112:../../src/list.h **** }
 113:../../src/list.h **** 
 114:../../src/list.h **** template<class T>
 115:../../src/list.h **** void List<T>::clear()
 116:../../src/list.h **** {
 117:../../src/list.h ****    for (auto& v : *this) {
 118:../../src/list.h ****       v.prev = nullptr;
 119:../../src/list.h ****       v.next = nullptr;
 120:../../src/list.h ****    }
 121:../../src/list.h ****    first = nullptr;
 122:../../src/list.h ****    last  = nullptr;
 123:../../src/list.h **** }
 124:../../src/list.h **** 
 125:../../src/list.h **** 
 126:../../src/list.h **** template<class T>
 127:../../src/list.h **** typename List<T>::Iterator List<T>::begin()
 128:../../src/list.h **** {
 129:../../src/list.h ****    return List<T>::Iterator {first};
 130:../../src/list.h **** }
 131:../../src/list.h **** 
 132:../../src/list.h **** 
 133:../../src/list.h **** template<class T>
 134:../../src/list.h **** typename List<T>::Iterator List<T>::end()
 135:../../src/list.h **** {
 136:../../src/list.h ****    return List<T>::Iterator();
 137:../../src/list.h **** }
 138:../../src/list.h **** 
 139:../../src/list.h **** 
 140:../../src/list.h **** 
 141:../../src/list.h **** /// Iterator
 142:../../src/list.h **** template<class T>
 143:../../src/list.h **** List<T>::Iterator::Iterator (T* other) : p {other} {}
 144:../../src/list.h **** 
 145:../../src/list.h **** template<class T>
 146:../../src/list.h **** T& List<T>::Iterator::operator* () const 
 147:../../src/list.h **** {
 148:../../src/list.h ****    return *p;
 149:../../src/list.h **** }
 150:../../src/list.h **** 
 151:../../src/list.h **** template<class T>
 152:../../src/list.h **** bool List<T>::Iterator::operator!= (const List<T>::Iterator& other) const
 153:../../src/list.h **** {
 154:../../src/list.h ****    return p != other.p;
 155:../../src/list.h **** }
 156:../../src/list.h **** 
 157:../../src/list.h **** template<class T>
 158:../../src/list.h **** typename List<T>::Iterator& List<T>::Iterator::operator++ ()
 159:../../src/list.h **** {
 160:../../src/list.h ****    p = p->next;
 1007              		.loc 13 160 0
 1008 0010 A468     		ldr	r4, [r4, #8]
 1009              	.LVL85:
 1010 0012 F7E7     		b	.L57
 1011              	.LVL86:
 1012              	.L55:
 1013              	.LBE998:
ARM GAS  /tmp/ccFxkDJm.s 			page 51


 1014              	.LBE997:
 1015              	.LBE996:
  20:../../src/subscriber.h ****     }
 1016              		.loc 12 20 0
 1017              		@ sp needed
 1018              	.LVL87:
 1019 0014 10BD     		pop	{r4, pc}
 1020              		.cfi_endproc
 1021              	.LFE2495:
 1023              		.section	.text._ZN11TickUpdater9interruptEv,"ax",%progbits
 1024              		.align	1
 1025              		.global	_ZN11TickUpdater9interruptEv
 1026              		.syntax unified
 1027              		.code	16
 1028              		.thumb_func
 1029              		.fpu softvfp
 1031              	_ZN11TickUpdater9interruptEv:
 1032              	.LFB2529:
  82:../../src/timers.h **** };
  83:../../src/timers.h **** 
  84:../../src/timers.h **** 
  85:../../src/timers.h **** 
  86:../../src/timers.h **** 
  87:../../src/timers.h **** 
  88:../../src/timers.h **** 
  89:../../src/timers.h **** 
  90:../../src/timers.h **** 
  91:../../src/timers.h **** template<Faster multiplier> // how many subticks in tick
  92:../../src/timers.h **** void TickUpdater::subscribe_subtick (Subscriber& v)
  93:../../src/timers.h **** {
  94:../../src/timers.h ****     subtick.subscribe(v);
  95:../../src/timers.h ****     subtick_qty = multiplier;
  96:../../src/timers.h ****     REF(SysTick).initInterrupt<1000_us/multiplier>();
  97:../../src/timers.h **** }
  98:../../src/timers.h **** 
  99:../../src/timers.h **** 
 100:../../src/timers.h **** 
 101:../../src/timers.h **** template<class Function>
 102:../../src/timers.h **** inline void every_qty_cnt_call(size_t& cnt, size_t qty, Function call)
 103:../../src/timers.h **** {
 104:../../src/timers.h ****     if (not(cnt++ % qty))
 105:../../src/timers.h ****         call();
 106:../../src/timers.h **** }
 107:../../src/timers.h **** 
 108:../../src/timers.h **** 
 109:../../src/timers.h **** 
 110:../../src/timers.h **** void TickUpdater::interrupt()
 111:../../src/timers.h **** {
 1033              		.loc 1 111 0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 0
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037              	.LVL88:
 1038 0000 10B5     		push	{r4, lr}
 1039              	.LCFI8:
 1040              		.cfi_def_cfa_offset 8
 1041              		.cfi_offset 4, -8
ARM GAS  /tmp/ccFxkDJm.s 			page 52


 1042              		.cfi_offset 14, -4
 1043              		.loc 1 111 0
 1044 0002 0400     		movs	r4, r0
 112:../../src/timers.h ****     subtick.notify();
 1045              		.loc 1 112 0
 1046 0004 0830     		adds	r0, r0, #8
 1047              	.LVL89:
 1048 0006 FFF7FEFF 		bl	_ZN9Publisher6notifyEv
 1049              	.LVL90:
 1050              	.LBB1003:
 1051              	.LBB1004:
 104:../../src/timers.h ****         call();
 1052              		.loc 1 104 0
 1053 000a 2069     		ldr	r0, [r4, #16]
 1054 000c 6169     		ldr	r1, [r4, #20]
 1055 000e 431C     		adds	r3, r0, #1
 1056 0010 2361     		str	r3, [r4, #16]
 1057 0012 FFF7FEFF 		bl	__aeabi_uidivmod
 1058              	.LVL91:
 1059 0016 0029     		cmp	r1, #0
 1060 0018 02D1     		bne	.L58
 1061              	.LVL92:
 1062              	.LBB1005:
 1063              	.LBB1006:
 113:../../src/timers.h ****     every_qty_cnt_call (subtick_cnt, subtick_qty, [this]{
 114:../../src/timers.h ****         notify();
 1064              		.loc 1 114 0
 1065 001a 2000     		movs	r0, r4
 1066 001c FFF7FEFF 		bl	_ZN9Publisher6notifyEv
 1067              	.LVL93:
 1068              	.L58:
 1069              	.LBE1006:
 1070              	.LBE1005:
 1071              	.LBE1004:
 1072              	.LBE1003:
 115:../../src/timers.h ****     });
 116:../../src/timers.h **** }
 1073              		.loc 1 116 0
 1074              		@ sp needed
 1075              	.LVL94:
 1076 0020 10BD     		pop	{r4, pc}
 1077              		.cfi_endproc
 1078              	.LFE2529:
 1080              		.section	.text.SysTick_Handler,"ax",%progbits
 1081              		.align	1
 1082              		.global	SysTick_Handler
 1083              		.syntax unified
 1084              		.code	16
 1085              		.thumb_func
 1086              		.fpu softvfp
 1088              	SysTick_Handler:
 1089              	.LFB2510:
  38:../../src/timers.h ****     tickUpdater.interrupt();
 1090              		.loc 1 38 0
 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 0
 1093              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccFxkDJm.s 			page 53


 1094 0000 10B5     		push	{r4, lr}
 1095              	.LCFI9:
 1096              		.cfi_def_cfa_offset 8
 1097              		.cfi_offset 4, -8
 1098              		.cfi_offset 14, -4
  39:../../src/timers.h **** }
 1099              		.loc 1 39 0
 1100 0002 0248     		ldr	r0, .L61
 1101 0004 FFF7FEFF 		bl	_ZN11TickUpdater9interruptEv
 1102              	.LVL95:
  40:../../src/timers.h **** 
 1103              		.loc 1 40 0
 1104              		@ sp needed
 1105 0008 10BD     		pop	{r4, pc}
 1106              	.L62:
 1107 000a C046     		.align	2
 1108              	.L61:
 1109 000c 00000000 		.word	.LANCHOR0
 1110              		.cfi_endproc
 1111              	.LFE2510:
 1113              		.section	.text._ZN5Timer5eventEv,"ax",%progbits
 1114              		.align	1
 1115              		.global	_ZN5Timer5eventEv
 1116              		.syntax unified
 1117              		.code	16
 1118              		.thumb_func
 1119              		.fpu softvfp
 1121              	_ZN5Timer5eventEv:
 1122              	.LFB2532:
 117:../../src/timers.h **** 
 118:../../src/timers.h **** 
 119:../../src/timers.h **** 
 120:../../src/timers.h **** void Timer::start (uint32_t ms)
 121:../../src/timers.h **** {
 122:../../src/timers.h ****     timeSet = ms;
 123:../../src/timers.h ****     tick_subscribe();
 124:../../src/timers.h **** }
 125:../../src/timers.h **** 
 126:../../src/timers.h **** 
 127:../../src/timers.h **** 
 128:../../src/timers.h **** bool Timer::event()
 129:../../src/timers.h **** {
 1123              		.loc 1 129 0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 0
 1126              		@ frame_needed = 0, uses_anonymous_args = 0
 1127              		@ link register save eliminated.
 1128              	.LVL96:
 130:../../src/timers.h ****     if (timePassed_ >= timeSet) {
 1129              		.loc 1 130 0
 1130 0000 4169     		ldr	r1, [r0, #20]
 1131 0002 0269     		ldr	r2, [r0, #16]
 1132 0004 0023     		movs	r3, #0
 1133 0006 9142     		cmp	r1, r2
 1134 0008 01D3     		bcc	.L64
 131:../../src/timers.h ****         timePassed_ = 0;
 1135              		.loc 1 131 0
ARM GAS  /tmp/ccFxkDJm.s 			page 54


 1136 000a 4361     		str	r3, [r0, #20]
 132:../../src/timers.h ****         return (true);
 1137              		.loc 1 132 0
 1138 000c 0133     		adds	r3, r3, #1
 1139              	.L64:
 133:../../src/timers.h ****     } else {
 134:../../src/timers.h ****         return (false);
 135:../../src/timers.h ****     }
 136:../../src/timers.h **** }
 1140              		.loc 1 136 0
 1141 000e 1800     		movs	r0, r3
 1142              	.LVL97:
 1143              		@ sp needed
 1144 0010 7047     		bx	lr
 1145              		.cfi_endproc
 1146              	.LFE2532:
 1148              		.section	.text._ZN5Timer4doneEv,"ax",%progbits
 1149              		.align	1
 1150              		.global	_ZN5Timer4doneEv
 1151              		.syntax unified
 1152              		.code	16
 1153              		.thumb_func
 1154              		.fpu softvfp
 1156              	_ZN5Timer4doneEv:
 1157              	.LFB2535:
 137:../../src/timers.h **** 
 138:../../src/timers.h **** 
 139:../../src/timers.h **** 
 140:../../src/timers.h **** template<class Functor>
 141:../../src/timers.h **** void Timer::event (Functor functor)
 142:../../src/timers.h **** {
 143:../../src/timers.h ****     if (timePassed_ >= timeSet) {
 144:../../src/timers.h ****         timePassed_ = 0;
 145:../../src/timers.h ****         functor();
 146:../../src/timers.h ****     }
 147:../../src/timers.h **** }
 148:../../src/timers.h **** 
 149:../../src/timers.h **** 
 150:../../src/timers.h **** 
 151:../../src/timers.h **** void Timer::stop()
 152:../../src/timers.h **** {
 153:../../src/timers.h ****     timePassed_ = 0;
 154:../../src/timers.h ****     tick_unsubscribe();
 155:../../src/timers.h **** }
 156:../../src/timers.h **** 
 157:../../src/timers.h **** 
 158:../../src/timers.h **** 
 159:../../src/timers.h **** bool     Timer::done()       { return timePassed_ >= timeSet; }
 1158              		.loc 1 159 0
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 0
 1161              		@ frame_needed = 0, uses_anonymous_args = 0
 1162              		@ link register save eliminated.
 1163              	.LVL98:
 1164              		.loc 1 159 0
 1165 0000 4269     		ldr	r2, [r0, #20]
 1166 0002 0369     		ldr	r3, [r0, #16]
ARM GAS  /tmp/ccFxkDJm.s 			page 55


 1167 0004 0020     		movs	r0, #0
 1168              	.LVL99:
 1169 0006 9A42     		cmp	r2, r3
 1170 0008 4041     		adcs	r0, r0, r0
 1171              		@ sp needed
 1172 000a C0B2     		uxtb	r0, r0
 1173 000c 7047     		bx	lr
 1174              		.cfi_endproc
 1175              	.LFE2535:
 1177              		.section	.text._ZN5Timer7isCountEv,"ax",%progbits
 1178              		.align	1
 1179              		.global	_ZN5Timer7isCountEv
 1180              		.syntax unified
 1181              		.code	16
 1182              		.thumb_func
 1183              		.fpu softvfp
 1185              	_ZN5Timer7isCountEv:
 1186              	.LFB2538:
 160:../../src/timers.h **** void     Timer::pause()      { tick_unsubscribe(); }
 161:../../src/timers.h **** void     Timer::start()      { tick_subscribe();  }
 162:../../src/timers.h **** bool     Timer::isCount()    { return subscribed; }
 1187              		.loc 1 162 0
 1188              		.cfi_startproc
 1189              		@ args = 0, pretend = 0, frame = 0
 1190              		@ frame_needed = 0, uses_anonymous_args = 0
 1191              		@ link register save eliminated.
 1192              	.LVL100:
 1193              		.loc 1 162 0
 1194 0000 007B     		ldrb	r0, [r0, #12]
 1195              	.LVL101:
 1196              		@ sp needed
 1197 0002 7047     		bx	lr
 1198              		.cfi_endproc
 1199              	.LFE2538:
 1201              		.section	.text._ZN5Timer10timePassedEv,"ax",%progbits
 1202              		.align	1
 1203              		.global	_ZN5Timer10timePassedEv
 1204              		.syntax unified
 1205              		.code	16
 1206              		.thumb_func
 1207              		.fpu softvfp
 1209              	_ZN5Timer10timePassedEv:
 1210              	.LFB2539:
 163:../../src/timers.h **** uint32_t Timer::timePassed() { return timePassed_; }
 1211              		.loc 1 163 0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 0, uses_anonymous_args = 0
 1215              		@ link register save eliminated.
 1216              	.LVL102:
 1217              		.loc 1 163 0
 1218 0000 4069     		ldr	r0, [r0, #20]
 1219              	.LVL103:
 1220              		@ sp needed
 1221 0002 7047     		bx	lr
 1222              		.cfi_endproc
 1223              	.LFE2539:
ARM GAS  /tmp/ccFxkDJm.s 			page 56


 1225              		.section	.text._ZN5Timer8timeLeftEv,"ax",%progbits
 1226              		.align	1
 1227              		.global	_ZN5Timer8timeLeftEv
 1228              		.syntax unified
 1229              		.code	16
 1230              		.thumb_func
 1231              		.fpu softvfp
 1233              	_ZN5Timer8timeLeftEv:
 1234              	.LFB2540:
 164:../../src/timers.h **** uint32_t Timer::timeLeft(  ) { return timeSet - timePassed_; }
 1235              		.loc 1 164 0
 1236              		.cfi_startproc
 1237              		@ args = 0, pretend = 0, frame = 0
 1238              		@ frame_needed = 0, uses_anonymous_args = 0
 1239              		@ link register save eliminated.
 1240              	.LVL104:
 1241              		.loc 1 164 0
 1242 0000 0369     		ldr	r3, [r0, #16]
 1243 0002 4069     		ldr	r0, [r0, #20]
 1244              	.LVL105:
 1245              		@ sp needed
 1246 0004 181A     		subs	r0, r3, r0
 1247 0006 7047     		bx	lr
 1248              		.cfi_endproc
 1249              	.LFE2540:
 1251              		.section	.text._ZN5Timer9isGreaterEm,"ax",%progbits
 1252              		.align	1
 1253              		.global	_ZN5Timer9isGreaterEm
 1254              		.syntax unified
 1255              		.code	16
 1256              		.thumb_func
 1257              		.fpu softvfp
 1259              	_ZN5Timer9isGreaterEm:
 1260              	.LFB2541:
 165:../../src/timers.h **** bool     Timer::isGreater (uint32_t val) { return timePassed_ > val; }
 1261              		.loc 1 165 0
 1262              		.cfi_startproc
 1263              		@ args = 0, pretend = 0, frame = 0
 1264              		@ frame_needed = 0, uses_anonymous_args = 0
 1265              		@ link register save eliminated.
 1266              	.LVL106:
 1267              		.loc 1 165 0
 1268 0000 4069     		ldr	r0, [r0, #20]
 1269              	.LVL107:
 1270              		@ sp needed
 1271 0002 8142     		cmp	r1, r0
 1272 0004 8041     		sbcs	r0, r0, r0
 1273 0006 4042     		rsbs	r0, r0, #0
 1274 0008 7047     		bx	lr
 1275              		.cfi_endproc
 1276              	.LFE2541:
 1278              		.section	.text._ZN14TickSubscriber16tick_unsubscribeEv,"ax",%progbits
 1279              		.align	1
 1280              		.global	_ZN14TickSubscriber16tick_unsubscribeEv
 1281              		.syntax unified
 1282              		.code	16
 1283              		.thumb_func
ARM GAS  /tmp/ccFxkDJm.s 			page 57


 1284              		.fpu softvfp
 1286              	_ZN14TickSubscriber16tick_unsubscribeEv:
 1287              	.LFB2542:
 166:../../src/timers.h **** 
 167:../../src/timers.h **** 
 168:../../src/timers.h **** 
 169:../../src/timers.h **** void TickSubscriber::tick_unsubscribe()
 170:../../src/timers.h **** {
 1288              		.loc 1 170 0
 1289              		.cfi_startproc
 1290              		@ args = 0, pretend = 0, frame = 0
 1291              		@ frame_needed = 0, uses_anonymous_args = 0
 1292              		@ link register save eliminated.
 1293              	.LVL108:
 171:../../src/timers.h ****     if (subscribed) {
 1294              		.loc 1 171 0
 1295 0000 037B     		ldrb	r3, [r0, #12]
 1296 0002 002B     		cmp	r3, #0
 1297 0004 0DD0     		beq	.L71
 1298              	.LVL109:
 1299              	.LBB1013:
 1300              	.LBB1014:
 172:../../src/timers.h ****         subscribed = false;
 1301              		.loc 1 172 0
 1302 0006 0023     		movs	r3, #0
 1303              	.LBB1015:
 1304              	.LBB1016:
 1305              	.LBB1017:
  77:../../src/list.h ****       v.prev->next = v.next;
 1306              		.loc 13 77 0
 1307 0008 4268     		ldr	r2, [r0, #4]
 1308              	.LBE1017:
 1309              	.LBE1016:
 1310              	.LBE1015:
 1311              		.loc 1 172 0
 1312 000a 0373     		strb	r3, [r0, #12]
 1313              	.LVL110:
 1314 000c 8368     		ldr	r3, [r0, #8]
 1315              	.LBB1022:
 1316              	.LBB1020:
 1317              	.LBB1018:
  77:../../src/list.h ****       v.prev->next = v.next;
 1318              		.loc 13 77 0
 1319 000e 002A     		cmp	r2, #0
 1320 0010 0ED0     		beq	.L73
 1321 0012 002B     		cmp	r3, #0
 1322 0014 08D0     		beq	.L74
  78:../../src/list.h ****       v.next->prev = v.prev;
 1323              		.loc 13 78 0
 1324 0016 9360     		str	r3, [r2, #8]
  79:../../src/list.h ****    } else if (v.next) {             // –µ—Å–ª–∏ –ø–µ—Ä–≤—ã–π
 1325              		.loc 13 79 0
 1326 0018 8368     		ldr	r3, [r0, #8]
 1327              	.L82:
  82:../../src/list.h ****       if (not first) last = nullptr;
 1328              		.loc 13 82 0
 1329 001a 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccFxkDJm.s 			page 58


 1330              	.L75:
  92:../../src/list.h ****    v.next = nullptr;
 1331              		.loc 13 92 0
 1332 001c 0023     		movs	r3, #0
 1333 001e 4360     		str	r3, [r0, #4]
  93:../../src/list.h **** 
 1334              		.loc 13 93 0
 1335 0020 8360     		str	r3, [r0, #8]
 1336              	.LVL111:
 1337              	.L71:
 1338              	.LBE1018:
 1339              	.LBE1020:
 1340              	.LBE1022:
 1341              	.LBE1014:
 1342              	.LBE1013:
 173:../../src/timers.h ****         tickUpdater.unsubscribe (*this);
 174:../../src/timers.h ****     }
 175:../../src/timers.h **** }
 1343              		.loc 1 175 0
 1344              		@ sp needed
 1345 0022 7047     		bx	lr
 1346              	.LVL112:
 1347              	.L76:
 1348              	.LBB1025:
 1349              	.LBB1024:
 1350              	.LBB1023:
 1351              	.LBB1021:
 1352              	.LBB1019:
  81:../../src/list.h ****       first->prev = nullptr;
 1353              		.loc 13 81 0
 1354 0024 0B60     		str	r3, [r1]
 1355 0026 F8E7     		b	.L82
 1356              	.L74:
  85:../../src/list.h ****       last->next = nullptr;
 1357              		.loc 13 85 0
 1358 0028 0449     		ldr	r1, .L83
  86:../../src/list.h ****       if (not last) first = nullptr;
 1359              		.loc 13 86 0
 1360 002a 9360     		str	r3, [r2, #8]
  85:../../src/list.h ****       last->next = nullptr;
 1361              		.loc 13 85 0
 1362 002c 4A60     		str	r2, [r1, #4]
 1363 002e F5E7     		b	.L75
 1364              	.L73:
 1365 0030 0249     		ldr	r1, .L83
  80:../../src/list.h ****       first = v.next;
 1366              		.loc 13 80 0
 1367 0032 002B     		cmp	r3, #0
 1368 0034 F6D1     		bne	.L76
  89:../../src/list.h ****       last  = nullptr;
 1369              		.loc 13 89 0
 1370 0036 0B60     		str	r3, [r1]
  90:../../src/list.h ****    }
 1371              		.loc 13 90 0
 1372 0038 4B60     		str	r3, [r1, #4]
 1373 003a EFE7     		b	.L75
 1374              	.L84:
ARM GAS  /tmp/ccFxkDJm.s 			page 59


 1375              		.align	2
 1376              	.L83:
 1377 003c 00000000 		.word	.LANCHOR0
 1378              	.LBE1019:
 1379              	.LBE1021:
 1380              	.LBE1023:
 1381              	.LBE1024:
 1382              	.LBE1025:
 1383              		.cfi_endproc
 1384              	.LFE2542:
 1386              		.section	.text._ZN3mcu6Button6notifyEv,"axG",%progbits,_ZN3mcu6Button6notifyEv,comdat
 1387              		.align	1
 1388              		.weak	_ZN3mcu6Button6notifyEv
 1389              		.syntax unified
 1390              		.code	16
 1391              		.thumb_func
 1392              		.fpu softvfp
 1394              	_ZN3mcu6Button6notifyEv:
 1395              	.LFB2600:
 1396              		.file 14 "../../src/buttons.h"
   1:../../src/buttons.h **** #pragma once
   2:../../src/buttons.h **** 
   3:../../src/buttons.h **** #include "timers.h"
   4:../../src/buttons.h **** #include "literals.h"
   5:../../src/buttons.h **** #if not defined (TEST)
   6:../../src/buttons.h ****    #include "pin.h"
   7:../../src/buttons.h **** #endif
   8:../../src/buttons.h **** #include <tuple>
   9:../../src/buttons.h **** #include <algorithm>
  10:../../src/buttons.h **** 
  11:../../src/buttons.h **** namespace mcu {
  12:../../src/buttons.h **** 
  13:../../src/buttons.h **** class Button : TickSubscriber
  14:../../src/buttons.h **** {
  15:../../src/buttons.h ****    Pin& pin;
  16:../../src/buttons.h **** 
  17:../../src/buttons.h ****    int time {0};
  18:../../src/buttons.h ****    bool short_press {false};
  19:../../src/buttons.h ****    bool long_press {false};
  20:../../src/buttons.h ****    bool increment  {false};
  21:../../src/buttons.h ****    bool inverted   {false};
  22:../../src/buttons.h ****    bool click_     {false};
  23:../../src/buttons.h ****    int  inc {1};
  24:../../src/buttons.h ****    int  value{0};
  25:../../src/buttons.h ****    int  tmp{0};
  26:../../src/buttons.h **** 
  27:../../src/buttons.h ****    Button (Pin& pin, bool inverted) : pin {pin}, inverted {inverted} {}
  28:../../src/buttons.h **** 
  29:../../src/buttons.h **** public:
  30:../../src/buttons.h **** 
  31:../../src/buttons.h ****    template<class Pin_, bool inverted = false> 
  32:../../src/buttons.h ****    static auto& make()
  33:../../src/buttons.h ****    {
  34:../../src/buttons.h ****       static auto button = Button {Pin::template make<Pin_, PinMode::Input>(), inverted};
  35:../../src/buttons.h ****       return button;
  36:../../src/buttons.h ****    }
  37:../../src/buttons.h **** 
ARM GAS  /tmp/ccFxkDJm.s 			page 60


  38:../../src/buttons.h ****    bool push()
  39:../../src/buttons.h ****    {
  40:../../src/buttons.h ****       if (inverted) {
  41:../../src/buttons.h ****          if (not pin) 
  42:../../src/buttons.h ****             tick_subscribe();
  43:../../src/buttons.h ****       } else {
  44:../../src/buttons.h ****          if (pin)
  45:../../src/buttons.h ****             tick_subscribe();
  46:../../src/buttons.h ****       }
  47:../../src/buttons.h **** 
  48:../../src/buttons.h ****       return time >= 10 and not short_press ? (short_press = true) : false;
  49:../../src/buttons.h ****    }
  50:../../src/buttons.h **** 
  51:../../src/buttons.h ****    bool push_long()
  52:../../src/buttons.h ****    {
  53:../../src/buttons.h ****       if (inverted) {
  54:../../src/buttons.h ****          if (not pin) 
  55:../../src/buttons.h ****             tick_subscribe();
  56:../../src/buttons.h ****       } else {
  57:../../src/buttons.h ****          if (pin)
  58:../../src/buttons.h ****             tick_subscribe();
  59:../../src/buttons.h ****       }
  60:../../src/buttons.h **** 
  61:../../src/buttons.h ****       return time >= 1000 and not long_press ? (long_press = true) : false;
  62:../../src/buttons.h ****    }
  63:../../src/buttons.h **** 
  64:../../src/buttons.h ****    // bool click()
  65:../../src/buttons.h ****    // {
  66:../../src/buttons.h ****    //    if (inverted) {
  67:../../src/buttons.h ****    //       if (not pin) 
  68:../../src/buttons.h ****    //          tick_subscribe();
  69:../../src/buttons.h ****    //    } else {
  70:../../src/buttons.h ****    //       if (pin)
  71:../../src/buttons.h ****    //          tick_subscribe();
  72:../../src/buttons.h ****    //    }
  73:../../src/buttons.h ****    //    if (time > 10 and time < 1000)
  74:../../src/buttons.h ****    //       click_ = true;
  75:../../src/buttons.h ****    //    return not pin and click_ ? (not (click_ = false)) : false;
  76:../../src/buttons.h ****    // }
  77:../../src/buttons.h **** 
  78:../../src/buttons.h ****    operator int()
  79:../../src/buttons.h ****    {
  80:../../src/buttons.h ****       if (increment) {
  81:../../src/buttons.h ****          if (time <= 2000)
  82:../../src/buttons.h ****             value = (time >= tmp + 200) ? tmp = time, inc : 0;
  83:../../src/buttons.h ****          else if (time < 3000)
  84:../../src/buttons.h ****             value = (time >= tmp + 100) ? tmp = time, inc : 0;
  85:../../src/buttons.h ****          else if (time < 4000)
  86:../../src/buttons.h ****             value = (time >= tmp + 50 ) ? tmp = time, inc : 0;
  87:../../src/buttons.h ****          else if (time < 5000)
  88:../../src/buttons.h ****             value = (time >= tmp + 25 ) ? tmp = time, inc : 0;
  89:../../src/buttons.h ****          else if (time >= 5000) {
  90:../../src/buttons.h ****             value = (time >= tmp + 25 ) ? tmp = time, inc : 0;
  91:../../src/buttons.h ****             inc += (time % 1000) == 0;
  92:../../src/buttons.h ****          }
  93:../../src/buttons.h ****          
  94:../../src/buttons.h ****       } else if (push()) 
ARM GAS  /tmp/ccFxkDJm.s 			page 61


  95:../../src/buttons.h ****          value = 1;
  96:../../src/buttons.h ****        else if (push_long()) {
  97:../../src/buttons.h ****          increment = true;
  98:../../src/buttons.h ****          tmp = time;
  99:../../src/buttons.h ****          value = 1;
 100:../../src/buttons.h ****       } else 
 101:../../src/buttons.h ****          value = 0;
 102:../../src/buttons.h **** 
 103:../../src/buttons.h ****       return value;
 104:../../src/buttons.h ****    }
 105:../../src/buttons.h **** 
 106:../../src/buttons.h ****    void notify () override
 1397              		.loc 14 106 0
 1398              		.cfi_startproc
 1399              		@ args = 0, pretend = 0, frame = 0
 1400              		@ frame_needed = 0, uses_anonymous_args = 0
 1401              	.LVL113:
 1402 0000 70B5     		push	{r4, r5, r6, lr}
 1403              	.LCFI10:
 1404              		.cfi_def_cfa_offset 16
 1405              		.cfi_offset 4, -16
 1406              		.cfi_offset 5, -12
 1407              		.cfi_offset 6, -8
 1408              		.cfi_offset 14, -4
 1409              		.loc 14 106 0
 1410 0002 0400     		movs	r4, r0
 107:../../src/buttons.h ****    {
 108:../../src/buttons.h ****       if (inverted) {
 1411              		.loc 14 108 0
 1412 0004 E37E     		ldrb	r3, [r4, #27]
 1413 0006 0069     		ldr	r0, [r0, #16]
 1414              	.LVL114:
 1415 0008 002B     		cmp	r3, #0
 1416 000a 0ED0     		beq	.L86
 1417              	.LVL115:
 1418              	.LBB1036:
 1419              	.LBB1037:
  34:../../src/pin.h ****    bool operator^= (bool v) 
  35:../../src/pin.h ****    {
  36:../../src/pin.h ****       auto tmp {is_set()};
  37:../../src/pin.h ****       if (v) toggle();
  38:../../src/pin.h ****       return tmp ^ v;
  39:../../src/pin.h ****    }
  40:../../src/pin.h ****    operator bool() { return is_set(); }
 1420              		.loc 9 40 0
 1421 000c FFF7FEFF 		bl	_ZN3Pin6is_setEv
 1422              	.LVL116:
 1423              	.LBE1037:
 1424              	.LBE1036:
 109:../../src/buttons.h ****          if (pin) {
 1425              		.loc 14 109 0
 1426 0010 0028     		cmp	r0, #0
 1427 0012 17D0     		beq	.L89
 110:../../src/buttons.h ****             tick_unsubscribe();
 1428              		.loc 14 110 0
 1429 0014 2000     		movs	r0, r4
 1430 0016 FFF7FEFF 		bl	_ZN14TickSubscriber16tick_unsubscribeEv
ARM GAS  /tmp/ccFxkDJm.s 			page 62


 1431              	.LVL117:
 111:../../src/buttons.h ****             time = 0;
 1432              		.loc 14 111 0
 1433 001a 0023     		movs	r3, #0
 1434 001c 6361     		str	r3, [r4, #20]
 112:../../src/buttons.h ****             short_press = false;
 1435              		.loc 14 112 0
 1436 001e 2376     		strb	r3, [r4, #24]
 113:../../src/buttons.h ****             long_press = false;
 1437              		.loc 14 113 0
 1438 0020 6376     		strb	r3, [r4, #25]
 114:../../src/buttons.h ****             increment  = false;
 1439              		.loc 14 114 0
 1440 0022 A376     		strb	r3, [r4, #26]
 1441              	.L90:
 1442              	.LBB1038:
 1443              	.LBB1039:
 115:../../src/buttons.h ****             inc        = 1;
 116:../../src/buttons.h ****          } else 
 117:../../src/buttons.h ****             time++;
 118:../../src/buttons.h ****       } else {
 119:../../src/buttons.h ****          if (not pin) {
 120:../../src/buttons.h ****             tick_unsubscribe();
 121:../../src/buttons.h ****             time = 0;
 122:../../src/buttons.h ****             short_press = false;
 123:../../src/buttons.h ****             long_press = false;
 124:../../src/buttons.h ****             increment  = false;
 125:../../src/buttons.h ****             click_     = false;
 126:../../src/buttons.h ****             inc        = 1;
 1444              		.loc 14 126 0
 1445 0024 0123     		movs	r3, #1
 1446 0026 2362     		str	r3, [r4, #32]
 1447              	.L85:
 1448              	.LBE1039:
 1449              	.LBE1038:
 127:../../src/buttons.h ****          } else 
 128:../../src/buttons.h ****             time++;
 129:../../src/buttons.h ****       }
 130:../../src/buttons.h ****    }
 1450              		.loc 14 130 0
 1451              		@ sp needed
 1452              	.LVL118:
 1453 0028 70BD     		pop	{r4, r5, r6, pc}
 1454              	.LVL119:
 1455              	.L86:
 1456              	.LBB1041:
 1457              	.LBB1042:
 1458              		.loc 9 40 0
 1459 002a FFF7FEFF 		bl	_ZN3Pin6is_setEv
 1460              	.LVL120:
 1461 002e 051E     		subs	r5, r0, #0
 1462              	.LBE1042:
 1463              	.LBE1041:
 119:../../src/buttons.h ****             tick_unsubscribe();
 1464              		.loc 14 119 0
 1465 0030 08D1     		bne	.L89
 1466              	.LVL121:
ARM GAS  /tmp/ccFxkDJm.s 			page 63


 1467              	.LBB1043:
 1468              	.LBB1040:
 120:../../src/buttons.h ****             time = 0;
 1469              		.loc 14 120 0
 1470 0032 2000     		movs	r0, r4
 1471 0034 FFF7FEFF 		bl	_ZN14TickSubscriber16tick_unsubscribeEv
 1472              	.LVL122:
 121:../../src/buttons.h ****             short_press = false;
 1473              		.loc 14 121 0
 1474 0038 6561     		str	r5, [r4, #20]
 122:../../src/buttons.h ****             long_press = false;
 1475              		.loc 14 122 0
 1476 003a 2576     		strb	r5, [r4, #24]
 123:../../src/buttons.h ****             increment  = false;
 1477              		.loc 14 123 0
 1478 003c 6576     		strb	r5, [r4, #25]
 124:../../src/buttons.h ****             click_     = false;
 1479              		.loc 14 124 0
 1480 003e A576     		strb	r5, [r4, #26]
 125:../../src/buttons.h ****             inc        = 1;
 1481              		.loc 14 125 0
 1482 0040 2577     		strb	r5, [r4, #28]
 1483 0042 EFE7     		b	.L90
 1484              	.LVL123:
 1485              	.L89:
 1486              	.LBE1040:
 1487              	.LBE1043:
 128:../../src/buttons.h ****       }
 1488              		.loc 14 128 0
 1489 0044 6369     		ldr	r3, [r4, #20]
 1490 0046 0133     		adds	r3, r3, #1
 1491 0048 6361     		str	r3, [r4, #20]
 1492              		.loc 14 130 0
 1493 004a EDE7     		b	.L85
 1494              		.cfi_endproc
 1495              	.LFE2600:
 1497              		.section	.text._ZN5Timer4stopEv,"ax",%progbits
 1498              		.align	1
 1499              		.global	_ZN5Timer4stopEv
 1500              		.syntax unified
 1501              		.code	16
 1502              		.thumb_func
 1503              		.fpu softvfp
 1505              	_ZN5Timer4stopEv:
 1506              	.LFB2534:
 152:../../src/timers.h ****     timePassed_ = 0;
 1507              		.loc 1 152 0
 1508              		.cfi_startproc
 1509              		@ args = 0, pretend = 0, frame = 0
 1510              		@ frame_needed = 0, uses_anonymous_args = 0
 1511              	.LVL124:
 153:../../src/timers.h ****     tick_unsubscribe();
 1512              		.loc 1 153 0
 1513 0000 0023     		movs	r3, #0
 152:../../src/timers.h ****     timePassed_ = 0;
 1514              		.loc 1 152 0
 1515 0002 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccFxkDJm.s 			page 64


 1516              	.LCFI11:
 1517              		.cfi_def_cfa_offset 8
 1518              		.cfi_offset 4, -8
 1519              		.cfi_offset 14, -4
 153:../../src/timers.h ****     tick_unsubscribe();
 1520              		.loc 1 153 0
 1521 0004 4361     		str	r3, [r0, #20]
 154:../../src/timers.h **** }
 1522              		.loc 1 154 0
 1523 0006 FFF7FEFF 		bl	_ZN14TickSubscriber16tick_unsubscribeEv
 1524              	.LVL125:
 155:../../src/timers.h **** 
 1525              		.loc 1 155 0
 1526              		@ sp needed
 1527 000a 10BD     		pop	{r4, pc}
 1528              		.cfi_endproc
 1529              	.LFE2534:
 1531              		.section	.text._ZN5Timer5pauseEv,"ax",%progbits
 1532              		.align	1
 1533              		.global	_ZN5Timer5pauseEv
 1534              		.syntax unified
 1535              		.code	16
 1536              		.thumb_func
 1537              		.fpu softvfp
 1539              	_ZN5Timer5pauseEv:
 1540              	.LFB2536:
 160:../../src/timers.h **** void     Timer::start()      { tick_subscribe();  }
 1541              		.loc 1 160 0
 1542              		.cfi_startproc
 1543              		@ args = 0, pretend = 0, frame = 0
 1544              		@ frame_needed = 0, uses_anonymous_args = 0
 1545              	.LVL126:
 1546 0000 10B5     		push	{r4, lr}
 1547              	.LCFI12:
 1548              		.cfi_def_cfa_offset 8
 1549              		.cfi_offset 4, -8
 1550              		.cfi_offset 14, -4
 160:../../src/timers.h **** void     Timer::start()      { tick_subscribe();  }
 1551              		.loc 1 160 0
 1552 0002 FFF7FEFF 		bl	_ZN14TickSubscriber16tick_unsubscribeEv
 1553              	.LVL127:
 1554              		@ sp needed
 1555 0006 10BD     		pop	{r4, pc}
 1556              		.cfi_endproc
 1557              	.LFE2536:
 1559              		.section	.text._ZN14TickSubscriber14tick_subscribeEv,"ax",%progbits
 1560              		.align	1
 1561              		.global	_ZN14TickSubscriber14tick_subscribeEv
 1562              		.syntax unified
 1563              		.code	16
 1564              		.thumb_func
 1565              		.fpu softvfp
 1567              	_ZN14TickSubscriber14tick_subscribeEv:
 1568              	.LFB2543:
 176:../../src/timers.h **** 
 177:../../src/timers.h **** 
 178:../../src/timers.h **** 
ARM GAS  /tmp/ccFxkDJm.s 			page 65


 179:../../src/timers.h **** void TickSubscriber::tick_subscribe()
 180:../../src/timers.h **** {
 1569              		.loc 1 180 0
 1570              		.cfi_startproc
 1571              		@ args = 0, pretend = 0, frame = 0
 1572              		@ frame_needed = 0, uses_anonymous_args = 0
 1573              		@ link register save eliminated.
 1574              	.LVL128:
 181:../../src/timers.h ****     if (not subscribed) {
 1575              		.loc 1 181 0
 1576 0000 037B     		ldrb	r3, [r0, #12]
 1577 0002 002B     		cmp	r3, #0
 1578 0004 0CD1     		bne	.L93
 1579              	.LVL129:
 1580              	.LBB1050:
 1581              	.LBB1051:
 182:../../src/timers.h ****         subscribed = true;
 1582              		.loc 1 182 0
 1583 0006 0133     		adds	r3, r3, #1
 1584 0008 0373     		strb	r3, [r0, #12]
 1585              	.LVL130:
 1586              	.LBB1052:
 1587              	.LBB1053:
 1588              	.LBB1054:
  53:../../src/list.h ****    if (last)
 1589              		.loc 13 53 0
 1590 000a 064B     		ldr	r3, .L101
 1591 000c 5A68     		ldr	r2, [r3, #4]
 1592 000e 4260     		str	r2, [r0, #4]
  54:../../src/list.h ****       last->next = &v;
 1593              		.loc 13 54 0
 1594 0010 002A     		cmp	r2, #0
 1595 0012 00D0     		beq	.L96
  55:../../src/list.h ****    last = &v;
 1596              		.loc 13 55 0
 1597 0014 9060     		str	r0, [r2, #8]
 1598              	.L96:
  57:../../src/list.h ****       first = &v;
 1599              		.loc 13 57 0
 1600 0016 1A68     		ldr	r2, [r3]
  56:../../src/list.h ****    if (not first)
 1601              		.loc 13 56 0
 1602 0018 5860     		str	r0, [r3, #4]
  57:../../src/list.h ****       first = &v;
 1603              		.loc 13 57 0
 1604 001a 002A     		cmp	r2, #0
 1605 001c 00D1     		bne	.L93
  58:../../src/list.h **** }
 1606              		.loc 13 58 0
 1607 001e 1860     		str	r0, [r3]
 1608              	.LVL131:
 1609              	.L93:
 1610              	.LBE1054:
 1611              	.LBE1053:
 1612              	.LBE1052:
 1613              	.LBE1051:
 1614              	.LBE1050:
ARM GAS  /tmp/ccFxkDJm.s 			page 66


 183:../../src/timers.h ****         tickUpdater.subscribe (*this);
 184:../../src/timers.h ****     }
 185:../../src/timers.h **** }
 1615              		.loc 1 185 0
 1616              		@ sp needed
 1617 0020 7047     		bx	lr
 1618              	.L102:
 1619 0022 C046     		.align	2
 1620              	.L101:
 1621 0024 00000000 		.word	.LANCHOR0
 1622              		.cfi_endproc
 1623              	.LFE2543:
 1625              		.section	.text._ZN5Timer5startEm,"ax",%progbits
 1626              		.align	1
 1627              		.global	_ZN5Timer5startEm
 1628              		.syntax unified
 1629              		.code	16
 1630              		.thumb_func
 1631              		.fpu softvfp
 1633              	_ZN5Timer5startEm:
 1634              	.LFB2531:
 121:../../src/timers.h ****     timeSet = ms;
 1635              		.loc 1 121 0
 1636              		.cfi_startproc
 1637              		@ args = 0, pretend = 0, frame = 0
 1638              		@ frame_needed = 0, uses_anonymous_args = 0
 1639              	.LVL132:
 1640 0000 10B5     		push	{r4, lr}
 1641              	.LCFI13:
 1642              		.cfi_def_cfa_offset 8
 1643              		.cfi_offset 4, -8
 1644              		.cfi_offset 14, -4
 122:../../src/timers.h ****     tick_subscribe();
 1645              		.loc 1 122 0
 1646 0002 0161     		str	r1, [r0, #16]
 123:../../src/timers.h **** }
 1647              		.loc 1 123 0
 1648 0004 FFF7FEFF 		bl	_ZN14TickSubscriber14tick_subscribeEv
 1649              	.LVL133:
 124:../../src/timers.h **** 
 1650              		.loc 1 124 0
 1651              		@ sp needed
 1652 0008 10BD     		pop	{r4, pc}
 1653              		.cfi_endproc
 1654              	.LFE2531:
 1656              		.section	.text._ZN5Timer5startEv,"ax",%progbits
 1657              		.align	1
 1658              		.global	_ZN5Timer5startEv
 1659              		.syntax unified
 1660              		.code	16
 1661              		.thumb_func
 1662              		.fpu softvfp
 1664              	_ZN5Timer5startEv:
 1665              	.LFB2537:
 161:../../src/timers.h **** bool     Timer::isCount()    { return subscribed; }
 1666              		.loc 1 161 0
 1667              		.cfi_startproc
ARM GAS  /tmp/ccFxkDJm.s 			page 67


 1668              		@ args = 0, pretend = 0, frame = 0
 1669              		@ frame_needed = 0, uses_anonymous_args = 0
 1670              	.LVL134:
 1671 0000 10B5     		push	{r4, lr}
 1672              	.LCFI14:
 1673              		.cfi_def_cfa_offset 8
 1674              		.cfi_offset 4, -8
 1675              		.cfi_offset 14, -4
 161:../../src/timers.h **** bool     Timer::isCount()    { return subscribed; }
 1676              		.loc 1 161 0
 1677 0002 FFF7FEFF 		bl	_ZN14TickSubscriber14tick_subscribeEv
 1678              	.LVL135:
 1679              		@ sp needed
 1680 0006 10BD     		pop	{r4, pc}
 1681              		.cfi_endproc
 1682              	.LFE2537:
 1684              		.section	.text._ZN5Delay2msEm,"axG",%progbits,_ZN5Delay2msEm,comdat
 1685              		.align	1
 1686              		.weak	_ZN5Delay2msEm
 1687              		.syntax unified
 1688              		.code	16
 1689              		.thumb_func
 1690              		.fpu softvfp
 1692              	_ZN5Delay2msEm:
 1693              	.LFB2551:
  25:../../src/delay.h ****    {
 1694              		.loc 4 25 0
 1695              		.cfi_startproc
 1696              		@ args = 0, pretend = 0, frame = 0
 1697              		@ frame_needed = 0, uses_anonymous_args = 0
 1698              	.LVL136:
 1699 0000 70B5     		push	{r4, r5, r6, lr}
 1700              	.LCFI15:
 1701              		.cfi_def_cfa_offset 16
 1702              		.cfi_offset 4, -16
 1703              		.cfi_offset 5, -12
 1704              		.cfi_offset 6, -8
 1705              		.cfi_offset 14, -4
 1706 0002 0600     		movs	r6, r0
  27:../../src/delay.h ****          first_time_ms = false;
 1707              		.loc 4 27 0
 1708 0004 437A     		ldrb	r3, [r0, #9]
  25:../../src/delay.h ****    {
 1709              		.loc 4 25 0
 1710 0006 0400     		movs	r4, r0
 1711 0008 0C36     		adds	r6, r6, #12
  27:../../src/delay.h ****          first_time_ms = false;
 1712              		.loc 4 27 0
 1713 000a 002B     		cmp	r3, #0
 1714 000c 05D0     		beq	.L106
  28:../../src/delay.h ****          timer.start(ms);
 1715              		.loc 4 28 0
 1716 000e 0023     		movs	r3, #0
 1717              	.LBB1055:
 1718              	.LBB1056:
 122:../../src/timers.h ****     tick_subscribe();
 1719              		.loc 1 122 0
ARM GAS  /tmp/ccFxkDJm.s 			page 68


 1720 0010 C161     		str	r1, [r0, #28]
 1721              	.LBE1056:
 1722              	.LBE1055:
  28:../../src/delay.h ****          timer.start(ms);
 1723              		.loc 4 28 0
 1724 0012 4372     		strb	r3, [r0, #9]
 1725              	.LVL137:
 1726              	.LBB1058:
 1727              	.LBB1057:
 123:../../src/timers.h **** }
 1728              		.loc 1 123 0
 1729 0014 3000     		movs	r0, r6
 1730              	.LVL138:
 1731 0016 FFF7FEFF 		bl	_ZN14TickSubscriber14tick_subscribeEv
 1732              	.LVL139:
 1733              	.L106:
 1734              	.LBE1057:
 1735              	.LBE1058:
  32:../../src/delay.h ****       else {
 1736              		.loc 4 32 0
 1737 001a 3000     		movs	r0, r6
 1738 001c FFF7FEFF 		bl	_ZN5Timer5eventEv
 1739              	.LVL140:
 1740 0020 0125     		movs	r5, #1
 1741 0022 0028     		cmp	r0, #0
 1742 0024 04D0     		beq	.L107
  34:../../src/delay.h ****          first_time_ms = true;
 1743              		.loc 4 34 0
 1744 0026 3000     		movs	r0, r6
 1745 0028 FFF7FEFF 		bl	_ZN5Timer4stopEv
 1746              	.LVL141:
  35:../../src/delay.h ****          return false;
 1747              		.loc 4 35 0
 1748 002c 6572     		strb	r5, [r4, #9]
  36:../../src/delay.h ****       }
 1749              		.loc 4 36 0
 1750 002e 0025     		movs	r5, #0
 1751              	.L107:
  38:../../src/delay.h **** 
 1752              		.loc 4 38 0
 1753 0030 2800     		movs	r0, r5
 1754              		@ sp needed
 1755              	.LVL142:
 1756              	.LVL143:
 1757 0032 70BD     		pop	{r4, r5, r6, pc}
 1758              		.cfi_endproc
 1759              	.LFE2551:
 1761              		.section	.text._Z11block_delayj,"ax",%progbits
 1762              		.align	1
 1763              		.global	_Z11block_delayj
 1764              		.syntax unified
 1765              		.code	16
 1766              		.thumb_func
 1767              		.fpu softvfp
 1769              	_Z11block_delayj:
 1770              	.LFB2553:
  82:../../src/delay.h ****    
ARM GAS  /tmp/ccFxkDJm.s 			page 69


  83:../../src/delay.h **** };
  84:../../src/delay.h **** 
  85:../../src/delay.h **** void block_delay (volatile size_t cnt)
  86:../../src/delay.h **** {
 1771              		.loc 4 86 0
 1772              		.cfi_startproc
 1773              		@ args = 0, pretend = 0, frame = 8
 1774              		@ frame_needed = 0, uses_anonymous_args = 0
 1775              		@ link register save eliminated.
 1776              	.LVL144:
 1777 0000 82B0     		sub	sp, sp, #8
 1778              	.LCFI16:
 1779              		.cfi_def_cfa_offset 8
 1780 0002 0190     		str	r0, [sp, #4]
 1781              	.L114:
  87:../../src/delay.h ****    while (cnt--) {}
 1782              		.loc 4 87 0
 1783 0004 019B     		ldr	r3, [sp, #4]
 1784 0006 5A1E     		subs	r2, r3, #1
 1785 0008 0192     		str	r2, [sp, #4]
 1786 000a 002B     		cmp	r3, #0
 1787 000c FAD1     		bne	.L114
  88:../../src/delay.h **** }
 1788              		.loc 4 88 0
 1789 000e 02B0     		add	sp, sp, #8
 1790              		@ sp needed
 1791 0010 7047     		bx	lr
 1792              		.cfi_endproc
 1793              	.LFE2553:
 1795              		.section	.text._ZN7HD447804initEv,"ax",%progbits
 1796              		.align	1
 1797              		.global	_ZN7HD447804initEv
 1798              		.syntax unified
 1799              		.code	16
 1800              		.thumb_func
 1801              		.fpu softvfp
 1803              	_ZN7HD447804initEv:
 1804              	.LFB2576:
 154:../../src/hd44780.h ****     enum Set {
 1805              		.loc 11 154 0
 1806              		.cfi_startproc
 1807              		@ args = 0, pretend = 0, frame = 56
 1808              		@ frame_needed = 0, uses_anonymous_args = 0
 1809              	.LVL145:
 1810 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1811              	.LCFI17:
 1812              		.cfi_def_cfa_offset 20
 1813              		.cfi_offset 4, -20
 1814              		.cfi_offset 5, -16
 1815              		.cfi_offset 6, -12
 1816              		.cfi_offset 7, -8
 1817              		.cfi_offset 14, -4
 1818              	.LBB1095:
 1819              	.LBB1096:
 1820              	.LBB1097:
  23:../../src/delay.h ****    
 1821              		.loc 4 23 0
ARM GAS  /tmp/ccFxkDJm.s 			page 70


 1822 0002 0026     		movs	r6, #0
 1823              	.LBE1097:
 1824              	.LBE1096:
 1825              	.LBE1095:
 154:../../src/hd44780.h ****     enum Set {
 1826              		.loc 11 154 0
 1827 0004 8FB0     		sub	sp, sp, #60
 1828              	.LCFI18:
 1829              		.cfi_def_cfa_offset 80
 1830              	.LVL146:
 1831              	.LBB1106:
 1832              	.LBB1103:
 1833              	.LBB1100:
  23:../../src/delay.h ****    
 1834              		.loc 4 23 0
 1835 0006 05AC     		add	r4, sp, #20
 1836              	.LVL147:
 1837              	.LBE1100:
 1838              	.LBE1103:
 1839              	.LBE1106:
 154:../../src/hd44780.h ****     enum Set {
 1840              		.loc 11 154 0
 1841 0008 0500     		movs	r5, r0
 1842              	.LBB1107:
 1843              	.LBB1104:
 1844              	.LBB1101:
  23:../../src/delay.h ****    
 1845              		.loc 4 23 0
 1846 000a 0C22     		movs	r2, #12
 1847 000c 3100     		movs	r1, r6
 1848 000e 09A8     		add	r0, sp, #36
 1849              	.LVL148:
 1850 0010 0596     		str	r6, [sp, #20]
 1851 0012 6660     		str	r6, [r4, #4]
 1852 0014 FFF7FEFF 		bl	memset
 1853              	.LVL149:
 1854 0018 0123     		movs	r3, #1
 1855 001a 6372     		strb	r3, [r4, #9]
 1856 001c 2372     		strb	r3, [r4, #8]
 1857              	.LBE1101:
 1858              	.LBE1104:
 1859              	.LBE1107:
 179:../../src/hd44780.h ****     
 1860              		.loc 11 179 0
 1861 001e 6B46     		mov	r3, sp
 1862              	.LBB1108:
 1863              	.LBB1105:
 1864              	.LBB1102:
 1865              	.LBB1098:
 1866              	.LBB1099:
  59:../../src/timers.h ****     Timer (uint32_t ms) { start(ms); }
 1867              		.loc 1 59 0
 1868 0020 354F     		ldr	r7, .L129
 1869 0022 E661     		str	r6, [r4, #28]
 1870 0024 E760     		str	r7, [r4, #12]
 1871 0026 2662     		str	r6, [r4, #32]
 1872              	.LVL150:
ARM GAS  /tmp/ccFxkDJm.s 			page 71


 1873              	.LBE1099:
 1874              	.LBE1098:
 1875              	.LBE1102:
 1876              	.LBE1105:
 1877              	.LBE1108:
 170:../../src/hd44780.h **** 
 1878              		.loc 11 170 0
 1879 0028 0095     		str	r5, [sp]
 1880 002a 0194     		str	r4, [sp, #4]
 179:../../src/hd44780.h ****     
 1881              		.loc 11 179 0
 1882 002c 0295     		str	r5, [sp, #8]
 1883 002e 0393     		str	r3, [sp, #12]
 1884 0030 0494     		str	r4, [sp, #16]
 1885              	.L117:
 181:../../src/hd44780.h ****     rs = false;
 1886              		.loc 11 181 0
 1887 0032 1421     		movs	r1, #20
 1888 0034 2000     		movs	r0, r4
 1889 0036 FFF7FEFF 		bl	_ZN5Delay2msEm
 1890              	.LVL151:
 1891 003a 0028     		cmp	r0, #0
 1892 003c F9D1     		bne	.L117
 1893              	.LVL152:
 1894              	.LBB1109:
 1895              	.LBB1110:
  33:../../src/pin.h ****    bool operator^= (bool v) 
 1896              		.loc 9 33 0
 1897 003e 2869     		ldr	r0, [r5, #16]
 1898 0040 FFF7FEFF 		bl	_ZN3Pin5clearEv
 1899              	.LVL153:
 1900              	.LBE1110:
 1901              	.LBE1109:
 1902              	.LBB1111:
 1903              	.LBB1112:
 1904 0044 6869     		ldr	r0, [r5, #20]
 1905 0046 FFF7FEFF 		bl	_ZN3Pin5clearEv
 1906              	.LVL154:
 1907              	.LBE1112:
 1908              	.LBE1111:
 1909              	.LBB1113:
 1910              	.LBB1114:
 1911 004a A869     		ldr	r0, [r5, #24]
 1912 004c FFF7FEFF 		bl	_ZN3Pin3setEv
 1913              	.LVL155:
 1914              	.LBE1114:
 1915              	.LBE1113:
 185:../../src/hd44780.h ****     strob_e();
 1916              		.loc 11 185 0
 1917 0050 AA6A     		ldr	r2, [r5, #40]
 1918 0052 EB69     		ldr	r3, [r5, #28]
 1919 0054 D269     		ldr	r2, [r2, #28]
 1920              	.LVL156:
 186:../../src/hd44780.h ****     while(delay.ms(5)) {}
 1921              		.loc 11 186 0
 1922 0056 6846     		mov	r0, sp
 1923              	.LBB1115:
ARM GAS  /tmp/ccFxkDJm.s 			page 72


 1924              	.LBB1116:
 1925              		.loc 10 31 0
 1926 0058 1A61     		str	r2, [r3, #16]
 1927              	.LVL157:
 1928              	.LBE1116:
 1929              	.LBE1115:
 186:../../src/hd44780.h ****     while(delay.ms(5)) {}
 1930              		.loc 11 186 0
 1931 005a FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlvE_clEv
 1932              	.LVL158:
 1933              	.L118:
 187:../../src/hd44780.h ****     port.atomic_write(command[0x03].second);
 1934              		.loc 11 187 0
 1935 005e 0521     		movs	r1, #5
 1936 0060 2000     		movs	r0, r4
 1937 0062 FFF7FEFF 		bl	_ZN5Delay2msEm
 1938              	.LVL159:
 1939 0066 0028     		cmp	r0, #0
 1940 0068 F9D1     		bne	.L118
 188:../../src/hd44780.h ****     strob_e();
 1941              		.loc 11 188 0
 1942 006a AA6A     		ldr	r2, [r5, #40]
 1943 006c EB69     		ldr	r3, [r5, #28]
 1944 006e D269     		ldr	r2, [r2, #28]
 1945              	.LVL160:
 189:../../src/hd44780.h ****     while(delay.us(100)) {}
 1946              		.loc 11 189 0
 1947 0070 6846     		mov	r0, sp
 1948              	.LBB1117:
 1949              	.LBB1118:
 1950              		.loc 10 31 0
 1951 0072 1A61     		str	r2, [r3, #16]
 1952              	.LVL161:
 1953              	.LBE1118:
 1954              	.LBE1117:
 189:../../src/hd44780.h ****     while(delay.us(100)) {}
 1955              		.loc 11 189 0
 1956 0074 FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlvE_clEv
 1957              	.LVL162:
 1958              	.L119:
 1959              	.LBB1119:
 1960              	.LBB1120:
 1961 0078 6421     		movs	r1, #100
 1962 007a 2000     		movs	r0, r4
 1963 007c FFF7FEFF 		bl	_ZN5Delay2usEm.part.9
 1964              	.LVL163:
 1965              	.LBE1120:
 1966              	.LBE1119:
 190:../../src/hd44780.h ****     port.atomic_write(command[0x03].second);
 1967              		.loc 11 190 0
 1968 0080 0028     		cmp	r0, #0
 1969 0082 F9D1     		bne	.L119
 191:../../src/hd44780.h ****     strob_e();
 1970              		.loc 11 191 0
 1971 0084 AA6A     		ldr	r2, [r5, #40]
 1972 0086 EB69     		ldr	r3, [r5, #28]
 1973 0088 D269     		ldr	r2, [r2, #28]
ARM GAS  /tmp/ccFxkDJm.s 			page 73


 1974              	.LVL164:
 192:../../src/hd44780.h ****     while(delay.us(50)) {}
 1975              		.loc 11 192 0
 1976 008a 6846     		mov	r0, sp
 1977              	.LBB1121:
 1978              	.LBB1122:
 1979              		.loc 10 31 0
 1980 008c 1A61     		str	r2, [r3, #16]
 1981              	.LVL165:
 1982              	.LBE1122:
 1983              	.LBE1121:
 192:../../src/hd44780.h ****     while(delay.us(50)) {}
 1984              		.loc 11 192 0
 1985 008e FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlvE_clEv
 1986              	.LVL166:
 1987              	.L120:
 1988              	.LBB1123:
 1989              	.LBB1124:
 1990 0092 3221     		movs	r1, #50
 1991 0094 2000     		movs	r0, r4
 1992 0096 FFF7FEFF 		bl	_ZN5Delay2usEm.part.9
 1993              	.LVL167:
 1994              	.LBE1124:
 1995              	.LBE1123:
 193:../../src/hd44780.h ****     port.atomic_write(command[0x02].second);
 1996              		.loc 11 193 0
 1997 009a 0028     		cmp	r0, #0
 1998 009c F9D1     		bne	.L120
 194:../../src/hd44780.h ****     strob_e();
 1999              		.loc 11 194 0
 2000 009e AA6A     		ldr	r2, [r5, #40]
 2001 00a0 EB69     		ldr	r3, [r5, #28]
 2002 00a2 5269     		ldr	r2, [r2, #20]
 2003              	.LVL168:
 195:../../src/hd44780.h ****     while(delay.us(50)) {}
 2004              		.loc 11 195 0
 2005 00a4 6846     		mov	r0, sp
 2006              	.LBB1125:
 2007              	.LBB1126:
 2008              		.loc 10 31 0
 2009 00a6 1A61     		str	r2, [r3, #16]
 2010              	.LVL169:
 2011              	.LBE1126:
 2012              	.LBE1125:
 195:../../src/hd44780.h ****     while(delay.us(50)) {}
 2013              		.loc 11 195 0
 2014 00a8 FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlvE_clEv
 2015              	.LVL170:
 2016              	.L121:
 2017              	.LBB1127:
 2018              	.LBB1128:
 2019 00ac 3221     		movs	r1, #50
 2020 00ae 2000     		movs	r0, r4
 2021 00b0 FFF7FEFF 		bl	_ZN5Delay2usEm.part.9
 2022              	.LVL171:
 2023              	.LBE1128:
 2024              	.LBE1127:
ARM GAS  /tmp/ccFxkDJm.s 			page 74


 196:../../src/hd44780.h ****     instruction (_4_bit_mode);
 2025              		.loc 11 196 0
 2026 00b4 0028     		cmp	r0, #0
 2027 00b6 F9D1     		bne	.L121
 197:../../src/hd44780.h ****     instruction (display_on);
 2028              		.loc 11 197 0
 2029 00b8 2821     		movs	r1, #40
 2030 00ba 02A8     		add	r0, sp, #8
 2031 00bc FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlmE0_clEm
 2032              	.LVL172:
 198:../../src/hd44780.h ****     instruction (dir_shift_right);
 2033              		.loc 11 198 0
 2034 00c0 0C21     		movs	r1, #12
 2035 00c2 02A8     		add	r0, sp, #8
 2036 00c4 FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlmE0_clEm
 2037              	.LVL173:
 199:../../src/hd44780.h ****     instruction (display_clear);
 2038              		.loc 11 199 0
 2039 00c8 0621     		movs	r1, #6
 2040 00ca 02A8     		add	r0, sp, #8
 2041 00cc FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlmE0_clEm
 2042              	.LVL174:
 200:../../src/hd44780.h ****     instruction (set_to_zero);
 2043              		.loc 11 200 0
 2044 00d0 0121     		movs	r1, #1
 2045 00d2 02A8     		add	r0, sp, #8
 2046 00d4 FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlmE0_clEm
 2047              	.LVL175:
 201:../../src/hd44780.h ****     while(delay.ms(1)) {}
 2048              		.loc 11 201 0
 2049 00d8 8021     		movs	r1, #128
 2050 00da 02A8     		add	r0, sp, #8
 2051 00dc FFF7FEFF 		bl	_ZZN7HD447804initEvENKUlmE0_clEm
 2052              	.LVL176:
 2053              	.L122:
 202:../../src/hd44780.h **** }
 2054              		.loc 11 202 0
 2055 00e0 0121     		movs	r1, #1
 2056 00e2 2000     		movs	r0, r4
 2057 00e4 FFF7FEFF 		bl	_ZN5Delay2msEm
 2058              	.LVL177:
 2059 00e8 0028     		cmp	r0, #0
 2060 00ea F9D1     		bne	.L122
 2061              	.LVL178:
 2062              	.LBB1129:
 2063              	.LBB1130:
 2064              	.LBB1131:
  61:../../src/timers.h **** 
 2065              		.loc 1 61 0
 2066 00ec 08A8     		add	r0, sp, #32
 2067              	.LVL179:
 2068 00ee E760     		str	r7, [r4, #12]
 2069 00f0 FFF7FEFF 		bl	_ZN14TickSubscriber16tick_unsubscribeEv
 2070              	.LVL180:
 2071              	.LBE1131:
 2072              	.LBE1130:
 2073              	.LBE1129:
ARM GAS  /tmp/ccFxkDJm.s 			page 75


 203:../../src/hd44780.h **** 
 2074              		.loc 11 203 0
 2075 00f4 0FB0     		add	sp, sp, #60
 2076              		@ sp needed
 2077              	.LVL181:
 2078 00f6 F0BD     		pop	{r4, r5, r6, r7, pc}
 2079              	.L130:
 2080              		.align	2
 2081              	.L129:
 2082 00f8 08000000 		.word	_ZTV5Timer+8
 2083              		.cfi_endproc
 2084              	.LFE2576:
 2086              		.section	.text._ZN3mcu6Button4pushEv,"axG",%progbits,_ZN3mcu6Button4pushEv,comdat
 2087              		.align	1
 2088              		.weak	_ZN3mcu6Button4pushEv
 2089              		.syntax unified
 2090              		.code	16
 2091              		.thumb_func
 2092              		.fpu softvfp
 2094              	_ZN3mcu6Button4pushEv:
 2095              	.LFB2597:
  38:../../src/buttons.h ****    {
 2096              		.loc 14 38 0
 2097              		.cfi_startproc
 2098              		@ args = 0, pretend = 0, frame = 0
 2099              		@ frame_needed = 0, uses_anonymous_args = 0
 2100              	.LVL182:
 2101 0000 10B5     		push	{r4, lr}
 2102              	.LCFI19:
 2103              		.cfi_def_cfa_offset 8
 2104              		.cfi_offset 4, -8
 2105              		.cfi_offset 14, -4
  38:../../src/buttons.h ****    {
 2106              		.loc 14 38 0
 2107 0002 0400     		movs	r4, r0
  40:../../src/buttons.h ****          if (not pin) 
 2108              		.loc 14 40 0
 2109 0004 E37E     		ldrb	r3, [r4, #27]
 2110 0006 0069     		ldr	r0, [r0, #16]
 2111              	.LVL183:
 2112 0008 002B     		cmp	r3, #0
 2113 000a 10D0     		beq	.L132
 2114              	.LVL184:
 2115              	.LBB1132:
 2116              	.LBB1133:
 2117              		.loc 9 40 0
 2118 000c FFF7FEFF 		bl	_ZN3Pin6is_setEv
 2119              	.LVL185:
 2120              	.LBE1133:
 2121              	.LBE1132:
  41:../../src/buttons.h ****             tick_subscribe();
 2122              		.loc 14 41 0
 2123 0010 0028     		cmp	r0, #0
 2124 0012 02D1     		bne	.L134
 2125              	.L133:
  42:../../src/buttons.h ****       } else {
 2126              		.loc 14 42 0
ARM GAS  /tmp/ccFxkDJm.s 			page 76


 2127 0014 2000     		movs	r0, r4
 2128 0016 FFF7FEFF 		bl	_ZN14TickSubscriber14tick_subscribeEv
 2129              	.LVL186:
 2130              	.L134:
  48:../../src/buttons.h ****    }
 2131              		.loc 14 48 0
 2132 001a 6369     		ldr	r3, [r4, #20]
 2133 001c 0020     		movs	r0, #0
 2134 001e 092B     		cmp	r3, #9
 2135 0020 04DD     		ble	.L136
  48:../../src/buttons.h ****    }
 2136              		.loc 14 48 0 is_stmt 0 discriminator 1
 2137 0022 237E     		ldrb	r3, [r4, #24]
 2138 0024 8342     		cmp	r3, r0
 2139 0026 01D1     		bne	.L136
  48:../../src/buttons.h ****    }
 2140              		.loc 14 48 0 discriminator 3
 2141 0028 0130     		adds	r0, r0, #1
 2142 002a 2076     		strb	r0, [r4, #24]
 2143              	.L136:
  49:../../src/buttons.h **** 
 2144              		.loc 14 49 0 is_stmt 1 discriminator 8
 2145              		@ sp needed
 2146              	.LVL187:
 2147 002c 10BD     		pop	{r4, pc}
 2148              	.LVL188:
 2149              	.L132:
 2150              	.LBB1134:
 2151              	.LBB1135:
 2152              		.loc 9 40 0
 2153 002e FFF7FEFF 		bl	_ZN3Pin6is_setEv
 2154              	.LVL189:
 2155              	.LBE1135:
 2156              	.LBE1134:
  44:../../src/buttons.h ****             tick_subscribe();
 2157              		.loc 14 44 0
 2158 0032 0028     		cmp	r0, #0
 2159 0034 F1D0     		beq	.L134
 2160 0036 EDE7     		b	.L133
 2161              		.cfi_endproc
 2162              	.LFE2597:
 2164              		.section	.text._ZN3mcu6Button6is_setEv,"axG",%progbits,_ZN3mcu6Button6is_setEv,comdat
 2165              		.align	1
 2166              		.weak	_ZN3mcu6Button6is_setEv
 2167              		.syntax unified
 2168              		.code	16
 2169              		.thumb_func
 2170              		.fpu softvfp
 2172              	_ZN3mcu6Button6is_setEv:
 2173              	.LFB2601:
 131:../../src/buttons.h **** 
 132:../../src/buttons.h ****    bool is_set()
 2174              		.loc 14 132 0
 2175              		.cfi_startproc
 2176              		@ args = 0, pretend = 0, frame = 0
 2177              		@ frame_needed = 0, uses_anonymous_args = 0
 2178              	.LVL190:
ARM GAS  /tmp/ccFxkDJm.s 			page 77


 2179 0000 0300     		movs	r3, r0
 2180 0002 10B5     		push	{r4, lr}
 2181              	.LCFI20:
 2182              		.cfi_def_cfa_offset 8
 2183              		.cfi_offset 4, -8
 2184              		.cfi_offset 14, -4
 133:../../src/buttons.h ****    {
 134:../../src/buttons.h ****       if (inverted) return not pin;
 2185              		.loc 14 134 0
 2186 0004 DB7E     		ldrb	r3, [r3, #27]
 2187 0006 0069     		ldr	r0, [r0, #16]
 2188              	.LVL191:
 2189 0008 002B     		cmp	r3, #0
 2190 000a 06D0     		beq	.L143
 2191              	.LVL192:
 2192              	.LBB1136:
 2193              	.LBB1137:
 2194              		.loc 9 40 0 discriminator 1
 2195 000c FFF7FEFF 		bl	_ZN3Pin6is_setEv
 2196              	.LVL193:
 2197 0010 0300     		movs	r3, r0
 2198              	.LBE1137:
 2199              	.LBE1136:
 2200              		.loc 14 134 0 discriminator 1
 2201 0012 0120     		movs	r0, #1
 2202 0014 5840     		eors	r0, r3
 2203 0016 C0B2     		uxtb	r0, r0
 2204              	.L144:
 135:../../src/buttons.h ****       else return pin;
 136:../../src/buttons.h ****    }
 2205              		.loc 14 136 0
 2206              		@ sp needed
 2207 0018 10BD     		pop	{r4, pc}
 2208              	.L143:
 2209              	.LVL194:
 2210              	.LBB1138:
 2211              	.LBB1139:
 2212              		.loc 9 40 0
 2213 001a FFF7FEFF 		bl	_ZN3Pin6is_setEv
 2214              	.LVL195:
 2215              	.LBE1139:
 2216              	.LBE1138:
 135:../../src/buttons.h ****       else return pin;
 2217              		.loc 14 135 0
 2218 001e FBE7     		b	.L144
 2219              		.cfi_endproc
 2220              	.LFE2601:
 2222              		.section	.text._ZN3mcu6Button4Some5clickEv,"axG",%progbits,_ZN3mcu6Button4Some5clickEv,comdat
 2223              		.align	1
 2224              		.weak	_ZN3mcu6Button4Some5clickEv
 2225              		.syntax unified
 2226              		.code	16
 2227              		.thumb_func
 2228              		.fpu softvfp
 2230              	_ZN3mcu6Button4Some5clickEv:
 2231              	.LFB2606:
 137:../../src/buttons.h **** 
ARM GAS  /tmp/ccFxkDJm.s 			page 78


 138:../../src/buttons.h ****    struct Some 
 139:../../src/buttons.h ****    {
 140:../../src/buttons.h ****       Button& one;
 141:../../src/buttons.h ****       Button& two;
 142:../../src/buttons.h ****       Some(Button& one, Button& two) : one{one}, two{two} {}
 143:../../src/buttons.h ****       operator bool () {
 144:../../src/buttons.h ****          if (one.is_set() and two.is_set()) {
 145:../../src/buttons.h ****             one.tick_subscribe();
 146:../../src/buttons.h ****             two.tick_subscribe(); 
 147:../../src/buttons.h ****          }
 148:../../src/buttons.h ****          bool result{false};
 149:../../src/buttons.h ****          result = not one.pin and not two.pin and (not one.short_press or not two.short_press);
 150:../../src/buttons.h ****          if (result)
 151:../../src/buttons.h ****             one.short_press = two.short_press = true;
 152:../../src/buttons.h ****          return result;
 153:../../src/buttons.h ****       }                  
 154:../../src/buttons.h **** 
 155:../../src/buttons.h ****       bool click()
 2232              		.loc 14 155 0
 2233              		.cfi_startproc
 2234              		@ args = 0, pretend = 0, frame = 0
 2235              		@ frame_needed = 0, uses_anonymous_args = 0
 2236              	.LVL196:
 2237 0000 10B5     		push	{r4, lr}
 2238              	.LCFI21:
 2239              		.cfi_def_cfa_offset 8
 2240              		.cfi_offset 4, -8
 2241              		.cfi_offset 14, -4
 2242              		.loc 14 155 0
 2243 0002 0400     		movs	r4, r0
 156:../../src/buttons.h ****       {
 157:../../src/buttons.h ****          if (one.is_set() and two.is_set()) {
 2244              		.loc 14 157 0
 2245 0004 0068     		ldr	r0, [r0]
 2246              	.LVL197:
 2247 0006 FFF7FEFF 		bl	_ZN3mcu6Button6is_setEv
 2248              	.LVL198:
 2249 000a 0028     		cmp	r0, #0
 2250 000c 0AD0     		beq	.L147
 2251              		.loc 14 157 0 is_stmt 0 discriminator 1
 2252 000e 6068     		ldr	r0, [r4, #4]
 2253 0010 FFF7FEFF 		bl	_ZN3mcu6Button6is_setEv
 2254              	.LVL199:
 2255 0014 0028     		cmp	r0, #0
 2256 0016 05D0     		beq	.L147
 158:../../src/buttons.h ****             one.tick_subscribe();
 2257              		.loc 14 158 0 is_stmt 1
 2258 0018 2068     		ldr	r0, [r4]
 2259 001a FFF7FEFF 		bl	_ZN14TickSubscriber14tick_subscribeEv
 2260              	.LVL200:
 159:../../src/buttons.h ****             two.tick_subscribe(); 
 2261              		.loc 14 159 0
 2262 001e 6068     		ldr	r0, [r4, #4]
 2263 0020 FFF7FEFF 		bl	_ZN14TickSubscriber14tick_subscribeEv
 2264              	.LVL201:
 2265              	.L147:
 160:../../src/buttons.h ****          }
ARM GAS  /tmp/ccFxkDJm.s 			page 79


 161:../../src/buttons.h ****          bool result{false};
 162:../../src/buttons.h ****          if (one.time > 100 and one.time < 200 and two.time > 100 and two.time < 200)
 2266              		.loc 14 162 0
 2267 0024 2068     		ldr	r0, [r4]
 2268 0026 4369     		ldr	r3, [r0, #20]
 2269 0028 653B     		subs	r3, r3, #101
 2270 002a 622B     		cmp	r3, #98
 2271 002c 07D8     		bhi	.L149
 2272              		.loc 14 162 0 is_stmt 0 discriminator 1
 2273 002e 6268     		ldr	r2, [r4, #4]
 2274 0030 5369     		ldr	r3, [r2, #20]
 2275 0032 653B     		subs	r3, r3, #101
 2276 0034 622B     		cmp	r3, #98
 2277 0036 02D8     		bhi	.L149
 163:../../src/buttons.h ****             one.click_ = two.click_ = true;
 2278              		.loc 14 163 0 is_stmt 1
 2279 0038 0123     		movs	r3, #1
 2280 003a 1377     		strb	r3, [r2, #28]
 2281 003c 0377     		strb	r3, [r0, #28]
 2282              	.L149:
 164:../../src/buttons.h ****          result = not one.is_set() and not two.is_set() and (one.click_ or two.click_) and not  one
 2283              		.loc 14 164 0
 2284 003e FFF7FEFF 		bl	_ZN3mcu6Button6is_setEv
 2285              	.LVL202:
 2286 0042 0028     		cmp	r0, #0
 2287 0044 01D0     		beq	.L150
 2288              	.L152:
 2289 0046 0020     		movs	r0, #0
 2290              	.L151:
 165:../../src/buttons.h ****          if (result)
 166:../../src/buttons.h ****             one.click_ = two.click_ = false;
 167:../../src/buttons.h ****          return result;
 168:../../src/buttons.h ****       }                          
 2291              		.loc 14 168 0
 2292              		@ sp needed
 2293              	.LVL203:
 2294 0048 10BD     		pop	{r4, pc}
 2295              	.LVL204:
 2296              	.L150:
 164:../../src/buttons.h ****          result = not one.is_set() and not two.is_set() and (one.click_ or two.click_) and not  one
 2297              		.loc 14 164 0 discriminator 1
 2298 004a 6068     		ldr	r0, [r4, #4]
 2299 004c FFF7FEFF 		bl	_ZN3mcu6Button6is_setEv
 2300              	.LVL205:
 2301 0050 0028     		cmp	r0, #0
 2302 0052 F8D1     		bne	.L152
 2303              	.LVL206:
 2304              	.LBB1142:
 2305              	.LBB1143:
 164:../../src/buttons.h ****          result = not one.is_set() and not two.is_set() and (one.click_ or two.click_) and not  one
 2306              		.loc 14 164 0 is_stmt 0
 2307 0054 2368     		ldr	r3, [r4]
 2308 0056 1A7F     		ldrb	r2, [r3, #28]
 2309 0058 002A     		cmp	r2, #0
 2310 005a 03D1     		bne	.L153
 2311 005c 6268     		ldr	r2, [r4, #4]
 2312 005e 127F     		ldrb	r2, [r2, #28]
ARM GAS  /tmp/ccFxkDJm.s 			page 80


 2313 0060 002A     		cmp	r2, #0
 2314 0062 F0D0     		beq	.L152
 2315              	.L153:
 2316 0064 5A7E     		ldrb	r2, [r3, #25]
 2317 0066 002A     		cmp	r2, #0
 2318 0068 EDD1     		bne	.L152
 2319 006a 6168     		ldr	r1, [r4, #4]
 2320 006c 4A7E     		ldrb	r2, [r1, #25]
 2321 006e 002A     		cmp	r2, #0
 2322 0070 E9D1     		bne	.L152
 2323              	.LVL207:
 166:../../src/buttons.h ****          return result;
 2324              		.loc 14 166 0 is_stmt 1
 2325 0072 0A77     		strb	r2, [r1, #28]
 164:../../src/buttons.h ****          result = not one.is_set() and not two.is_set() and (one.click_ or two.click_) and not  one
 2326              		.loc 14 164 0
 2327 0074 0120     		movs	r0, #1
 166:../../src/buttons.h ****          return result;
 2328              		.loc 14 166 0
 2329 0076 1A77     		strb	r2, [r3, #28]
 2330 0078 E6E7     		b	.L151
 2331              	.LBE1143:
 2332              	.LBE1142:
 2333              		.cfi_endproc
 2334              	.LFE2606:
 2336              		.section	.text._ZN13String_bufferlsERFRS_S0_E,"ax",%progbits
 2337              		.align	1
 2338              		.global	_ZN13String_bufferlsERFRS_S0_E
 2339              		.syntax unified
 2340              		.code	16
 2341              		.thumb_func
 2342              		.fpu softvfp
 2344              	_ZN13String_bufferlsERFRS_S0_E:
 2345              	.LFB2633:
 2346              		.file 15 "../../src/string_buffer.h"
   1:../../src/string_buffer.h **** #pragma once
   2:../../src/string_buffer.h **** 
   3:../../src/string_buffer.h **** #include <array>
   4:../../src/string_buffer.h **** #include <cstring>
   5:../../src/string_buffer.h **** #include <cstddef>
   6:../../src/string_buffer.h **** 
   7:../../src/string_buffer.h **** class String_buffer
   8:../../src/string_buffer.h **** {
   9:../../src/string_buffer.h ****     size_t  number_line{0};
  10:../../src/string_buffer.h ****     size_t  width_size {0};
  11:../../src/string_buffer.h ****     size_t  position   {0};
  12:../../src/string_buffer.h ****     bool    align  {false};
  13:../../src/string_buffer.h **** 
  14:../../src/string_buffer.h ****     std::array<char, 80> screen;
  15:../../src/string_buffer.h ****     static constexpr size_t line_size = 20;
  16:../../src/string_buffer.h ****     static constexpr size_t screen_size = 80;
  17:../../src/string_buffer.h **** 
  18:../../src/string_buffer.h ****     using String_buffer_ref = String_buffer&(&) (String_buffer& string_buffer);
  19:../../src/string_buffer.h ****     friend String_buffer& next_line (String_buffer& s);
  20:../../src/string_buffer.h **** 
  21:../../src/string_buffer.h **** public:
  22:../../src/string_buffer.h ****     String_buffer (){screen.fill(' ');}
ARM GAS  /tmp/ccFxkDJm.s 			page 81


  23:../../src/string_buffer.h ****     String_buffer& operator<< (std::string_view string);
  24:../../src/string_buffer.h ****     String_buffer& operator<< (int number);
  25:../../src/string_buffer.h ****     String_buffer& operator<< (String_buffer_ref& function);
  26:../../src/string_buffer.h ****     String_buffer& line   (size_t string);
  27:../../src/string_buffer.h ****     String_buffer& width  (size_t width );
  28:../../src/string_buffer.h ****     String_buffer& cursor (size_t cursor);
  29:../../src/string_buffer.h ****     String_buffer& center ();
  30:../../src/string_buffer.h ****     auto& get_buffer  (){return screen;}
  31:../../src/string_buffer.h ****     auto begin        () const {return screen.begin();}
  32:../../src/string_buffer.h ****     auto end          () const {return screen.end()  ;}
  33:../../src/string_buffer.h ****     auto get_position () const {return position;}
  34:../../src/string_buffer.h ****     auto get_line     () const {return number_line;}
  35:../../src/string_buffer.h ****     void clear        (){screen.fill(' ');}
  36:../../src/string_buffer.h ****     bool in_begin_line() const { return position % line_size == 0; }
  37:../../src/string_buffer.h **** 
  38:../../src/string_buffer.h **** };
  39:../../src/string_buffer.h **** 
  40:../../src/string_buffer.h **** // FIX –∑–∞–≤–∏—Å–∞–µ—Ç –Ω–∞ 79 –ø–æ–∑–∏—Ü–∏–∏
  41:../../src/string_buffer.h **** String_buffer& next_line (String_buffer& s) 
  42:../../src/string_buffer.h **** {
  43:../../src/string_buffer.h ****     while (not s.in_begin_line())
  44:../../src/string_buffer.h ****         s << " ";
  45:../../src/string_buffer.h ****     return s;
  46:../../src/string_buffer.h **** }
  47:../../src/string_buffer.h **** 
  48:../../src/string_buffer.h **** 
  49:../../src/string_buffer.h **** String_buffer& String_buffer::operator<< (std::string_view string)
  50:../../src/string_buffer.h **** {
  51:../../src/string_buffer.h ****     size_t string_size = string.size();
  52:../../src/string_buffer.h ****     auto begin_line    = screen.begin() + number_line * line_size;
  53:../../src/string_buffer.h ****     auto end_line      = screen.begin() + number_line * line_size + line_size;
  54:../../src/string_buffer.h **** 
  55:../../src/string_buffer.h ****     // if (width_) {position += (width_size - string_size); width_ = false;}
  56:../../src/string_buffer.h ****     if (align){
  57:../../src/string_buffer.h ****         if (string_size < line_size) {
  58:../../src/string_buffer.h ****             auto begin_string = begin_line + (line_size - string_size)/2;
  59:../../src/string_buffer.h ****             auto end_string   = begin_string + string.size();
  60:../../src/string_buffer.h **** 
  61:../../src/string_buffer.h ****             std::fill(begin_line    , begin_string, ' ');
  62:../../src/string_buffer.h ****             std::copy(string.begin(), string.end(), begin_string);
  63:../../src/string_buffer.h ****             std::fill(end_string    , end_line    , ' ');
  64:../../src/string_buffer.h ****             align = false;
  65:../../src/string_buffer.h ****         } else {
  66:../../src/string_buffer.h ****             auto begin_string = string.begin() + (string_size - line_size)/2;
  67:../../src/string_buffer.h ****             auto end_string   = begin_string + line_size;
  68:../../src/string_buffer.h **** 
  69:../../src/string_buffer.h ****             std::copy(begin_string, end_string, begin_line);
  70:../../src/string_buffer.h ****             align = false;
  71:../../src/string_buffer.h ****         }
  72:../../src/string_buffer.h ****         position = number_line * line_size + line_size;
  73:../../src/string_buffer.h ****     } else {
  74:../../src/string_buffer.h ****         if (string_size < screen_size - position) {
  75:../../src/string_buffer.h ****             std::copy(string.begin(), string.end(), screen.begin() + position);
  76:../../src/string_buffer.h ****             position += string_size;
  77:../../src/string_buffer.h ****         } else {
  78:../../src/string_buffer.h ****             std::copy(string.begin(), string.begin() + (screen_size - position), screen.begin() + p
  79:../../src/string_buffer.h ****             size_t rest_string = string_size - (screen_size - position);
ARM GAS  /tmp/ccFxkDJm.s 			page 82


  80:../../src/string_buffer.h ****             
  81:../../src/string_buffer.h ****             while (rest_string > screen_size) {
  82:../../src/string_buffer.h ****                 auto begin_string = string.begin() + (string_size - rest_string);
  83:../../src/string_buffer.h ****                 auto end_string   = begin_string + screen_size;
  84:../../src/string_buffer.h ****                 std::copy(begin_string, end_string, screen.begin());
  85:../../src/string_buffer.h ****                 rest_string -= screen_size;
  86:../../src/string_buffer.h ****             }
  87:../../src/string_buffer.h ****             std::copy(string.begin() + (string_size - rest_string), string.end(), screen.begin());
  88:../../src/string_buffer.h ****             position += rest_string;
  89:../../src/string_buffer.h ****         }
  90:../../src/string_buffer.h ****     }
  91:../../src/string_buffer.h ****     
  92:../../src/string_buffer.h ****     return *this;
  93:../../src/string_buffer.h **** }
  94:../../src/string_buffer.h **** 
  95:../../src/string_buffer.h **** String_buffer& String_buffer::operator<< (int number)
  96:../../src/string_buffer.h **** {
  97:../../src/string_buffer.h ****     char string[10];
  98:../../src/string_buffer.h ****     sprintf(string, "%d", number);
  99:../../src/string_buffer.h ****     std::string_view str (string);
 100:../../src/string_buffer.h ****     auto qty_space = (width_size > str.size()) ? (width_size - str.size()) : 0;
 101:../../src/string_buffer.h **** 
 102:../../src/string_buffer.h ****     while (qty_space) {
 103:../../src/string_buffer.h ****         *this << " ";
 104:../../src/string_buffer.h ****         qty_space--;
 105:../../src/string_buffer.h ****     }
 106:../../src/string_buffer.h ****     *this << string;
 107:../../src/string_buffer.h ****     width_size = 0;
 108:../../src/string_buffer.h ****     return *this;
 109:../../src/string_buffer.h **** }
 110:../../src/string_buffer.h **** 
 111:../../src/string_buffer.h **** String_buffer& String_buffer::operator<< (String_buffer_ref& function)
 112:../../src/string_buffer.h **** {
 2347              		.loc 15 112 0
 2348              		.cfi_startproc
 2349              		@ args = 0, pretend = 0, frame = 0
 2350              		@ frame_needed = 0, uses_anonymous_args = 0
 2351              	.LVL208:
 2352 0000 10B5     		push	{r4, lr}
 2353              	.LCFI22:
 2354              		.cfi_def_cfa_offset 8
 2355              		.cfi_offset 4, -8
 2356              		.cfi_offset 14, -4
 113:../../src/string_buffer.h ****     return function(*this);
 2357              		.loc 15 113 0
 2358 0002 8847     		blx	r1
 2359              	.LVL209:
 114:../../src/string_buffer.h **** }
 2360              		.loc 15 114 0
 2361              		@ sp needed
 2362 0004 10BD     		pop	{r4, pc}
 2363              		.cfi_endproc
 2364              	.LFE2633:
 2366              		.section	.text._ZN13String_buffer4lineEj,"ax",%progbits
 2367              		.align	1
 2368              		.global	_ZN13String_buffer4lineEj
 2369              		.syntax unified
ARM GAS  /tmp/ccFxkDJm.s 			page 83


 2370              		.code	16
 2371              		.thumb_func
 2372              		.fpu softvfp
 2374              	_ZN13String_buffer4lineEj:
 2375              	.LFB2634:
 115:../../src/string_buffer.h **** 
 116:../../src/string_buffer.h **** String_buffer& String_buffer::line(size_t string)
 117:../../src/string_buffer.h **** {
 2376              		.loc 15 117 0
 2377              		.cfi_startproc
 2378              		@ args = 0, pretend = 0, frame = 0
 2379              		@ frame_needed = 0, uses_anonymous_args = 0
 2380              		@ link register save eliminated.
 2381              	.LVL210:
 118:../../src/string_buffer.h ****     number_line = string;
 119:../../src/string_buffer.h ****     position = number_line * line_size;
 2382              		.loc 15 119 0
 2383 0000 1423     		movs	r3, #20
 118:../../src/string_buffer.h ****     number_line = string;
 2384              		.loc 15 118 0
 2385 0002 0160     		str	r1, [r0]
 2386              		.loc 15 119 0
 2387 0004 5943     		muls	r1, r3
 2388              	.LVL211:
 120:../../src/string_buffer.h ****     return *this;
 121:../../src/string_buffer.h **** }
 2389              		.loc 15 121 0
 2390              		@ sp needed
 119:../../src/string_buffer.h ****     return *this;
 2391              		.loc 15 119 0
 2392 0006 8160     		str	r1, [r0, #8]
 2393              		.loc 15 121 0
 2394 0008 7047     		bx	lr
 2395              		.cfi_endproc
 2396              	.LFE2634:
 2398              		.section	.text._ZN13String_buffer5widthEj,"ax",%progbits
 2399              		.align	1
 2400              		.global	_ZN13String_buffer5widthEj
 2401              		.syntax unified
 2402              		.code	16
 2403              		.thumb_func
 2404              		.fpu softvfp
 2406              	_ZN13String_buffer5widthEj:
 2407              	.LFB2635:
 122:../../src/string_buffer.h **** 
 123:../../src/string_buffer.h **** // FIX dont work
 124:../../src/string_buffer.h **** String_buffer& String_buffer::width(size_t width)
 125:../../src/string_buffer.h **** {
 2408              		.loc 15 125 0
 2409              		.cfi_startproc
 2410              		@ args = 0, pretend = 0, frame = 0
 2411              		@ frame_needed = 0, uses_anonymous_args = 0
 2412              		@ link register save eliminated.
 2413              	.LVL212:
 126:../../src/string_buffer.h ****     width_size = width;
 2414              		.loc 15 126 0
 2415 0000 4160     		str	r1, [r0, #4]
ARM GAS  /tmp/ccFxkDJm.s 			page 84


 127:../../src/string_buffer.h ****     return *this;
 128:../../src/string_buffer.h **** }
 2416              		.loc 15 128 0
 2417              		@ sp needed
 2418 0002 7047     		bx	lr
 2419              		.cfi_endproc
 2420              	.LFE2635:
 2422              		.section	.text._ZN13String_buffer6cursorEj,"ax",%progbits
 2423              		.align	1
 2424              		.global	_ZN13String_buffer6cursorEj
 2425              		.syntax unified
 2426              		.code	16
 2427              		.thumb_func
 2428              		.fpu softvfp
 2430              	_ZN13String_buffer6cursorEj:
 2431              	.LFB2636:
 129:../../src/string_buffer.h **** 
 130:../../src/string_buffer.h **** String_buffer& String_buffer::cursor(size_t cursor)
 131:../../src/string_buffer.h **** {
 2432              		.loc 15 131 0
 2433              		.cfi_startproc
 2434              		@ args = 0, pretend = 0, frame = 0
 2435              		@ frame_needed = 0, uses_anonymous_args = 0
 2436              	.LVL213:
 2437 0000 10B5     		push	{r4, lr}
 2438              	.LCFI23:
 2439              		.cfi_def_cfa_offset 8
 2440              		.cfi_offset 4, -8
 2441              		.cfi_offset 14, -4
 2442              		.loc 15 131 0
 2443 0002 0400     		movs	r4, r0
 132:../../src/string_buffer.h ****     position = (cursor + number_line * line_size) % screen_size;
 2444              		.loc 15 132 0
 2445 0004 1420     		movs	r0, #20
 2446              	.LVL214:
 2447 0006 2368     		ldr	r3, [r4]
 133:../../src/string_buffer.h ****     return *this;
 134:../../src/string_buffer.h **** }
 2448              		.loc 15 134 0
 2449              		@ sp needed
 132:../../src/string_buffer.h ****     position = (cursor + number_line * line_size) % screen_size;
 2450              		.loc 15 132 0
 2451 0008 5843     		muls	r0, r3
 2452 000a 4018     		adds	r0, r0, r1
 2453 000c 5021     		movs	r1, #80
 2454              	.LVL215:
 2455 000e FFF7FEFF 		bl	__aeabi_uidivmod
 2456              	.LVL216:
 2457              		.loc 15 134 0
 2458 0012 2000     		movs	r0, r4
 132:../../src/string_buffer.h ****     position = (cursor + number_line * line_size) % screen_size;
 2459              		.loc 15 132 0
 2460 0014 A160     		str	r1, [r4, #8]
 2461              	.LVL217:
 2462              		.loc 15 134 0
 2463 0016 10BD     		pop	{r4, pc}
 2464              		.cfi_endproc
ARM GAS  /tmp/ccFxkDJm.s 			page 85


 2465              	.LFE2636:
 2467              		.section	.text._ZN13String_buffer6centerEv,"ax",%progbits
 2468              		.align	1
 2469              		.global	_ZN13String_buffer6centerEv
 2470              		.syntax unified
 2471              		.code	16
 2472              		.thumb_func
 2473              		.fpu softvfp
 2475              	_ZN13String_buffer6centerEv:
 2476              	.LFB2637:
 135:../../src/string_buffer.h **** 
 136:../../src/string_buffer.h **** String_buffer& String_buffer::center ()
 137:../../src/string_buffer.h **** {
 2477              		.loc 15 137 0
 2478              		.cfi_startproc
 2479              		@ args = 0, pretend = 0, frame = 0
 2480              		@ frame_needed = 0, uses_anonymous_args = 0
 2481              		@ link register save eliminated.
 2482              	.LVL218:
 138:../../src/string_buffer.h ****     align = true;
 2483              		.loc 15 138 0
 2484 0000 0123     		movs	r3, #1
 2485 0002 0373     		strb	r3, [r0, #12]
 139:../../src/string_buffer.h ****     return *this;
 140:../../src/string_buffer.h **** }...
 2486              		.loc 15 140 0
 2487              		@ sp needed
 2488 0004 7047     		bx	lr
 2489              		.cfi_endproc
 2490              	.LFE2637:
 2492              		.section	.text.init_clock,"ax",%progbits
 2493              		.align	1
 2494              		.global	init_clock
 2495              		.syntax unified
 2496              		.code	16
 2497              		.thumb_func
 2498              		.fpu softvfp
 2500              	init_clock:
 2501              	.LFB2652:
 2502              		.file 16 "main.cpp"
   1:main.cpp      **** #define STM32F103xB
   2:main.cpp      **** #define F_OSC   8000000UL
   3:main.cpp      **** #define F_CPU   72000000UL
   4:main.cpp      **** // #include <iostream>
   5:main.cpp      **** #include "init_clock.h"
   6:main.cpp      **** // #include "example_hd44780.h"
   7:main.cpp      **** #include "example_select_screen.h"
   8:main.cpp      **** 
   9:main.cpp      **** /// —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–µ—Ä–≤–æ–π –≤ startup —Ñ–∞–π–ª–µ
  10:main.cpp      **** extern "C" void init_clock() { init_clock<F_OSC, F_CPU>(); }
 2503              		.loc 16 10 0
 2504              		.cfi_startproc
 2505              		@ args = 0, pretend = 0, frame = 0
 2506              		@ frame_needed = 0, uses_anonymous_args = 0
 2507              		@ link register save eliminated.
 2508              	.LBB1170:
 2509              	.LBB1171:
ARM GAS  /tmp/ccFxkDJm.s 			page 86


 2510              	.LBB1172:
  40:../../src/periph/flash_f1.h ****    FLASH& lock()                     { CR.LOCK     = true; return *this; }
 2511              		.loc 7 40 0
 2512 0000 1022     		movs	r2, #16
 2513 0002 1F4B     		ldr	r3, .L172
 2514 0004 1968     		ldr	r1, [r3]
 2515 0006 0A43     		orrs	r2, r1
 2516              	.LBE1172:
 2517              	.LBE1171:
 2518              	.LBB1174:
 2519              	.LBB1175:
  39:../../src/periph/flash_f1.h ****    FLASH& enable ()                  { ACR.PRFTBE = true;  return *this; }
 2520              		.loc 7 39 0
 2521 0008 0721     		movs	r1, #7
 2522              	.LBE1175:
 2523              	.LBE1174:
 2524              	.LBB1177:
 2525              	.LBB1173:
  40:../../src/periph/flash_f1.h ****    FLASH& lock()                     { CR.LOCK     = true; return *this; }
 2526              		.loc 7 40 0
 2527 000a 1A60     		str	r2, [r3]
 2528              	.LVL219:
 2529              	.LBE1173:
 2530              	.LBE1177:
 2531              	.LBB1178:
 2532              	.LBB1176:
  39:../../src/periph/flash_f1.h ****    FLASH& enable ()                  { ACR.PRFTBE = true;  return *this; }
 2533              		.loc 7 39 0
 2534 000c 1A68     		ldr	r2, [r3]
 2535 000e 8A43     		bics	r2, r1
 2536 0010 1100     		movs	r1, r2
 2537 0012 0222     		movs	r2, #2
 2538 0014 0A43     		orrs	r2, r1
 2539 0016 1A60     		str	r2, [r3]
 2540              	.LVL220:
 2541              	.LBE1176:
 2542              	.LBE1178:
 2543              	.LBB1179:
 2544              	.LBB1180:
 2545              		.file 17 "../../src/periph/rcc_f1.h"
   1:../../src/periph/rcc_f1.h **** #pragma once
   2:../../src/periph/rcc_f1.h **** 
   3:../../src/periph/rcc_f1.h **** #include "bits_rcc_f1.h"
   4:../../src/periph/rcc_f1.h **** 
   5:../../src/periph/rcc_f1.h **** namespace mcu {
   6:../../src/periph/rcc_f1.h **** 
   7:../../src/periph/rcc_f1.h **** class RCC {
   8:../../src/periph/rcc_f1.h **** 	__IO RCC_bits::CR      CR;       // RCC clock control register,                offset: 0x00
   9:../../src/periph/rcc_f1.h **** 	__IO RCC_bits::CFGR    CFGR;     // RCC clock configuration register,          offset: 0x04
  10:../../src/periph/rcc_f1.h **** 	__IO uint32_t          CIR;      // RCC clock interrupt register,              offset: 0x08
  11:../../src/periph/rcc_f1.h **** 	__IO uint32_t          APB2RSTR; // RCC APB2 peripheral reset register,        offset: 0x0C
  12:../../src/periph/rcc_f1.h **** 	__IO uint32_t          APB1RSTR; // RCC APB1 peripheral reset register,        offset: 0x10
  13:../../src/periph/rcc_f1.h **** 	__IO RCC_bits::AHBENR  AHBENR;   // RCC AHB peripheral clock register,         offset: 0x14
  14:../../src/periph/rcc_f1.h **** 	__IO RCC_bits::APB2ENR APB2ENR;  // RCC APB2 peripheral clock enable register, offset: 0x18
  15:../../src/periph/rcc_f1.h **** 	__IO RCC_bits::APB1ENR APB1ENR;  // RCC APB1 peripheral clock enable register, offset: 0x1C
  16:../../src/periph/rcc_f1.h **** 	__IO uint32_t          BDCR;     // RCC Backup domain control register,        offset: 0x20
  17:../../src/periph/rcc_f1.h **** 	__IO uint32_t          CSR;      // RCC clock control & status register,       offset: 0x24
ARM GAS  /tmp/ccFxkDJm.s 			page 87


  18:../../src/periph/rcc_f1.h **** 
  19:../../src/periph/rcc_f1.h **** public:
  20:../../src/periph/rcc_f1.h **** 	using CMSIS_type    = RCC_TypeDef;
  21:../../src/periph/rcc_f1.h **** 	using AHBprescaler  = RCC_bits::CFGR::AHBprescaler;
  22:../../src/periph/rcc_f1.h **** 	using APBprescaler  = RCC_bits::CFGR::APBprescaler;
  23:../../src/periph/rcc_f1.h **** 	using ADCprescaler  = RCC_bits::CFGR::ADCprescaler;
  24:../../src/periph/rcc_f1.h **** 	using SystemClock   = RCC_bits::CFGR::SystemClock;
  25:../../src/periph/rcc_f1.h **** 	using PLLsource     = RCC_bits::CFGR::PLLsource;
  26:../../src/periph/rcc_f1.h **** 	using PLLmultiplier = RCC_bits::CFGR::PLLmultiplier;
  27:../../src/periph/rcc_f1.h **** 
  28:../../src/periph/rcc_f1.h **** 	auto& like_CMSIS() { return *reinterpret_cast<CMSIS_type*>(this); }
  29:../../src/periph/rcc_f1.h **** 
  30:../../src/periph/rcc_f1.h **** 	RCC& set       (AHBprescaler  v) { CFGR.HPRE   = v; return *this; } //
  31:../../src/periph/rcc_f1.h **** 	RCC& set_APB1  (APBprescaler  v) { CFGR.PPRE1  = v; return *this; } //
  32:../../src/periph/rcc_f1.h **** 	RCC& set_APB2  (APBprescaler  v) { CFGR.PPRE2  = v; return *this; } //
  33:../../src/periph/rcc_f1.h **** 	// RCC& set       (ADCprescaler  v) { CFGR.ADCPRE = v; return *this; } // dont use yet
  34:../../src/periph/rcc_f1.h **** 	RCC& set       (SystemClock   v) { CFGR.SW     = v; return *this; } //
  35:../../src/periph/rcc_f1.h **** 	RCC& set       (PLLsource     v) { CFGR.PLLSRC = v; return *this; } //
  36:../../src/periph/rcc_f1.h **** 	RCC& set       (PLLmultiplier v) { CFGR.PLLMUL = v; return *this; } //
  37:../../src/periph/rcc_f1.h **** 
  38:../../src/periph/rcc_f1.h **** 	RCC& on_HSE        () { CR.HSEON = true;         return *this; }
 2546              		.loc 17 38 0
 2547 0018 8022     		movs	r2, #128
 2548 001a 1A4B     		ldr	r3, .L172+4
 2549 001c 5202     		lsls	r2, r2, #9
 2550 001e 1968     		ldr	r1, [r3]
 2551 0020 0A43     		orrs	r2, r1
 2552 0022 1A60     		str	r2, [r3]
 2553              	.L166:
 2554              	.LBE1180:
 2555              	.LBE1179:
 2556              	.LBB1181:
 2557              	.LBB1182:
  39:../../src/periph/rcc_f1.h **** 	RCC& wait_HSE_ready() { while (not CR.HSERDY) {} return *this; }
 2558              		.loc 17 39 0
 2559 0024 1A68     		ldr	r2, [r3]
 2560 0026 9203     		lsls	r2, r2, #14
 2561 0028 FCD5     		bpl	.L166
 2562              	.LVL221:
 2563              	.LBE1182:
 2564              	.LBE1181:
 2565              	.LBB1183:
 2566              	.LBB1184:
  30:../../src/periph/rcc_f1.h **** 	RCC& set_APB1  (APBprescaler  v) { CFGR.PPRE1  = v; return *this; } //
 2567              		.loc 17 30 0
 2568 002a F021     		movs	r1, #240
 2569 002c 5A68     		ldr	r2, [r3, #4]
 2570 002e 8A43     		bics	r2, r1
 2571 0030 5A60     		str	r2, [r3, #4]
 2572              	.LVL222:
 2573              	.LBE1184:
 2574              	.LBE1183:
 2575              	.LBB1185:
 2576              	.LBB1186:
  31:../../src/periph/rcc_f1.h **** 	RCC& set_APB2  (APBprescaler  v) { CFGR.PPRE2  = v; return *this; } //
 2577              		.loc 17 31 0
 2578 0032 5A68     		ldr	r2, [r3, #4]
ARM GAS  /tmp/ccFxkDJm.s 			page 88


 2579 0034 1449     		ldr	r1, .L172+8
 2580 0036 1140     		ands	r1, r2
 2581 0038 8022     		movs	r2, #128
 2582 003a D200     		lsls	r2, r2, #3
 2583 003c 0A43     		orrs	r2, r1
 2584 003e 5A60     		str	r2, [r3, #4]
 2585              	.LVL223:
 2586              	.LBE1186:
 2587              	.LBE1185:
 2588              	.LBB1187:
 2589              	.LBB1188:
  32:../../src/periph/rcc_f1.h **** 	// RCC& set       (ADCprescaler  v) { CFGR.ADCPRE = v; return *this; } // dont use yet
 2590              		.loc 17 32 0
 2591 0040 5A68     		ldr	r2, [r3, #4]
 2592 0042 1249     		ldr	r1, .L172+12
 2593 0044 0A40     		ands	r2, r1
 2594 0046 5A60     		str	r2, [r3, #4]
 2595              	.LVL224:
 2596              	.LBE1188:
 2597              	.LBE1187:
 2598              	.LBB1189:
 2599              	.LBB1190:
  35:../../src/periph/rcc_f1.h **** 	RCC& set       (PLLmultiplier v) { CFGR.PLLMUL = v; return *this; } //
 2600              		.loc 17 35 0
 2601 0048 8022     		movs	r2, #128
 2602 004a 5968     		ldr	r1, [r3, #4]
 2603 004c 5202     		lsls	r2, r2, #9
 2604 004e 0A43     		orrs	r2, r1
 2605 0050 5A60     		str	r2, [r3, #4]
 2606              	.LVL225:
 2607              	.LBE1190:
 2608              	.LBE1189:
 2609              	.LBB1191:
 2610              	.LBB1192:
  36:../../src/periph/rcc_f1.h **** 
 2611              		.loc 17 36 0
 2612 0052 5A68     		ldr	r2, [r3, #4]
 2613 0054 0E49     		ldr	r1, .L172+16
 2614 0056 1140     		ands	r1, r2
 2615 0058 E022     		movs	r2, #224
 2616 005a 5203     		lsls	r2, r2, #13
 2617 005c 0A43     		orrs	r2, r1
 2618 005e 5A60     		str	r2, [r3, #4]
 2619              	.LVL226:
 2620              	.LBE1192:
 2621              	.LBE1191:
 2622              	.LBB1193:
 2623              	.LBB1194:
  40:../../src/periph/rcc_f1.h **** 	RCC& on_PLL        () { CR.PLLON = true;         return *this; }
 2624              		.loc 17 40 0
 2625 0060 8022     		movs	r2, #128
 2626 0062 1968     		ldr	r1, [r3]
 2627 0064 5204     		lsls	r2, r2, #17
 2628 0066 0A43     		orrs	r2, r1
 2629 0068 1A60     		str	r2, [r3]
 2630              	.L167:
 2631              	.LBE1194:
ARM GAS  /tmp/ccFxkDJm.s 			page 89


 2632              	.LBE1193:
 2633              	.LBB1195:
 2634              	.LBB1196:
  41:../../src/periph/rcc_f1.h **** 	RCC& wait_PLL_ready() { while (not CR.PLLRDY) {} return *this; }
 2635              		.loc 17 41 0
 2636 006a 1A68     		ldr	r2, [r3]
 2637 006c 9201     		lsls	r2, r2, #6
 2638 006e FCD5     		bpl	.L167
 2639              	.LVL227:
 2640              	.LBE1196:
 2641              	.LBE1195:
 2642              	.LBB1197:
 2643              	.LBB1198:
  34:../../src/periph/rcc_f1.h **** 	RCC& set       (PLLsource     v) { CFGR.PLLSRC = v; return *this; } //
 2644              		.loc 17 34 0
 2645 0070 0321     		movs	r1, #3
 2646 0072 5A68     		ldr	r2, [r3, #4]
 2647              	.LBE1198:
 2648              	.LBE1197:
 2649              	.LBE1170:
 2650              		.loc 16 10 0
 2651              		@ sp needed
 2652              	.LBB1201:
 2653              	.LBB1200:
 2654              	.LBB1199:
  34:../../src/periph/rcc_f1.h **** 	RCC& set       (PLLsource     v) { CFGR.PLLSRC = v; return *this; } //
 2655              		.loc 17 34 0
 2656 0074 8A43     		bics	r2, r1
 2657 0076 1100     		movs	r1, r2
 2658 0078 0222     		movs	r2, #2
 2659 007a 0A43     		orrs	r2, r1
 2660 007c 5A60     		str	r2, [r3, #4]
 2661              	.LVL228:
 2662              	.LBE1199:
 2663              	.LBE1200:
 2664              	.LBE1201:
 2665              		.loc 16 10 0
 2666 007e 7047     		bx	lr
 2667              	.L173:
 2668              		.align	2
 2669              	.L172:
 2670 0080 00200240 		.word	1073881088
 2671 0084 00100240 		.word	1073876992
 2672 0088 FFF8FFFF 		.word	-1793
 2673 008c FFC7FFFF 		.word	-14337
 2674 0090 FFFFC3FF 		.word	-3932161
 2675              		.cfi_endproc
 2676              	.LFE2652:
 2678              		.section	.text._ZSt4copyIPKcPcET0_T_S4_S3_,"axG",%progbits,_ZSt4copyIPKcPcET0_T_S4_S3_,comdat
 2679              		.align	1
 2680              		.weak	_ZSt4copyIPKcPcET0_T_S4_S3_
 2681              		.syntax unified
 2682              		.code	16
 2683              		.thumb_func
 2684              		.fpu softvfp
 2686              	_ZSt4copyIPKcPcET0_T_S4_S3_:
 2687              	.LFB2920:
ARM GAS  /tmp/ccFxkDJm.s 			page 90


 446:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 2688              		.loc 6 446 0
 2689              		.cfi_startproc
 2690              		@ args = 0, pretend = 0, frame = 0
 2691              		@ frame_needed = 0, uses_anonymous_args = 0
 2692              	.LVL229:
 2693 0000 70B5     		push	{r4, r5, r6, lr}
 2694              	.LCFI24:
 2695              		.cfi_def_cfa_offset 16
 2696              		.cfi_offset 4, -16
 2697              		.cfi_offset 5, -12
 2698              		.cfi_offset 6, -8
 2699              		.cfi_offset 14, -4
 446:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 2700              		.loc 6 446 0
 2701 0002 1500     		movs	r5, r2
 2702              	.LVL230:
 2703              	.LBB1207:
 2704              	.LBB1208:
 2705              	.LBB1209:
 2706              	.LBB1210:
 2707              	.LBB1211:
 366:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  if (_Num)
 2708              		.loc 6 366 0
 2709 0004 0C1A     		subs	r4, r1, r0
 367:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 2710              		.loc 6 367 0
 2711 0006 04D0     		beq	.L175
 368:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 2712              		.loc 6 368 0
 2713 0008 0100     		movs	r1, r0
 2714              	.LVL231:
 2715 000a 2200     		movs	r2, r4
 2716              	.LVL232:
 2717 000c 2800     		movs	r0, r5
 2718              	.LVL233:
 2719 000e FFF7FEFF 		bl	memmove
 2720              	.LVL234:
 2721              	.L175:
 369:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	}
 2722              		.loc 6 369 0
 2723 0012 2819     		adds	r0, r5, r4
 2724              	.LBE1211:
 2725              	.LBE1210:
 2726              	.LBE1209:
 2727              	.LBE1208:
 2728              	.LBE1207:
 457:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 2729              		.loc 6 457 0
 2730              		@ sp needed
 2731              	.LVL235:
 2732 0014 70BD     		pop	{r4, r5, r6, pc}
 2733              		.cfi_endproc
 2734              	.LFE2920:
 2736              		.section	.text._ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE,"ax",%progbits
 2737              		.align	1
 2738              		.global	_ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE
ARM GAS  /tmp/ccFxkDJm.s 			page 91


 2739              		.syntax unified
 2740              		.code	16
 2741              		.thumb_func
 2742              		.fpu softvfp
 2744              	_ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE:
 2745              	.LFB2628:
  50:../../src/string_buffer.h **** {
 2746              		.loc 15 50 0
 2747              		.cfi_startproc
 2748              		@ args = 0, pretend = 0, frame = 24
 2749              		@ frame_needed = 0, uses_anonymous_args = 0
 2750              	.LVL236:
 2751              	.LBB1212:
 2752              	.LBB1213:
 2753              	.LBB1214:
 2754              		.file 18 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/ar
   1:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // <array> -*- C++ -*-
   2:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
   3:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // Copyright (C) 2007-2017 Free Software Foundation, Inc.
   4:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** //
   5:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // software; you can redistribute it and/or modify it under the
   7:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // terms of the GNU General Public License as published by the
   8:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // Free Software Foundation; either version 3, or (at your option)
   9:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // any later version.
  10:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  11:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // This library is distributed in the hope that it will be useful,
  12:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // GNU General Public License for more details.
  15:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  16:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // Under Section 7 of GPL version 3, you are granted additional
  17:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // permissions described in the GCC Runtime Library Exception, version
  18:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // 3.1, as published by the Free Software Foundation.
  19:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  20:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // You should have received a copy of the GNU General Public License and
  21:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // <http://www.gnu.org/licenses/>.
  24:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  25:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** /** @file include/array
  26:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****  *  This is a Standard C++ Library header.
  27:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****  */
  28:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  29:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #ifndef _GLIBCXX_ARRAY
  30:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #define _GLIBCXX_ARRAY 1
  31:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  32:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #pragma GCC system_header
  33:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  34:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #if __cplusplus < 201103L
  35:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** # include <bits/c++0x_warning.h>
  36:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #else
  37:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  38:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #include <utility>
  39:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #include <stdexcept>
  40:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #include <bits/stl_algobase.h>
  41:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #include <bits/range_access.h>
ARM GAS  /tmp/ccFxkDJm.s 			page 92


  42:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  43:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** {
  45:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  46:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  47:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****   template<typename _Tp, std::size_t _Nm>
  48:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****     struct __array_traits
  49:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****     {
  50:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef _Tp _Type[_Nm];
  51:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef __is_swappable<_Tp> _Is_swappable;
  52:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef __is_nothrow_swappable<_Tp> _Is_nothrow_swappable;
  53:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  54:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       static constexpr _Tp&
  55:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _S_ref(const _Type& __t, std::size_t __n) noexcept
  56:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_cast<_Tp&>(__t[__n]); }
  57:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  58:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       static constexpr _Tp*
  59:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _S_ptr(const _Type& __t) noexcept
  60:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_cast<_Tp*>(__t); }
  61:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****     };
  62:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  63:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****  template<typename _Tp>
  64:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    struct __array_traits<_Tp, 0>
  65:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    {
  66:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      struct _Type { };
  67:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      typedef true_type _Is_swappable;
  68:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      typedef true_type _Is_nothrow_swappable;
  69:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  70:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      static constexpr _Tp&
  71:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      _S_ref(const _Type&, std::size_t) noexcept
  72:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      { return *static_cast<_Tp*>(nullptr); }
  73:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  74:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      static constexpr _Tp*
  75:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      _S_ptr(const _Type&) noexcept
  76:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      { return nullptr; }
  77:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    };
  78:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  79:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****   /**
  80:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  @brief A standard container for storing a fixed size sequence of elements.
  81:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *
  82:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  @ingroup sequences
  83:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *
  84:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  85:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  <a href="tables.html#66">reversible container</a>, and a
  86:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  <a href="tables.html#67">sequence</a>.
  87:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *
  88:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  Sets support random access iterators.
  89:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *
  90:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  @tparam  Tp  Type of element. Required to be a complete type.
  91:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  @tparam  N  Number of elements.
  92:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****   */
  93:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****   template<typename _Tp, std::size_t _Nm>
  94:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****     struct array
  95:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****     {
  96:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef _Tp 	    			      value_type;
  97:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef value_type*			      pointer;
  98:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef const value_type*                       const_pointer;
ARM GAS  /tmp/ccFxkDJm.s 			page 93


  99:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef value_type&                   	      reference;
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef const value_type&             	      const_reference;
 101:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef value_type*          		      iterator;
 102:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef const value_type*			      const_iterator;
 103:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef std::size_t                    	      size_type;
 104:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef std::ptrdiff_t                   	      difference_type;
 105:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef std::reverse_iterator<iterator>	      reverse_iterator;
 106:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;
 107:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 108:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       // Support for zero-sized arrays mandatory.
 109:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef _GLIBCXX_STD_C::__array_traits<_Tp, _Nm> _AT_Type;
 110:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typename _AT_Type::_Type                         _M_elems;
 111:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 112:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       // No explicit construct/copy/destroy for aggregate type.
 113:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 114:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       // DR 776.
 115:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       void
 116:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       fill(const value_type& __u)
 117:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { std::fill_n(begin(), size(), __u); }
 118:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 119:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       void
 120:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       swap(array& __other)
 121:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       noexcept(_AT_Type::_Is_nothrow_swappable::value)
 122:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { std::swap_ranges(begin(), end(), __other.begin()); }
 123:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 124:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       // Iterators.
 125:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR iterator
 126:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       begin() noexcept
 127:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return iterator(data()); }
 128:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 129:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 130:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       begin() const noexcept
 131:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_iterator(data()); }
 132:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 133:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR iterator
 134:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       end() noexcept
 135:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return iterator(data() + _Nm); }
 136:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 137:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 138:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       end() const noexcept
 139:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_iterator(data() + _Nm); }
 140:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 141:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 142:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       rbegin() noexcept
 143:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return reverse_iterator(end()); }
 144:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 145:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 146:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       rbegin() const noexcept
 147:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_reverse_iterator(end()); }
 148:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 149:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 150:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       rend() noexcept
 151:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return reverse_iterator(begin()); }
 152:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 153:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 154:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       rend() const noexcept
 155:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_reverse_iterator(begin()); }
ARM GAS  /tmp/ccFxkDJm.s 			page 94


 156:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 157:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 158:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       cbegin() const noexcept
 159:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_iterator(data()); }
 160:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 161:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 162:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       cend() const noexcept
 163:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_iterator(data() + _Nm); }
 164:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 165:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 166:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       crbegin() const noexcept
 167:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_reverse_iterator(end()); }
 168:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 169:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 170:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       crend() const noexcept
 171:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_reverse_iterator(begin()); }
 172:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 173:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       // Capacity.
 174:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       constexpr size_type
 175:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       size() const noexcept { return _Nm; }
 176:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 177:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       constexpr size_type
 178:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       max_size() const noexcept { return _Nm; }
 179:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 180:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       constexpr bool
 181:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       empty() const noexcept { return size() == 0; }
 182:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 183:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       // Element access.
 184:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR reference
 185:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       operator[](size_type __n) noexcept
 186:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return _AT_Type::_S_ref(_M_elems, __n); }
 187:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 188:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       constexpr const_reference
 189:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       operator[](size_type __n) const noexcept
 190:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return _AT_Type::_S_ref(_M_elems, __n); }
 191:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 192:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR reference
 193:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       at(size_type __n)
 194:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       {
 195:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	if (__n >= _Nm)
 196:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	  std::__throw_out_of_range_fmt(__N("array::at: __n (which is %zu) "
 197:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 					    ">= _Nm (which is %zu)"),
 198:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 					__n, _Nm);
 199:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	return _AT_Type::_S_ref(_M_elems, __n);
 200:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       }
 201:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 202:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       constexpr const_reference
 203:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       at(size_type __n) const
 204:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       {
 205:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	// Result of conditional expression must be an lvalue so use
 206:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	// boolean ? lvalue : (throw-expr, lvalue)
 207:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	return __n < _Nm ? _AT_Type::_S_ref(_M_elems, __n)
 208:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	  : (std::__throw_out_of_range_fmt(__N("array::at: __n (which is %zu) "
 209:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 					       ">= _Nm (which is %zu)"),
 210:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 					   __n, _Nm),
 211:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	     _AT_Type::_S_ref(_M_elems, 0));
 212:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       }
ARM GAS  /tmp/ccFxkDJm.s 			page 95


 213:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 214:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR reference
 215:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       front() noexcept
 216:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return *begin(); }
 217:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 218:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       constexpr const_reference
 219:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       front() const noexcept
 220:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return _AT_Type::_S_ref(_M_elems, 0); }
 221:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 222:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR reference
 223:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       back() noexcept
 224:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return _Nm ? *(end() - 1) : *end(); }
 225:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 226:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       constexpr const_reference
 227:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       back() const noexcept
 228:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       {
 229:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	return _Nm ? _AT_Type::_S_ref(_M_elems, _Nm - 1)
 230:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****  	           : _AT_Type::_S_ref(_M_elems, 0);
 231:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       }
 232:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 233:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR pointer
 234:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       data() noexcept
 235:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return _AT_Type::_S_ptr(_M_elems); }
 2755              		.loc 18 235 0
 2756 0000 0300     		movs	r3, r0
 2757              	.LBE1214:
 2758              	.LBE1213:
 2759              	.LBE1212:
  50:../../src/string_buffer.h **** {
 2760              		.loc 15 50 0
 2761 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 2762              	.LCFI25:
 2763              		.cfi_def_cfa_offset 20
 2764              		.cfi_offset 4, -20
 2765              		.cfi_offset 5, -16
 2766              		.cfi_offset 6, -12
 2767              		.cfi_offset 7, -8
 2768              		.cfi_offset 14, -4
 2769              	.LBB1219:
 2770              	.LBB1217:
 2771              	.LBB1215:
 2772              		.loc 18 235 0
 2773 0004 0D33     		adds	r3, r3, #13
 2774              	.LBE1215:
 2775              	.LBE1217:
 2776              	.LBE1219:
  50:../../src/string_buffer.h **** {
 2777              		.loc 15 50 0
 2778 0006 87B0     		sub	sp, sp, #28
 2779              	.LCFI26:
 2780              		.cfi_def_cfa_offset 48
 2781              	.LBB1220:
 2782              	.LBB1218:
 2783              	.LBB1216:
 2784              		.loc 18 235 0
 2785 0008 0193     		str	r3, [sp, #4]
 2786              	.LBE1216:
ARM GAS  /tmp/ccFxkDJm.s 			page 96


 2787              	.LBE1218:
 2788              	.LBE1220:
 2789              	.LBB1221:
  56:../../src/string_buffer.h ****     if (align){
 2790              		.loc 15 56 0
 2791 000a 037B     		ldrb	r3, [r0, #12]
 2792              	.LBE1221:
  50:../../src/string_buffer.h **** {
 2793              		.loc 15 50 0
 2794 000c 0500     		movs	r5, r0
 2795 000e 0C00     		movs	r4, r1
 2796              	.LVL237:
 2797 0010 1600     		movs	r6, r2
 2798              	.LVL238:
 2799              	.LBB1243:
  56:../../src/string_buffer.h ****     if (align){
 2800              		.loc 15 56 0
 2801 0012 002B     		cmp	r3, #0
 2802 0014 2FD0     		beq	.L180
 2803              	.LBE1243:
  52:../../src/string_buffer.h ****     auto begin_line    = screen.begin() + number_line * line_size;
 2804              		.loc 15 52 0
 2805 0016 1427     		movs	r7, #20
 2806 0018 0368     		ldr	r3, [r0]
 2807 001a 7B43     		muls	r3, r7
 2808 001c 0293     		str	r3, [sp, #8]
 2809 001e 029A     		ldr	r2, [sp, #8]
 2810 0020 019B     		ldr	r3, [sp, #4]
 2811 0022 9A18     		adds	r2, r3, r2
 2812              	.LBB1244:
 2813              	.LBB1222:
 2814              	.LBB1223:
  57:../../src/string_buffer.h ****         if (string_size < line_size) {
 2815              		.loc 15 57 0
 2816 0024 1329     		cmp	r1, #19
 2817 0026 1ED8     		bhi	.L181
 2818              	.LBB1224:
  58:../../src/string_buffer.h ****             auto begin_string = begin_line + (line_size - string_size)/2;
 2819              		.loc 15 58 0
 2820 0028 7F1A     		subs	r7, r7, r1
 2821 002a 7F08     		lsrs	r7, r7, #1
 2822 002c D719     		adds	r7, r2, r7
 2823              	.LVL239:
  59:../../src/string_buffer.h ****             auto end_string   = begin_string + string.size();
 2824              		.loc 15 59 0
 2825 002e 7B18     		adds	r3, r7, r1
 2826              	.LBB1225:
 2827              	.LBB1226:
 709:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 710:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   /**
 711:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @brief Fills the range [first,last) with copies of value.
 712:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 713:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __first  A forward iterator.
 714:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __last   A forward iterator.
 715:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 716:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
 717:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *
ARM GAS  /tmp/ccFxkDJm.s 			page 97


 718:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 719:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 720:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****    *  to @c memset or @c wmemset.
 721:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   */
 722:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 723:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline void
 724:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
 725:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 726:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       // concept requirements
 727:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 728:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 				  _ForwardIterator>)
 729:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 730:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 731:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       std::__fill_a(std::__niter_base(__first), std::__niter_base(__last),
 2828              		.loc 6 731 0
 2829 0030 1000     		movs	r0, r2
 2830              	.LVL240:
 2831 0032 3900     		movs	r1, r7
 2832              	.LBE1226:
 2833              	.LBE1225:
  59:../../src/string_buffer.h ****             auto end_string   = begin_string + string.size();
 2834              		.loc 15 59 0
 2835 0034 0393     		str	r3, [sp, #12]
 2836              	.LVL241:
 2837              	.LBB1228:
 2838              	.LBB1227:
 2839              		.loc 6 731 0
 2840 0036 FFF7FEFF 		bl	_ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_.isr
 2841              	.LVL242:
 2842              	.LBE1227:
 2843              	.LBE1228:
 2844              	.LBB1229:
 2845              	.LBB1230:
 2846              		.file 19 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/st
   1:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // Components for manipulating non-owning sequences of characters -*- C++ -*-
   2:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
   3:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // Copyright (C) 2013-2017 Free Software Foundation, Inc.
   4:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** //
   5:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // software; you can redistribute it and/or modify it under the
   7:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // terms of the GNU General Public License as published by the
   8:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // Free Software Foundation; either version 3, or (at your option)
   9:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // any later version.
  10:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  11:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // This library is distributed in the hope that it will be useful,
  12:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // GNU General Public License for more details.
  15:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  16:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // Under Section 7 of GPL version 3, you are granted additional
  17:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // permissions described in the GCC Runtime Library Exception, version
  18:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // 3.1, as published by the Free Software Foundation.
  19:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  20:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // You should have received a copy of the GNU General Public License and
  21:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // <http://www.gnu.org/licenses/>.
ARM GAS  /tmp/ccFxkDJm.s 			page 98


  24:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  25:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** /** @file string_view
  26:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****  *  This is a Standard C++ Library header.
  27:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****  */
  28:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  29:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** //
  30:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** // N3762 basic_string_view library
  31:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** //
  32:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  33:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** #ifndef _GLIBCXX_STRING_VIEW
  34:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** #define _GLIBCXX_STRING_VIEW 1
  35:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  36:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** #pragma GCC system_header
  37:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  38:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** #if __cplusplus >= 201703L
  39:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  40:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** #include <limits>
  41:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** #include <iosfwd>
  42:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** #include <bits/char_traits.h>
  43:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** #include <bits/functional_hash.h>
  44:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** #include <bits/range_access.h>
  45:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  46:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** namespace std _GLIBCXX_VISIBILITY(default)
  47:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** {
  48:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  50:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** #define __cpp_lib_string_view 201603
  51:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  52:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****   /**
  53:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *  @class basic_string_view <string_view>
  54:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *  @brief  A non-owning reference to a string.
  55:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *
  56:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *  @ingroup strings
  57:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *  @ingroup sequences
  58:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *
  59:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *  @tparam _CharT  Type of character
  60:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *  @tparam _Traits  Traits for character type, defaults to
  61:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *                   char_traits<_CharT>.
  62:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *
  63:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *  A basic_string_view looks like this:
  64:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *
  65:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *  @code
  66:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *    _CharT*    _M_str
  67:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *    size_t     _M_len
  68:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    *  @endcode
  69:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****    */
  70:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****   template<typename _CharT, typename _Traits = std::char_traits<_CharT>>
  71:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****     class basic_string_view
  72:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****     {
  73:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****     public:
  74:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  75:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       // types
  76:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using traits_type = _Traits;
  77:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using value_type = _CharT;
  78:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using pointer = const _CharT*;
  79:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using const_pointer = const _CharT*;
  80:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using reference = const _CharT&;
ARM GAS  /tmp/ccFxkDJm.s 			page 99


  81:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using const_reference = const _CharT&;
  82:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using const_iterator = const _CharT*;
  83:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using iterator = const_iterator;
  84:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using const_reverse_iterator = std::reverse_iterator<const_iterator>;
  85:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using reverse_iterator = const_reverse_iterator;
  86:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using size_type = size_t;
  87:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       using difference_type = ptrdiff_t;
  88:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       static constexpr size_type npos = size_type(-1);
  89:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  90:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       // [string.view.cons], construct/copy
  91:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  92:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       constexpr
  93:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       basic_string_view() noexcept
  94:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       : _M_len{0}, _M_str{nullptr}
  95:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       { }
  96:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  97:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       constexpr basic_string_view(const basic_string_view&) noexcept = default;
  98:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
  99:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       constexpr basic_string_view(const _CharT* __str)
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       : _M_len{__str == nullptr ? 0 : traits_type::length(__str)},
 101:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 102:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       { }
 103:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
 104:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       constexpr basic_string_view(const _CharT* __str, size_type __len)
 105:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       : _M_len{__len},
 106:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****         _M_str{__str}
 107:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       { }
 108:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
 109:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       constexpr basic_string_view&
 110:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       operator=(const basic_string_view&) noexcept = default;
 111:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
 112:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       // [string.view.iterators], iterators
 113:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
 114:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       constexpr const_iterator
 115:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       begin() const noexcept
 116:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       { return this->_M_str; }
 117:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 
 118:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       constexpr const_iterator
 119:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       end() const noexcept
 120:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       { return this->_M_str + this->_M_len; }
 2847              		.loc 19 120 0
 2848 003a 3119     		adds	r1, r6, r4
 2849              	.LBE1230:
 2850              	.LBE1229:
  62:../../src/string_buffer.h ****             std::copy(string.begin(), string.end(), begin_string);
 2851              		.loc 15 62 0
 2852 003c 3A00     		movs	r2, r7
 2853 003e 3000     		movs	r0, r6
 2854 0040 FFF7FEFF 		bl	_ZSt4copyIPKcPcET0_T_S4_S3_
 2855              	.LVL243:
 2856              	.LBE1224:
 2857              	.LBE1223:
 2858              	.LBE1222:
 2859              	.LBE1244:
  53:../../src/string_buffer.h ****     auto end_line      = screen.begin() + number_line * line_size + line_size;
 2860              		.loc 15 53 0
 2861 0044 0299     		ldr	r1, [sp, #8]
ARM GAS  /tmp/ccFxkDJm.s 			page 100


 2862 0046 019B     		ldr	r3, [sp, #4]
 2863 0048 1431     		adds	r1, r1, #20
 2864 004a 5918     		adds	r1, r3, r1
 2865              	.LBB1245:
 2866              	.LBB1238:
 2867              	.LBB1236:
 2868              	.LBB1233:
 2869              	.LBB1231:
 2870              	.LBB1232:
 2871              		.loc 6 731 0
 2872 004c 0398     		ldr	r0, [sp, #12]
 2873 004e FFF7FEFF 		bl	_ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_.isr
 2874              	.LVL244:
 2875              	.L187:
 2876              	.LBE1232:
 2877              	.LBE1231:
 2878              	.LBE1233:
 2879              	.LBB1234:
  70:../../src/string_buffer.h ****             align = false;
 2880              		.loc 15 70 0
 2881 0052 0023     		movs	r3, #0
 2882 0054 2B73     		strb	r3, [r5, #12]
 2883              	.LBE1234:
 2884              	.LBE1236:
  72:../../src/string_buffer.h ****         position = number_line * line_size + line_size;
 2885              		.loc 15 72 0
 2886 0056 2B68     		ldr	r3, [r5]
 2887 0058 5A1C     		adds	r2, r3, #1
 2888 005a 1423     		movs	r3, #20
 2889 005c 5343     		muls	r3, r2
 2890 005e AB60     		str	r3, [r5, #8]
 2891              	.L183:
 2892              	.LBE1238:
 2893              	.LBE1245:
  93:../../src/string_buffer.h **** }
 2894              		.loc 15 93 0
 2895 0060 2800     		movs	r0, r5
 2896 0062 07B0     		add	sp, sp, #28
 2897              		@ sp needed
 2898              	.LVL245:
 2899 0064 F0BD     		pop	{r4, r5, r6, r7, pc}
 2900              	.LVL246:
 2901              	.L181:
 2902              	.LBB1246:
 2903              	.LBB1239:
 2904              	.LBB1237:
 2905              	.LBB1235:
  66:../../src/string_buffer.h ****             auto begin_string = string.begin() + (string_size - line_size)/2;
 2906              		.loc 15 66 0
 2907 0066 143C     		subs	r4, r4, #20
 2908 0068 6408     		lsrs	r4, r4, #1
 2909 006a 3019     		adds	r0, r6, r4
 2910              	.LVL247:
  67:../../src/string_buffer.h ****             auto end_string   = begin_string + line_size;
 2911              		.loc 15 67 0
 2912 006c 0100     		movs	r1, r0
 2913 006e 1431     		adds	r1, r1, #20
ARM GAS  /tmp/ccFxkDJm.s 			page 101


 2914              	.LVL248:
  69:../../src/string_buffer.h ****             std::copy(begin_string, end_string, begin_line);
 2915              		.loc 15 69 0
 2916 0070 FFF7FEFF 		bl	_ZSt4copyIPKcPcET0_T_S4_S3_
 2917              	.LVL249:
 2918 0074 EDE7     		b	.L187
 2919              	.LVL250:
 2920              	.L180:
 2921              	.LBE1235:
 2922              	.LBE1237:
 2923              	.LBE1239:
 2924              	.LBB1240:
  74:../../src/string_buffer.h ****         if (string_size < screen_size - position) {
 2925              		.loc 15 74 0
 2926 0076 5021     		movs	r1, #80
 2927 0078 8268     		ldr	r2, [r0, #8]
 2928 007a 019B     		ldr	r3, [sp, #4]
 2929 007c 891A     		subs	r1, r1, r2
 2930 007e 9A18     		adds	r2, r3, r2
 2931 0080 3319     		adds	r3, r6, r4
 2932 0082 0293     		str	r3, [sp, #8]
 2933 0084 A142     		cmp	r1, r4
 2934 0086 07D9     		bls	.L184
 2935              	.LVL251:
  75:../../src/string_buffer.h ****             std::copy(string.begin(), string.end(), screen.begin() + position);
 2936              		.loc 15 75 0
 2937 0088 1900     		movs	r1, r3
 2938 008a 3000     		movs	r0, r6
 2939              	.LVL252:
 2940 008c FFF7FEFF 		bl	_ZSt4copyIPKcPcET0_T_S4_S3_
 2941              	.LVL253:
  76:../../src/string_buffer.h ****             position += string_size;
 2942              		.loc 15 76 0
 2943 0090 AB68     		ldr	r3, [r5, #8]
 2944 0092 1C19     		adds	r4, r3, r4
 2945 0094 AC60     		str	r4, [r5, #8]
 2946 0096 E3E7     		b	.L183
 2947              	.LVL254:
 2948              	.L184:
 2949              	.LBB1241:
  79:../../src/string_buffer.h ****             size_t rest_string = string_size - (screen_size - position);
 2950              		.loc 15 79 0
 2951 0098 2700     		movs	r7, r4
  78:../../src/string_buffer.h ****             std::copy(string.begin(), string.begin() + (screen_size - position), screen.begin() + p
 2952              		.loc 15 78 0
 2953 009a 7118     		adds	r1, r6, r1
 2954 009c 3000     		movs	r0, r6
 2955              	.LVL255:
 2956 009e FFF7FEFF 		bl	_ZSt4copyIPKcPcET0_T_S4_S3_
 2957              	.LVL256:
  79:../../src/string_buffer.h ****             size_t rest_string = string_size - (screen_size - position);
 2958              		.loc 15 79 0
 2959 00a2 AB68     		ldr	r3, [r5, #8]
 2960 00a4 503F     		subs	r7, r7, #80
 2961 00a6 FF18     		adds	r7, r7, r3
 2962              	.LVL257:
 2963 00a8 E41B     		subs	r4, r4, r7
ARM GAS  /tmp/ccFxkDJm.s 			page 102


 2964 00aa 3619     		adds	r6, r6, r4
 2965              	.L186:
 2966 00ac 3000     		movs	r0, r6
  87:../../src/string_buffer.h ****             std::copy(string.begin() + (string_size - rest_string), string.end(), screen.begin());
 2967              		.loc 15 87 0
 2968 00ae 019A     		ldr	r2, [sp, #4]
 2969 00b0 5036     		adds	r6, r6, #80
  81:../../src/string_buffer.h ****             while (rest_string > screen_size) {
 2970              		.loc 15 81 0
 2971 00b2 502F     		cmp	r7, #80
 2972 00b4 04D9     		bls	.L185
 2973              	.LVL258:
 2974              	.LBB1242:
  84:../../src/string_buffer.h ****                 std::copy(begin_string, end_string, screen.begin());
 2975              		.loc 15 84 0
 2976 00b6 3100     		movs	r1, r6
 2977 00b8 FFF7FEFF 		bl	_ZSt4copyIPKcPcET0_T_S4_S3_
 2978              	.LVL259:
  85:../../src/string_buffer.h ****                 rest_string -= screen_size;
 2979              		.loc 15 85 0
 2980 00bc 503F     		subs	r7, r7, #80
 2981              	.LVL260:
 2982              	.LBE1242:
  81:../../src/string_buffer.h ****             while (rest_string > screen_size) {
 2983              		.loc 15 81 0
 2984 00be F5E7     		b	.L186
 2985              	.LVL261:
 2986              	.L185:
  87:../../src/string_buffer.h ****             std::copy(string.begin() + (string_size - rest_string), string.end(), screen.begin());
 2987              		.loc 15 87 0
 2988 00c0 0299     		ldr	r1, [sp, #8]
 2989 00c2 FFF7FEFF 		bl	_ZSt4copyIPKcPcET0_T_S4_S3_
 2990              	.LVL262:
  88:../../src/string_buffer.h ****             position += rest_string;
 2991              		.loc 15 88 0
 2992 00c6 AB68     		ldr	r3, [r5, #8]
 2993 00c8 DF19     		adds	r7, r3, r7
 2994              	.LVL263:
 2995 00ca AF60     		str	r7, [r5, #8]
 2996 00cc C8E7     		b	.L183
 2997              	.LBE1241:
 2998              	.LBE1240:
 2999              	.LBE1246:
 3000              		.cfi_endproc
 3001              	.LFE2628:
 3003              		.section	.text._Z9next_lineR13String_buffer,"ax",%progbits
 3004              		.align	1
 3005              		.global	_Z9next_lineR13String_buffer
 3006              		.syntax unified
 3007              		.code	16
 3008              		.thumb_func
 3009              		.fpu softvfp
 3011              	_Z9next_lineR13String_buffer:
 3012              	.LFB2624:
  42:../../src/string_buffer.h **** {
 3013              		.loc 15 42 0
 3014              		.cfi_startproc
ARM GAS  /tmp/ccFxkDJm.s 			page 103


 3015              		@ args = 0, pretend = 0, frame = 8
 3016              		@ frame_needed = 0, uses_anonymous_args = 0
 3017              	.LVL264:
 3018 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 3019              	.LCFI27:
 3020              		.cfi_def_cfa_offset 24
 3021              		.cfi_offset 0, -24
 3022              		.cfi_offset 1, -20
 3023              		.cfi_offset 2, -16
 3024              		.cfi_offset 4, -12
 3025              		.cfi_offset 5, -8
 3026              		.cfi_offset 14, -4
 3027 0002 0400     		movs	r4, r0
 3028              	.LVL265:
 3029              	.L190:
 3030              	.LBB1254:
 3031              	.LBB1255:
  36:../../src/string_buffer.h ****     bool in_begin_line() const { return position % line_size == 0; }
 3032              		.loc 15 36 0
 3033 0004 1421     		movs	r1, #20
 3034 0006 A068     		ldr	r0, [r4, #8]
 3035 0008 FFF7FEFF 		bl	__aeabi_uidivmod
 3036              	.LVL266:
 3037              	.LBE1255:
 3038              	.LBE1254:
  43:../../src/string_buffer.h ****     while (not s.in_begin_line())
 3039              		.loc 15 43 0
 3040 000c 0029     		cmp	r1, #0
 3041 000e 09D0     		beq	.L189
 3042              	.LVL267:
 3043              	.LBB1256:
 3044              	.LBB1257:
 3045              	.LBB1258:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 3046              		.loc 19 100 0
 3047 0010 054D     		ldr	r5, .L191
 3048 0012 2800     		movs	r0, r5
 3049 0014 FFF7FEFF 		bl	_ZNSt11char_traitsIcE6lengthEPKc
 3050              	.LVL268:
 3051              	.LBE1258:
 3052              	.LBE1257:
 3053              	.LBE1256:
  44:../../src/string_buffer.h ****         s << " ";
 3054              		.loc 15 44 0
 3055 0018 2A00     		movs	r2, r5
 3056              	.LBB1261:
 3057              	.LBB1260:
 3058              	.LBB1259:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 3059              		.loc 19 100 0
 3060 001a 0100     		movs	r1, r0
 3061              	.LVL269:
 3062              	.LBE1259:
 3063              	.LBE1260:
 3064              	.LBE1261:
  44:../../src/string_buffer.h ****         s << " ";
 3065              		.loc 15 44 0
ARM GAS  /tmp/ccFxkDJm.s 			page 104


 3066 001c 2000     		movs	r0, r4
 3067 001e FFF7FEFF 		bl	_ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE
 3068              	.LVL270:
  43:../../src/string_buffer.h ****     while (not s.in_begin_line())
 3069              		.loc 15 43 0
 3070 0022 EFE7     		b	.L190
 3071              	.L189:
  46:../../src/string_buffer.h **** }
 3072              		.loc 15 46 0
 3073 0024 2000     		movs	r0, r4
 3074              		@ sp needed
 3075              	.LVL271:
 3076 0026 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 3077              	.L192:
 3078              		.align	2
 3079              	.L191:
 3080 0028 00000000 		.word	.LC5
 3081              		.cfi_endproc
 3082              	.LFE2624:
 3084              		.section	.text._ZN13String_bufferlsEi,"ax",%progbits
 3085              		.align	1
 3086              		.global	_ZN13String_bufferlsEi
 3087              		.syntax unified
 3088              		.code	16
 3089              		.thumb_func
 3090              		.fpu softvfp
 3092              	_ZN13String_bufferlsEi:
 3093              	.LFB2632:
  96:../../src/string_buffer.h **** {
 3094              		.loc 15 96 0
 3095              		.cfi_startproc
 3096              		@ args = 0, pretend = 0, frame = 24
 3097              		@ frame_needed = 0, uses_anonymous_args = 0
 3098              	.LVL272:
 3099 0000 70B5     		push	{r4, r5, r6, lr}
 3100              	.LCFI28:
 3101              		.cfi_def_cfa_offset 16
 3102              		.cfi_offset 4, -16
 3103              		.cfi_offset 5, -12
 3104              		.cfi_offset 6, -8
 3105              		.cfi_offset 14, -4
 3106 0002 86B0     		sub	sp, sp, #24
 3107              	.LCFI29:
 3108              		.cfi_def_cfa_offset 40
  96:../../src/string_buffer.h **** {
 3109              		.loc 15 96 0
 3110 0004 0A00     		movs	r2, r1
 3111 0006 0500     		movs	r5, r0
  98:../../src/string_buffer.h ****     sprintf(string, "%d", number);
 3112              		.loc 15 98 0
 3113 0008 1149     		ldr	r1, .L197
 3114              	.LVL273:
 3115 000a 03A8     		add	r0, sp, #12
 3116              	.LVL274:
 3117 000c FFF7FEFF 		bl	sprintf
 3118              	.LVL275:
 3119              	.LBB1277:
ARM GAS  /tmp/ccFxkDJm.s 			page 105


 3120              	.LBB1278:
 3121              	.LBB1279:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 3122              		.loc 19 100 0
 3123 0010 03A8     		add	r0, sp, #12
 3124              	.LVL276:
 3125 0012 FFF7FEFF 		bl	_ZNSt11char_traitsIcE6lengthEPKc
 3126              	.LVL277:
 3127              	.LBE1279:
 3128              	.LBE1278:
 3129              	.LBE1277:
 100:../../src/string_buffer.h ****     auto qty_space = (width_size > str.size()) ? (width_size - str.size()) : 0;
 3130              		.loc 15 100 0
 3131 0016 6C68     		ldr	r4, [r5, #4]
 3132              	.LVL278:
 3133 0018 8442     		cmp	r4, r0
 3134 001a 0CD9     		bls	.L194
 3135              	.LVL279:
 100:../../src/string_buffer.h ****     auto qty_space = (width_size > str.size()) ? (width_size - str.size()) : 0;
 3136              		.loc 15 100 0 is_stmt 0 discriminator 1
 3137 001c 241A     		subs	r4, r4, r0
 3138              	.LVL280:
 3139              	.L195:
 3140              	.LBB1280:
 3141              	.LBB1281:
 3142              	.LBB1282:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 3143              		.loc 19 100 0 is_stmt 1
 3144 001e 0D4E     		ldr	r6, .L197+4
 3145              	.LBE1282:
 3146              	.LBE1281:
 3147              	.LBE1280:
 104:../../src/string_buffer.h ****         qty_space--;
 3148              		.loc 15 104 0
 3149 0020 013C     		subs	r4, r4, #1
 3150              	.LVL281:
 3151              	.LBB1287:
 3152              	.LBB1285:
 3153              	.LBB1283:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 3154              		.loc 19 100 0
 3155 0022 3000     		movs	r0, r6
 3156 0024 FFF7FEFF 		bl	_ZNSt11char_traitsIcE6lengthEPKc
 3157              	.LVL282:
 3158              	.LBE1283:
 3159              	.LBE1285:
 3160              	.LBE1287:
 103:../../src/string_buffer.h ****         *this << " ";
 3161              		.loc 15 103 0
 3162 0028 3200     		movs	r2, r6
 3163              	.LBB1288:
 3164              	.LBB1286:
 3165              	.LBB1284:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 3166              		.loc 19 100 0
 3167 002a 0100     		movs	r1, r0
 3168              	.LVL283:
ARM GAS  /tmp/ccFxkDJm.s 			page 106


 3169              	.LBE1284:
 3170              	.LBE1286:
 3171              	.LBE1288:
 103:../../src/string_buffer.h ****         *this << " ";
 3172              		.loc 15 103 0
 3173 002c 2800     		movs	r0, r5
 3174 002e FFF7FEFF 		bl	_ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE
 3175              	.LVL284:
 102:../../src/string_buffer.h ****     while (qty_space) {
 3176              		.loc 15 102 0
 3177 0032 002C     		cmp	r4, #0
 3178 0034 F3D1     		bne	.L195
 3179              	.LVL285:
 3180              	.L194:
 3181              	.LBB1289:
 3182              	.LBB1290:
 3183              	.LBB1291:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 3184              		.loc 19 100 0
 3185 0036 03A8     		add	r0, sp, #12
 3186              	.LVL286:
 3187 0038 FFF7FEFF 		bl	_ZNSt11char_traitsIcE6lengthEPKc
 3188              	.LVL287:
 3189              	.LBE1291:
 3190              	.LBE1290:
 3191              	.LBE1289:
 106:../../src/string_buffer.h ****     *this << string;
 3192              		.loc 15 106 0
 3193 003c 03AA     		add	r2, sp, #12
 3194              	.LVL288:
 3195              	.LBB1294:
 3196              	.LBB1293:
 3197              	.LBB1292:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 3198              		.loc 19 100 0
 3199 003e 0100     		movs	r1, r0
 3200              	.LVL289:
 3201              	.LBE1292:
 3202              	.LBE1293:
 3203              	.LBE1294:
 106:../../src/string_buffer.h ****     *this << string;
 3204              		.loc 15 106 0
 3205 0040 2800     		movs	r0, r5
 3206 0042 FFF7FEFF 		bl	_ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE
 3207              	.LVL290:
 107:../../src/string_buffer.h ****     width_size = 0;
 3208              		.loc 15 107 0
 3209 0046 0023     		movs	r3, #0
 109:../../src/string_buffer.h **** }
 3210              		.loc 15 109 0
 3211 0048 2800     		movs	r0, r5
 107:../../src/string_buffer.h ****     width_size = 0;
 3212              		.loc 15 107 0
 3213 004a 6B60     		str	r3, [r5, #4]
 109:../../src/string_buffer.h **** }
 3214              		.loc 15 109 0
 3215 004c 06B0     		add	sp, sp, #24
ARM GAS  /tmp/ccFxkDJm.s 			page 107


 3216              		@ sp needed
 3217              	.LVL291:
 3218 004e 70BD     		pop	{r4, r5, r6, pc}
 3219              	.L198:
 3220              		.align	2
 3221              	.L197:
 3222 0050 00000000 		.word	.LC7
 3223 0054 00000000 		.word	.LC5
 3224              		.cfi_endproc
 3225              	.LFE2632:
 3227              		.section	.text._Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_
 3228              		.align	1
 3229              		.weak	_Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi
 3230              		.syntax unified
 3231              		.code	16
 3232              		.thumb_func
 3233              		.fpu softvfp
 3235              	_Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2
 3236              	.LFB3153:
  41:../../src/pin.h **** };
  42:../../src/pin.h **** 
  43:../../src/pin.h **** template<mcu::PinMode mode, class ... Pins>
  44:../../src/pin.h **** meta::tuple_generate_t<Pin&, sizeof...(Pins)> make_pins ()
 3237              		.loc 9 44 0
 3238              		.cfi_startproc
 3239              		@ args = 0, pretend = 0, frame = 0
 3240              		@ frame_needed = 0, uses_anonymous_args = 0
 3241              	.LVL292:
 3242 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3243              	.LCFI30:
 3244              		.cfi_def_cfa_offset 24
 3245              		.cfi_offset 3, -24
 3246              		.cfi_offset 4, -20
 3247              		.cfi_offset 5, -16
 3248              		.cfi_offset 6, -12
 3249              		.cfi_offset 7, -8
 3250              		.cfi_offset 14, -4
 3251              	.LBB1354:
 3252              	.LBB1355:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3253              		.loc 9 21 0
 3254 0002 4A4C     		ldr	r4, .L224
 3255              	.LBE1355:
 3256              	.LBE1354:
 3257              		.loc 9 44 0
 3258 0004 0500     		movs	r5, r0
 3259              	.LBB1389:
 3260              	.LBB1387:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3261              		.loc 9 21 0
 3262 0006 2378     		ldrb	r3, [r4]
 3263 0008 BFF35B8F 		dmb	ish
 3264 000c DB07     		lsls	r3, r3, #31
 3265 000e 0CD4     		bmi	.L201
 3266 0010 2000     		movs	r0, r4
 3267              	.LVL293:
 3268 0012 FFF7FEFF 		bl	__cxa_guard_acquire
ARM GAS  /tmp/ccFxkDJm.s 			page 108


 3269              	.LVL294:
 3270 0016 0028     		cmp	r0, #0
 3271 0018 07D0     		beq	.L201
 3272              	.LVL295:
 3273              	.LBB1356:
 3274              	.LBB1357:
 3275              	.LBB1358:
  17:../../src/pin.h **** 
 3276              		.loc 9 17 0
 3277 001a 454B     		ldr	r3, .L224+4
 3278 001c 454A     		ldr	r2, .L224+8
 3279              	.LBE1358:
 3280              	.LBE1357:
 3281              	.LBE1356:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3282              		.loc 9 21 0
 3283 001e 2000     		movs	r0, r4
 3284              	.LBB1361:
 3285              	.LBB1360:
 3286              	.LBB1359:
  17:../../src/pin.h **** 
 3287              		.loc 9 17 0
 3288 0020 1360     		str	r3, [r2]
 3289 0022 0423     		movs	r3, #4
 3290 0024 5360     		str	r3, [r2, #4]
 3291              	.LVL296:
 3292              	.LBE1359:
 3293              	.LBE1360:
 3294              	.LBE1361:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3295              		.loc 9 21 0
 3296 0026 FFF7FEFF 		bl	__cxa_guard_release
 3297              	.LVL297:
 3298              	.L201:
 3299              	.LBB1362:
 3300              	.LBB1363:
  42:../../src/periph/rcc_f1.h **** 
  43:../../src/periph/rcc_f1.h **** 	size_t get_APB1_clock(){return get_APB_clock (CFGR.PPRE1);}
  44:../../src/periph/rcc_f1.h **** 	size_t get_APB2_clock(){return get_APB_clock (CFGR.PPRE2);}
  45:../../src/periph/rcc_f1.h **** 
  46:../../src/periph/rcc_f1.h **** 	template<Periph p> void clock_enable()
  47:../../src/periph/rcc_f1.h **** 	{
  48:../../src/periph/rcc_f1.h **** 		if      constexpr (p == Periph::GPIOA) APB2ENR.IOPAEN = true;
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOB) APB2ENR.IOPBEN = true;
 3301              		.loc 17 49 0
 3302 002a 0823     		movs	r3, #8
 3303              	.LBE1363:
 3304              	.LBE1362:
 3305              	.LBB1366:
 3306              	.LBB1367:
 3307              	.LBB1368:
  50:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
  51:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOD) APB2ENR.IOPDEN = true;
  52:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOE) APB2ENR.IOPEEN = true;
  53:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::AFIO ) APB2ENR.AFIOEN = true;
 3308              		.loc 17 53 0
 3309 002c 0121     		movs	r1, #1
ARM GAS  /tmp/ccFxkDJm.s 			page 109


 3310              	.LBE1368:
 3311              	.LBE1367:
 3312              	.LBE1366:
 3313              	.LBB1381:
 3314              	.LBB1364:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 3315              		.loc 17 49 0
 3316 002e 424C     		ldr	r4, .L224+12
 3317              	.LBE1364:
 3318              	.LBE1381:
 3319              	.LBB1382:
 3320              	.LBB1370:
 3321              	.LBB1371:
 3322              		.file 20 "../../src/periph/periph_afio.h"
   1:../../src/periph/periph_afio.h **** #pragma once
   2:../../src/periph/periph_afio.h **** 
   3:../../src/periph/periph_afio.h **** #include "periph.h"
   4:../../src/periph/periph_afio.h **** #include "bits_afio_f1.h"
   5:../../src/periph/periph_afio.h **** 
   6:../../src/periph/periph_afio.h **** namespace mcu {
   7:../../src/periph/periph_afio.h **** 
   8:../../src/periph/periph_afio.h **** class AFIO {
   9:../../src/periph/periph_afio.h ****    volatile AFIO_bits::EVCR   EVCR;      // Event control register                         offset: 
  10:../../src/periph/periph_afio.h ****    volatile AFIO_bits::MAPR   MAPR;      // AF remap and debug I/O configuration register  offset: 
  11:../../src/periph/periph_afio.h ****    volatile AFIO_bits::EXTICR EXTICR;    // External interrupt configuration register      offset: 
  12:../../src/periph/periph_afio.h ****             uint32_t          RESERVED0; //
  13:../../src/periph/periph_afio.h ****    volatile AFIO_bits::MAPR2  MAPR2;     // AF remap and debug I/O configuration register2 offset: 
  14:../../src/periph/periph_afio.h **** 
  15:../../src/periph/periph_afio.h **** public:
  16:../../src/periph/periph_afio.h ****    using CMSIS_type = AFIO_TypeDef;
  17:../../src/periph/periph_afio.h ****    using Port       = AFIO_bits::Port;
  18:../../src/periph/periph_afio.h ****    using Pin        = AFIO_bits::EVCR::Pin;
  19:../../src/periph/periph_afio.h ****    using Remap      = AFIO_bits::MAPR::Remap;
  20:../../src/periph/periph_afio.h ****    using SWJ        = AFIO_bits::MAPR::SWJ;
  21:../../src/periph/periph_afio.h **** 
  22:../../src/periph/periph_afio.h ****    // AFIO& event_enable()        {EVCR.EVOE = true;   return *this;}
  23:../../src/periph/periph_afio.h ****    AFIO& set_JTAG (SWJ v) {MAPR.SWJ_CFG = v; return *this;}
 3323              		.loc 20 23 0
 3324 0030 424E     		ldr	r6, .L224+16
 3325              	.LBE1371:
 3326              	.LBE1370:
 3327              	.LBE1382:
 3328              	.LBB1383:
 3329              	.LBB1365:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 3330              		.loc 17 49 0
 3331 0032 A269     		ldr	r2, [r4, #24]
 3332 0034 1343     		orrs	r3, r2
 3333 0036 A361     		str	r3, [r4, #24]
 3334              	.LBE1365:
 3335              	.LBE1383:
  24:../../src/pin.h ****       return pin;
 3336              		.loc 9 24 0
 3337 0038 3E4B     		ldr	r3, .L224+8
 3338              	.LBB1384:
 3339              	.LBB1374:
 3340              	.LBB1372:
ARM GAS  /tmp/ccFxkDJm.s 			page 110


 3341              		.loc 20 23 0
 3342 003a 414A     		ldr	r2, .L224+20
 3343              	.LBE1372:
 3344              	.LBE1374:
 3345              	.LBE1384:
  24:../../src/pin.h ****       return pin;
 3346              		.loc 9 24 0
 3347 003c 1868     		ldr	r0, [r3]
 3348              	.LVL298:
 3349              	.LBB1385:
 3350              	.LBB1375:
 3351              	.LBB1369:
 3352              		.loc 17 53 0
 3353 003e A369     		ldr	r3, [r4, #24]
 3354 0040 0B43     		orrs	r3, r1
 3355 0042 A361     		str	r3, [r4, #24]
 3356              	.LVL299:
 3357              	.LBE1369:
 3358              	.LBE1375:
 3359              	.LBB1376:
 3360              	.LBB1373:
 3361              		.loc 20 23 0
 3362 0044 7368     		ldr	r3, [r6, #4]
 3363 0046 1A40     		ands	r2, r3
 3364 0048 8023     		movs	r3, #128
 3365 004a 9B04     		lsls	r3, r3, #18
 3366 004c 1343     		orrs	r3, r2
 3367 004e 7360     		str	r3, [r6, #4]
 3368              	.LVL300:
 3369              	.LBE1373:
 3370              	.LBE1376:
 3371              	.LBB1377:
 3372              	.LBB1378:
  32:../../src/periph/gpio_f1.h **** 
  33:../../src/periph/gpio_f1.h ****    template<class Pin_, PinMode> void init();
  34:../../src/periph/gpio_f1.h **** 
  35:../../src/periph/gpio_f1.h **** private:
  36:../../src/periph/gpio_f1.h ****    template<size_t> GPIO& set (Mode);
  37:../../src/periph/gpio_f1.h **** };
  38:../../src/periph/gpio_f1.h **** 
  39:../../src/periph/gpio_f1.h **** 
  40:../../src/periph/gpio_f1.h **** 
  41:../../src/periph/gpio_f1.h **** #if not defined(USE_MOCK_GPIO)
  42:../../src/periph/gpio_f1.h **** template<Periph gpio> std::enable_if_t<gpio == Periph::GPIOA, GPIO&> make_reference() { return *rei
  43:../../src/periph/gpio_f1.h **** template<Periph gpio> std::enable_if_t<gpio == Periph::GPIOB, GPIO&> make_reference() { return *rei
  44:../../src/periph/gpio_f1.h **** template<Periph gpio> std::enable_if_t<gpio == Periph::GPIOC, GPIO&> make_reference() { return *rei
  45:../../src/periph/gpio_f1.h **** template<Periph gpio> std::enable_if_t<gpio == Periph::GPIOD, GPIO&> make_reference() { return *rei
  46:../../src/periph/gpio_f1.h **** template<Periph gpio> std::enable_if_t<gpio == Periph::GPIOE, GPIO&> make_reference() { return *rei
  47:../../src/periph/gpio_f1.h **** #endif // #if not defined(USE_MOCK_GPIO)
  48:../../src/periph/gpio_f1.h **** 
  49:../../src/periph/gpio_f1.h **** 
  50:../../src/periph/gpio_f1.h **** 
  51:../../src/periph/gpio_f1.h **** 
  52:../../src/periph/gpio_f1.h **** 
  53:../../src/periph/gpio_f1.h **** 
  54:../../src/periph/gpio_f1.h **** 
  55:../../src/periph/gpio_f1.h **** 
ARM GAS  /tmp/ccFxkDJm.s 			page 111


  56:../../src/periph/gpio_f1.h **** 
  57:../../src/periph/gpio_f1.h **** 
  58:../../src/periph/gpio_f1.h **** 
  59:../../src/periph/gpio_f1.h **** 
  60:../../src/periph/gpio_f1.h **** 
  61:../../src/periph/gpio_f1.h **** 
  62:../../src/periph/gpio_f1.h **** 
  63:../../src/periph/gpio_f1.h **** 
  64:../../src/periph/gpio_f1.h **** 
  65:../../src/periph/gpio_f1.h **** 
  66:../../src/periph/gpio_f1.h **** template<size_t n> GPIO& GPIO::set (Mode v) 
  67:../../src/periph/gpio_f1.h **** {
  68:../../src/periph/gpio_f1.h ****    if      constexpr (n == 0)  { CR.CNF_MODE0  = v; return *this; }
  69:../../src/periph/gpio_f1.h ****    else if constexpr (n == 1)  { CR.CNF_MODE1  = v; return *this; }
  70:../../src/periph/gpio_f1.h ****    else if constexpr (n == 2)  { CR.CNF_MODE2  = v; return *this; }
  71:../../src/periph/gpio_f1.h ****    else if constexpr (n == 3)  { CR.CNF_MODE3  = v; return *this; }
  72:../../src/periph/gpio_f1.h ****    else if constexpr (n == 4)  { CR.CNF_MODE4  = v; return *this; }
 3373              		.loc 10 72 0
 3374 0050 0368     		ldr	r3, [r0]
 3375 0052 3C4A     		ldr	r2, .L224+24
 3376              	.LBE1378:
 3377              	.LBE1377:
 3378              	.LBE1385:
 3379              	.LBE1387:
 3380              	.LBE1389:
 3381              	.LBB1390:
 3382              	.LBB1391:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3383              		.loc 9 21 0
 3384 0054 3C4E     		ldr	r6, .L224+28
 3385              	.LBE1391:
 3386              	.LBE1390:
 3387              	.LBB1410:
 3388              	.LBB1388:
 3389              	.LBB1386:
 3390              	.LBB1380:
 3391              	.LBB1379:
 3392              		.loc 10 72 0
 3393 0056 1A40     		ands	r2, r3
 3394 0058 8023     		movs	r3, #128
 3395 005a 9B02     		lsls	r3, r3, #10
 3396 005c 1343     		orrs	r3, r2
 3397 005e 0360     		str	r3, [r0]
 3398              	.LVL301:
 3399              	.LBE1379:
 3400              	.LBE1380:
 3401              	.LBE1386:
 3402              	.LBE1388:
 3403              	.LBE1410:
 3404              	.LBB1411:
 3405              	.LBB1408:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3406              		.loc 9 21 0
 3407 0060 3378     		ldrb	r3, [r6]
 3408 0062 BFF35B8F 		dmb	ish
 3409 0066 0B42     		tst	r3, r1
 3410 0068 0CD1     		bne	.L204
ARM GAS  /tmp/ccFxkDJm.s 			page 112


 3411 006a 3000     		movs	r0, r6
 3412 006c FFF7FEFF 		bl	__cxa_guard_acquire
 3413              	.LVL302:
 3414 0070 0028     		cmp	r0, #0
 3415 0072 07D0     		beq	.L204
 3416              	.LVL303:
 3417              	.LBB1392:
 3418              	.LBB1393:
 3419              	.LBB1394:
  17:../../src/pin.h **** 
 3420              		.loc 9 17 0
 3421 0074 2E4B     		ldr	r3, .L224+4
 3422 0076 354A     		ldr	r2, .L224+32
 3423              	.LBE1394:
 3424              	.LBE1393:
 3425              	.LBE1392:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3426              		.loc 9 21 0
 3427 0078 3000     		movs	r0, r6
 3428              	.LBB1397:
 3429              	.LBB1396:
 3430              	.LBB1395:
  17:../../src/pin.h **** 
 3431              		.loc 9 17 0
 3432 007a 1360     		str	r3, [r2]
 3433 007c 0523     		movs	r3, #5
 3434 007e 5360     		str	r3, [r2, #4]
 3435              	.LVL304:
 3436              	.LBE1395:
 3437              	.LBE1396:
 3438              	.LBE1397:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3439              		.loc 9 21 0
 3440 0080 FFF7FEFF 		bl	__cxa_guard_release
 3441              	.LVL305:
 3442              	.L204:
 3443              	.LBB1398:
 3444              	.LBB1399:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 3445              		.loc 17 49 0
 3446 0084 0823     		movs	r3, #8
 3447 0086 A269     		ldr	r2, [r4, #24]
 3448              	.LBE1399:
 3449              	.LBE1398:
 3450              	.LBE1408:
 3451              	.LBE1411:
 3452              	.LBB1412:
 3453              	.LBB1413:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3454              		.loc 9 21 0
 3455 0088 314F     		ldr	r7, .L224+36
 3456              	.LBE1413:
 3457              	.LBE1412:
 3458              	.LBB1426:
 3459              	.LBB1409:
 3460              	.LBB1401:
 3461              	.LBB1400:
ARM GAS  /tmp/ccFxkDJm.s 			page 113


  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 3462              		.loc 17 49 0
 3463 008a 1343     		orrs	r3, r2
 3464 008c A361     		str	r3, [r4, #24]
 3465              	.LBE1400:
 3466              	.LBE1401:
  24:../../src/pin.h ****       return pin;
 3467              		.loc 9 24 0
 3468 008e 2F4B     		ldr	r3, .L224+32
 3469              	.LBB1402:
 3470              	.LBB1403:
 3471              	.LBB1404:
  73:../../src/periph/gpio_f1.h ****    else if constexpr (n == 5)  { CR.CNF_MODE5  = v; return *this; }
 3472              		.loc 10 73 0
 3473 0090 304A     		ldr	r2, .L224+40
 3474              	.LBE1404:
 3475              	.LBE1403:
 3476              	.LBE1402:
  24:../../src/pin.h ****       return pin;
 3477              		.loc 9 24 0
 3478 0092 1968     		ldr	r1, [r3]
 3479              	.LVL306:
 3480              	.LBB1407:
 3481              	.LBB1406:
 3482              	.LBB1405:
 3483              		.loc 10 73 0
 3484 0094 0B68     		ldr	r3, [r1]
 3485 0096 1A40     		ands	r2, r3
 3486 0098 8023     		movs	r3, #128
 3487 009a 9B03     		lsls	r3, r3, #14
 3488 009c 1343     		orrs	r3, r2
 3489 009e 0B60     		str	r3, [r1]
 3490              	.LVL307:
 3491              	.LBE1405:
 3492              	.LBE1406:
 3493              	.LBE1407:
 3494              	.LBE1409:
 3495              	.LBE1426:
 3496              	.LBB1427:
 3497              	.LBB1425:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3498              		.loc 9 21 0
 3499 00a0 3B78     		ldrb	r3, [r7]
 3500 00a2 BFF35B8F 		dmb	ish
 3501 00a6 2C4E     		ldr	r6, .L224+44
 3502 00a8 DB07     		lsls	r3, r3, #31
 3503 00aa 0BD4     		bmi	.L207
 3504 00ac 3800     		movs	r0, r7
 3505 00ae FFF7FEFF 		bl	__cxa_guard_acquire
 3506              	.LVL308:
 3507 00b2 0028     		cmp	r0, #0
 3508 00b4 06D0     		beq	.L207
 3509              	.LVL309:
 3510              	.LBB1414:
 3511              	.LBB1415:
 3512              	.LBB1416:
  17:../../src/pin.h **** 
ARM GAS  /tmp/ccFxkDJm.s 			page 114


 3513              		.loc 9 17 0
 3514 00b6 1E4B     		ldr	r3, .L224+4
 3515              	.LBE1416:
 3516              	.LBE1415:
 3517              	.LBE1414:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3518              		.loc 9 21 0
 3519 00b8 3800     		movs	r0, r7
 3520              	.LBB1419:
 3521              	.LBB1418:
 3522              	.LBB1417:
  17:../../src/pin.h **** 
 3523              		.loc 9 17 0
 3524 00ba 3360     		str	r3, [r6]
 3525 00bc 0623     		movs	r3, #6
 3526 00be 7360     		str	r3, [r6, #4]
 3527              	.LVL310:
 3528              	.LBE1417:
 3529              	.LBE1418:
 3530              	.LBE1419:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3531              		.loc 9 21 0
 3532 00c0 FFF7FEFF 		bl	__cxa_guard_release
 3533              	.LVL311:
 3534              	.L207:
 3535              	.LBB1420:
 3536              	.LBB1421:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 3537              		.loc 17 49 0
 3538 00c4 0823     		movs	r3, #8
 3539 00c6 A269     		ldr	r2, [r4, #24]
 3540 00c8 1343     		orrs	r3, r2
 3541 00ca A361     		str	r3, [r4, #24]
 3542              	.LBE1421:
 3543              	.LBE1420:
  24:../../src/pin.h ****       return pin;
 3544              		.loc 9 24 0
 3545 00cc 3168     		ldr	r1, [r6]
 3546              	.LVL312:
 3547              	.LBB1422:
 3548              	.LBB1423:
 3549              	.LBB1424:
  74:../../src/periph/gpio_f1.h ****    else if constexpr (n == 6)  { CR.CNF_MODE6  = v; return *this; }
 3550              		.loc 10 74 0
 3551 00ce 234A     		ldr	r2, .L224+48
 3552 00d0 0B68     		ldr	r3, [r1]
 3553 00d2 1A40     		ands	r2, r3
 3554 00d4 8023     		movs	r3, #128
 3555 00d6 9B04     		lsls	r3, r3, #18
 3556 00d8 1343     		orrs	r3, r2
 3557 00da 0B60     		str	r3, [r1]
 3558              	.LVL313:
 3559              	.LBE1424:
 3560              	.LBE1423:
 3561              	.LBE1422:
 3562              	.LBE1425:
 3563              	.LBE1427:
ARM GAS  /tmp/ccFxkDJm.s 			page 115


 3564              	.LBB1428:
 3565              	.LBB1429:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3566              		.loc 9 21 0
 3567 00dc 204B     		ldr	r3, .L224+52
 3568 00de 1B78     		ldrb	r3, [r3]
 3569 00e0 BFF35B8F 		dmb	ish
 3570 00e4 1F4F     		ldr	r7, .L224+56
 3571 00e6 DB07     		lsls	r3, r3, #31
 3572 00e8 0BD4     		bmi	.L210
 3573 00ea 1D48     		ldr	r0, .L224+52
 3574 00ec FFF7FEFF 		bl	__cxa_guard_acquire
 3575              	.LVL314:
 3576 00f0 0028     		cmp	r0, #0
 3577 00f2 06D0     		beq	.L210
 3578              	.LVL315:
 3579              	.LBB1430:
 3580              	.LBB1431:
 3581              	.LBB1432:
  17:../../src/pin.h **** 
 3582              		.loc 9 17 0
 3583 00f4 0E4B     		ldr	r3, .L224+4
 3584              	.LBE1432:
 3585              	.LBE1431:
 3586              	.LBE1430:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3587              		.loc 9 21 0
 3588 00f6 1A48     		ldr	r0, .L224+52
 3589              	.LBB1435:
 3590              	.LBB1434:
 3591              	.LBB1433:
  17:../../src/pin.h **** 
 3592              		.loc 9 17 0
 3593 00f8 3B60     		str	r3, [r7]
 3594 00fa 0723     		movs	r3, #7
 3595 00fc 7B60     		str	r3, [r7, #4]
 3596              	.LVL316:
 3597              	.LBE1433:
 3598              	.LBE1434:
 3599              	.LBE1435:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3600              		.loc 9 21 0
 3601 00fe FFF7FEFF 		bl	__cxa_guard_release
 3602              	.LVL317:
 3603              	.L210:
 3604              	.LBB1436:
 3605              	.LBB1437:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 3606              		.loc 17 49 0
 3607 0102 0823     		movs	r3, #8
 3608              	.LBE1437:
 3609              	.LBE1436:
 3610              	.LBB1440:
 3611              	.LBB1441:
 3612              	.LBB1442:
  75:../../src/periph/gpio_f1.h ****    else if constexpr (n == 7)  { CR.CNF_MODE7  = v; return *this; }
 3613              		.loc 10 75 0
ARM GAS  /tmp/ccFxkDJm.s 			page 116


 3614 0104 8021     		movs	r1, #128
 3615              	.LBE1442:
 3616              	.LBE1441:
 3617              	.LBE1440:
 3618              	.LBB1449:
 3619              	.LBB1438:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 3620              		.loc 17 49 0
 3621 0106 A269     		ldr	r2, [r4, #24]
 3622              	.LBE1438:
 3623              	.LBE1449:
 3624              	.LBB1450:
 3625              	.LBB1446:
 3626              	.LBB1443:
 3627              		.loc 10 75 0
 3628 0108 8905     		lsls	r1, r1, #22
 3629              	.LBE1443:
 3630              	.LBE1446:
 3631              	.LBE1450:
 3632              	.LBB1451:
 3633              	.LBB1439:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 3634              		.loc 17 49 0
 3635 010a 1343     		orrs	r3, r2
 3636 010c A361     		str	r3, [r4, #24]
 3637              	.LBE1439:
 3638              	.LBE1451:
  24:../../src/pin.h ****       return pin;
 3639              		.loc 9 24 0
 3640 010e 3A68     		ldr	r2, [r7]
 3641              	.LVL318:
 3642              	.LBE1429:
 3643              	.LBE1428:
  45:../../src/pin.h **** {
  46:../../src/pin.h ****    return std::tie(Pin::make<Pins, mode>()...);
  47:../../src/pin.h **** }
 3644              		.loc 9 47 0
 3645 0110 2800     		movs	r0, r5
 3646              	.LBB1456:
 3647              	.LBB1454:
 3648              	.LBB1452:
 3649              	.LBB1447:
 3650              	.LBB1444:
 3651              		.loc 10 75 0
 3652 0112 1368     		ldr	r3, [r2]
 3653              	.LBE1444:
 3654              	.LBE1447:
 3655              	.LBE1452:
 3656              	.LBE1454:
 3657              	.LBE1456:
 3658              		.loc 9 47 0
 3659              		@ sp needed
 3660              	.LBB1457:
 3661              	.LBB1455:
 3662              	.LBB1453:
 3663              	.LBB1448:
 3664              	.LBB1445:
ARM GAS  /tmp/ccFxkDJm.s 			page 117


 3665              		.loc 10 75 0
 3666 0114 1B01     		lsls	r3, r3, #4
 3667 0116 1B09     		lsrs	r3, r3, #4
 3668 0118 0B43     		orrs	r3, r1
 3669 011a 1360     		str	r3, [r2]
 3670              	.LVL319:
 3671              	.LBE1445:
 3672              	.LBE1448:
 3673              	.LBE1453:
 3674              	.LBE1455:
 3675              	.LBE1457:
 3676              	.LBB1458:
 3677              	.LBB1459:
 3678              	.LBB1460:
 3679              	.LBB1461:
 3680              	.LBB1462:
 3681              	.LBB1463:
 3682              		.file 21 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tu
   1:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // <tuple> -*- C++ -*-
   2:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
   3:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // Copyright (C) 2007-2017 Free Software Foundation, Inc.
   4:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** //
   5:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // software; you can redistribute it and/or modify it under the
   7:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // terms of the GNU General Public License as published by the
   8:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // Free Software Foundation; either version 3, or (at your option)
   9:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // any later version.
  10:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  11:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // This library is distributed in the hope that it will be useful,
  12:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // GNU General Public License for more details.
  15:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  16:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // Under Section 7 of GPL version 3, you are granted additional
  17:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // permissions described in the GCC Runtime Library Exception, version
  18:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // 3.1, as published by the Free Software Foundation.
  19:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  20:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // You should have received a copy of the GNU General Public License and
  21:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // <http://www.gnu.org/licenses/>.
  24:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  25:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** /** @file include/tuple
  26:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****  *  This is a Standard C++ Library header.
  27:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****  */
  28:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  29:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #ifndef _GLIBCXX_TUPLE
  30:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #define _GLIBCXX_TUPLE 1
  31:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  32:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #pragma GCC system_header
  33:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  34:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #if __cplusplus < 201103L
  35:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** # include <bits/c++0x_warning.h>
  36:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #else
  37:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  38:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #include <utility>
  39:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #include <array>
ARM GAS  /tmp/ccFxkDJm.s 			page 118


  40:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #include <bits/uses_allocator.h>
  41:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #include <bits/invoke.h>
  42:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  43:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** {
  45:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  47:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   /**
  48:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****    *  @addtogroup utilities
  49:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****    *  @{
  50:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****    */
  51:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  52:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   template<typename... _Elements>
  53:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     class tuple;
  54:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  55:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   template<typename _Tp>
  56:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     struct __is_empty_non_tuple : is_empty<_Tp> { };
  57:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  58:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   // Using EBO for elements that are tuples causes ambiguous base errors.
  59:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   template<typename _El0, typename... _El>
  60:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     struct __is_empty_non_tuple<tuple<_El0, _El...>> : false_type { };
  61:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  62:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   // Use the Empty Base-class Optimization for empty, non-final types.
  63:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   template<typename _Tp>
  64:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     using __empty_not_final
  65:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     = typename conditional<__is_final(_Tp), false_type,
  66:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 			   __is_empty_non_tuple<_Tp>>::type;
  67:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  68:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   template<std::size_t _Idx, typename _Head,
  69:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	   bool = __empty_not_final<_Head>::value>
  70:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     struct _Head_base;
  71:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  72:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   template<std::size_t _Idx, typename _Head>
  73:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     struct _Head_base<_Idx, _Head, true>
  74:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     : public _Head
  75:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     {
  76:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       constexpr _Head_base()
  77:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       : _Head() { }
  78:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  79:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       constexpr _Head_base(const _Head& __h)
  80:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       : _Head(__h) { }
  81:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  82:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       constexpr _Head_base(const _Head_base&) = default;
  83:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       constexpr _Head_base(_Head_base&&) = default;
  84:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  85:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       template<typename _UHead>
  86:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****         constexpr _Head_base(_UHead&& __h)
  87:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	: _Head(std::forward<_UHead>(__h)) { }
  88:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  89:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       _Head_base(allocator_arg_t, __uses_alloc0)
  90:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       : _Head() { }
  91:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  92:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       template<typename _Alloc>
  93:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc1<_Alloc> __a)
  94:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	: _Head(allocator_arg, *__a._M_a) { }
  95:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  96:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       template<typename _Alloc>
ARM GAS  /tmp/ccFxkDJm.s 			page 119


  97:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc2<_Alloc> __a)
  98:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	: _Head(*__a._M_a) { }
  99:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       template<typename _UHead>
 101:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	_Head_base(__uses_alloc0, _UHead&& __uhead)
 102:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	: _Head(std::forward<_UHead>(__uhead)) { }
 103:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 104:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       template<typename _Alloc, typename _UHead>
 105:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	_Head_base(__uses_alloc1<_Alloc> __a, _UHead&& __uhead)
 106:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	: _Head(allocator_arg, *__a._M_a, std::forward<_UHead>(__uhead)) { }
 107:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 108:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       template<typename _Alloc, typename _UHead>
 109:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	_Head_base(__uses_alloc2<_Alloc> __a, _UHead&& __uhead)
 110:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	: _Head(std::forward<_UHead>(__uhead), *__a._M_a) { }
 111:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 112:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       static constexpr _Head&
 113:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       _M_head(_Head_base& __b) noexcept { return __b; }
 114:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 115:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       static constexpr const _Head&
 116:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       _M_head(const _Head_base& __b) noexcept { return __b; }
 117:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     };
 118:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 119:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   template<std::size_t _Idx, typename _Head>
 120:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     struct _Head_base<_Idx, _Head, false>
 121:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     {
 122:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       constexpr _Head_base()
 123:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       : _M_head_impl() { }
 124:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 125:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       constexpr _Head_base(const _Head& __h)
 126:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       : _M_head_impl(__h) { }
 3683              		.loc 21 126 0
 3684 011c 0B4B     		ldr	r3, .L224+32
 3685              	.LBE1463:
 3686              	.LBE1462:
 3687              	.LBB1465:
 3688              	.LBB1466:
 3689              	.LBB1467:
 3690              	.LBB1468:
 3691 011e 2F60     		str	r7, [r5]
 3692              	.LVL320:
 3693              	.LBE1468:
 3694              	.LBE1467:
 3695              	.LBE1466:
 3696              	.LBE1465:
 3697              	.LBB1471:
 3698              	.LBB1464:
 3699 0120 AB60     		str	r3, [r5, #8]
 3700              	.LBE1464:
 3701              	.LBE1471:
 3702              	.LBE1461:
 3703              	.LBB1473:
 3704              	.LBB1474:
 3705 0122 044B     		ldr	r3, .L224+8
 3706              	.LBE1474:
 3707              	.LBE1473:
 3708              	.LBB1476:
 3709              	.LBB1472:
ARM GAS  /tmp/ccFxkDJm.s 			page 120


 3710              	.LBB1469:
 3711              	.LBB1470:
 3712 0124 6E60     		str	r6, [r5, #4]
 3713              	.LVL321:
 3714              	.LBE1470:
 3715              	.LBE1469:
 3716              	.LBE1472:
 3717              	.LBE1476:
 3718              	.LBB1477:
 3719              	.LBB1475:
 3720 0126 EB60     		str	r3, [r5, #12]
 3721              	.LVL322:
 3722              	.LVL323:
 3723              	.LBE1475:
 3724              	.LBE1477:
 3725              	.LBE1460:
 3726              	.LBE1459:
 3727              	.LBE1458:
 3728              		.loc 9 47 0
 3729 0128 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3730              	.L225:
 3731 012a C046     		.align	2
 3732              	.L224:
 3733 012c 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin
 3734 0130 000C0140 		.word	1073810432
 3735 0134 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin
 3736 0138 00100240 		.word	1073876992
 3737 013c 00000140 		.word	1073807360
 3738 0140 FFFFFFF8 		.word	-117440513
 3739 0144 FFFFF0FF 		.word	-983041
 3740 0148 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin
 3741 014c 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin
 3742 0150 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin
 3743 0154 FFFF0FFF 		.word	-15728641
 3744 0158 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin
 3745 015c FFFFFFF0 		.word	-251658241
 3746 0160 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin
 3747 0164 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin
 3748              		.cfi_endproc
 3749              	.LFE3153:
 3751              		.weak	_Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi
 3752              		.thumb_set _Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3
 3753              		.section	.text._ZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EE
 3754              		.align	1
 3755              		.weak	_ZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3
 3756              		.syntax unified
 3757              		.code	16
 3758              		.thumb_func
 3759              		.fpu softvfp
 3761              	_ZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4E
 3762              	.LFB3031:
 127:../../src/hd44780.h **** {
 3763              		.loc 11 127 0
 3764              		.cfi_startproc
 3765              		@ args = 0, pretend = 0, frame = 24
 3766              		@ frame_needed = 0, uses_anonymous_args = 0
 3767              	.LVL324:
ARM GAS  /tmp/ccFxkDJm.s 			page 121


 3768 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3769              	.LCFI31:
 3770              		.cfi_def_cfa_offset 20
 3771              		.cfi_offset 4, -20
 3772              		.cfi_offset 5, -16
 3773              		.cfi_offset 6, -12
 3774              		.cfi_offset 7, -8
 3775              		.cfi_offset 14, -4
 134:../../src/hd44780.h ****         Pin::template make<RS, mcu::PinMode::Output>(),
 3776              		.loc 11 134 0
 3777 0002 0126     		movs	r6, #1
 3778 0004 604B     		ldr	r3, .L257
 127:../../src/hd44780.h **** {
 3779              		.loc 11 127 0
 3780 0006 87B0     		sub	sp, sp, #28
 3781              	.LCFI32:
 3782              		.cfi_def_cfa_offset 48
 127:../../src/hd44780.h **** {
 3783              		.loc 11 127 0
 3784 0008 0190     		str	r0, [sp, #4]
 134:../../src/hd44780.h ****         Pin::template make<RS, mcu::PinMode::Output>(),
 3785              		.loc 11 134 0
 3786 000a 1B78     		ldrb	r3, [r3]
 3787 000c BFF35B8F 		dmb	ish
 3788 0010 5E4C     		ldr	r4, .L257+4
 3789 0012 3342     		tst	r3, r6
 3790 0014 00D0     		beq	.LCB3432
 3791 0016 87E0     		b	.L228	@long jump
 3792              	.LCB3432:
 134:../../src/hd44780.h ****         Pin::template make<RS, mcu::PinMode::Output>(),
 3793              		.loc 11 134 0 is_stmt 0 discriminator 1
 3794 0018 5B48     		ldr	r0, .L257
 3795              	.LVL325:
 3796 001a FFF7FEFF 		bl	__cxa_guard_acquire
 3797              	.LVL326:
 3798 001e 0028     		cmp	r0, #0
 3799 0020 00D1     		bne	.LCB3438
 3800 0022 81E0     		b	.L228	@long jump
 3801              	.LCB3438:
 3802              	.LBB1544:
 3803              	.LBB1545:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3804              		.loc 9 21 0 is_stmt 1
 3805 0024 5A4D     		ldr	r5, .L257+8
 3806 0026 2B78     		ldrb	r3, [r5]
 3807 0028 BFF35B8F 		dmb	ish
 3808 002c 594F     		ldr	r7, .L257+12
 3809 002e 3342     		tst	r3, r6
 3810 0030 0BD1     		bne	.L231
 3811 0032 2800     		movs	r0, r5
 3812 0034 FFF7FEFF 		bl	__cxa_guard_acquire
 3813              	.LVL327:
 3814 0038 0028     		cmp	r0, #0
 3815 003a 06D0     		beq	.L231
 3816              	.LVL328:
 3817              	.LBB1546:
 3818              	.LBB1547:
ARM GAS  /tmp/ccFxkDJm.s 			page 122


 3819              	.LBB1548:
  17:../../src/pin.h **** 
 3820              		.loc 9 17 0
 3821 003c 564B     		ldr	r3, .L257+16
 3822              	.LBE1548:
 3823              	.LBE1547:
 3824              	.LBE1546:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3825              		.loc 9 21 0
 3826 003e 2800     		movs	r0, r5
 3827              	.LBB1551:
 3828              	.LBB1550:
 3829              	.LBB1549:
  17:../../src/pin.h **** 
 3830              		.loc 9 17 0
 3831 0040 3B60     		str	r3, [r7]
 3832 0042 0C23     		movs	r3, #12
 3833 0044 7B60     		str	r3, [r7, #4]
 3834              	.LVL329:
 3835              	.LBE1549:
 3836              	.LBE1550:
 3837              	.LBE1551:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3838              		.loc 9 21 0
 3839 0046 FFF7FEFF 		bl	__cxa_guard_release
 3840              	.LVL330:
 3841              	.L231:
 3842              	.LBB1552:
 3843              	.LBB1553:
  50:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOD) APB2ENR.IOPDEN = true;
 3844              		.loc 17 50 0
 3845 004a 1023     		movs	r3, #16
 3846 004c 534D     		ldr	r5, .L257+20
 3847 004e AA69     		ldr	r2, [r5, #24]
 3848 0050 1343     		orrs	r3, r2
 3849 0052 AB61     		str	r3, [r5, #24]
 3850              	.LVL331:
 3851              	.LBE1553:
 3852              	.LBE1552:
  24:../../src/pin.h ****       return pin;
 3853              		.loc 9 24 0
 3854 0054 3968     		ldr	r1, [r7]
 3855              	.LVL332:
 3856              	.LBB1554:
 3857              	.LBB1555:
 3858              	.LBB1556:
  76:../../src/periph/gpio_f1.h ****    else if constexpr (n == 8)  { CR.CNF_MODE8  = v; return *this; }
  77:../../src/periph/gpio_f1.h ****    else if constexpr (n == 9)  { CR.CNF_MODE9  = v; return *this; }
  78:../../src/periph/gpio_f1.h ****    else if constexpr (n == 10) { CR.CNF_MODE10 = v; return *this; }
  79:../../src/periph/gpio_f1.h ****    else if constexpr (n == 11) { CR.CNF_MODE11 = v; return *this; }
  80:../../src/periph/gpio_f1.h ****    else if constexpr (n == 12) { CR.CNF_MODE12 = v; return *this; }
 3859              		.loc 10 80 0
 3860 0056 524A     		ldr	r2, .L257+24
 3861 0058 4B68     		ldr	r3, [r1, #4]
 3862 005a 1A40     		ands	r2, r3
 3863 005c 8023     		movs	r3, #128
 3864 005e 9B02     		lsls	r3, r3, #10
ARM GAS  /tmp/ccFxkDJm.s 			page 123


 3865 0060 1343     		orrs	r3, r2
 3866 0062 4B60     		str	r3, [r1, #4]
 3867              	.LVL333:
 3868              	.LBE1556:
 3869              	.LBE1555:
 3870              	.LBE1554:
 3871              	.LBE1545:
 3872              	.LBE1544:
 3873              	.LBB1557:
 3874              	.LBB1558:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3875              		.loc 9 21 0
 3876 0064 4F4B     		ldr	r3, .L257+28
 3877 0066 1B78     		ldrb	r3, [r3]
 3878 0068 BFF35B8F 		dmb	ish
 3879 006c 4E4E     		ldr	r6, .L257+32
 3880 006e DB07     		lsls	r3, r3, #31
 3881 0070 0BD4     		bmi	.L234
 3882 0072 4C48     		ldr	r0, .L257+28
 3883 0074 FFF7FEFF 		bl	__cxa_guard_acquire
 3884              	.LVL334:
 3885 0078 0028     		cmp	r0, #0
 3886 007a 06D0     		beq	.L234
 3887              	.LVL335:
 3888              	.LBB1559:
 3889              	.LBB1560:
 3890              	.LBB1561:
  17:../../src/pin.h **** 
 3891              		.loc 9 17 0
 3892 007c 4B4B     		ldr	r3, .L257+36
 3893              	.LBE1561:
 3894              	.LBE1560:
 3895              	.LBE1559:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3896              		.loc 9 21 0
 3897 007e 4948     		ldr	r0, .L257+28
 3898              	.LBB1564:
 3899              	.LBB1563:
 3900              	.LBB1562:
  17:../../src/pin.h **** 
 3901              		.loc 9 17 0
 3902 0080 3360     		str	r3, [r6]
 3903 0082 0223     		movs	r3, #2
 3904 0084 7360     		str	r3, [r6, #4]
 3905              	.LVL336:
 3906              	.LBE1562:
 3907              	.LBE1563:
 3908              	.LBE1564:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3909              		.loc 9 21 0
 3910 0086 FFF7FEFF 		bl	__cxa_guard_release
 3911              	.LVL337:
 3912              	.L234:
 3913              	.LBB1565:
 3914              	.LBB1566:
  51:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOE) APB2ENR.IOPEEN = true;
 3915              		.loc 17 51 0
ARM GAS  /tmp/ccFxkDJm.s 			page 124


 3916 008a 2023     		movs	r3, #32
 3917 008c AA69     		ldr	r2, [r5, #24]
 3918 008e 1343     		orrs	r3, r2
 3919 0090 AB61     		str	r3, [r5, #24]
 3920              	.LBE1566:
 3921              	.LBE1565:
  24:../../src/pin.h ****       return pin;
 3922              		.loc 9 24 0
 3923 0092 3168     		ldr	r1, [r6]
 3924              	.LVL338:
 3925              	.LBB1567:
 3926              	.LBB1568:
 3927              	.LBB1569:
  70:../../src/periph/gpio_f1.h ****    else if constexpr (n == 3)  { CR.CNF_MODE3  = v; return *this; }
 3928              		.loc 10 70 0
 3929 0094 464A     		ldr	r2, .L257+40
 3930 0096 0B68     		ldr	r3, [r1]
 3931              	.LBE1569:
 3932              	.LBE1568:
 3933              	.LBE1567:
 3934              	.LBE1558:
 3935              	.LBE1557:
 3936              	.LBB1574:
 3937              	.LBB1575:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3938              		.loc 9 21 0
 3939 0098 464E     		ldr	r6, .L257+44
 3940              	.LBE1575:
 3941              	.LBE1574:
 3942              	.LBB1601:
 3943              	.LBB1573:
 3944              	.LBB1572:
 3945              	.LBB1571:
 3946              	.LBB1570:
  70:../../src/periph/gpio_f1.h ****    else if constexpr (n == 3)  { CR.CNF_MODE3  = v; return *this; }
 3947              		.loc 10 70 0
 3948 009a 1A40     		ands	r2, r3
 3949 009c 8023     		movs	r3, #128
 3950 009e 9B00     		lsls	r3, r3, #2
 3951 00a0 1343     		orrs	r3, r2
 3952 00a2 0B60     		str	r3, [r1]
 3953              	.LVL339:
 3954              	.LBE1570:
 3955              	.LBE1571:
 3956              	.LBE1572:
 3957              	.LBE1573:
 3958              	.LBE1601:
 3959              	.LBB1602:
 3960              	.LBB1600:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3961              		.loc 9 21 0
 3962 00a4 3378     		ldrb	r3, [r6]
 3963 00a6 BFF35B8F 		dmb	ish
 3964 00aa DB07     		lsls	r3, r3, #31
 3965 00ac 0BD4     		bmi	.L237
 3966 00ae 3000     		movs	r0, r6
 3967 00b0 FFF7FEFF 		bl	__cxa_guard_acquire
ARM GAS  /tmp/ccFxkDJm.s 			page 125


 3968              	.LVL340:
 3969 00b4 0028     		cmp	r0, #0
 3970 00b6 06D0     		beq	.L237
 3971              	.LVL341:
 3972              	.LBB1576:
 3973              	.LBB1577:
 3974              	.LBB1578:
  17:../../src/pin.h **** 
 3975              		.loc 9 17 0
 3976 00b8 0322     		movs	r2, #3
 3977 00ba 3F4B     		ldr	r3, .L257+48
 3978 00bc 3F49     		ldr	r1, .L257+52
 3979              	.LBE1578:
 3980              	.LBE1577:
 3981              	.LBE1576:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3982              		.loc 9 21 0
 3983 00be 3000     		movs	r0, r6
 3984              	.LBB1581:
 3985              	.LBB1580:
 3986              	.LBB1579:
  17:../../src/pin.h **** 
 3987              		.loc 9 17 0
 3988 00c0 06C3     		stmia	r3!, {r1, r2}
 3989              	.LVL342:
 3990              	.LBE1579:
 3991              	.LBE1580:
 3992              	.LBE1581:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 3993              		.loc 9 21 0
 3994 00c2 FFF7FEFF 		bl	__cxa_guard_release
 3995              	.LVL343:
 3996              	.L237:
 3997              	.LBB1582:
 3998              	.LBB1583:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 3999              		.loc 17 49 0
 4000 00c6 0823     		movs	r3, #8
 4001 00c8 AA69     		ldr	r2, [r5, #24]
 4002              	.LBE1583:
 4003              	.LBE1582:
  24:../../src/pin.h ****       return pin;
 4004              		.loc 9 24 0
 4005 00ca 3B49     		ldr	r1, .L257+48
 4006              	.LBB1585:
 4007              	.LBB1584:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 4008              		.loc 17 49 0
 4009 00cc 1343     		orrs	r3, r2
 4010 00ce AB61     		str	r3, [r5, #24]
 4011              	.LBE1584:
 4012              	.LBE1585:
 4013              	.LBB1586:
 4014              	.LBB1587:
 4015              	.LBB1588:
 4016              		.loc 17 53 0
 4017 00d0 0123     		movs	r3, #1
ARM GAS  /tmp/ccFxkDJm.s 			page 126


 4018 00d2 AA69     		ldr	r2, [r5, #24]
 4019              	.LBE1588:
 4020              	.LBE1587:
 4021              	.LBE1586:
  24:../../src/pin.h ****       return pin;
 4022              		.loc 9 24 0
 4023 00d4 0868     		ldr	r0, [r1]
 4024              	.LVL344:
 4025              	.LBB1599:
 4026              	.LBB1591:
 4027              	.LBB1589:
 4028              		.loc 17 53 0
 4029 00d6 1343     		orrs	r3, r2
 4030              	.LBE1589:
 4031              	.LBE1591:
 4032              	.LBB1592:
 4033              	.LBB1593:
 4034              		.loc 20 23 0
 4035 00d8 394A     		ldr	r2, .L257+56
 4036              	.LBE1593:
 4037              	.LBE1592:
 4038              	.LBB1595:
 4039              	.LBB1590:
 4040              		.loc 17 53 0
 4041 00da AB61     		str	r3, [r5, #24]
 4042              	.LVL345:
 4043              	.LBE1590:
 4044              	.LBE1595:
 4045              	.LBB1596:
 4046              	.LBB1594:
 4047              		.loc 20 23 0
 4048 00dc 5368     		ldr	r3, [r2, #4]
 4049 00de 394D     		ldr	r5, .L257+60
 4050 00e0 1D40     		ands	r5, r3
 4051 00e2 8023     		movs	r3, #128
 4052 00e4 9B04     		lsls	r3, r3, #18
 4053 00e6 2B43     		orrs	r3, r5
 4054 00e8 5360     		str	r3, [r2, #4]
 4055              	.LVL346:
 4056              	.LBE1594:
 4057              	.LBE1596:
 4058              	.LBB1597:
 4059              	.LBB1598:
  71:../../src/periph/gpio_f1.h ****    else if constexpr (n == 4)  { CR.CNF_MODE4  = v; return *this; }
 4060              		.loc 10 71 0
 4061 00ea 0368     		ldr	r3, [r0]
 4062 00ec 364A     		ldr	r2, .L257+64
 4063 00ee 1A40     		ands	r2, r3
 4064 00f0 8023     		movs	r3, #128
 4065 00f2 9B01     		lsls	r3, r3, #6
 4066 00f4 1343     		orrs	r3, r2
 4067 00f6 0360     		str	r3, [r0]
 4068              	.LVL347:
 4069              	.LBE1598:
 4070              	.LBE1597:
 4071              	.LBE1599:
 4072              	.LBE1600:
ARM GAS  /tmp/ccFxkDJm.s 			page 127


 4073              	.LBE1602:
 4074              	.LBB1603:
 4075              	.LBB1604:
 4076              	.LBB1605:
 4077              	.LBB1606:
 4078              	.LBB1607:
 4079              	.LBB1608:
 4080              	.LBB1609:
 4081              	.LBB1610:
   6:../../src/list.h **** {
 4082              		.loc 13 6 0
 4083 00f8 0023     		movs	r3, #0
 4084              	.LBE1610:
 4085              	.LBE1609:
 4086              	.LBE1608:
 4087              	.LBE1607:
 4088              	.LBE1606:
  65:../../src/hd44780.h ****     {}
 4089              		.loc 11 65 0
 4090 00fa 344A     		ldr	r2, .L257+68
 4091              	.LBB1620:
 4092              	.LBB1617:
 4093              	.LBB1615:
 4094              	.LBB1613:
 4095              	.LBB1611:
   6:../../src/list.h **** {
 4096              		.loc 13 6 0
 4097 00fc 6360     		str	r3, [r4, #4]
 4098              	.LBE1611:
 4099              	.LBE1613:
 4100              	.LBE1615:
 4101              	.LBE1617:
 4102              	.LBE1620:
  65:../../src/hd44780.h ****     {}
 4103              		.loc 11 65 0
 4104 00fe 0832     		adds	r2, r2, #8
 4105 0100 2260     		str	r2, [r4]
 4106 0102 294A     		ldr	r2, .L257+32
 4107              	.LBB1621:
 4108              	.LBB1618:
 4109              	.LBB1616:
 4110              	.LBB1614:
 4111              	.LBB1612:
   6:../../src/list.h **** {
 4112              		.loc 13 6 0
 4113 0104 A360     		str	r3, [r4, #8]
 4114              	.LVL348:
 4115              	.LBE1612:
 4116              	.LBE1614:
 4117              	.LBE1616:
 4118              	.LBE1618:
 4119              	.LBE1621:
  65:../../src/hd44780.h ****     {}
 4120              		.loc 11 65 0
 4121 0106 6261     		str	r2, [r4, #20]
 4122 0108 2C4A     		ldr	r2, .L257+52
 4123              	.LBB1622:
ARM GAS  /tmp/ccFxkDJm.s 			page 128


 4124              	.LBB1619:
  44:../../src/timers.h **** {
 4125              		.loc 1 44 0
 4126 010a 2373     		strb	r3, [r4, #12]
 4127              	.LVL349:
 4128              	.LBE1619:
 4129              	.LBE1622:
  65:../../src/hd44780.h ****     {}
 4130              		.loc 11 65 0
 4131 010c E261     		str	r2, [r4, #28]
 4132 010e 019A     		ldr	r2, [sp, #4]
 4133              	.LBE1605:
 4134              	.LBE1604:
 4135              	.LBE1603:
 134:../../src/hd44780.h ****         Pin::template make<RS, mcu::PinMode::Output>(),
 4136              		.loc 11 134 0
 4137 0110 1D48     		ldr	r0, .L257
 4138              	.LBB1625:
 4139              	.LBB1624:
 4140              	.LBB1623:
  65:../../src/hd44780.h ****     {}
 4141              		.loc 11 65 0
 4142 0112 2262     		str	r2, [r4, #32]
 4143 0114 2E4A     		ldr	r2, .L257+72
 4144 0116 6373     		strb	r3, [r4, #13]
 4145 0118 6262     		str	r2, [r4, #36]
 4146 011a 2E4A     		ldr	r2, .L257+76
 4147 011c 2761     		str	r7, [r4, #16]
 4148 011e A161     		str	r1, [r4, #24]
 4149 0120 A262     		str	r2, [r4, #40]
 4150 0122 2363     		str	r3, [r4, #48]
 4151              	.LVL350:
 4152              	.LBE1623:
 4153              	.LBE1624:
 4154              	.LBE1625:
 134:../../src/hd44780.h ****         Pin::template make<RS, mcu::PinMode::Output>(),
 4155              		.loc 11 134 0
 4156 0124 FFF7FEFF 		bl	__cxa_guard_release
 4157              	.LVL351:
 4158              	.L228:
 144:../../src/hd44780.h **** 
 4159              		.loc 11 144 0
 4160 0128 02A8     		add	r0, sp, #8
 4161 012a FFF7FEFF 		bl	_Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EE
 4162              	.LVL352:
 146:../../src/hd44780.h ****     screen.tick_subscribe<Faster::x10>();
 4163              		.loc 11 146 0
 4164 012e 2000     		movs	r0, r4
 4165 0130 FFF7FEFF 		bl	_ZN7HD447804initEv
 4166              	.LVL353:
 4167              	.LBB1626:
 4168              	.LBB1627:
 186:../../src/timers.h **** 
 187:../../src/timers.h **** 
 188:../../src/timers.h **** 
 189:../../src/timers.h **** template<Faster x> // –Ω–∞ —Å–∫–æ–ª—å–∫–æ –±—ã—Å—Ç—Ä–µ–µ
 190:../../src/timers.h **** void TickSubscriber::tick_subscribe()
ARM GAS  /tmp/ccFxkDJm.s 			page 129


 191:../../src/timers.h **** {
 192:../../src/timers.h ****     if (not subscribed) {
 4169              		.loc 1 192 0
 4170 0134 237B     		ldrb	r3, [r4, #12]
 4171 0136 002B     		cmp	r3, #0
 4172 0138 22D1     		bne	.L239
 193:../../src/timers.h ****         subscribed = true;
 4173              		.loc 1 193 0
 4174 013a 0133     		adds	r3, r3, #1
 4175 013c 2373     		strb	r3, [r4, #12]
 4176              	.LVL354:
 4177              	.LBB1628:
 4178              	.LBB1629:
 4179              	.LBB1630:
 4180              	.LBB1631:
 4181              	.LBB1632:
  53:../../src/list.h ****    if (last)
 4182              		.loc 13 53 0
 4183 013e 264B     		ldr	r3, .L257+80
 4184 0140 DA68     		ldr	r2, [r3, #12]
 4185 0142 6260     		str	r2, [r4, #4]
  54:../../src/list.h ****       last->next = &v;
 4186              		.loc 13 54 0
 4187 0144 002A     		cmp	r2, #0
 4188 0146 00D0     		beq	.L240
  55:../../src/list.h ****    last = &v;
 4189              		.loc 13 55 0
 4190 0148 9460     		str	r4, [r2, #8]
 4191              	.L240:
  57:../../src/list.h ****       first = &v;
 4192              		.loc 13 57 0
 4193 014a 9A68     		ldr	r2, [r3, #8]
  56:../../src/list.h ****    if (not first)
 4194              		.loc 13 56 0
 4195 014c DC60     		str	r4, [r3, #12]
  57:../../src/list.h ****       first = &v;
 4196              		.loc 13 57 0
 4197 014e 002A     		cmp	r2, #0
 4198 0150 00D1     		bne	.L241
  58:../../src/list.h **** }
 4199              		.loc 13 58 0
 4200 0152 9C60     		str	r4, [r3, #8]
 4201              	.L241:
 4202              	.LVL355:
 4203              	.LBE1632:
 4204              	.LBE1631:
 4205              	.LBE1630:
  95:../../src/timers.h ****     REF(SysTick).initInterrupt<1000_us/multiplier>();
 4206              		.loc 1 95 0
 4207 0154 0A22     		movs	r2, #10
 4208 0156 5A61     		str	r2, [r3, #20]
 4209              	.LVL356:
 4210              	.LBB1633:
 4211              	.LBB1634:
 4212              	.LBB1635:
 4213              	.LBB1636:
  25:../../src/periph/systick.h ****     uint32_t get()             { return VAL; }
ARM GAS  /tmp/ccFxkDJm.s 			page 130


 4214              		.loc 5 25 0
 4215 0158 204B     		ldr	r3, .L257+84
 4216 015a 093A     		subs	r2, r2, #9
 4217 015c 1968     		ldr	r1, [r3]
 4218 015e 9143     		bics	r1, r2
 4219 0160 1960     		str	r1, [r3]
 4220              	.LVL357:
 4221              	.LBE1636:
 4222              	.LBE1635:
 4223              	.LBB1637:
 4224              	.LBB1638:
  21:../../src/periph/systick.h ****     void clear()               { VAL = 0; }
 4225              		.loc 5 21 0
 4226 0162 1F49     		ldr	r1, .L257+88
 4227 0164 5960     		str	r1, [r3, #4]
 4228              	.LVL358:
 4229              	.LBE1638:
 4230              	.LBE1637:
 4231              	.LBB1639:
 4232              	.LBB1640:
  22:../../src/periph/systick.h ****     void setSource (Clock v)   { CTRL.CLKSOURCE = v; }
 4233              		.loc 5 22 0
 4234 0166 0021     		movs	r1, #0
 4235 0168 9960     		str	r1, [r3, #8]
 4236              	.LVL359:
 4237              	.LBE1640:
 4238              	.LBE1639:
 4239              	.LBB1641:
 4240              	.LBB1642:
  23:../../src/periph/systick.h ****     void enableInterrupt()     { CTRL.TICKINT = true; }
 4241              		.loc 5 23 0
 4242 016a 1868     		ldr	r0, [r3]
 4243 016c 0431     		adds	r1, r1, #4
 4244 016e 0143     		orrs	r1, r0
 4245 0170 1960     		str	r1, [r3]
 4246              	.LVL360:
 4247              	.LBE1642:
 4248              	.LBE1641:
 4249              	.LBB1643:
 4250              	.LBB1644:
  24:../../src/periph/systick.h ****     void enable(bool v = true) { CTRL.ENABLE = v; }
 4251              		.loc 5 24 0
 4252 0172 0221     		movs	r1, #2
 4253 0174 1868     		ldr	r0, [r3]
 4254 0176 0143     		orrs	r1, r0
 4255 0178 1960     		str	r1, [r3]
 4256              	.LVL361:
 4257              	.LBE1644:
 4258              	.LBE1643:
 4259              	.LBB1645:
 4260              	.LBB1646:
  25:../../src/periph/systick.h ****     uint32_t get()             { return VAL; }
 4261              		.loc 5 25 0
 4262 017a 1968     		ldr	r1, [r3]
 4263 017c 0A43     		orrs	r2, r1
 4264 017e 1A60     		str	r2, [r3]
 4265              	.LVL362:
ARM GAS  /tmp/ccFxkDJm.s 			page 131


 4266              	.L239:
 4267              	.LBE1646:
 4268              	.LBE1645:
 4269              	.LBE1634:
 4270              	.LBE1633:
 4271              	.LBE1629:
 4272              	.LBE1628:
 4273              	.LBE1627:
 4274              	.LBE1626:
 150:../../src/hd44780.h **** 
 4275              		.loc 11 150 0
 4276 0180 2000     		movs	r0, r4
 4277 0182 07B0     		add	sp, sp, #28
 4278              		@ sp needed
 4279 0184 F0BD     		pop	{r4, r5, r6, r7, pc}
 4280              	.L258:
 4281 0186 C046     		.align	2
 4282              	.L257:
 4283 0188 00000000 		.word	_ZGVZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_I
 4284 018c 00000000 		.word	_ZZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS
 4285 0190 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin
 4286 0194 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin
 4287 0198 00100140 		.word	1073811456
 4288 019c 00100240 		.word	1073876992
 4289 01a0 FFFFF0FF 		.word	-983041
 4290 01a4 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin
 4291 01a8 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin
 4292 01ac 00140140 		.word	1073812480
 4293 01b0 FFF0FFFF 		.word	-3841
 4294 01b4 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin
 4295 01b8 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin
 4296 01bc 000C0140 		.word	1073810432
 4297 01c0 00000140 		.word	1073807360
 4298 01c4 FFFFFFF8 		.word	-117440513
 4299 01c8 FF0FFFFF 		.word	-61441
 4300 01cc 00000000 		.word	.LANCHOR1
 4301 01d0 00000000 		.word	_ZN4metaL8generateIL_Z10BSRR_valueIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5EEENS3_ILS4
 4302 01d4 00000000 		.word	_ZN4metaL8generateIL_Z12BSRR_commandIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5EEENS3_IL
 4303 01d8 00000000 		.word	.LANCHOR0
 4304 01dc 10E000E0 		.word	-536813552
 4305 01e0 1F1C0000 		.word	7199
 4306              		.cfi_endproc
 4307              	.LFE3031:
 4309              		.section	.text._ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_I
 4310              		.align	1
 4311              		.weak	_ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3
 4312              		.syntax unified
 4313              		.code	16
 4314              		.thumb_func
 4315              		.fpu softvfp
 4317              	_ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_
 4318              	.LFB2948:
 4319              		.file 22 "../../src/example/example_select_screen.h"
   1:../../src/example/example_select_screen.h **** #pragma once
   2:../../src/example/example_select_screen.h **** #include "hd44780.h"
   3:../../src/example/example_select_screen.h **** // #include "string_buffer.h"
   4:../../src/example/example_select_screen.h **** #include "timers.h"
ARM GAS  /tmp/ccFxkDJm.s 			page 132


   5:../../src/example/example_select_screen.h **** #include "select_screen.h"
   6:../../src/example/example_select_screen.h **** 
   7:../../src/example/example_select_screen.h **** namespace EO81 {
   8:../../src/example/example_select_screen.h ****     using E    = mcu::PB3;       
   9:../../src/example/example_select_screen.h ****     using RW   = mcu::PD2;       
  10:../../src/example/example_select_screen.h ****     using RS   = mcu::PC12;      
  11:../../src/example/example_select_screen.h ****     using DB4  = mcu::PB4;       
  12:../../src/example/example_select_screen.h ****     using DB5  = mcu::PB5;
  13:../../src/example/example_select_screen.h ****     using DB6  = mcu::PB6;    
  14:../../src/example/example_select_screen.h ****     using DB7  = mcu::PB7;
  15:../../src/example/example_select_screen.h ****     using Up   = mcu::PB8;
  16:../../src/example/example_select_screen.h ****     using Down = mcu::PB9;
  17:../../src/example/example_select_screen.h **** }
  18:../../src/example/example_select_screen.h **** 
  19:../../src/example/example_select_screen.h **** namespace mcu::example {
  20:../../src/example/example_select_screen.h **** 
  21:../../src/example/example_select_screen.h **** template<class RS, class RW, class E, class DB4, class DB5, class DB6, class DB7, class Up, class D
  22:../../src/example/example_select_screen.h **** struct select_screen : TickSubscriber {
  23:../../src/example/example_select_screen.h **** 
  24:../../src/example/example_select_screen.h ****     String_buffer lcd;
  25:../../src/example/example_select_screen.h ****     HD44780& _;
  26:../../src/example/example_select_screen.h ****     Button& up;
  27:../../src/example/example_select_screen.h ****     Button& down;
  28:../../src/example/example_select_screen.h ****     Timer timer{50_ms};
  29:../../src/example/example_select_screen.h ****     
  30:../../src/example/example_select_screen.h ****     Select_screen<6> screen;
  31:../../src/example/example_select_screen.h **** 
  32:../../src/example/example_select_screen.h ****     select_screen()
 4320              		.loc 22 32 0
 4321              		.cfi_startproc
 4322              		@ args = 0, pretend = 0, frame = 16
 4323              		@ frame_needed = 0, uses_anonymous_args = 0
 4324              	.LVL363:
 4325              	.LBB1782:
  33:../../src/example/example_select_screen.h ****         : lcd  {}
  34:../../src/example/example_select_screen.h ****         , _    { HD44780::make<RS, RW, E, DB4, DB5, DB6, DB7>(lcd.get_buffer()) }
  35:../../src/example/example_select_screen.h ****         , up   { mcu::Button::make<Up>()   }
  36:../../src/example/example_select_screen.h ****         , down { mcu::Button::make<Down>() }
  37:../../src/example/example_select_screen.h ****         , screen {
  38:../../src/example/example_select_screen.h ****               up, down, lcd
  39:../../src/example/example_select_screen.h ****             , []{}
  40:../../src/example/example_select_screen.h ****             , Line {"–ê–≤–∞—Ä–∏–∏"      ,[]{}}
  41:../../src/example/example_select_screen.h ****             , Line {"–ù–∞—Ä–∞–±–æ—Ç–∫–∞"   ,[]{}}
  42:../../src/example/example_select_screen.h ****             , Line {"–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è",[]{}}
  43:../../src/example/example_select_screen.h ****             , Line {"–õ–æ–≥ —Ä–∞–±–æ—Ç—ã"  ,[]{}}
  44:../../src/example/example_select_screen.h ****             , Line {"–ù–∞—Å—Ç—Ä–æ–π–∫–∏"   ,[]{}}
  45:../../src/example/example_select_screen.h ****             , Line {"–ù–∞—Ä–∞–±–æ—Ç–∫–∞"   ,[]{}}
  46:../../src/example/example_select_screen.h ****         }
 4326              		.loc 22 46 0
 4327 0000 B64A     		ldr	r2, .L326
 4328              	.LBE1782:
  32:../../src/example/example_select_screen.h ****         : lcd  {}
 4329              		.loc 22 32 0
 4330 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 4331              	.LCFI33:
 4332              		.cfi_def_cfa_offset 20
 4333              		.cfi_offset 4, -20
ARM GAS  /tmp/ccFxkDJm.s 			page 133


 4334              		.cfi_offset 5, -16
 4335              		.cfi_offset 6, -12
 4336              		.cfi_offset 7, -8
 4337              		.cfi_offset 14, -4
 4338              	.LBB2002:
 4339              	.LBB1783:
 4340              	.LBB1784:
 4341              	.LBB1785:
 4342              	.LBB1786:
 4343              	.LBB1787:
 4344              	.LBB1788:
 4345              		.loc 18 235 0
 4346 0004 0400     		movs	r4, r0
 4347              	.LBE1788:
 4348              	.LBE1787:
 4349              	.LBE1786:
 4350              	.LBE1785:
 4351              	.LBE1784:
 4352              	.LBE1783:
 4353              	.LBB1810:
 4354              	.LBB1811:
 4355              	.LBB1812:
 4356              	.LBB1813:
 4357              	.LBB1814:
   6:../../src/list.h **** {
 4358              		.loc 13 6 0
 4359 0006 0023     		movs	r3, #0
 4360              	.LBE1814:
 4361              	.LBE1813:
 4362              	.LBE1812:
 4363              	.LBE1811:
 4364              	.LBE1810:
 4365              		.loc 22 46 0
 4366 0008 0260     		str	r2, [r0]
 4367              	.LBB1819:
 4368              	.LBB1805:
 4369              	.LBB1801:
 4370              	.LBB1791:
 4371              	.LBB1792:
 4372              	.LBB1793:
 732:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 		    __value);
 733:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 734:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 735:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
 736:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline typename
 737:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type
 738:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
 739:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 740:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       for (__decltype(__n + 0) __niter = __n;
 741:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 742:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	*__first = __value;
 743:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return __first;
 744:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 745:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 746:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
 747:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline typename
 748:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type
ARM GAS  /tmp/ccFxkDJm.s 			page 134


 749:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
 750:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 751:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 752:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       for (__decltype(__n + 0) __niter = __n;
 753:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 754:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 755:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       return __first;
 756:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     }
 757:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h **** 
 758:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****   template<typename _Size, typename _Tp>
 759:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     inline typename
 760:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp*>::__type
 761:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     __fill_n_a(_Tp* __first, _Size __n, const _Tp& __c)
 762:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****     {
 763:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bits/stl_algobase.h ****       std::__fill_a(__first, __first + __n, __c);
 4373              		.loc 6 763 0
 4374 000a 0100     		movs	r1, r0
 4375              	.LBE1793:
 4376              	.LBE1792:
 4377              	.LBE1791:
 4378              	.LBE1801:
 4379              	.LBE1805:
 4380              	.LBE1819:
 4381              		.loc 22 46 0
 4382 000c 0200     		movs	r2, r0
 4383              	.LBB1820:
 4384              	.LBB1806:
 4385              	.LBB1802:
 4386              	.LBB1798:
 4387              	.LBB1790:
 4388              	.LBB1789:
 4389              		.loc 18 235 0
 4390 000e 1D34     		adds	r4, r4, #29
 4391              	.LBE1789:
 4392              	.LBE1790:
 4393              	.LBE1798:
 4394              	.LBE1802:
 4395              	.LBE1806:
 4396              	.LBE1820:
 4397              	.LBB1821:
 4398              	.LBB1818:
 4399              	.LBB1817:
 4400              	.LBB1816:
 4401              	.LBB1815:
   6:../../src/list.h **** {
 4402              		.loc 13 6 0
 4403 0010 4360     		str	r3, [r0, #4]
 4404 0012 8360     		str	r3, [r0, #8]
 4405              	.LVL364:
 4406              	.LBE1815:
 4407              	.LBE1816:
 4408              	.LBE1817:
  44:../../src/timers.h **** {
 4409              		.loc 1 44 0
 4410 0014 0373     		strb	r3, [r0, #12]
 4411              	.LVL365:
 4412              	.LBE1818:
ARM GAS  /tmp/ccFxkDJm.s 			page 135


 4413              	.LBE1821:
 4414              		.loc 22 46 0
 4415 0016 1032     		adds	r2, r2, #16
 4416              	.LBB1822:
 4417              	.LBB1807:
  22:../../src/string_buffer.h ****     String_buffer (){screen.fill(' ');}
 4418              		.loc 15 22 0
 4419 0018 0361     		str	r3, [r0, #16]
 4420 001a 4361     		str	r3, [r0, #20]
 4421 001c 8361     		str	r3, [r0, #24]
 4422 001e 0377     		strb	r3, [r0, #28]
 4423              	.LBE1807:
 4424              	.LBE1822:
 4425              	.LBE2002:
  32:../../src/example/example_select_screen.h ****         : lcd  {}
 4426              		.loc 22 32 0
 4427 0020 85B0     		sub	sp, sp, #20
 4428              	.LCFI34:
 4429              		.cfi_def_cfa_offset 40
  32:../../src/example/example_select_screen.h ****         : lcd  {}
 4430              		.loc 22 32 0
 4431 0022 0600     		movs	r6, r0
 4432              	.LBB2003:
 4433              	.LBB1823:
 4434              	.LBB1808:
 4435              	.LBB1803:
 4436              	.LBB1799:
 4437              	.LBB1796:
 4438              	.LBB1794:
 4439              		.loc 6 763 0
 4440 0024 6D31     		adds	r1, r1, #109
 4441 0026 2000     		movs	r0, r4
 4442              	.LVL366:
 4443              	.LBE1794:
 4444              	.LBE1796:
 4445              	.LBE1799:
 4446              	.LBE1803:
 4447              	.LBE1808:
 4448              	.LBE1823:
 4449              		.loc 22 46 0
 4450 0028 0192     		str	r2, [sp, #4]
 4451              	.LVL367:
 4452              	.LBB1824:
 4453              	.LBB1809:
 4454              	.LBB1804:
 4455              	.LBB1800:
 4456              	.LBB1797:
 4457              	.LBB1795:
 4458              		.loc 6 763 0
 4459 002a FFF7FEFF 		bl	_ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_.isr
 4460              	.LVL368:
 4461              	.LBE1795:
 4462              	.LBE1797:
 4463              	.LBE1800:
 4464              	.LBE1804:
 4465              	.LBE1809:
 4466              	.LBE1824:
ARM GAS  /tmp/ccFxkDJm.s 			page 136


  34:../../src/example/example_select_screen.h ****         , up   { mcu::Button::make<Up>()   }
 4467              		.loc 22 34 0
 4468 002e 2000     		movs	r0, r4
 4469 0030 FFF7FEFF 		bl	_ZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2E
 4470              	.LVL369:
 4471              	.LBB1825:
 4472              	.LBB1826:
  34:../../src/buttons.h ****       return button;
 4473              		.loc 14 34 0
 4474 0034 0122     		movs	r2, #1
 4475 0036 AA4B     		ldr	r3, .L326+4
 4476              	.LBE1826:
 4477              	.LBE1825:
 4478              		.loc 22 46 0
 4479 0038 3067     		str	r0, [r6, #112]
 4480              	.LBB1871:
 4481              	.LBB1870:
  34:../../src/buttons.h ****       return button;
 4482              		.loc 14 34 0
 4483 003a 1B78     		ldrb	r3, [r3]
 4484 003c BFF35B8F 		dmb	ish
 4485 0040 A84C     		ldr	r4, .L326+8
 4486 0042 1342     		tst	r3, r2
 4487 0044 39D1     		bne	.L261
 4488 0046 A648     		ldr	r0, .L326+4
 4489 0048 FFF7FEFF 		bl	__cxa_guard_acquire
 4490              	.LVL370:
 4491 004c 0028     		cmp	r0, #0
 4492 004e 34D0     		beq	.L261
 4493              	.LBB1827:
 4494              	.LBB1828:
 4495              	.LBB1829:
 4496              	.LBB1830:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 4497              		.loc 9 21 0
 4498 0050 0122     		movs	r2, #1
 4499 0052 A54F     		ldr	r7, .L326+12
 4500 0054 3B78     		ldrb	r3, [r7]
 4501 0056 BFF35B8F 		dmb	ish
 4502 005a A44D     		ldr	r5, .L326+16
 4503 005c 1342     		tst	r3, r2
 4504 005e 0BD1     		bne	.L264
 4505 0060 3800     		movs	r0, r7
 4506 0062 FFF7FEFF 		bl	__cxa_guard_acquire
 4507              	.LVL371:
 4508 0066 0028     		cmp	r0, #0
 4509 0068 06D0     		beq	.L264
 4510              	.LVL372:
 4511              	.LBB1831:
 4512              	.LBB1832:
 4513              	.LBB1833:
  17:../../src/pin.h **** 
 4514              		.loc 9 17 0
 4515 006a A14B     		ldr	r3, .L326+20
 4516              	.LBE1833:
 4517              	.LBE1832:
 4518              	.LBE1831:
ARM GAS  /tmp/ccFxkDJm.s 			page 137


  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 4519              		.loc 9 21 0
 4520 006c 3800     		movs	r0, r7
 4521              	.LBB1836:
 4522              	.LBB1835:
 4523              	.LBB1834:
  17:../../src/pin.h **** 
 4524              		.loc 9 17 0
 4525 006e 2B60     		str	r3, [r5]
 4526 0070 0823     		movs	r3, #8
 4527 0072 6B60     		str	r3, [r5, #4]
 4528              	.LVL373:
 4529              	.LBE1834:
 4530              	.LBE1835:
 4531              	.LBE1836:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 4532              		.loc 9 21 0
 4533 0074 FFF7FEFF 		bl	__cxa_guard_release
 4534              	.LVL374:
 4535              	.L264:
 4536              	.LBB1837:
 4537              	.LBB1838:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 4538              		.loc 17 49 0
 4539 0078 0823     		movs	r3, #8
 4540 007a 9E4A     		ldr	r2, .L326+24
 4541              	.LBE1838:
 4542              	.LBE1837:
 4543              	.LBE1830:
 4544              	.LBE1829:
  34:../../src/buttons.h ****       return button;
 4545              		.loc 14 34 0
 4546 007c 9848     		ldr	r0, .L326+4
 4547              	.LBB1852:
 4548              	.LBB1850:
 4549              	.LBB1840:
 4550              	.LBB1839:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 4551              		.loc 17 49 0
 4552 007e 9169     		ldr	r1, [r2, #24]
 4553 0080 0B43     		orrs	r3, r1
 4554 0082 9361     		str	r3, [r2, #24]
 4555              	.LBE1839:
 4556              	.LBE1840:
 4557              	.LBB1841:
 4558              	.LBB1842:
 4559              	.LBB1843:
  76:../../src/periph/gpio_f1.h ****    else if constexpr (n == 9)  { CR.CNF_MODE9  = v; return *this; }
 4560              		.loc 10 76 0
 4561 0084 0F22     		movs	r2, #15
 4562              	.LBE1843:
 4563              	.LBE1842:
 4564              	.LBE1841:
  24:../../src/pin.h ****       return pin;
 4565              		.loc 9 24 0
 4566 0086 2968     		ldr	r1, [r5]
 4567              	.LVL375:
ARM GAS  /tmp/ccFxkDJm.s 			page 138


 4568              	.LBB1848:
 4569              	.LBB1846:
 4570              	.LBB1844:
  76:../../src/periph/gpio_f1.h ****    else if constexpr (n == 9)  { CR.CNF_MODE9  = v; return *this; }
 4571              		.loc 10 76 0
 4572 0088 4B68     		ldr	r3, [r1, #4]
 4573 008a 9343     		bics	r3, r2
 4574 008c 1A00     		movs	r2, r3
 4575 008e 0423     		movs	r3, #4
 4576 0090 1343     		orrs	r3, r2
 4577              	.LBE1844:
 4578              	.LBE1846:
 4579              	.LBE1848:
 4580              	.LBE1850:
 4581              	.LBE1852:
 4582              	.LBB1853:
 4583              	.LBB1854:
 4584              	.LBB1855:
  27:../../src/buttons.h **** 
 4585              		.loc 14 27 0
 4586 0092 994A     		ldr	r2, .L326+28
 4587              	.LBE1855:
 4588              	.LBE1854:
 4589              	.LBE1853:
 4590              	.LBB1868:
 4591              	.LBB1851:
 4592              	.LBB1849:
 4593              	.LBB1847:
 4594              	.LBB1845:
  76:../../src/periph/gpio_f1.h ****    else if constexpr (n == 9)  { CR.CNF_MODE9  = v; return *this; }
 4595              		.loc 10 76 0
 4596 0094 4B60     		str	r3, [r1, #4]
 4597              	.LVL376:
 4598              	.LBE1845:
 4599              	.LBE1847:
 4600              	.LBE1849:
 4601              	.LBE1851:
 4602              	.LBE1868:
 4603              	.LBB1869:
 4604              	.LBB1867:
 4605              	.LBB1866:
 4606              	.LBB1856:
 4607              	.LBB1857:
 4608              	.LBB1858:
 4609              	.LBB1859:
 4610              	.LBB1860:
   6:../../src/list.h **** {
 4611              		.loc 13 6 0
 4612 0096 0023     		movs	r3, #0
 4613              	.LBE1860:
 4614              	.LBE1859:
 4615              	.LBE1858:
 4616              	.LBE1857:
 4617              	.LBE1856:
  27:../../src/buttons.h **** 
 4618              		.loc 14 27 0
 4619 0098 2260     		str	r2, [r4]
ARM GAS  /tmp/ccFxkDJm.s 			page 139


 4620 009a 0122     		movs	r2, #1
 4621              	.LBB1865:
 4622              	.LBB1864:
 4623              	.LBB1863:
 4624              	.LBB1862:
 4625              	.LBB1861:
   6:../../src/list.h **** {
 4626              		.loc 13 6 0
 4627 009c 6360     		str	r3, [r4, #4]
 4628 009e A360     		str	r3, [r4, #8]
 4629              	.LVL377:
 4630              	.LBE1861:
 4631              	.LBE1862:
 4632              	.LBE1863:
  44:../../src/timers.h **** {
 4633              		.loc 1 44 0
 4634 00a0 2373     		strb	r3, [r4, #12]
 4635              	.LVL378:
 4636              	.LBE1864:
 4637              	.LBE1865:
  27:../../src/buttons.h **** 
 4638              		.loc 14 27 0
 4639 00a2 2561     		str	r5, [r4, #16]
 4640 00a4 6361     		str	r3, [r4, #20]
 4641 00a6 2376     		strb	r3, [r4, #24]
 4642 00a8 6376     		strb	r3, [r4, #25]
 4643 00aa A376     		strb	r3, [r4, #26]
 4644 00ac E376     		strb	r3, [r4, #27]
 4645 00ae 2377     		strb	r3, [r4, #28]
 4646 00b0 2262     		str	r2, [r4, #32]
 4647 00b2 6362     		str	r3, [r4, #36]
 4648 00b4 A362     		str	r3, [r4, #40]
 4649              	.LVL379:
 4650              	.LBE1866:
 4651              	.LBE1867:
 4652              	.LBE1869:
  34:../../src/buttons.h ****       return button;
 4653              		.loc 14 34 0
 4654 00b6 FFF7FEFF 		bl	__cxa_guard_release
 4655              	.LVL380:
 4656              	.L261:
 4657              	.LBE1828:
 4658              	.LBE1827:
 4659              	.LBE1870:
 4660              	.LBE1871:
 4661              	.LBB1872:
 4662              	.LBB1873:
 4663 00ba 0122     		movs	r2, #1
 4664 00bc 8F4B     		ldr	r3, .L326+32
 4665              	.LBE1873:
 4666              	.LBE1872:
 4667              		.loc 22 46 0
 4668 00be 7467     		str	r4, [r6, #116]
 4669              	.LBB1918:
 4670              	.LBB1917:
  34:../../src/buttons.h ****       return button;
 4671              		.loc 14 34 0
ARM GAS  /tmp/ccFxkDJm.s 			page 140


 4672 00c0 1B78     		ldrb	r3, [r3]
 4673 00c2 BFF35B8F 		dmb	ish
 4674 00c6 8E4C     		ldr	r4, .L326+36
 4675 00c8 1342     		tst	r3, r2
 4676 00ca 39D1     		bne	.L267
 4677 00cc 8B48     		ldr	r0, .L326+32
 4678 00ce FFF7FEFF 		bl	__cxa_guard_acquire
 4679              	.LVL381:
 4680 00d2 0028     		cmp	r0, #0
 4681 00d4 34D0     		beq	.L267
 4682              	.LBB1874:
 4683              	.LBB1875:
 4684              	.LBB1876:
 4685              	.LBB1877:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 4686              		.loc 9 21 0
 4687 00d6 0122     		movs	r2, #1
 4688 00d8 8A4F     		ldr	r7, .L326+40
 4689 00da 3B78     		ldrb	r3, [r7]
 4690 00dc BFF35B8F 		dmb	ish
 4691 00e0 894D     		ldr	r5, .L326+44
 4692 00e2 1342     		tst	r3, r2
 4693 00e4 0BD1     		bne	.L270
 4694 00e6 3800     		movs	r0, r7
 4695 00e8 FFF7FEFF 		bl	__cxa_guard_acquire
 4696              	.LVL382:
 4697 00ec 0028     		cmp	r0, #0
 4698 00ee 06D0     		beq	.L270
 4699              	.LVL383:
 4700              	.LBB1878:
 4701              	.LBB1879:
 4702              	.LBB1880:
  17:../../src/pin.h **** 
 4703              		.loc 9 17 0
 4704 00f0 7F4B     		ldr	r3, .L326+20
 4705              	.LBE1880:
 4706              	.LBE1879:
 4707              	.LBE1878:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 4708              		.loc 9 21 0
 4709 00f2 3800     		movs	r0, r7
 4710              	.LBB1883:
 4711              	.LBB1882:
 4712              	.LBB1881:
  17:../../src/pin.h **** 
 4713              		.loc 9 17 0
 4714 00f4 2B60     		str	r3, [r5]
 4715 00f6 0923     		movs	r3, #9
 4716 00f8 6B60     		str	r3, [r5, #4]
 4717              	.LVL384:
 4718              	.LBE1881:
 4719              	.LBE1882:
 4720              	.LBE1883:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 4721              		.loc 9 21 0
 4722 00fa FFF7FEFF 		bl	__cxa_guard_release
 4723              	.LVL385:
ARM GAS  /tmp/ccFxkDJm.s 			page 141


 4724              	.L270:
 4725              	.LBB1884:
 4726              	.LBB1885:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 4727              		.loc 17 49 0
 4728 00fe 0823     		movs	r3, #8
 4729 0100 7C4A     		ldr	r2, .L326+24
 4730              	.LBE1885:
 4731              	.LBE1884:
 4732              	.LBE1877:
 4733              	.LBE1876:
  34:../../src/buttons.h ****       return button;
 4734              		.loc 14 34 0
 4735 0102 7E48     		ldr	r0, .L326+32
 4736              	.LBB1899:
 4737              	.LBB1897:
 4738              	.LBB1887:
 4739              	.LBB1886:
  49:../../src/periph/rcc_f1.h **** 		else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
 4740              		.loc 17 49 0
 4741 0104 9169     		ldr	r1, [r2, #24]
 4742 0106 0B43     		orrs	r3, r1
 4743 0108 9361     		str	r3, [r2, #24]
 4744              	.LBE1886:
 4745              	.LBE1887:
 4746              	.LBB1888:
 4747              	.LBB1889:
 4748              	.LBB1890:
  77:../../src/periph/gpio_f1.h ****    else if constexpr (n == 10) { CR.CNF_MODE10 = v; return *this; }
 4749              		.loc 10 77 0
 4750 010a F022     		movs	r2, #240
 4751              	.LBE1890:
 4752              	.LBE1889:
 4753              	.LBE1888:
  24:../../src/pin.h ****       return pin;
 4754              		.loc 9 24 0
 4755 010c 2968     		ldr	r1, [r5]
 4756              	.LVL386:
 4757              	.LBB1895:
 4758              	.LBB1893:
 4759              	.LBB1891:
  77:../../src/periph/gpio_f1.h ****    else if constexpr (n == 10) { CR.CNF_MODE10 = v; return *this; }
 4760              		.loc 10 77 0
 4761 010e 4B68     		ldr	r3, [r1, #4]
 4762 0110 9343     		bics	r3, r2
 4763 0112 1A00     		movs	r2, r3
 4764 0114 4023     		movs	r3, #64
 4765 0116 1343     		orrs	r3, r2
 4766              	.LBE1891:
 4767              	.LBE1893:
 4768              	.LBE1895:
 4769              	.LBE1897:
 4770              	.LBE1899:
 4771              	.LBB1900:
 4772              	.LBB1901:
 4773              	.LBB1902:
  27:../../src/buttons.h **** 
ARM GAS  /tmp/ccFxkDJm.s 			page 142


 4774              		.loc 14 27 0
 4775 0118 774A     		ldr	r2, .L326+28
 4776              	.LBE1902:
 4777              	.LBE1901:
 4778              	.LBE1900:
 4779              	.LBB1915:
 4780              	.LBB1898:
 4781              	.LBB1896:
 4782              	.LBB1894:
 4783              	.LBB1892:
  77:../../src/periph/gpio_f1.h ****    else if constexpr (n == 10) { CR.CNF_MODE10 = v; return *this; }
 4784              		.loc 10 77 0
 4785 011a 4B60     		str	r3, [r1, #4]
 4786              	.LVL387:
 4787              	.LBE1892:
 4788              	.LBE1894:
 4789              	.LBE1896:
 4790              	.LBE1898:
 4791              	.LBE1915:
 4792              	.LBB1916:
 4793              	.LBB1914:
 4794              	.LBB1913:
 4795              	.LBB1903:
 4796              	.LBB1904:
 4797              	.LBB1905:
 4798              	.LBB1906:
 4799              	.LBB1907:
   6:../../src/list.h **** {
 4800              		.loc 13 6 0
 4801 011c 0023     		movs	r3, #0
 4802              	.LBE1907:
 4803              	.LBE1906:
 4804              	.LBE1905:
 4805              	.LBE1904:
 4806              	.LBE1903:
  27:../../src/buttons.h **** 
 4807              		.loc 14 27 0
 4808 011e 2260     		str	r2, [r4]
 4809 0120 0122     		movs	r2, #1
 4810              	.LBB1912:
 4811              	.LBB1911:
 4812              	.LBB1910:
 4813              	.LBB1909:
 4814              	.LBB1908:
   6:../../src/list.h **** {
 4815              		.loc 13 6 0
 4816 0122 6360     		str	r3, [r4, #4]
 4817 0124 A360     		str	r3, [r4, #8]
 4818              	.LVL388:
 4819              	.LBE1908:
 4820              	.LBE1909:
 4821              	.LBE1910:
  44:../../src/timers.h **** {
 4822              		.loc 1 44 0
 4823 0126 2373     		strb	r3, [r4, #12]
 4824              	.LVL389:
 4825              	.LBE1911:
ARM GAS  /tmp/ccFxkDJm.s 			page 143


 4826              	.LBE1912:
  27:../../src/buttons.h **** 
 4827              		.loc 14 27 0
 4828 0128 2561     		str	r5, [r4, #16]
 4829 012a 6361     		str	r3, [r4, #20]
 4830 012c 2376     		strb	r3, [r4, #24]
 4831 012e 6376     		strb	r3, [r4, #25]
 4832 0130 A376     		strb	r3, [r4, #26]
 4833 0132 E376     		strb	r3, [r4, #27]
 4834 0134 2377     		strb	r3, [r4, #28]
 4835 0136 2262     		str	r2, [r4, #32]
 4836 0138 6362     		str	r3, [r4, #36]
 4837 013a A362     		str	r3, [r4, #40]
 4838              	.LVL390:
 4839              	.LBE1913:
 4840              	.LBE1914:
 4841              	.LBE1916:
  34:../../src/buttons.h ****       return button;
 4842              		.loc 14 34 0
 4843 013c FFF7FEFF 		bl	__cxa_guard_release
 4844              	.LVL391:
 4845              	.L267:
 4846              	.LBE1875:
 4847              	.LBE1874:
 4848              	.LBE1917:
 4849              	.LBE1918:
 4850              	.LBB1919:
 4851              	.LBB1920:
 4852              	.LBB1921:
 4853              	.LBB1922:
 4854              	.LBB1923:
 4855              	.LBB1924:
 4856              	.LBB1925:
   6:../../src/list.h **** {
 4857              		.loc 13 6 0
 4858 0140 0022     		movs	r2, #0
 4859              	.LBE1925:
 4860              	.LBE1924:
 4861              	.LBE1923:
  44:../../src/timers.h **** {
 4862              		.loc 1 44 0
 4863 0142 3000     		movs	r0, r6
 4864              	.LBB1930:
 4865              	.LBB1928:
 4866              	.LBB1926:
   6:../../src/list.h **** {
 4867              		.loc 13 6 0
 4868 0144 331D     		adds	r3, r6, #4
 4869              	.LBE1926:
 4870              	.LBE1928:
 4871              	.LBE1930:
 4872              	.LBE1922:
 4873              	.LBE1921:
 4874              	.LBE1920:
 4875              	.LBE1919:
 4876              		.loc 22 46 0
 4877 0146 B467     		str	r4, [r6, #120]
ARM GAS  /tmp/ccFxkDJm.s 			page 144


 4878              	.LVL392:
 4879              	.LBB1939:
 4880              	.LBB1938:
 4881              	.LBB1934:
 4882              	.LBB1932:
 4883              	.LBB1931:
 4884              	.LBB1929:
 4885              	.LBB1927:
   6:../../src/list.h **** {
 4886              		.loc 13 6 0
 4887 0148 0433     		adds	r3, r3, #4
 4888 014a 9A67     		str	r2, [r3, #120]
 4889 014c DA67     		str	r2, [r3, #124]
 4890              	.LVL393:
 4891              	.LBE1927:
 4892              	.LBE1929:
 4893              	.LBE1931:
 4894              	.LBE1932:
 4895              	.LBE1934:
  60:../../src/timers.h ****     ~Timer () {tick_unsubscribe();}
 4896              		.loc 1 60 0
 4897 014e 6F4B     		ldr	r3, .L326+48
 4898              	.LBB1935:
 4899              	.LBB1933:
  44:../../src/timers.h **** {
 4900              		.loc 1 44 0
 4901 0150 7C30     		adds	r0, r0, #124
 4902              	.LVL394:
 4903 0152 0273     		strb	r2, [r0, #12]
 4904              	.LVL395:
 4905              	.LBE1933:
 4906              	.LBE1935:
  60:../../src/timers.h ****     ~Timer () {tick_unsubscribe();}
 4907              		.loc 1 60 0
 4908 0154 3100     		movs	r1, r6
 4909 0156 F367     		str	r3, [r6, #124]
 4910 0158 3300     		movs	r3, r6
 4911 015a 9031     		adds	r1, r1, #144
 4912 015c 8C33     		adds	r3, r3, #140
 4913 015e 1A60     		str	r2, [r3]
 4914 0160 0A60     		str	r2, [r1]
 4915              	.LVL396:
 4916              	.LBB1936:
 4917              	.LBB1937:
 122:../../src/timers.h ****     tick_subscribe();
 4918              		.loc 1 122 0
 4919 0162 3232     		adds	r2, r2, #50
 4920 0164 1A60     		str	r2, [r3]
 123:../../src/timers.h **** }
 4921              		.loc 1 123 0
 4922 0166 FFF7FEFF 		bl	_ZN14TickSubscriber14tick_subscribeEv
 4923              	.LVL397:
 4924              	.LBE1937:
 4925              	.LBE1936:
 4926              	.LBE1938:
 4927              	.LBE1939:
 4928              		.loc 22 46 0
ARM GAS  /tmp/ccFxkDJm.s 			page 145


 4929 016a 736F     		ldr	r3, [r6, #116]
 4930              	.LBB1940:
 4931              	.LBB1941:
  15:../../src/function.h ****         functor_pointer = &holder;
 4932              		.loc 3 15 0
 4933 016c 684C     		ldr	r4, .L326+52
 4934              	.LBE1941:
 4935              	.LBE1940:
 4936              		.loc 22 46 0
 4937 016e 0293     		str	r3, [sp, #8]
 4938 0170 B36F     		ldr	r3, [r6, #120]
 4939 0172 0393     		str	r3, [sp, #12]
 4940              	.LVL398:
 4941              	.LBB1949:
 4942              	.LBB1948:
  15:../../src/function.h ****         functor_pointer = &holder;
 4943              		.loc 3 15 0
 4944 0174 2378     		ldrb	r3, [r4]
 4945 0176 BFF35B8F 		dmb	ish
 4946 017a DB07     		lsls	r3, r3, #31
 4947 017c 0AD4     		bmi	.L273
 4948 017e 2000     		movs	r0, r4
 4949 0180 FFF7FEFF 		bl	__cxa_guard_acquire
 4950              	.LVL399:
 4951 0184 0028     		cmp	r0, #0
 4952 0186 05D0     		beq	.L273
 4953              	.LVL400:
 4954              	.LBB1942:
 4955              	.LBB1943:
 4956              	.LBB1944:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 4957              		.loc 3 33 0
 4958 0188 624B     		ldr	r3, .L326+56
 4959 018a 634A     		ldr	r2, .L326+60
 4960              	.LBE1944:
 4961              	.LBE1943:
 4962              	.LBE1942:
  15:../../src/function.h ****         functor_pointer = &holder;
 4963              		.loc 3 15 0
 4964 018c 2000     		movs	r0, r4
 4965              	.LBB1947:
 4966              	.LBB1946:
 4967              	.LBB1945:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 4968              		.loc 3 33 0
 4969 018e 1360     		str	r3, [r2]
 4970              	.LVL401:
 4971              	.LBE1945:
 4972              	.LBE1946:
 4973              	.LBE1947:
  15:../../src/function.h ****         functor_pointer = &holder;
 4974              		.loc 3 15 0
 4975 0190 FFF7FEFF 		bl	__cxa_guard_release
 4976              	.LVL402:
 4977              	.L273:
 4978              	.LBE1948:
 4979              	.LBE1949:
ARM GAS  /tmp/ccFxkDJm.s 			page 146


 4980              	.LBB1950:
 4981              	.LBB1951:
 4982 0194 614C     		ldr	r4, .L326+64
 4983 0196 2378     		ldrb	r3, [r4]
 4984 0198 BFF35B8F 		dmb	ish
 4985 019c 604D     		ldr	r5, .L326+68
 4986 019e DB07     		lsls	r3, r3, #31
 4987 01a0 09D4     		bmi	.L276
 4988 01a2 2000     		movs	r0, r4
 4989 01a4 FFF7FEFF 		bl	__cxa_guard_acquire
 4990              	.LVL403:
 4991 01a8 0028     		cmp	r0, #0
 4992 01aa 04D0     		beq	.L276
 4993              	.LVL404:
 4994              	.LBB1952:
 4995              	.LBB1953:
 4996              	.LBB1954:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 4997              		.loc 3 33 0
 4998 01ac 5D4B     		ldr	r3, .L326+72
 4999              	.LBE1954:
 5000              	.LBE1953:
 5001              	.LBE1952:
  15:../../src/function.h ****         functor_pointer = &holder;
 5002              		.loc 3 15 0
 5003 01ae 2000     		movs	r0, r4
 5004              	.LBB1957:
 5005              	.LBB1956:
 5006              	.LBB1955:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 5007              		.loc 3 33 0
 5008 01b0 2B60     		str	r3, [r5]
 5009              	.LVL405:
 5010              	.LBE1955:
 5011              	.LBE1956:
 5012              	.LBE1957:
  15:../../src/function.h ****         functor_pointer = &holder;
 5013              		.loc 3 15 0
 5014 01b2 FFF7FEFF 		bl	__cxa_guard_release
 5015              	.LVL406:
 5016              	.L276:
 5017              	.LBE1951:
 5018              	.LBE1950:
 5019              	.LBB1958:
 5020              	.LBB1959:
 5021 01b6 5C4C     		ldr	r4, .L326+76
 5022 01b8 2378     		ldrb	r3, [r4]
 5023 01ba BFF35B8F 		dmb	ish
 5024 01be 5B4F     		ldr	r7, .L326+80
 5025 01c0 DB07     		lsls	r3, r3, #31
 5026 01c2 09D4     		bmi	.L279
 5027 01c4 2000     		movs	r0, r4
 5028 01c6 FFF7FEFF 		bl	__cxa_guard_acquire
 5029              	.LVL407:
 5030 01ca 0028     		cmp	r0, #0
 5031 01cc 04D0     		beq	.L279
 5032              	.LVL408:
ARM GAS  /tmp/ccFxkDJm.s 			page 147


 5033              	.LBB1960:
 5034              	.LBB1961:
 5035              	.LBB1962:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 5036              		.loc 3 33 0
 5037 01ce 584B     		ldr	r3, .L326+84
 5038              	.LBE1962:
 5039              	.LBE1961:
 5040              	.LBE1960:
  15:../../src/function.h ****         functor_pointer = &holder;
 5041              		.loc 3 15 0
 5042 01d0 2000     		movs	r0, r4
 5043              	.LBB1965:
 5044              	.LBB1964:
 5045              	.LBB1963:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 5046              		.loc 3 33 0
 5047 01d2 3B60     		str	r3, [r7]
 5048              	.LVL409:
 5049              	.LBE1963:
 5050              	.LBE1964:
 5051              	.LBE1965:
  15:../../src/function.h ****         functor_pointer = &holder;
 5052              		.loc 3 15 0
 5053 01d4 FFF7FEFF 		bl	__cxa_guard_release
 5054              	.LVL410:
 5055              	.L279:
 5056              	.LBE1959:
 5057              	.LBE1958:
 5058              	.LBB1966:
 5059              	.LBB1967:
 5060 01d8 564C     		ldr	r4, .L326+88
 5061 01da 2378     		ldrb	r3, [r4]
 5062 01dc BFF35B8F 		dmb	ish
 5063 01e0 DB07     		lsls	r3, r3, #31
 5064 01e2 0AD4     		bmi	.L282
 5065 01e4 2000     		movs	r0, r4
 5066 01e6 FFF7FEFF 		bl	__cxa_guard_acquire
 5067              	.LVL411:
 5068 01ea 0028     		cmp	r0, #0
 5069 01ec 05D0     		beq	.L282
 5070              	.LVL412:
 5071              	.LBB1968:
 5072              	.LBB1969:
 5073              	.LBB1970:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 5074              		.loc 3 33 0
 5075 01ee 524B     		ldr	r3, .L326+92
 5076 01f0 524A     		ldr	r2, .L326+96
 5077              	.LBE1970:
 5078              	.LBE1969:
 5079              	.LBE1968:
  15:../../src/function.h ****         functor_pointer = &holder;
 5080              		.loc 3 15 0
 5081 01f2 2000     		movs	r0, r4
 5082              	.LBB1973:
 5083              	.LBB1972:
ARM GAS  /tmp/ccFxkDJm.s 			page 148


 5084              	.LBB1971:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 5085              		.loc 3 33 0
 5086 01f4 1A60     		str	r2, [r3]
 5087              	.LVL413:
 5088              	.LBE1971:
 5089              	.LBE1972:
 5090              	.LBE1973:
  15:../../src/function.h ****         functor_pointer = &holder;
 5091              		.loc 3 15 0
 5092 01f6 FFF7FEFF 		bl	__cxa_guard_release
 5093              	.LVL414:
 5094              	.L282:
 5095              	.LBE1967:
 5096              	.LBE1966:
 5097              	.LBB1974:
 5098              	.LBB1975:
 5099 01fa 514C     		ldr	r4, .L326+100
 5100 01fc 2378     		ldrb	r3, [r4]
 5101 01fe BFF35B8F 		dmb	ish
 5102 0202 DB07     		lsls	r3, r3, #31
 5103 0204 0AD4     		bmi	.L285
 5104 0206 2000     		movs	r0, r4
 5105 0208 FFF7FEFF 		bl	__cxa_guard_acquire
 5106              	.LVL415:
 5107 020c 0028     		cmp	r0, #0
 5108 020e 05D0     		beq	.L285
 5109              	.LVL416:
 5110              	.LBB1976:
 5111              	.LBB1977:
 5112              	.LBB1978:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 5113              		.loc 3 33 0
 5114 0210 4C4B     		ldr	r3, .L326+104
 5115 0212 4D4A     		ldr	r2, .L326+108
 5116              	.LBE1978:
 5117              	.LBE1977:
 5118              	.LBE1976:
  15:../../src/function.h ****         functor_pointer = &holder;
 5119              		.loc 3 15 0
 5120 0214 2000     		movs	r0, r4
 5121              	.LBB1981:
 5122              	.LBB1980:
 5123              	.LBB1979:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 5124              		.loc 3 33 0
 5125 0216 1A60     		str	r2, [r3]
 5126              	.LVL417:
 5127              	.LBE1979:
 5128              	.LBE1980:
 5129              	.LBE1981:
  15:../../src/function.h ****         functor_pointer = &holder;
 5130              		.loc 3 15 0
 5131 0218 FFF7FEFF 		bl	__cxa_guard_release
 5132              	.LVL418:
 5133              	.L285:
 5134              	.LBE1975:
ARM GAS  /tmp/ccFxkDJm.s 			page 149


 5135              	.LBE1974:
 5136              	.LBB1982:
 5137              	.LBB1983:
 5138 021c 4B4C     		ldr	r4, .L326+112
 5139 021e 2378     		ldrb	r3, [r4]
 5140 0220 BFF35B8F 		dmb	ish
 5141 0224 DB07     		lsls	r3, r3, #31
 5142 0226 0AD4     		bmi	.L288
 5143 0228 2000     		movs	r0, r4
 5144 022a FFF7FEFF 		bl	__cxa_guard_acquire
 5145              	.LVL419:
 5146 022e 0028     		cmp	r0, #0
 5147 0230 05D0     		beq	.L288
 5148              	.LVL420:
 5149              	.LBB1984:
 5150              	.LBB1985:
 5151              	.LBB1986:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 5152              		.loc 3 33 0
 5153 0232 474B     		ldr	r3, .L326+116
 5154 0234 474A     		ldr	r2, .L326+120
 5155              	.LBE1986:
 5156              	.LBE1985:
 5157              	.LBE1984:
  15:../../src/function.h ****         functor_pointer = &holder;
 5158              		.loc 3 15 0
 5159 0236 2000     		movs	r0, r4
 5160              	.LBB1989:
 5161              	.LBB1988:
 5162              	.LBB1987:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 5163              		.loc 3 33 0
 5164 0238 1A60     		str	r2, [r3]
 5165              	.LVL421:
 5166              	.LBE1987:
 5167              	.LBE1988:
 5168              	.LBE1989:
  15:../../src/function.h ****         functor_pointer = &holder;
 5169              		.loc 3 15 0
 5170 023a FFF7FEFF 		bl	__cxa_guard_release
 5171              	.LVL422:
 5172              	.L288:
 5173              	.LBE1983:
 5174              	.LBE1982:
 5175              	.LBB1990:
 5176              	.LBB1991:
 5177 023e 464C     		ldr	r4, .L326+124
 5178 0240 2378     		ldrb	r3, [r4]
 5179 0242 BFF35B8F 		dmb	ish
 5180 0246 DB07     		lsls	r3, r3, #31
 5181 0248 0AD4     		bmi	.L291
 5182 024a 2000     		movs	r0, r4
 5183 024c FFF7FEFF 		bl	__cxa_guard_acquire
 5184              	.LVL423:
 5185 0250 0028     		cmp	r0, #0
 5186 0252 05D0     		beq	.L291
 5187              	.LVL424:
ARM GAS  /tmp/ccFxkDJm.s 			page 150


 5188              	.LBB1992:
 5189              	.LBB1993:
 5190              	.LBB1994:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 5191              		.loc 3 33 0
 5192 0254 414B     		ldr	r3, .L326+128
 5193 0256 424A     		ldr	r2, .L326+132
 5194              	.LBE1994:
 5195              	.LBE1993:
 5196              	.LBE1992:
  15:../../src/function.h ****         functor_pointer = &holder;
 5197              		.loc 3 15 0
 5198 0258 2000     		movs	r0, r4
 5199              	.LBB1997:
 5200              	.LBB1996:
 5201              	.LBB1995:
  33:../../src/function.h **** 		virtual Return call(Args ... args) override {
 5202              		.loc 3 33 0
 5203 025a 1A60     		str	r2, [r3]
 5204              	.LVL425:
 5205              	.LBE1995:
 5206              	.LBE1996:
 5207              	.LBE1997:
  15:../../src/function.h ****         functor_pointer = &holder;
 5208              		.loc 3 15 0
 5209 025c FFF7FEFF 		bl	__cxa_guard_release
 5210              	.LVL426:
 5211              	.L291:
 5212              	.LBE1991:
 5213              	.LBE1990:
 5214              	.LBB1998:
 5215              	.LBB1999:
  31:../../src/middleware/select_screen.h ****     {}
 5216              		.loc 2 31 0
 5217 0260 3300     		movs	r3, r6
 5218 0262 404A     		ldr	r2, .L326+136
 5219 0264 9433     		adds	r3, r3, #148
 5220 0266 1A60     		str	r2, [r3]
 5221 0268 029A     		ldr	r2, [sp, #8]
 5222 026a 2B49     		ldr	r1, .L326+60
 5223 026c 5A60     		str	r2, [r3, #4]
 5224 026e 039A     		ldr	r2, [sp, #12]
 5225 0270 3000     		movs	r0, r6
 5226 0272 9A60     		str	r2, [r3, #8]
 5227 0274 019A     		ldr	r2, [sp, #4]
 5228 0276 0C24     		movs	r4, #12
 5229 0278 DA60     		str	r2, [r3, #12]
 5230 027a 3200     		movs	r2, r6
 5231 027c A432     		adds	r2, r2, #164
 5232 027e 1160     		str	r1, [r2]
 5233 0280 0621     		movs	r1, #6
 5234 0282 5160     		str	r1, [r2, #4]
 5235 0284 3849     		ldr	r1, .L326+140
 5236 0286 D560     		str	r5, [r2, #12]
 5237 0288 9160     		str	r1, [r2, #8]
 5238 028a 3100     		movs	r1, r6
 5239 028c 0922     		movs	r2, #9
ARM GAS  /tmp/ccFxkDJm.s 			page 151


 5240 028e B830     		adds	r0, r0, #184
 5241 0290 B431     		adds	r1, r1, #180
 5242 0292 0A60     		str	r2, [r1]
 5243 0294 8460     		str	r4, [r0, #8]
 5244 0296 354C     		ldr	r4, .L326+144
 5245 0298 3549     		ldr	r1, .L326+148
 5246 029a C460     		str	r4, [r0, #12]
 5247 029c 264C     		ldr	r4, .L326+92
 5248 029e 0160     		str	r1, [r0]
 5249 02a0 0461     		str	r4, [r0, #16]
 5250 02a2 0A24     		movs	r4, #10
 5251 02a4 4461     		str	r4, [r0, #20]
 5252 02a6 334C     		ldr	r4, .L326+152
 5253 02a8 4760     		str	r7, [r0, #4]
 5254 02aa 8461     		str	r4, [r0, #24]
 5255 02ac 254C     		ldr	r4, .L326+104
 5256 02ae 0262     		str	r2, [r0, #32]
 5257 02b0 C461     		str	r4, [r0, #28]
 5258 02b2 314C     		ldr	r4, .L326+156
 5259 02b4 4462     		str	r4, [r0, #36]
 5260 02b6 264C     		ldr	r4, .L326+116
 5261 02b8 8462     		str	r4, [r0, #40]
 5262 02ba C262     		str	r2, [r0, #44]
 5263 02bc 3200     		movs	r2, r6
 5264 02be E832     		adds	r2, r2, #232
 5265 02c0 1160     		str	r1, [r2]
 5266 02c2 2649     		ldr	r1, .L326+128
 5267              	.LBE1999:
 5268              	.LBE1998:
  47:../../src/example/example_select_screen.h ****     {
  48:../../src/example/example_select_screen.h ****         screen.init();
  49:../../src/example/example_select_screen.h ****         tick_subscribe();
 5269              		.loc 22 49 0
 5270 02c4 3000     		movs	r0, r6
 5271              	.LBB2001:
 5272              	.LBB2000:
  31:../../src/middleware/select_screen.h ****     {}
 5273              		.loc 2 31 0
 5274 02c6 5160     		str	r1, [r2, #4]
 5275 02c8 0022     		movs	r2, #0
 5276 02ca 9A66     		str	r2, [r3, #104]
 5277 02cc DA66     		str	r2, [r3, #108]
 5278 02ce 1A67     		str	r2, [r3, #112]
 5279              	.LVL427:
 5280              	.LBE2000:
 5281              	.LBE2001:
 5282              		.loc 22 49 0
 5283 02d0 FFF7FEFF 		bl	_ZN14TickSubscriber14tick_subscribeEv
 5284              	.LVL428:
 5285              	.LBE2003:
  50:../../src/example/example_select_screen.h ****     }
 5286              		.loc 22 50 0
 5287 02d4 3000     		movs	r0, r6
 5288 02d6 05B0     		add	sp, sp, #20
 5289              		@ sp needed
 5290              	.LVL429:
 5291 02d8 F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  /tmp/ccFxkDJm.s 			page 152


 5292              	.L327:
 5293 02da C046     		.align	2
 5294              	.L326:
 5295 02dc 08000000 		.word	_ZTVN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2EL
 5296 02e0 00000000 		.word	_ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button
 5297 02e4 00000000 		.word	_ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button
 5298 02e8 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin
 5299 02ec 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin
 5300 02f0 000C0140 		.word	1073810432
 5301 02f4 00100240 		.word	1073876992
 5302 02f8 08000000 		.word	_ZTVN3mcu6ButtonE+8
 5303 02fc 00000000 		.word	_ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button
 5304 0300 00000000 		.word	_ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button
 5305 0304 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin
 5306 0308 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin
 5307 030c 08000000 		.word	_ZTV5Timer+8
 5308 0310 00000000 		.word	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 5309 0314 08000000 		.word	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 5310 0318 00000000 		.word	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 5311 031c 00000000 		.word	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 5312 0320 00000000 		.word	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 5313 0324 08000000 		.word	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 5314 0328 00000000 		.word	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 5315 032c 00000000 		.word	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 5316 0330 08000000 		.word	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 5317 0334 00000000 		.word	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 5318 0338 00000000 		.word	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 5319 033c 08000000 		.word	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 5320 0340 00000000 		.word	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 5321 0344 00000000 		.word	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 5322 0348 08000000 		.word	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 5323 034c 00000000 		.word	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 5324 0350 00000000 		.word	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 5325 0354 08000000 		.word	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 5326 0358 00000000 		.word	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 5327 035c 00000000 		.word	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 5328 0360 08000000 		.word	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 5329 0364 08000000 		.word	_ZTV13Select_screenILi6EE+8
 5330 0368 00000000 		.word	.LC64
 5331 036c 11000000 		.word	.LC68
 5332 0370 07000000 		.word	.LC66
 5333 0374 1E000000 		.word	.LC70
 5334 0378 29000000 		.word	.LC72
 5335              		.cfi_endproc
 5336              	.LFE2948:
 5338              		.weak	_ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3
 5339              		.thumb_set _ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_
 5340              		.section	.text.startup.main,"ax",%progbits
 5341              		.align	1
 5342              		.global	main
 5343              		.syntax unified
 5344              		.code	16
 5345              		.thumb_func
 5346              		.fpu softvfp
 5348              	main:
 5349              	.LFB2653:
  11:main.cpp      **** 
ARM GAS  /tmp/ccFxkDJm.s 			page 153


  12:main.cpp      **** int main()
  13:main.cpp      **** {
 5350              		.loc 16 13 0
 5351              		.cfi_startproc
 5352              		@ Volatile: function does not return.
 5353              		@ args = 0, pretend = 0, frame = 264
 5354              		@ frame_needed = 0, uses_anonymous_args = 0
 5355 0000 00B5     		push	{lr}
 5356              	.LCFI35:
 5357              		.cfi_def_cfa_offset 4
 5358              		.cfi_offset 14, -4
 5359 0002 C3B0     		sub	sp, sp, #268
 5360              	.LCFI36:
 5361              		.cfi_def_cfa_offset 272
  14:main.cpp      ****     // // value dont need
  15:main.cpp      ****     // auto _ = mcu::example::hd44780<
  16:main.cpp      ****     //     EO81::RS , EO81::RW , EO81::E,
  17:main.cpp      ****     //     EO81::DB4, EO81::DB5, EO81::DB6, EO81::DB7
  18:main.cpp      ****     // >();
  19:main.cpp      **** 
  20:main.cpp      ****     // value dont need
  21:main.cpp      ****     auto _ = mcu::example::select_screen<
  22:main.cpp      ****         EO81::RS , EO81::RW , EO81::E,
  23:main.cpp      ****         EO81::DB4, EO81::DB5, EO81::DB6, EO81::DB7,
  24:main.cpp      ****         EO81::Up, EO81::Down
  25:main.cpp      ****     >();
 5362              		.loc 16 25 0
 5363 0004 6846     		mov	r0, sp
 5364 0006 FFF7FEFF 		bl	_ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEE
 5365              	.LVL430:
 5366              	.L329:
 5367              	.LBB2004:
 5368              	.LBB2005:
 5369              		.file 23 "../../STM32F1_files/CMSIS/cmsis_gcc.h"
   1:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**************************************************************************//**
   2:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  * @version  V4.30
   5:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  * @date     20. October 2015
   6:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  ******************************************************************************/
   7:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
   9:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    All rights reserved.
  10:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:../../STM32F1_files/CMSIS/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../../STM32F1_files/CMSIS/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:../../STM32F1_files/CMSIS/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../../STM32F1_files/CMSIS/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:../../STM32F1_files/CMSIS/cmsis_gcc.h ****      specific prior written permission.
  20:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    *
  21:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARM GAS  /tmp/ccFxkDJm.s 			page 154


  24:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  34:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  35:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  38:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #endif
  45:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  46:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  47:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:../../STM32F1_files/CMSIS/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   @{
  51:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
  52:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  53:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
  54:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:../../STM32F1_files/CMSIS/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
  58:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
  60:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
  62:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  63:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  64:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
  65:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
  69:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
  71:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
  73:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  74:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  75:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
  76:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Get Control Register
  77:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \return               Control Register value
  79:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
  80:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
ARM GAS  /tmp/ccFxkDJm.s 			page 155


  81:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
  82:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   uint32_t result;
  83:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  84:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   return(result);
  86:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
  87:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  88:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  89:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
  90:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Set Control Register
  91:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
  94:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
  96:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
  98:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
  99:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 100:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 101:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \return               IPSR Register value
 104:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 105:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 107:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   uint32_t result;
 108:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 109:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   return(result);
 111:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 112:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 113:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 114:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 115:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Get APSR Register
 116:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \return               APSR Register value
 118:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 119:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 121:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   uint32_t result;
 122:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 123:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   return(result);
 125:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 126:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 127:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 128:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 129:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 132:../../STM32F1_files/CMSIS/cmsis_gcc.h ****     \return               xPSR Register value
 133:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 134:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 136:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   uint32_t result;
 137:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
ARM GAS  /tmp/ccFxkDJm.s 			page 156


 138:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   return(result);
 140:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 141:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 142:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 143:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 144:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \return               PSP Register value
 147:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 148:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 150:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   register uint32_t result;
 151:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 152:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   return(result);
 154:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 155:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 156:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 157:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 158:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 162:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 164:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 166:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 167:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 168:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 169:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \return               MSP Register value
 172:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 173:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 175:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   register uint32_t result;
 176:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 177:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   return(result);
 179:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 180:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 181:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 182:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 183:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 186:../../STM32F1_files/CMSIS/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 188:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 190:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 192:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 193:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 194:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccFxkDJm.s 			page 157


 195:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \return               Priority Mask value
 198:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 199:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 201:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   uint32_t result;
 202:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 203:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   return(result);
 205:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 206:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 207:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 208:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 209:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 213:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 215:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 217:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 218:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 219:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 221:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 222:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Enable FIQ
 223:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:../../STM32F1_files/CMSIS/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 226:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 228:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 230:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 231:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 232:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 233:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Disable FIQ
 234:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:../../STM32F1_files/CMSIS/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 237:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 239:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 241:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 242:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 243:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 244:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Get Base Priority
 245:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \return               Base Priority register value
 247:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 248:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 250:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   uint32_t result;
 251:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
ARM GAS  /tmp/ccFxkDJm.s 			page 158


 252:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   return(result);
 254:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 255:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 256:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 257:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 258:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Set Base Priority
 259:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 262:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 264:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 266:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 267:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 268:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 269:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:../../STM32F1_files/CMSIS/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 274:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 276:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 278:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 279:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 280:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 281:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \return               Fault Mask register value
 284:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 285:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 287:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   uint32_t result;
 288:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 289:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   return(result);
 291:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 292:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 293:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 294:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 295:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 299:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 301:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 303:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 304:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 306:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 307:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
ARM GAS  /tmp/ccFxkDJm.s 			page 159


 309:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 310:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Get FPSCR
 311:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 314:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 316:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   uint32_t result;
 318:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 319:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("");
 321:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("");
 323:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   return(result);
 324:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #else
 325:../../STM32F1_files/CMSIS/cmsis_gcc.h ****    return(0);
 326:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #endif
 327:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 328:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 329:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 330:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 331:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Set FPSCR
 332:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 335:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 337:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("");
 340:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("");
 342:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #endif
 343:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 344:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 345:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 347:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 348:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 349:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 351:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 352:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   Access to dedicated instructions
 355:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   @{
 356:../../STM32F1_files/CMSIS/cmsis_gcc.h **** */
 357:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 358:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #else
 365:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
ARM GAS  /tmp/ccFxkDJm.s 			page 160


 366:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:../../STM32F1_files/CMSIS/cmsis_gcc.h **** #endif
 368:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 369:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 370:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   No Operation
 371:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 373:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 375:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:../../STM32F1_files/CMSIS/cmsis_gcc.h **** }
 377:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 378:../../STM32F1_files/CMSIS/cmsis_gcc.h **** 
 379:../../STM32F1_files/CMSIS/cmsis_gcc.h **** /**
 380:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:../../STM32F1_files/CMSIS/cmsis_gcc.h ****  */
 383:../../STM32F1_files/CMSIS/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:../../STM32F1_files/CMSIS/cmsis_gcc.h **** {
 385:../../STM32F1_files/CMSIS/cmsis_gcc.h ****   __ASM volatile ("wfi");
 5370              		.loc 23 385 0 discriminator 1
 5371              		.syntax divided
 5372              	@ 385 "../../STM32F1_files/CMSIS/cmsis_gcc.h" 1
 5373 000a 30BF     		wfi
 5374              	@ 0 "" 2
 5375              		.thumb
 5376              		.syntax unified
 5377 000c FDE7     		b	.L329
 5378              	.LBE2005:
 5379              	.LBE2004:
 5380              		.cfi_endproc
 5381              	.LFE2653:
 5383              		.section	.text._ZN8FunctionIFvvEEclEv,"axG",%progbits,_ZN8FunctionIFvvEEclEv,comdat
 5384              		.align	1
 5385              		.weak	_ZN8FunctionIFvvEEclEv
 5386              		.syntax unified
 5387              		.code	16
 5388              		.thumb_func
 5389              		.fpu softvfp
 5391              	_ZN8FunctionIFvvEEclEv:
 5392              	.LFB3375:
  19:../../src/function.h **** 		return functor_pointer->call(args...);
 5393              		.loc 3 19 0
 5394              		.cfi_startproc
 5395              		@ args = 0, pretend = 0, frame = 0
 5396              		@ frame_needed = 0, uses_anonymous_args = 0
 5397              	.LVL431:
 5398 0000 10B5     		push	{r4, lr}
 5399              	.LCFI37:
 5400              		.cfi_def_cfa_offset 8
 5401              		.cfi_offset 4, -8
 5402              		.cfi_offset 14, -4
  20:../../src/function.h **** 	}
 5403              		.loc 3 20 0
 5404 0002 0068     		ldr	r0, [r0]
 5405              	.LVL432:
  21:../../src/function.h **** 
ARM GAS  /tmp/ccFxkDJm.s 			page 161


 5406              		.loc 3 21 0
 5407              		@ sp needed
  20:../../src/function.h **** 	}
 5408              		.loc 3 20 0
 5409 0004 0368     		ldr	r3, [r0]
 5410 0006 1B68     		ldr	r3, [r3]
 5411 0008 9847     		blx	r3
 5412              	.LVL433:
  21:../../src/function.h **** 
 5413              		.loc 3 21 0
 5414 000a 10BD     		pop	{r4, pc}
 5415              		.cfi_endproc
 5416              	.LFE3375:
 5418              		.section	.text._ZN13Select_screenILi6EE4drawEv,"axG",%progbits,_ZN13Select_screenILi6EE4drawEv,com
 5419              		.align	1
 5420              		.weak	_ZN13Select_screenILi6EE4drawEv
 5421              		.syntax unified
 5422              		.code	16
 5423              		.thumb_func
 5424              		.fpu softvfp
 5426              	_ZN13Select_screenILi6EE4drawEv:
 5427              	.LFB3371:
  35:../../src/middleware/select_screen.h ****     void draw() override
 5428              		.loc 2 35 0
 5429              		.cfi_startproc
 5430              		@ args = 0, pretend = 0, frame = 16
 5431              		@ frame_needed = 0, uses_anonymous_args = 0
 5432              	.LVL434:
 5433 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5434              	.LCFI38:
 5435              		.cfi_def_cfa_offset 20
 5436              		.cfi_offset 4, -20
 5437              		.cfi_offset 5, -16
 5438              		.cfi_offset 6, -12
 5439              		.cfi_offset 7, -8
 5440              		.cfi_offset 14, -4
 5441 0002 0400     		movs	r4, r0
  36:../../src/middleware/select_screen.h ****     {
  37:../../src/middleware/select_screen.h ****         lcd.clear();
 5442              		.loc 2 37 0
 5443 0004 C068     		ldr	r0, [r0, #12]
 5444              	.LVL435:
  35:../../src/middleware/select_screen.h ****     void draw() override
 5445              		.loc 2 35 0
 5446 0006 85B0     		sub	sp, sp, #20
 5447              	.LCFI39:
 5448              		.cfi_def_cfa_offset 40
 5449              	.LBB2058:
 5450              	.LBB2059:
 5451              	.LBB2060:
 5452              	.LBB2061:
 5453              	.LBB2062:
 5454              		.loc 6 763 0
 5455 0008 0100     		movs	r1, r0
 5456              	.LBE2062:
 5457              	.LBE2061:
 5458              	.LBE2060:
ARM GAS  /tmp/ccFxkDJm.s 			page 162


 5459              	.LBB2065:
 5460              	.LBB2066:
 5461              	.LBB2067:
 5462              		.loc 18 235 0
 5463 000a 0D30     		adds	r0, r0, #13
 5464              	.LVL436:
 5465              	.LBE2067:
 5466              	.LBE2066:
 5467              	.LBE2065:
 5468              	.LBB2068:
 5469              	.LBB2064:
 5470              	.LBB2063:
 5471              		.loc 6 763 0
 5472 000c 5D31     		adds	r1, r1, #93
 5473              	.LVL437:
 5474 000e FFF7FEFF 		bl	_ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_.isr
 5475              	.LVL438:
 5476              	.LBE2063:
 5477              	.LBE2064:
 5478              	.LBE2068:
 5479              	.LBE2059:
 5480              	.LBE2058:
 5481              	.LBB2069:
 5482              	.LBB2070:
  38:../../src/middleware/select_screen.h **** 
  39:../../src/middleware/select_screen.h ****         if (qty <= 4) {
  40:../../src/middleware/select_screen.h ****             for (int i = 0; i < qty; i++) {
  41:../../src/middleware/select_screen.h ****                 lcd.line(i) << lines[i].name;
  42:../../src/middleware/select_screen.h ****                 lcd.line(i).cursor(19) << " ";
  43:../../src/middleware/select_screen.h ****                 if (i == carriage)
  44:../../src/middleware/select_screen.h ****                     lcd.line(i).cursor(19) << "~";
  45:../../src/middleware/select_screen.h ****             }
  46:../../src/middleware/select_screen.h **** 
  47:../../src/middleware/select_screen.h ****             carriage_v = carriage =
  48:../../src/middleware/select_screen.h ****                 up.push()   ? carriage < 1        ? qty - 1  : carriage - 1 :
  49:../../src/middleware/select_screen.h ****                 down.push() ? carriage >= qty - 1 ? 0        : carriage + 1 : carriage;
  50:../../src/middleware/select_screen.h **** 
  51:../../src/middleware/select_screen.h ****         } else {
  52:../../src/middleware/select_screen.h ****             
  53:../../src/middleware/select_screen.h ****             for (int i = 0; i < 4; i++) {
 5483              		.loc 2 53 0
 5484 0012 0025     		movs	r5, #0
 5485              	.LVL439:
 5486              	.L333:
 5487 0014 1426     		movs	r6, #20
  54:../../src/middleware/select_screen.h ****                 lcd.line(i) << lines[scroll + i].name;
 5488              		.loc 2 54 0
 5489 0016 0C22     		movs	r2, #12
 5490 0018 6E43     		muls	r6, r5
 5491 001a E068     		ldr	r0, [r4, #12]
 5492              	.LVL440:
 5493              	.LBB2071:
 5494              	.LBB2072:
 119:../../src/string_buffer.h ****     position = number_line * line_size;
 5495              		.loc 15 119 0
 5496 001c 8660     		str	r6, [r0, #8]
 5497              	.LVL441:
ARM GAS  /tmp/ccFxkDJm.s 			page 163


 118:../../src/string_buffer.h ****     number_line = string;
 5498              		.loc 15 118 0
 5499 001e 0560     		str	r5, [r0]
 5500              	.LBE2072:
 5501              	.LBE2071:
 5502              	.LBB2073:
 5503              	.LBB2074:
 5504              	.LBB2075:
  56:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 5505              		.loc 18 56 0
 5506 0020 236F     		ldr	r3, [r4, #112]
 5507 0022 1336     		adds	r6, r6, #19
 5508 0024 EB18     		adds	r3, r5, r3
 5509              	.LBE2075:
 5510              	.LBE2074:
 5511              	.LBE2073:
 5512              		.loc 2 54 0
 5513 0026 5343     		muls	r3, r2
 5514 0028 E318     		adds	r3, r4, r3
 5515 002a 5969     		ldr	r1, [r3, #20]
 5516 002c 9A69     		ldr	r2, [r3, #24]
 5517 002e FFF7FEFF 		bl	_ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE
 5518              	.LVL442:
  55:../../src/middleware/select_screen.h ****                 lcd.line(i).cursor(19) << " ";
 5519              		.loc 2 55 0
 5520 0032 E768     		ldr	r7, [r4, #12]
 5521              	.LVL443:
 5522 0034 0196     		str	r6, [sp, #4]
 5523              	.LBB2076:
 5524              	.LBB2077:
 132:../../src/string_buffer.h ****     position = (cursor + number_line * line_size) % screen_size;
 5525              		.loc 15 132 0
 5526 0036 BE60     		str	r6, [r7, #8]
 5527              	.LBE2077:
 5528              	.LBE2076:
 5529              	.LBB2078:
 5530              	.LBB2079:
 5531              	.LBB2080:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 5532              		.loc 19 100 0
 5533 0038 4C4E     		ldr	r6, .L366
 5534              	.LBE2080:
 5535              	.LBE2079:
 5536              	.LBE2078:
 5537              	.LBB2087:
 5538              	.LBB2088:
 118:../../src/string_buffer.h ****     number_line = string;
 5539              		.loc 15 118 0
 5540 003a 3D60     		str	r5, [r7]
 5541              	.LVL444:
 5542              	.LBE2088:
 5543              	.LBE2087:
 5544              	.LBB2089:
 5545              	.LBB2084:
 5546              	.LBB2081:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 5547              		.loc 19 100 0
ARM GAS  /tmp/ccFxkDJm.s 			page 164


 5548 003c 3000     		movs	r0, r6
 5549 003e FFF7FEFF 		bl	_ZNSt11char_traitsIcE6lengthEPKc
 5550              	.LVL445:
 5551              	.LBE2081:
 5552              	.LBE2084:
 5553              	.LBE2089:
 5554              		.loc 2 55 0
 5555 0042 3200     		movs	r2, r6
 5556              	.LBB2090:
 5557              	.LBB2085:
 5558              	.LBB2082:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 5559              		.loc 19 100 0
 5560 0044 0100     		movs	r1, r0
 101:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       { }
 5561              		.loc 19 101 0
 5562 0046 0290     		str	r0, [sp, #8]
 5563              	.LBE2082:
 5564              	.LBE2085:
 5565              	.LBE2090:
 5566              		.loc 2 55 0
 5567 0048 3800     		movs	r0, r7
 5568              	.LBB2091:
 5569              	.LBB2086:
 5570              	.LBB2083:
 101:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       { }
 5571              		.loc 19 101 0
 5572 004a 0396     		str	r6, [sp, #12]
 5573              	.LVL446:
 5574              	.LBE2083:
 5575              	.LBE2086:
 5576              	.LBE2091:
 5577              		.loc 2 55 0
 5578 004c FFF7FEFF 		bl	_ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE
 5579              	.LVL447:
  56:../../src/middleware/select_screen.h ****                 if (i == carriage)
 5580              		.loc 2 56 0
 5581 0050 A36E     		ldr	r3, [r4, #104]
 5582 0052 AB42     		cmp	r3, r5
 5583 0054 0ED1     		bne	.L332
  57:../../src/middleware/select_screen.h ****                     lcd.line(i).cursor(19) << "~";
 5584              		.loc 2 57 0
 5585 0056 E768     		ldr	r7, [r4, #12]
 5586              	.LVL448:
 5587              	.LBB2092:
 5588              	.LBB2093:
 5589              	.LBB2094:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 5590              		.loc 19 100 0
 5591 0058 454E     		ldr	r6, .L366+4
 5592              	.LBE2094:
 5593              	.LBE2093:
 5594              	.LBE2092:
 5595              	.LBB2101:
 5596              	.LBB2102:
 132:../../src/string_buffer.h ****     position = (cursor + number_line * line_size) % screen_size;
 5597              		.loc 15 132 0
ARM GAS  /tmp/ccFxkDJm.s 			page 165


 5598 005a 019B     		ldr	r3, [sp, #4]
 5599              	.LBE2102:
 5600              	.LBE2101:
 5601              	.LBB2104:
 5602              	.LBB2105:
 118:../../src/string_buffer.h ****     number_line = string;
 5603              		.loc 15 118 0
 5604 005c 3D60     		str	r5, [r7]
 5605              	.LVL449:
 5606              	.LBE2105:
 5607              	.LBE2104:
 5608              	.LBB2106:
 5609              	.LBB2103:
 132:../../src/string_buffer.h ****     position = (cursor + number_line * line_size) % screen_size;
 5610              		.loc 15 132 0
 5611 005e BB60     		str	r3, [r7, #8]
 5612              	.LVL450:
 5613              	.LBE2103:
 5614              	.LBE2106:
 5615              	.LBB2107:
 5616              	.LBB2098:
 5617              	.LBB2095:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 5618              		.loc 19 100 0
 5619 0060 3000     		movs	r0, r6
 5620 0062 FFF7FEFF 		bl	_ZNSt11char_traitsIcE6lengthEPKc
 5621              	.LVL451:
 5622              	.LBE2095:
 5623              	.LBE2098:
 5624              	.LBE2107:
 5625              		.loc 2 57 0
 5626 0066 3200     		movs	r2, r6
 5627              	.LBB2108:
 5628              	.LBB2099:
 5629              	.LBB2096:
 100:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view **** 	_M_str{__str}
 5630              		.loc 19 100 0
 5631 0068 0100     		movs	r1, r0
 101:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       { }
 5632              		.loc 19 101 0
 5633 006a 0290     		str	r0, [sp, #8]
 5634              	.LBE2096:
 5635              	.LBE2099:
 5636              	.LBE2108:
 5637              		.loc 2 57 0
 5638 006c 3800     		movs	r0, r7
 5639              	.LBB2109:
 5640              	.LBB2100:
 5641              	.LBB2097:
 101:/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/string_view ****       { }
 5642              		.loc 19 101 0
 5643 006e 0396     		str	r6, [sp, #12]
 5644              	.LVL452:
 5645              	.LBE2097:
 5646              	.LBE2100:
 5647              	.LBE2109:
 5648              		.loc 2 57 0
ARM GAS  /tmp/ccFxkDJm.s 			page 166


 5649 0070 FFF7FEFF 		bl	_ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE
 5650              	.LVL453:
 5651              	.L332:
  53:../../src/middleware/select_screen.h ****                 lcd.line(i) << lines[scroll + i].name;
 5652              		.loc 2 53 0 discriminator 2
 5653 0074 0135     		adds	r5, r5, #1
 5654              	.LVL454:
 5655 0076 042D     		cmp	r5, #4
 5656 0078 CCD1     		bne	.L333
 5657              	.LBE2070:
  58:../../src/middleware/select_screen.h ****             }
  59:../../src/middleware/select_screen.h ****             
  60:../../src/middleware/select_screen.h ****             if (up.push()) {
 5658              		.loc 2 60 0
 5659 007a 6068     		ldr	r0, [r4, #4]
 5660 007c FFF7FEFF 		bl	_ZN3mcu6Button4pushEv
 5661              	.LVL455:
 5662 0080 0028     		cmp	r0, #0
 5663 0082 17D0     		beq	.L335
  61:../../src/middleware/select_screen.h ****                 carriage_v--;
 5664              		.loc 2 61 0
 5665 0084 E36E     		ldr	r3, [r4, #108]
  62:../../src/middleware/select_screen.h ****                 scroll--;
 5666              		.loc 2 62 0
 5667 0086 226F     		ldr	r2, [r4, #112]
  61:../../src/middleware/select_screen.h ****                 carriage_v--;
 5668              		.loc 2 61 0
 5669 0088 013B     		subs	r3, r3, #1
 5670              		.loc 2 62 0
 5671 008a 013A     		subs	r2, r2, #1
  61:../../src/middleware/select_screen.h ****                 carriage_v--;
 5672              		.loc 2 61 0
 5673 008c E366     		str	r3, [r4, #108]
 5674              		.loc 2 62 0
 5675 008e 2267     		str	r2, [r4, #112]
  63:../../src/middleware/select_screen.h ****                 if (scroll < 0) {
 5676              		.loc 2 63 0
 5677 0090 002A     		cmp	r2, #0
 5678 0092 06DA     		bge	.L336
  64:../../src/middleware/select_screen.h ****                     carriage--; 
 5679              		.loc 2 64 0
 5680 0094 A26E     		ldr	r2, [r4, #104]
 5681 0096 013A     		subs	r2, r2, #1
 5682 0098 A266     		str	r2, [r4, #104]
  65:../../src/middleware/select_screen.h ****                     if (carriage < 0)
 5683              		.loc 2 65 0
 5684 009a 002A     		cmp	r2, #0
 5685 009c 62DA     		bge	.L337
  66:../../src/middleware/select_screen.h ****                         scroll = qty - 4;
 5686              		.loc 2 66 0
 5687 009e 0222     		movs	r2, #2
 5688              	.L364:
  67:../../src/middleware/select_screen.h ****                     else 
  68:../../src/middleware/select_screen.h ****                         scroll = 0;
 5689              		.loc 2 68 0
 5690 00a0 2267     		str	r2, [r4, #112]
 5691              	.L336:
ARM GAS  /tmp/ccFxkDJm.s 			page 167


  69:../../src/middleware/select_screen.h ****                 }
  70:../../src/middleware/select_screen.h ****                 if (carriage < 0) carriage = 3;
 5692              		.loc 2 70 0
 5693 00a2 A26E     		ldr	r2, [r4, #104]
 5694 00a4 002A     		cmp	r2, #0
 5695 00a6 01DA     		bge	.L338
 5696              		.loc 2 70 0 is_stmt 0 discriminator 1
 5697 00a8 0322     		movs	r2, #3
 5698 00aa A266     		str	r2, [r4, #104]
 5699              	.L338:
  71:../../src/middleware/select_screen.h ****                 if (carriage_v < 0) carriage_v = qty -1;
 5700              		.loc 2 71 0 is_stmt 1
 5701 00ac 002B     		cmp	r3, #0
 5702 00ae 01DA     		bge	.L335
 5703              		.loc 2 71 0 is_stmt 0 discriminator 1
 5704 00b0 0523     		movs	r3, #5
 5705 00b2 E366     		str	r3, [r4, #108]
 5706              	.L335:
  72:../../src/middleware/select_screen.h ****             }
  73:../../src/middleware/select_screen.h ****             if (down.push()) {
 5707              		.loc 2 73 0 is_stmt 1
 5708 00b4 A068     		ldr	r0, [r4, #8]
 5709 00b6 FFF7FEFF 		bl	_ZN3mcu6Button4pushEv
 5710              	.LVL456:
 5711 00ba 0028     		cmp	r0, #0
 5712 00bc 17D0     		beq	.L341
  74:../../src/middleware/select_screen.h ****                 carriage_v++;
 5713              		.loc 2 74 0
 5714 00be E36E     		ldr	r3, [r4, #108]
 5715 00c0 5A1C     		adds	r2, r3, #1
  75:../../src/middleware/select_screen.h ****                 scroll++;
 5716              		.loc 2 75 0
 5717 00c2 236F     		ldr	r3, [r4, #112]
  74:../../src/middleware/select_screen.h ****                 carriage_v++;
 5718              		.loc 2 74 0
 5719 00c4 E266     		str	r2, [r4, #108]
 5720              		.loc 2 75 0
 5721 00c6 0133     		adds	r3, r3, #1
 5722 00c8 2367     		str	r3, [r4, #112]
  76:../../src/middleware/select_screen.h ****                 
  77:../../src/middleware/select_screen.h ****                 if (carriage_v >= qty) carriage_v = 0;
 5723              		.loc 2 77 0
 5724 00ca 052A     		cmp	r2, #5
 5725 00cc 01DD     		ble	.L342
 5726              		.loc 2 77 0 is_stmt 0 discriminator 1
 5727 00ce 0022     		movs	r2, #0
 5728 00d0 E266     		str	r2, [r4, #108]
 5729              	.L342:
  78:../../src/middleware/select_screen.h ****                 if (scroll > qty - 4) {
 5730              		.loc 2 78 0 is_stmt 1
 5731 00d2 022B     		cmp	r3, #2
 5732 00d4 06DD     		ble	.L343
  79:../../src/middleware/select_screen.h ****                     carriage++;
 5733              		.loc 2 79 0
 5734 00d6 A36E     		ldr	r3, [r4, #104]
 5735 00d8 0133     		adds	r3, r3, #1
 5736 00da A366     		str	r3, [r4, #104]
ARM GAS  /tmp/ccFxkDJm.s 			page 168


  80:../../src/middleware/select_screen.h ****                     if (carriage > 3)
 5737              		.loc 2 80 0
 5738 00dc 032B     		cmp	r3, #3
 5739 00de 43DD     		ble	.L344
  81:../../src/middleware/select_screen.h ****                         scroll = 0; 
 5740              		.loc 2 81 0
 5741 00e0 0023     		movs	r3, #0
 5742              	.L365:
  82:../../src/middleware/select_screen.h ****                     else 
  83:../../src/middleware/select_screen.h ****                         scroll = qty - 4; 
 5743              		.loc 2 83 0
 5744 00e2 2367     		str	r3, [r4, #112]
 5745              	.L343:
  84:../../src/middleware/select_screen.h ****                 }
  85:../../src/middleware/select_screen.h ****                 if (carriage > 3) carriage = 0;
 5746              		.loc 2 85 0
 5747 00e4 A36E     		ldr	r3, [r4, #104]
 5748 00e6 032B     		cmp	r3, #3
 5749 00e8 01DD     		ble	.L341
 5750              		.loc 2 85 0 is_stmt 0 discriminator 1
 5751 00ea 0023     		movs	r3, #0
 5752 00ec A366     		str	r3, [r4, #104]
 5753              	.L341:
 5754              	.LVL457:
 5755              	.LBE2069:
 5756              	.LBB2110:
 5757              	.LBB2111:
 5758              	.LBB2112:
 5759              	.LBB2113:
 5760              	.LBB2114:
 5761              	.LBB2115:
 142:../../src/buttons.h ****       operator bool () {
 5762              		.loc 14 142 0 is_stmt 1
 5763 00ee 6368     		ldr	r3, [r4, #4]
 5764              	.LBE2115:
 5765              	.LBE2114:
 5766              	.LBE2113:
 5767              	.LBE2112:
  86:../../src/middleware/select_screen.h ****             }
  87:../../src/middleware/select_screen.h ****         }
  88:../../src/middleware/select_screen.h **** 
  89:../../src/middleware/select_screen.h **** 
  90:../../src/middleware/select_screen.h **** 
  91:../../src/middleware/select_screen.h ****         if (next())
  92:../../src/middleware/select_screen.h ****             lines[carriage_v].callback();
  93:../../src/middleware/select_screen.h ****         if (back()) {
  94:../../src/middleware/select_screen.h ****             carriage = 0;
  95:../../src/middleware/select_screen.h ****             carriage_v = 0;
  96:../../src/middleware/select_screen.h ****         }
  97:../../src/middleware/select_screen.h **** 
  98:../../src/middleware/select_screen.h ****         out_callback();
  99:../../src/middleware/select_screen.h **** 
 100:../../src/middleware/select_screen.h ****     }
 101:../../src/middleware/select_screen.h **** private:
 102:../../src/middleware/select_screen.h ****     Button&               up;
 103:../../src/middleware/select_screen.h ****     Button&               down;
 104:../../src/middleware/select_screen.h ****     String_buffer&        lcd;
ARM GAS  /tmp/ccFxkDJm.s 			page 169


 105:../../src/middleware/select_screen.h ****     Function<void()>      out_callback;
 106:../../src/middleware/select_screen.h ****     std::array<Line, qty> lines;
 107:../../src/middleware/select_screen.h ****     std::array<int, 3>    n;
 108:../../src/middleware/select_screen.h ****     int carriage   {0};
 109:../../src/middleware/select_screen.h ****     int carriage_v {0};
 110:../../src/middleware/select_screen.h ****     int scroll     {0};
 111:../../src/middleware/select_screen.h **** 
 112:../../src/middleware/select_screen.h ****     bool back(){return (up and down).push_long();}
 113:../../src/middleware/select_screen.h ****     bool next(){return (up and down).click();}
 5768              		.loc 2 113 0
 5769 00f0 02A8     		add	r0, sp, #8
 5770              	.LVL458:
 5771              	.LBB2119:
 5772              	.LBB2118:
 5773              	.LBB2117:
 5774              	.LBB2116:
 142:../../src/buttons.h ****       operator bool () {
 5775              		.loc 14 142 0
 5776 00f2 0293     		str	r3, [sp, #8]
 5777 00f4 A368     		ldr	r3, [r4, #8]
 5778 00f6 0393     		str	r3, [sp, #12]
 5779              	.LVL459:
 5780              	.LBE2116:
 5781              	.LBE2117:
 5782              	.LBE2118:
 5783              	.LBE2119:
 5784              		.loc 2 113 0
 5785 00f8 FFF7FEFF 		bl	_ZN3mcu6Button4Some5clickEv
 5786              	.LVL460:
 5787              	.LBE2111:
 5788              	.LBE2110:
  91:../../src/middleware/select_screen.h ****             lines[carriage_v].callback();
 5789              		.loc 2 91 0
 5790 00fc 0028     		cmp	r0, #0
 5791 00fe 06D0     		beq	.L346
  92:../../src/middleware/select_screen.h ****         if (back()) {
 5792              		.loc 2 92 0
 5793 0100 0C20     		movs	r0, #12
 5794 0102 E36E     		ldr	r3, [r4, #108]
 5795 0104 5843     		muls	r0, r3
 5796 0106 1C30     		adds	r0, r0, #28
 5797 0108 2018     		adds	r0, r4, r0
 5798 010a FFF7FEFF 		bl	_ZN8FunctionIFvvEEclEv
 5799              	.LVL461:
 5800              	.L346:
 5801              	.LBB2120:
 5802              	.LBB2121:
 112:../../src/middleware/select_screen.h ****     bool next(){return (up and down).click();}
 5803              		.loc 2 112 0
 5804 010e 6568     		ldr	r5, [r4, #4]
 5805              	.LVL462:
 5806 0110 A668     		ldr	r6, [r4, #8]
 5807              	.LVL463:
 5808              	.LBB2122:
 5809              	.LBB2123:
 169:../../src/buttons.h **** 
 170:../../src/buttons.h ****       bool push_long() {
ARM GAS  /tmp/ccFxkDJm.s 			page 170


 171:../../src/buttons.h ****          if (one.is_set() and two.is_set()) {
 5810              		.loc 14 171 0
 5811 0112 2800     		movs	r0, r5
 5812 0114 FFF7FEFF 		bl	_ZN3mcu6Button6is_setEv
 5813              	.LVL464:
 5814 0118 0028     		cmp	r0, #0
 5815 011a 0AD0     		beq	.L348
 5816 011c 3000     		movs	r0, r6
 5817 011e FFF7FEFF 		bl	_ZN3mcu6Button6is_setEv
 5818              	.LVL465:
 5819 0122 0028     		cmp	r0, #0
 5820 0124 05D0     		beq	.L348
 172:../../src/buttons.h ****             one.tick_subscribe();
 5821              		.loc 14 172 0
 5822 0126 2800     		movs	r0, r5
 5823 0128 FFF7FEFF 		bl	_ZN14TickSubscriber14tick_subscribeEv
 5824              	.LVL466:
 173:../../src/buttons.h ****             two.tick_subscribe(); 
 5825              		.loc 14 173 0
 5826 012c 3000     		movs	r0, r6
 5827 012e FFF7FEFF 		bl	_ZN14TickSubscriber14tick_subscribeEv
 5828              	.LVL467:
 5829              	.L348:
 174:../../src/buttons.h ****          }
 175:../../src/buttons.h ****          bool result{false};
 176:../../src/buttons.h ****          result = one.time >= 1000 and two.time >= 1000 and (not one.long_press or not two.long_pre
 5830              		.loc 14 176 0
 5831 0132 104B     		ldr	r3, .L366+8
 5832 0134 6A69     		ldr	r2, [r5, #20]
 5833 0136 9A42     		cmp	r2, r3
 5834 0138 0EDD     		ble	.L351
 5835 013a 7269     		ldr	r2, [r6, #20]
 5836 013c 9A42     		cmp	r2, r3
 5837 013e 0BDD     		ble	.L351
 5838 0140 6B7E     		ldrb	r3, [r5, #25]
 5839 0142 002B     		cmp	r3, #0
 5840 0144 02D0     		beq	.L353
 5841 0146 737E     		ldrb	r3, [r6, #25]
 5842 0148 002B     		cmp	r3, #0
 5843 014a 05D1     		bne	.L351
 5844              	.L353:
 177:../../src/buttons.h ****          if (result)
 178:../../src/buttons.h ****             one.long_press = two.long_press = true;
 5845              		.loc 14 178 0
 5846 014c 0123     		movs	r3, #1
 5847 014e 7376     		strb	r3, [r6, #25]
 5848 0150 6B76     		strb	r3, [r5, #25]
 5849              	.LVL468:
 5850              	.LBE2123:
 5851              	.LBE2122:
 5852              	.LBE2121:
 5853              	.LBE2120:
  94:../../src/middleware/select_screen.h ****             carriage_v = 0;
 5854              		.loc 2 94 0
 5855 0152 0023     		movs	r3, #0
 5856 0154 A366     		str	r3, [r4, #104]
  95:../../src/middleware/select_screen.h ****         }
ARM GAS  /tmp/ccFxkDJm.s 			page 171


 5857              		.loc 2 95 0
 5858 0156 E366     		str	r3, [r4, #108]
 5859              	.L351:
  98:../../src/middleware/select_screen.h **** 
 5860              		.loc 2 98 0
 5861 0158 2000     		movs	r0, r4
 5862 015a 1030     		adds	r0, r0, #16
 5863 015c FFF7FEFF 		bl	_ZN8FunctionIFvvEEclEv
 5864              	.LVL469:
 100:../../src/middleware/select_screen.h **** private:
 5865              		.loc 2 100 0
 5866 0160 05B0     		add	sp, sp, #20
 5867              		@ sp needed
 5868              	.LVL470:
 5869 0162 F0BD     		pop	{r4, r5, r6, r7, pc}
 5870              	.LVL471:
 5871              	.L337:
 5872              	.LBB2124:
  68:../../src/middleware/select_screen.h ****                 }
 5873              		.loc 2 68 0
 5874 0164 0022     		movs	r2, #0
 5875 0166 9BE7     		b	.L364
 5876              	.L344:
  83:../../src/middleware/select_screen.h ****                 }
 5877              		.loc 2 83 0
 5878 0168 0223     		movs	r3, #2
 5879 016a BAE7     		b	.L365
 5880              	.L367:
 5881              		.align	2
 5882              	.L366:
 5883 016c 00000000 		.word	.LC5
 5884 0170 00000000 		.word	.LC75
 5885 0174 E7030000 		.word	999
 5886              	.LBE2124:
 5887              		.cfi_endproc
 5888              	.LFE3371:
 5890              		.section	.text._ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_I
 5891              		.align	1
 5892              		.weak	_ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3
 5893              		.syntax unified
 5894              		.code	16
 5895              		.thumb_func
 5896              		.fpu softvfp
 5898              	_ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_
 5899              	.LFB3370:
  51:../../src/example/example_select_screen.h **** 
  52:../../src/example/example_select_screen.h ****     void notify() override
 5900              		.loc 22 52 0
 5901              		.cfi_startproc
 5902              		@ args = 0, pretend = 0, frame = 0
 5903              		@ frame_needed = 0, uses_anonymous_args = 0
 5904              	.LVL472:
 5905 0000 10B5     		push	{r4, lr}
 5906              	.LCFI40:
 5907              		.cfi_def_cfa_offset 8
 5908              		.cfi_offset 4, -8
 5909              		.cfi_offset 14, -4
ARM GAS  /tmp/ccFxkDJm.s 			page 172


 5910              		.loc 22 52 0
 5911 0002 0400     		movs	r4, r0
  53:../../src/example/example_select_screen.h ****     {
  54:../../src/example/example_select_screen.h ****         if (timer.event())
 5912              		.loc 22 54 0
 5913 0004 7C30     		adds	r0, r0, #124
 5914              	.LVL473:
 5915 0006 FFF7FEFF 		bl	_ZN5Timer5eventEv
 5916              	.LVL474:
 5917 000a 0028     		cmp	r0, #0
 5918 000c 03D0     		beq	.L368
  55:../../src/example/example_select_screen.h ****             screen.draw();
 5919              		.loc 22 55 0
 5920 000e 2000     		movs	r0, r4
 5921 0010 9430     		adds	r0, r0, #148
 5922 0012 FFF7FEFF 		bl	_ZN13Select_screenILi6EE4drawEv
 5923              	.LVL475:
 5924              	.L368:
  56:../../src/example/example_select_screen.h ****     }
 5925              		.loc 22 56 0
 5926              		@ sp needed
 5927              	.LVL476:
 5928 0016 10BD     		pop	{r4, pc}
 5929              		.cfi_endproc
 5930              	.LFE3370:
 5932              		.section	.text.startup._GLOBAL__sub_I__ZN3mcu5FLASH6unlockEv,"ax",%progbits
 5933              		.align	1
 5934              		.syntax unified
 5935              		.code	16
 5936              		.thumb_func
 5937              		.fpu softvfp
 5939              	_GLOBAL__sub_I__ZN3mcu5FLASH6unlockEv:
 5940              	.LFB3377:
  26:main.cpp      **** 
  27:main.cpp      ****     while(1){
  28:main.cpp      ****         __WFI();
  29:main.cpp      ****     }
  30:main.cpp      **** }
 5941              		.loc 16 30 0
 5942              		.cfi_startproc
 5943              		@ args = 0, pretend = 0, frame = 0
 5944              		@ frame_needed = 0, uses_anonymous_args = 0
 5945              		@ link register save eliminated.
 5946              	.LVL477:
 5947              	.LBB2148:
 5948              	.LBB2149:
 5949              	.LBB2150:
 5950              	.LBB2151:
 5951              	.LBB2152:
 5952              	.LBB2153:
 5953              	.LBB2154:
 5954              	.LBB2155:
  12:../../src/list.h **** {
 5955              		.loc 13 12 0
 5956 0000 0022     		movs	r2, #0
 5957              	.LBE2155:
 5958              	.LBE2154:
ARM GAS  /tmp/ccFxkDJm.s 			page 173


 5959              	.LBE2153:
  23:../../src/timers.h ****     template<Faster multiplier> // multiplier how many subticks in tick
 5960              		.loc 1 23 0
 5961 0002 0121     		movs	r1, #1
 5962              	.LBB2160:
 5963              	.LBB2158:
 5964              	.LBB2156:
  12:../../src/list.h **** {
 5965              		.loc 13 12 0
 5966 0004 0C4B     		ldr	r3, .L374
 5967              	.LBE2156:
 5968              	.LBE2158:
 5969              	.LBE2160:
 5970              	.LBE2152:
 5971              	.LBE2151:
 5972              	.LBE2150:
 5973              	.LBE2149:
 5974              	.LBE2148:
 5975              		.loc 16 30 0
 5976              		@ sp needed
 5977              	.LBB2180:
 5978              	.LBB2179:
 5979              	.LBB2178:
 5980              	.LBB2177:
 5981              	.LBB2176:
 5982              	.LBB2161:
 5983              	.LBB2159:
 5984              	.LBB2157:
  12:../../src/list.h **** {
 5985              		.loc 13 12 0
 5986 0006 1A60     		str	r2, [r3]
 5987 0008 5A60     		str	r2, [r3, #4]
 5988              	.LVL478:
 5989              	.LBE2157:
 5990              	.LBE2159:
 5991              	.LBE2161:
  23:../../src/timers.h ****     template<Faster multiplier> // multiplier how many subticks in tick
 5992              		.loc 1 23 0
 5993 000a 9A60     		str	r2, [r3, #8]
 5994 000c DA60     		str	r2, [r3, #12]
 5995 000e 1A61     		str	r2, [r3, #16]
 5996 0010 5961     		str	r1, [r3, #20]
 5997              	.LVL479:
 5998              	.LBB2162:
 5999              	.LBB2163:
 6000              	.LBB2164:
 6001              	.LBB2165:
  25:../../src/periph/systick.h ****     uint32_t get()             { return VAL; }
 6002              		.loc 5 25 0
 6003 0012 0A4B     		ldr	r3, .L374+4
 6004 0014 1868     		ldr	r0, [r3]
 6005 0016 8843     		bics	r0, r1
 6006 0018 1860     		str	r0, [r3]
 6007              	.LVL480:
 6008              	.LBE2165:
 6009              	.LBE2164:
 6010              	.LBB2166:
ARM GAS  /tmp/ccFxkDJm.s 			page 174


 6011              	.LBB2167:
  21:../../src/periph/systick.h ****     void clear()               { VAL = 0; }
 6012              		.loc 5 21 0
 6013 001a 0948     		ldr	r0, .L374+8
 6014 001c 5860     		str	r0, [r3, #4]
 6015              	.LVL481:
 6016              	.LBE2167:
 6017              	.LBE2166:
 6018              	.LBB2168:
 6019              	.LBB2169:
  22:../../src/periph/systick.h ****     void setSource (Clock v)   { CTRL.CLKSOURCE = v; }
 6020              		.loc 5 22 0
 6021 001e 9A60     		str	r2, [r3, #8]
 6022              	.LVL482:
 6023              	.LBE2169:
 6024              	.LBE2168:
 6025              	.LBB2170:
 6026              	.LBB2171:
  23:../../src/periph/systick.h ****     void enableInterrupt()     { CTRL.TICKINT = true; }
 6027              		.loc 5 23 0
 6028 0020 1868     		ldr	r0, [r3]
 6029 0022 0432     		adds	r2, r2, #4
 6030 0024 0243     		orrs	r2, r0
 6031 0026 1A60     		str	r2, [r3]
 6032              	.LVL483:
 6033              	.LBE2171:
 6034              	.LBE2170:
 6035              	.LBB2172:
 6036              	.LBB2173:
  24:../../src/periph/systick.h ****     void enable(bool v = true) { CTRL.ENABLE = v; }
 6037              		.loc 5 24 0
 6038 0028 0222     		movs	r2, #2
 6039 002a 1868     		ldr	r0, [r3]
 6040 002c 0243     		orrs	r2, r0
 6041 002e 1A60     		str	r2, [r3]
 6042              	.LVL484:
 6043              	.LBE2173:
 6044              	.LBE2172:
 6045              	.LBB2174:
 6046              	.LBB2175:
  25:../../src/periph/systick.h ****     uint32_t get()             { return VAL; }
 6047              		.loc 5 25 0
 6048 0030 1A68     		ldr	r2, [r3]
 6049 0032 1143     		orrs	r1, r2
 6050 0034 1960     		str	r1, [r3]
 6051              	.LVL485:
 6052              	.LBE2175:
 6053              	.LBE2174:
 6054              	.LBE2163:
 6055              	.LBE2162:
 6056              	.LBE2176:
 6057              	.LBE2177:
 6058              	.LBE2178:
 6059              	.LBE2179:
 6060              	.LBE2180:
 6061              		.loc 16 30 0
 6062 0036 7047     		bx	lr
ARM GAS  /tmp/ccFxkDJm.s 			page 175


 6063              	.L375:
 6064              		.align	2
 6065              	.L374:
 6066 0038 00000000 		.word	.LANCHOR0
 6067 003c 10E000E0 		.word	-536813552
 6068 0040 3F190100 		.word	71999
 6069              		.cfi_endproc
 6070              	.LFE3377:
 6072              		.section	.init_array,"aw",%init_array
 6073              		.align	2
 6074 0000 00000000 		.word	_GLOBAL__sub_I__ZN3mcu5FLASH6unlockEv(target1)
 6075              		.weak	_ZTV5Timer
 6076              		.section	.rodata._ZTV5Timer,"aG",%progbits,_ZTV5Timer,comdat
 6077              		.align	2
 6080              	_ZTV5Timer:
 6081 0000 00000000 		.word	0
 6082 0004 00000000 		.word	0
 6083 0008 00000000 		.word	_ZN5Timer6notifyEv
 6084              		.global	_ZTV7HD44780
 6085              		.weak	_ZTVN3mcu6ButtonE
 6086              		.section	.rodata._ZTVN3mcu6ButtonE,"aG",%progbits,_ZTVN3mcu6ButtonE,comdat
 6087              		.align	2
 6090              	_ZTVN3mcu6ButtonE:
 6091 0000 00000000 		.word	0
 6092 0004 00000000 		.word	0
 6093 0008 00000000 		.word	_ZN3mcu6Button6notifyEv
 6094              		.weak	_ZTV13Select_screenILi6EE
 6095              		.section	.rodata._ZTV13Select_screenILi6EE,"aG",%progbits,_ZTV13Select_screenILi6EE,comdat
 6096              		.align	2
 6099              	_ZTV13Select_screenILi6EE:
 6100 0000 00000000 		.word	0
 6101 0004 00000000 		.word	0
 6102 0008 00000000 		.word	_ZN13Select_screenILi6EE4initEv
 6103 000c 00000000 		.word	_ZN13Select_screenILi6EE4drawEv
 6104              		.weak	_ZTVN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2EL
 6105              		.section	.rodata._ZTVN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEEN
 6106              		.align	2
 6109              	_ZTVN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS
 6110 0000 00000000 		.word	0
 6111 0004 00000000 		.word	0
 6112 0008 00000000 		.word	_ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3
 6113              		.weak	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 6114              		.section	.rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS
 6115              		.align	2
 6118              	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EE
 6119 0000 00000000 		.word	0
 6120 0004 00000000 		.word	0
 6121 0008 00000000 		.word	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 6122              		.weak	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 6123              		.section	.rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS
 6124              		.align	2
 6127              	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EE
 6128 0000 00000000 		.word	0
 6129 0004 00000000 		.word	0
 6130 0008 00000000 		.word	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 6131              		.weak	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 6132              		.section	.rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS
ARM GAS  /tmp/ccFxkDJm.s 			page 176


 6133              		.align	2
 6136              	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EE
 6137 0000 00000000 		.word	0
 6138 0004 00000000 		.word	0
 6139 0008 00000000 		.word	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 6140              		.weak	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 6141              		.section	.rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS
 6142              		.align	2
 6145              	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EE
 6146 0000 00000000 		.word	0
 6147 0004 00000000 		.word	0
 6148 0008 00000000 		.word	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 6149              		.weak	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 6150              		.section	.rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS
 6151              		.align	2
 6154              	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EE
 6155 0000 00000000 		.word	0
 6156 0004 00000000 		.word	0
 6157 0008 00000000 		.word	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 6158              		.weak	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 6159              		.section	.rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS
 6160              		.align	2
 6163              	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EE
 6164 0000 00000000 		.word	0
 6165 0004 00000000 		.word	0
 6166 0008 00000000 		.word	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 6167              		.weak	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3
 6168              		.section	.rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS
 6169              		.align	2
 6172              	_ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EE
 6173 0000 00000000 		.word	0
 6174 0004 00000000 		.word	0
 6175 0008 00000000 		.word	_ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3EL
 6176              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin
 6177              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin,"awG",%n
 6178              		.align	2
 6181              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin:
 6182 0000 00000000 		.space	4
 6183              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin
 6184              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin,"awG",%nob
 6185              		.align	2
 6188              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin:
 6189 0000 00000000 		.space	8
 6189      00000000 
 6190              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin
 6191              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin,"awG",%n
 6192              		.align	2
 6195              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin:
 6196 0000 00000000 		.space	4
 6197              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin
 6198              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin,"awG",%nob
 6199              		.align	2
 6202              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin:
 6203 0000 00000000 		.space	8
 6203      00000000 
 6204              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin
 6205              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin,"awG",%n
ARM GAS  /tmp/ccFxkDJm.s 			page 177


 6206              		.align	2
 6209              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin:
 6210 0000 00000000 		.space	4
 6211              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin
 6212              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin,"awG",%nob
 6213              		.align	2
 6216              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin:
 6217 0000 00000000 		.space	8
 6217      00000000 
 6218              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin
 6219              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin,"awG",%n
 6220              		.align	2
 6223              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin:
 6224 0000 00000000 		.space	4
 6225              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin
 6226              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin,"awG",%nob
 6227              		.align	2
 6230              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin:
 6231 0000 00000000 		.space	8
 6231      00000000 
 6232              		.weak	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 6233              		.section	.bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12E
 6234              		.align	2
 6237              	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi
 6238 0000 00000000 		.space	4
 6239              		.weak	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 6240              		.section	.bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEE
 6241              		.align	2
 6244              	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2E
 6245 0000 00000000 		.space	8
 6245      00000000 
 6246              		.weak	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 6247              		.section	.bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12E
 6248              		.align	2
 6251              	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi
 6252 0000 00000000 		.space	4
 6253              		.weak	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 6254              		.section	.bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEE
 6255              		.align	2
 6258              	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2E
 6259 0000 00000000 		.space	8
 6259      00000000 
 6260              		.weak	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 6261              		.section	.bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12E
 6262              		.align	2
 6265              	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi
 6266 0000 00000000 		.space	4
 6267              		.weak	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 6268              		.section	.bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEE
 6269              		.align	2
 6272              	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2E
 6273 0000 00000000 		.space	8
 6273      00000000 
 6274              		.weak	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 6275              		.section	.bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12E
 6276              		.align	2
 6279              	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi
ARM GAS  /tmp/ccFxkDJm.s 			page 178


 6280 0000 00000000 		.space	4
 6281              		.weak	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 6282              		.section	.bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEE
 6283              		.align	2
 6286              	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2E
 6287 0000 00000000 		.space	8
 6287      00000000 
 6288              		.weak	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 6289              		.section	.bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12E
 6290              		.align	2
 6293              	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi
 6294 0000 00000000 		.space	4
 6295              		.weak	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 6296              		.section	.bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEE
 6297              		.align	2
 6300              	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2E
 6301 0000 00000000 		.space	8
 6301      00000000 
 6302              		.weak	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 6303              		.section	.bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12E
 6304              		.align	2
 6307              	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi
 6308 0000 00000000 		.space	4
 6309              		.weak	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 6310              		.section	.bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEE
 6311              		.align	2
 6314              	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2E
 6315 0000 00000000 		.space	8
 6315      00000000 
 6316              		.weak	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_IL
 6317              		.section	.bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12E
 6318              		.align	2
 6321              	_ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi
 6322 0000 00000000 		.space	4
 6323              		.weak	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7
 6324              		.section	.bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEE
 6325              		.align	2
 6328              	_ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2E
 6329 0000 00000000 		.space	8
 6329      00000000 
 6330              		.weak	_ZGVZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_I
 6331              		.section	.bss._ZGVZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3
 6332              		.align	2
 6335              	_ZGVZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2EL
 6336 0000 00000000 		.space	4
 6337              		.weak	_ZZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS
 6338              		.section	.bss._ZZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EE
 6339              		.align	2
 6342              	_ZZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4
 6343 0000 00000000 		.space	52
 6343      00000000 
 6343      00000000 
 6343      00000000 
 6343      00000000 
 6344              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin
 6345              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin,"awG",%n
 6346              		.align	2
ARM GAS  /tmp/ccFxkDJm.s 			page 179


 6349              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin:
 6350 0000 00000000 		.space	4
 6351              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin
 6352              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin,"awG",%nob
 6353              		.align	2
 6356              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin:
 6357 0000 00000000 		.space	8
 6357      00000000 
 6358              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin
 6359              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin,"awG",%n
 6360              		.align	2
 6363              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin:
 6364 0000 00000000 		.space	4
 6365              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin
 6366              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin,"awG",%nob
 6367              		.align	2
 6370              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin:
 6371 0000 00000000 		.space	8
 6371      00000000 
 6372              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin
 6373              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin,"awG",%
 6374              		.align	2
 6377              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin:
 6378 0000 00000000 		.space	4
 6379              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin
 6380              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin,"awG",%no
 6381              		.align	2
 6384              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin:
 6385 0000 00000000 		.space	8
 6385      00000000 
 6386              		.weak	_ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button
 6387              		.section	.bss._ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button,"awG",%nobits
 6388              		.align	2
 6391              	_ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button:
 6392 0000 00000000 		.space	4
 6393              		.weak	_ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button
 6394              		.section	.bss._ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button,"awG",%nobits,_
 6395              		.align	2
 6398              	_ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button:
 6399 0000 00000000 		.space	44
 6399      00000000 
 6399      00000000 
 6399      00000000 
 6399      00000000 
 6400              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin
 6401              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin,"awG",%n
 6402              		.align	2
 6405              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin:
 6406 0000 00000000 		.space	4
 6407              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin
 6408              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin,"awG",%nob
 6409              		.align	2
 6412              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin:
 6413 0000 00000000 		.space	8
 6413      00000000 
 6414              		.weak	_ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button
 6415              		.section	.bss._ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button,"awG",%nobits
ARM GAS  /tmp/ccFxkDJm.s 			page 180


 6416              		.align	2
 6419              	_ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button:
 6420 0000 00000000 		.space	4
 6421              		.weak	_ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button
 6422              		.section	.bss._ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button,"awG",%nobits,_
 6423              		.align	2
 6426              	_ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button:
 6427 0000 00000000 		.space	44
 6427      00000000 
 6427      00000000 
 6427      00000000 
 6427      00000000 
 6428              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin
 6429              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin,"awG",%n
 6430              		.align	2
 6433              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin:
 6434 0000 00000000 		.space	4
 6435              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin
 6436              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin,"awG",%nob
 6437              		.align	2
 6440              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin:
 6441 0000 00000000 		.space	8
 6441      00000000 
 6442              		.weak	_ZN7HD447808Symbol_n5tableE
 6443              		.section	.rodata._ZN7HD447808Symbol_n5tableE,"aG",%progbits,_ZN7HD447808Symbol_n5tableE,comdat
 6444              		.align	2
 6447              	_ZN7HD447808Symbol_n5tableE:
 6448 0000 00000000 		.word	0
 6449 0004 01000000 		.word	1
 6450 0008 02000000 		.word	2
 6451 000c 03000000 		.word	3
 6452 0010 04000000 		.word	4
 6453 0014 05000000 		.word	5
 6454 0018 06000000 		.word	6
 6455 001c 07000000 		.word	7
 6456 0020 08000000 		.word	8
 6457 0024 09000000 		.word	9
 6458 0028 0A000000 		.word	10
 6459 002c 0B000000 		.word	11
 6460 0030 0C000000 		.word	12
 6461 0034 0D000000 		.word	13
 6462 0038 0E000000 		.word	14
 6463 003c 0F000000 		.word	15
 6464 0040 10000000 		.word	16
 6465 0044 11000000 		.word	17
 6466 0048 12000000 		.word	18
 6467 004c 13000000 		.word	19
 6468 0050 28000000 		.word	40
 6469 0054 29000000 		.word	41
 6470 0058 2A000000 		.word	42
 6471 005c 2B000000 		.word	43
 6472 0060 2C000000 		.word	44
 6473 0064 2D000000 		.word	45
 6474 0068 2E000000 		.word	46
 6475 006c 2F000000 		.word	47
 6476 0070 30000000 		.word	48
 6477 0074 31000000 		.word	49
ARM GAS  /tmp/ccFxkDJm.s 			page 181


 6478 0078 32000000 		.word	50
 6479 007c 33000000 		.word	51
 6480 0080 34000000 		.word	52
 6481 0084 35000000 		.word	53
 6482 0088 36000000 		.word	54
 6483 008c 37000000 		.word	55
 6484 0090 38000000 		.word	56
 6485 0094 39000000 		.word	57
 6486 0098 3A000000 		.word	58
 6487 009c 3B000000 		.word	59
 6488 00a0 14000000 		.word	20
 6489 00a4 15000000 		.word	21
 6490 00a8 16000000 		.word	22
 6491 00ac 17000000 		.word	23
 6492 00b0 18000000 		.word	24
 6493 00b4 19000000 		.word	25
 6494 00b8 1A000000 		.word	26
 6495 00bc 1B000000 		.word	27
 6496 00c0 1C000000 		.word	28
 6497 00c4 1D000000 		.word	29
 6498 00c8 1E000000 		.word	30
 6499 00cc 1F000000 		.word	31
 6500 00d0 20000000 		.word	32
 6501 00d4 21000000 		.word	33
 6502 00d8 22000000 		.word	34
 6503 00dc 23000000 		.word	35
 6504 00e0 24000000 		.word	36
 6505 00e4 25000000 		.word	37
 6506 00e8 26000000 		.word	38
 6507 00ec 27000000 		.word	39
 6508 00f0 3C000000 		.word	60
 6509 00f4 3D000000 		.word	61
 6510 00f8 3E000000 		.word	62
 6511 00fc 3F000000 		.word	63
 6512 0100 40000000 		.word	64
 6513 0104 41000000 		.word	65
 6514 0108 42000000 		.word	66
 6515 010c 43000000 		.word	67
 6516 0110 44000000 		.word	68
 6517 0114 45000000 		.word	69
 6518 0118 46000000 		.word	70
 6519 011c 47000000 		.word	71
 6520 0120 48000000 		.word	72
 6521 0124 49000000 		.word	73
 6522 0128 4A000000 		.word	74
 6523 012c 4B000000 		.word	75
 6524 0130 4C000000 		.word	76
 6525 0134 4D000000 		.word	77
 6526 0138 4E000000 		.word	78
 6527 013c 4F000000 		.word	79
 6528              		.global	tickUpdater
 6529              		.section	.bss.tickUpdater,"aw",%nobits
 6530              		.align	2
 6531              		.set	.LANCHOR0,. + 0
 6534              	tickUpdater:
 6535 0000 00000000 		.space	24
 6535      00000000 
ARM GAS  /tmp/ccFxkDJm.s 			page 182


 6535      00000000 
 6535      00000000 
 6535      00000000 
 6536              		.section	.rodata._Z9next_lineR13String_buffer.str1.1,"aMS",%progbits,1
 6537              	.LC5:
 6538 0000 2000     		.ascii	" \000"
 6539              		.section	.rodata._ZN13Select_screenILi6EE4drawEv.str1.1,"aMS",%progbits,1
 6540              	.LC75:
 6541 0000 7E00     		.ascii	"~\000"
 6542              		.section	.rodata._ZN13String_bufferlsEi.str1.1,"aMS",%progbits,1
 6543              	.LC7:
 6544 0000 256400   		.ascii	"%d\000"
 6545              		.section	.rodata._ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2
 6546              	.LC64:
 6547 0000 C0E2E0F0 		.ascii	"\300\342\340\360\350\350\000"
 6547      E8E800
 6548              	.LC66:
 6549 0007 CDE0F0E0 		.ascii	"\315\340\360\340\341\356\362\352\340\000"
 6549      E1EEF2EA 
 6549      E000
 6550              	.LC68:
 6551 0011 CAEEEDF4 		.ascii	"\312\356\355\364\350\343\363\360\340\366\350\377\000"
 6551      E8E3F3F0 
 6551      E0F6E8FF 
 6551      00
 6552              	.LC70:
 6553 001e CBEEE320 		.ascii	"\313\356\343 \360\340\341\356\362\373\000"
 6553      F0E0E1EE 
 6553      F2FB00
 6554              	.LC72:
 6555 0029 CDE0F1F2 		.ascii	"\315\340\361\362\360\356\351\352\350\000"
 6555      F0EEE9EA 
 6555      E800
 6556              		.section	.rodata._ZN4metaL8generateIL_Z10BSRR_valueIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5
 6557              		.align	2
 6560              	_ZN4metaL8generateIL_Z10BSRR_valueIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5EEENS3_ILS4_2ELi6E
 6561 0000 0000F000 		.word	15728640
 6562 0004 0000F000 		.word	15728640
 6563 0008 0000F000 		.word	15728640
 6564 000c 1000E000 		.word	14680080
 6565 0010 0000F000 		.word	15728640
 6566 0014 2000D000 		.word	13631520
 6567 0018 0000F000 		.word	15728640
 6568 001c 3000C000 		.word	12582960
 6569 0020 0000F000 		.word	15728640
 6570 0024 4000B000 		.word	11534400
 6571 0028 0000F000 		.word	15728640
 6572 002c 5000A000 		.word	10485840
 6573 0030 0000F000 		.word	15728640
 6574 0034 60009000 		.word	9437280
 6575 0038 0000F000 		.word	15728640
 6576 003c 70008000 		.word	8388720
 6577 0040 0000F000 		.word	15728640
 6578 0044 80007000 		.word	7340160
 6579 0048 0000F000 		.word	15728640
 6580 004c 90006000 		.word	6291600
 6581 0050 0000F000 		.word	15728640
ARM GAS  /tmp/ccFxkDJm.s 			page 183


 6582 0054 A0005000 		.word	5243040
 6583 0058 0000F000 		.word	15728640
 6584 005c B0004000 		.word	4194480
 6585 0060 0000F000 		.word	15728640
 6586 0064 C0003000 		.word	3145920
 6587 0068 0000F000 		.word	15728640
 6588 006c D0002000 		.word	2097360
 6589 0070 0000F000 		.word	15728640
 6590 0074 E0001000 		.word	1048800
 6591 0078 0000F000 		.word	15728640
 6592 007c F0000000 		.word	240
 6593 0080 1000E000 		.word	14680080
 6594 0084 0000F000 		.word	15728640
 6595 0088 1000E000 		.word	14680080
 6596 008c 1000E000 		.word	14680080
 6597 0090 1000E000 		.word	14680080
 6598 0094 2000D000 		.word	13631520
 6599 0098 1000E000 		.word	14680080
 6600 009c 3000C000 		.word	12582960
 6601 00a0 1000E000 		.word	14680080
 6602 00a4 4000B000 		.word	11534400
 6603 00a8 1000E000 		.word	14680080
 6604 00ac 5000A000 		.word	10485840
 6605 00b0 1000E000 		.word	14680080
 6606 00b4 60009000 		.word	9437280
 6607 00b8 1000E000 		.word	14680080
 6608 00bc 70008000 		.word	8388720
 6609 00c0 1000E000 		.word	14680080
 6610 00c4 80007000 		.word	7340160
 6611 00c8 1000E000 		.word	14680080
 6612 00cc 90006000 		.word	6291600
 6613 00d0 1000E000 		.word	14680080
 6614 00d4 A0005000 		.word	5243040
 6615 00d8 1000E000 		.word	14680080
 6616 00dc B0004000 		.word	4194480
 6617 00e0 1000E000 		.word	14680080
 6618 00e4 C0003000 		.word	3145920
 6619 00e8 1000E000 		.word	14680080
 6620 00ec D0002000 		.word	2097360
 6621 00f0 1000E000 		.word	14680080
 6622 00f4 E0001000 		.word	1048800
 6623 00f8 1000E000 		.word	14680080
 6624 00fc F0000000 		.word	240
 6625 0100 2000D000 		.word	13631520
 6626 0104 0000F000 		.word	15728640
 6627 0108 2000D000 		.word	13631520
 6628 010c 1000E000 		.word	14680080
 6629 0110 2000D000 		.word	13631520
 6630 0114 2000D000 		.word	13631520
 6631 0118 2000D000 		.word	13631520
 6632 011c 3000C000 		.word	12582960
 6633 0120 2000D000 		.word	13631520
 6634 0124 4000B000 		.word	11534400
 6635 0128 2000D000 		.word	13631520
 6636 012c 5000A000 		.word	10485840
 6637 0130 2000D000 		.word	13631520
 6638 0134 60009000 		.word	9437280
ARM GAS  /tmp/ccFxkDJm.s 			page 184


 6639 0138 2000D000 		.word	13631520
 6640 013c 70008000 		.word	8388720
 6641 0140 2000D000 		.word	13631520
 6642 0144 80007000 		.word	7340160
 6643 0148 2000D000 		.word	13631520
 6644 014c 90006000 		.word	6291600
 6645 0150 2000D000 		.word	13631520
 6646 0154 A0005000 		.word	5243040
 6647 0158 2000D000 		.word	13631520
 6648 015c B0004000 		.word	4194480
 6649 0160 2000D000 		.word	13631520
 6650 0164 C0003000 		.word	3145920
 6651 0168 2000D000 		.word	13631520
 6652 016c D0002000 		.word	2097360
 6653 0170 2000D000 		.word	13631520
 6654 0174 E0001000 		.word	1048800
 6655 0178 2000D000 		.word	13631520
 6656 017c F0000000 		.word	240
 6657 0180 3000C000 		.word	12582960
 6658 0184 0000F000 		.word	15728640
 6659 0188 3000C000 		.word	12582960
 6660 018c 1000E000 		.word	14680080
 6661 0190 3000C000 		.word	12582960
 6662 0194 2000D000 		.word	13631520
 6663 0198 3000C000 		.word	12582960
 6664 019c 3000C000 		.word	12582960
 6665 01a0 3000C000 		.word	12582960
 6666 01a4 4000B000 		.word	11534400
 6667 01a8 3000C000 		.word	12582960
 6668 01ac 5000A000 		.word	10485840
 6669 01b0 3000C000 		.word	12582960
 6670 01b4 60009000 		.word	9437280
 6671 01b8 3000C000 		.word	12582960
 6672 01bc 70008000 		.word	8388720
 6673 01c0 3000C000 		.word	12582960
 6674 01c4 80007000 		.word	7340160
 6675 01c8 3000C000 		.word	12582960
 6676 01cc 90006000 		.word	6291600
 6677 01d0 3000C000 		.word	12582960
 6678 01d4 A0005000 		.word	5243040
 6679 01d8 3000C000 		.word	12582960
 6680 01dc B0004000 		.word	4194480
 6681 01e0 3000C000 		.word	12582960
 6682 01e4 C0003000 		.word	3145920
 6683 01e8 3000C000 		.word	12582960
 6684 01ec D0002000 		.word	2097360
 6685 01f0 3000C000 		.word	12582960
 6686 01f4 E0001000 		.word	1048800
 6687 01f8 3000C000 		.word	12582960
 6688 01fc F0000000 		.word	240
 6689 0200 4000B000 		.word	11534400
 6690 0204 0000F000 		.word	15728640
 6691 0208 4000B000 		.word	11534400
 6692 020c 1000E000 		.word	14680080
 6693 0210 4000B000 		.word	11534400
 6694 0214 2000D000 		.word	13631520
 6695 0218 4000B000 		.word	11534400
ARM GAS  /tmp/ccFxkDJm.s 			page 185


 6696 021c 3000C000 		.word	12582960
 6697 0220 4000B000 		.word	11534400
 6698 0224 4000B000 		.word	11534400
 6699 0228 4000B000 		.word	11534400
 6700 022c 5000A000 		.word	10485840
 6701 0230 4000B000 		.word	11534400
 6702 0234 60009000 		.word	9437280
 6703 0238 4000B000 		.word	11534400
 6704 023c 70008000 		.word	8388720
 6705 0240 4000B000 		.word	11534400
 6706 0244 80007000 		.word	7340160
 6707 0248 4000B000 		.word	11534400
 6708 024c 90006000 		.word	6291600
 6709 0250 4000B000 		.word	11534400
 6710 0254 A0005000 		.word	5243040
 6711 0258 4000B000 		.word	11534400
 6712 025c B0004000 		.word	4194480
 6713 0260 4000B000 		.word	11534400
 6714 0264 C0003000 		.word	3145920
 6715 0268 4000B000 		.word	11534400
 6716 026c D0002000 		.word	2097360
 6717 0270 4000B000 		.word	11534400
 6718 0274 E0001000 		.word	1048800
 6719 0278 4000B000 		.word	11534400
 6720 027c F0000000 		.word	240
 6721 0280 5000A000 		.word	10485840
 6722 0284 0000F000 		.word	15728640
 6723 0288 5000A000 		.word	10485840
 6724 028c 1000E000 		.word	14680080
 6725 0290 5000A000 		.word	10485840
 6726 0294 2000D000 		.word	13631520
 6727 0298 5000A000 		.word	10485840
 6728 029c 3000C000 		.word	12582960
 6729 02a0 5000A000 		.word	10485840
 6730 02a4 4000B000 		.word	11534400
 6731 02a8 5000A000 		.word	10485840
 6732 02ac 5000A000 		.word	10485840
 6733 02b0 5000A000 		.word	10485840
 6734 02b4 60009000 		.word	9437280
 6735 02b8 5000A000 		.word	10485840
 6736 02bc 70008000 		.word	8388720
 6737 02c0 5000A000 		.word	10485840
 6738 02c4 80007000 		.word	7340160
 6739 02c8 5000A000 		.word	10485840
 6740 02cc 90006000 		.word	6291600
 6741 02d0 5000A000 		.word	10485840
 6742 02d4 A0005000 		.word	5243040
 6743 02d8 5000A000 		.word	10485840
 6744 02dc B0004000 		.word	4194480
 6745 02e0 5000A000 		.word	10485840
 6746 02e4 C0003000 		.word	3145920
 6747 02e8 5000A000 		.word	10485840
 6748 02ec D0002000 		.word	2097360
 6749 02f0 5000A000 		.word	10485840
 6750 02f4 E0001000 		.word	1048800
 6751 02f8 5000A000 		.word	10485840
 6752 02fc F0000000 		.word	240
ARM GAS  /tmp/ccFxkDJm.s 			page 186


 6753 0300 60009000 		.word	9437280
 6754 0304 0000F000 		.word	15728640
 6755 0308 60009000 		.word	9437280
 6756 030c 1000E000 		.word	14680080
 6757 0310 60009000 		.word	9437280
 6758 0314 2000D000 		.word	13631520
 6759 0318 60009000 		.word	9437280
 6760 031c 3000C000 		.word	12582960
 6761 0320 60009000 		.word	9437280
 6762 0324 4000B000 		.word	11534400
 6763 0328 60009000 		.word	9437280
 6764 032c 5000A000 		.word	10485840
 6765 0330 60009000 		.word	9437280
 6766 0334 60009000 		.word	9437280
 6767 0338 60009000 		.word	9437280
 6768 033c 70008000 		.word	8388720
 6769 0340 60009000 		.word	9437280
 6770 0344 80007000 		.word	7340160
 6771 0348 60009000 		.word	9437280
 6772 034c 90006000 		.word	6291600
 6773 0350 60009000 		.word	9437280
 6774 0354 A0005000 		.word	5243040
 6775 0358 60009000 		.word	9437280
 6776 035c B0004000 		.word	4194480
 6777 0360 60009000 		.word	9437280
 6778 0364 C0003000 		.word	3145920
 6779 0368 60009000 		.word	9437280
 6780 036c D0002000 		.word	2097360
 6781 0370 60009000 		.word	9437280
 6782 0374 E0001000 		.word	1048800
 6783 0378 60009000 		.word	9437280
 6784 037c F0000000 		.word	240
 6785 0380 70008000 		.word	8388720
 6786 0384 0000F000 		.word	15728640
 6787 0388 70008000 		.word	8388720
 6788 038c 1000E000 		.word	14680080
 6789 0390 70008000 		.word	8388720
 6790 0394 2000D000 		.word	13631520
 6791 0398 70008000 		.word	8388720
 6792 039c 3000C000 		.word	12582960
 6793 03a0 70008000 		.word	8388720
 6794 03a4 4000B000 		.word	11534400
 6795 03a8 70008000 		.word	8388720
 6796 03ac 5000A000 		.word	10485840
 6797 03b0 70008000 		.word	8388720
 6798 03b4 60009000 		.word	9437280
 6799 03b8 70008000 		.word	8388720
 6800 03bc 70008000 		.word	8388720
 6801 03c0 70008000 		.word	8388720
 6802 03c4 80007000 		.word	7340160
 6803 03c8 70008000 		.word	8388720
 6804 03cc 90006000 		.word	6291600
 6805 03d0 70008000 		.word	8388720
 6806 03d4 A0005000 		.word	5243040
 6807 03d8 70008000 		.word	8388720
 6808 03dc B0004000 		.word	4194480
 6809 03e0 70008000 		.word	8388720
ARM GAS  /tmp/ccFxkDJm.s 			page 187


 6810 03e4 C0003000 		.word	3145920
 6811 03e8 70008000 		.word	8388720
 6812 03ec D0002000 		.word	2097360
 6813 03f0 70008000 		.word	8388720
 6814 03f4 E0001000 		.word	1048800
 6815 03f8 70008000 		.word	8388720
 6816 03fc F0000000 		.word	240
 6817 0400 80007000 		.word	7340160
 6818 0404 0000F000 		.word	15728640
 6819 0408 80007000 		.word	7340160
 6820 040c 1000E000 		.word	14680080
 6821 0410 80007000 		.word	7340160
 6822 0414 2000D000 		.word	13631520
 6823 0418 80007000 		.word	7340160
 6824 041c 3000C000 		.word	12582960
 6825 0420 80007000 		.word	7340160
 6826 0424 4000B000 		.word	11534400
 6827 0428 80007000 		.word	7340160
 6828 042c 5000A000 		.word	10485840
 6829 0430 80007000 		.word	7340160
 6830 0434 60009000 		.word	9437280
 6831 0438 80007000 		.word	7340160
 6832 043c 70008000 		.word	8388720
 6833 0440 80007000 		.word	7340160
 6834 0444 80007000 		.word	7340160
 6835 0448 80007000 		.word	7340160
 6836 044c 90006000 		.word	6291600
 6837 0450 80007000 		.word	7340160
 6838 0454 A0005000 		.word	5243040
 6839 0458 80007000 		.word	7340160
 6840 045c B0004000 		.word	4194480
 6841 0460 80007000 		.word	7340160
 6842 0464 C0003000 		.word	3145920
 6843 0468 80007000 		.word	7340160
 6844 046c D0002000 		.word	2097360
 6845 0470 80007000 		.word	7340160
 6846 0474 E0001000 		.word	1048800
 6847 0478 80007000 		.word	7340160
 6848 047c F0000000 		.word	240
 6849 0480 90006000 		.word	6291600
 6850 0484 0000F000 		.word	15728640
 6851 0488 90006000 		.word	6291600
 6852 048c 1000E000 		.word	14680080
 6853 0490 90006000 		.word	6291600
 6854 0494 2000D000 		.word	13631520
 6855 0498 90006000 		.word	6291600
 6856 049c 3000C000 		.word	12582960
 6857 04a0 90006000 		.word	6291600
 6858 04a4 4000B000 		.word	11534400
 6859 04a8 90006000 		.word	6291600
 6860 04ac 5000A000 		.word	10485840
 6861 04b0 90006000 		.word	6291600
 6862 04b4 60009000 		.word	9437280
 6863 04b8 90006000 		.word	6291600
 6864 04bc 70008000 		.word	8388720
 6865 04c0 90006000 		.word	6291600
 6866 04c4 80007000 		.word	7340160
ARM GAS  /tmp/ccFxkDJm.s 			page 188


 6867 04c8 90006000 		.word	6291600
 6868 04cc 90006000 		.word	6291600
 6869 04d0 90006000 		.word	6291600
 6870 04d4 A0005000 		.word	5243040
 6871 04d8 90006000 		.word	6291600
 6872 04dc B0004000 		.word	4194480
 6873 04e0 90006000 		.word	6291600
 6874 04e4 C0003000 		.word	3145920
 6875 04e8 90006000 		.word	6291600
 6876 04ec D0002000 		.word	2097360
 6877 04f0 90006000 		.word	6291600
 6878 04f4 E0001000 		.word	1048800
 6879 04f8 90006000 		.word	6291600
 6880 04fc F0000000 		.word	240
 6881 0500 A0005000 		.word	5243040
 6882 0504 0000F000 		.word	15728640
 6883 0508 A0005000 		.word	5243040
 6884 050c 1000E000 		.word	14680080
 6885 0510 A0005000 		.word	5243040
 6886 0514 2000D000 		.word	13631520
 6887 0518 A0005000 		.word	5243040
 6888 051c 3000C000 		.word	12582960
 6889 0520 A0005000 		.word	5243040
 6890 0524 4000B000 		.word	11534400
 6891 0528 A0005000 		.word	5243040
 6892 052c 5000A000 		.word	10485840
 6893 0530 A0005000 		.word	5243040
 6894 0534 60009000 		.word	9437280
 6895 0538 A0005000 		.word	5243040
 6896 053c 70008000 		.word	8388720
 6897 0540 A0005000 		.word	5243040
 6898 0544 80007000 		.word	7340160
 6899 0548 A0005000 		.word	5243040
 6900 054c 90006000 		.word	6291600
 6901 0550 A0005000 		.word	5243040
 6902 0554 A0005000 		.word	5243040
 6903 0558 A0005000 		.word	5243040
 6904 055c B0004000 		.word	4194480
 6905 0560 A0005000 		.word	5243040
 6906 0564 C0003000 		.word	3145920
 6907 0568 A0005000 		.word	5243040
 6908 056c D0002000 		.word	2097360
 6909 0570 A0005000 		.word	5243040
 6910 0574 E0001000 		.word	1048800
 6911 0578 A0005000 		.word	5243040
 6912 057c F0000000 		.word	240
 6913 0580 B0004000 		.word	4194480
 6914 0584 0000F000 		.word	15728640
 6915 0588 B0004000 		.word	4194480
 6916 058c 1000E000 		.word	14680080
 6917 0590 B0004000 		.word	4194480
 6918 0594 2000D000 		.word	13631520
 6919 0598 B0004000 		.word	4194480
 6920 059c 3000C000 		.word	12582960
 6921 05a0 B0004000 		.word	4194480
 6922 05a4 4000B000 		.word	11534400
 6923 05a8 B0004000 		.word	4194480
ARM GAS  /tmp/ccFxkDJm.s 			page 189


 6924 05ac 5000A000 		.word	10485840
 6925 05b0 B0004000 		.word	4194480
 6926 05b4 60009000 		.word	9437280
 6927 05b8 B0004000 		.word	4194480
 6928 05bc 70008000 		.word	8388720
 6929 05c0 B0004000 		.word	4194480
 6930 05c4 80007000 		.word	7340160
 6931 05c8 B0004000 		.word	4194480
 6932 05cc 90006000 		.word	6291600
 6933 05d0 B0004000 		.word	4194480
 6934 05d4 A0005000 		.word	5243040
 6935 05d8 B0004000 		.word	4194480
 6936 05dc B0004000 		.word	4194480
 6937 05e0 B0004000 		.word	4194480
 6938 05e4 C0003000 		.word	3145920
 6939 05e8 B0004000 		.word	4194480
 6940 05ec D0002000 		.word	2097360
 6941 05f0 B0004000 		.word	4194480
 6942 05f4 E0001000 		.word	1048800
 6943 05f8 B0004000 		.word	4194480
 6944 05fc F0000000 		.word	240
 6945 0600 4000B000 		.word	11534400
 6946 0604 1000E000 		.word	14680080
 6947 0608 A0005000 		.word	5243040
 6948 060c 0000F000 		.word	15728640
 6949 0610 4000B000 		.word	11534400
 6950 0614 2000D000 		.word	13631520
 6951 0618 A0005000 		.word	5243040
 6952 061c 1000E000 		.word	14680080
 6953 0620 E0001000 		.word	1048800
 6954 0624 0000F000 		.word	15728640
 6955 0628 4000B000 		.word	11534400
 6956 062c 5000A000 		.word	10485840
 6957 0630 A0005000 		.word	5243040
 6958 0634 3000C000 		.word	12582960
 6959 0638 A0005000 		.word	5243040
 6960 063c 4000B000 		.word	11534400
 6961 0640 A0005000 		.word	5243040
 6962 0644 5000A000 		.word	10485840
 6963 0648 A0005000 		.word	5243040
 6964 064c 60009000 		.word	9437280
 6965 0650 4000B000 		.word	11534400
 6966 0654 B0004000 		.word	4194480
 6967 0658 A0005000 		.word	5243040
 6968 065c 70008000 		.word	8388720
 6969 0660 4000B000 		.word	11534400
 6970 0664 D0002000 		.word	2097360
 6971 0668 4000B000 		.word	11534400
 6972 066c 80007000 		.word	7340160
 6973 0670 4000B000 		.word	11534400
 6974 0674 F0000000 		.word	240
 6975 0678 A0005000 		.word	5243040
 6976 067c 80007000 		.word	7340160
 6977 0680 5000A000 		.word	10485840
 6978 0684 0000F000 		.word	15728640
 6979 0688 4000B000 		.word	11534400
 6980 068c 3000C000 		.word	12582960
ARM GAS  /tmp/ccFxkDJm.s 			page 190


 6981 0690 5000A000 		.word	10485840
 6982 0694 4000B000 		.word	11534400
 6983 0698 A0005000 		.word	5243040
 6984 069c 90006000 		.word	6291600
 6985 06a0 A0005000 		.word	5243040
 6986 06a4 A0005000 		.word	5243040
 6987 06a8 5000A000 		.word	10485840
 6988 06ac 80007000 		.word	7340160
 6989 06b0 E0001000 		.word	1048800
 6990 06b4 1000E000 		.word	14680080
 6991 06b8 A0005000 		.word	5243040
 6992 06bc B0004000 		.word	4194480
 6993 06c0 A0005000 		.word	5243040
 6994 06c4 C0003000 		.word	3145920
 6995 06c8 E0001000 		.word	1048800
 6996 06cc 2000D000 		.word	13631520
 6997 06d0 A0005000 		.word	5243040
 6998 06d4 D0002000 		.word	2097360
 6999 06d8 A0005000 		.word	5243040
 7000 06dc E0001000 		.word	1048800
 7001 06e0 A0005000 		.word	5243040
 7002 06e4 D0002000 		.word	2097360
 7003 06e8 A0005000 		.word	5243040
 7004 06ec F0000000 		.word	240
 7005 06f0 B0004000 		.word	4194480
 7006 06f4 0000F000 		.word	15728640
 7007 06f8 B0004000 		.word	4194480
 7008 06fc 1000E000 		.word	14680080
 7009 0700 60009000 		.word	9437280
 7010 0704 1000E000 		.word	14680080
 7011 0708 B0004000 		.word	4194480
 7012 070c 2000D000 		.word	13631520
 7013 0710 B0004000 		.word	4194480
 7014 0714 3000C000 		.word	12582960
 7015 0718 B0004000 		.word	4194480
 7016 071c 4000B000 		.word	11534400
 7017 0720 E0001000 		.word	1048800
 7018 0724 3000C000 		.word	12582960
 7019 0728 60009000 		.word	9437280
 7020 072c 5000A000 		.word	10485840
 7021 0730 B0004000 		.word	4194480
 7022 0734 60009000 		.word	9437280
 7023 0738 B0004000 		.word	4194480
 7024 073c 70008000 		.word	8388720
 7025 0740 B0004000 		.word	4194480
 7026 0744 80007000 		.word	7340160
 7027 0748 B0004000 		.word	4194480
 7028 074c 90006000 		.word	6291600
 7029 0750 B0004000 		.word	4194480
 7030 0754 A0005000 		.word	5243040
 7031 0758 B0004000 		.word	4194480
 7032 075c B0004000 		.word	4194480
 7033 0760 B0004000 		.word	4194480
 7034 0764 C0003000 		.word	3145920
 7035 0768 B0004000 		.word	4194480
 7036 076c D0002000 		.word	2097360
 7037 0770 60009000 		.word	9437280
ARM GAS  /tmp/ccFxkDJm.s 			page 191


 7038 0774 F0000000 		.word	240
 7039 0778 B0004000 		.word	4194480
 7040 077c E0001000 		.word	1048800
 7041 0780 70008000 		.word	8388720
 7042 0784 0000F000 		.word	15728640
 7043 0788 60009000 		.word	9437280
 7044 078c 3000C000 		.word	12582960
 7045 0790 B0004000 		.word	4194480
 7046 0794 F0000000 		.word	240
 7047 0798 70008000 		.word	8388720
 7048 079c 90006000 		.word	6291600
 7049 07a0 E0001000 		.word	1048800
 7050 07a4 4000B000 		.word	11534400
 7051 07a8 70008000 		.word	8388720
 7052 07ac 80007000 		.word	7340160
 7053 07b0 E0001000 		.word	1048800
 7054 07b4 5000A000 		.word	10485840
 7055 07b8 C0003000 		.word	3145920
 7056 07bc 0000F000 		.word	15728640
 7057 07c0 C0003000 		.word	3145920
 7058 07c4 1000E000 		.word	14680080
 7059 07c8 E0001000 		.word	1048800
 7060 07cc 60009000 		.word	9437280
 7061 07d0 C0003000 		.word	3145920
 7062 07d4 2000D000 		.word	13631520
 7063 07d8 C0003000 		.word	3145920
 7064 07dc 3000C000 		.word	12582960
 7065 07e0 C0003000 		.word	3145920
 7066 07e4 4000B000 		.word	11534400
 7067 07e8 C0003000 		.word	3145920
 7068 07ec 5000A000 		.word	10485840
 7069 07f0 C0003000 		.word	3145920
 7070 07f4 60009000 		.word	9437280
 7071 07f8 C0003000 		.word	3145920
 7072 07fc 70008000 		.word	8388720
 7073              		.section	.rodata._ZN4metaL8generateIL_Z12BSRR_commandIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2EL
 7074              		.align	2
 7077              	_ZN4metaL8generateIL_Z12BSRR_commandIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5EEENS3_ILS4_2ELi
 7078 0000 0000F000 		.word	15728640
 7079 0004 0000F000 		.word	15728640
 7080 0008 0000F000 		.word	15728640
 7081 000c 1000E000 		.word	14680080
 7082 0010 0000F000 		.word	15728640
 7083 0014 2000D000 		.word	13631520
 7084 0018 0000F000 		.word	15728640
 7085 001c 3000C000 		.word	12582960
 7086 0020 0000F000 		.word	15728640
 7087 0024 4000B000 		.word	11534400
 7088 0028 0000F000 		.word	15728640
 7089 002c 5000A000 		.word	10485840
 7090 0030 0000F000 		.word	15728640
 7091 0034 60009000 		.word	9437280
 7092 0038 0000F000 		.word	15728640
 7093 003c 70008000 		.word	8388720
 7094 0040 0000F000 		.word	15728640
 7095 0044 80007000 		.word	7340160
 7096 0048 0000F000 		.word	15728640
ARM GAS  /tmp/ccFxkDJm.s 			page 192


 7097 004c 90006000 		.word	6291600
 7098 0050 0000F000 		.word	15728640
 7099 0054 A0005000 		.word	5243040
 7100 0058 0000F000 		.word	15728640
 7101 005c B0004000 		.word	4194480
 7102 0060 0000F000 		.word	15728640
 7103 0064 C0003000 		.word	3145920
 7104 0068 0000F000 		.word	15728640
 7105 006c D0002000 		.word	2097360
 7106 0070 0000F000 		.word	15728640
 7107 0074 E0001000 		.word	1048800
 7108 0078 0000F000 		.word	15728640
 7109 007c F0000000 		.word	240
 7110 0080 1000E000 		.word	14680080
 7111 0084 0000F000 		.word	15728640
 7112 0088 1000E000 		.word	14680080
 7113 008c 1000E000 		.word	14680080
 7114 0090 1000E000 		.word	14680080
 7115 0094 2000D000 		.word	13631520
 7116 0098 1000E000 		.word	14680080
 7117 009c 3000C000 		.word	12582960
 7118 00a0 1000E000 		.word	14680080
 7119 00a4 4000B000 		.word	11534400
 7120 00a8 1000E000 		.word	14680080
 7121 00ac 5000A000 		.word	10485840
 7122 00b0 1000E000 		.word	14680080
 7123 00b4 60009000 		.word	9437280
 7124 00b8 1000E000 		.word	14680080
 7125 00bc 70008000 		.word	8388720
 7126 00c0 1000E000 		.word	14680080
 7127 00c4 80007000 		.word	7340160
 7128 00c8 1000E000 		.word	14680080
 7129 00cc 90006000 		.word	6291600
 7130 00d0 1000E000 		.word	14680080
 7131 00d4 A0005000 		.word	5243040
 7132 00d8 1000E000 		.word	14680080
 7133 00dc B0004000 		.word	4194480
 7134 00e0 1000E000 		.word	14680080
 7135 00e4 C0003000 		.word	3145920
 7136 00e8 1000E000 		.word	14680080
 7137 00ec D0002000 		.word	2097360
 7138 00f0 1000E000 		.word	14680080
 7139 00f4 E0001000 		.word	1048800
 7140 00f8 1000E000 		.word	14680080
 7141 00fc F0000000 		.word	240
 7142 0100 2000D000 		.word	13631520
 7143 0104 0000F000 		.word	15728640
 7144 0108 2000D000 		.word	13631520
 7145 010c 1000E000 		.word	14680080
 7146 0110 2000D000 		.word	13631520
 7147 0114 2000D000 		.word	13631520
 7148 0118 2000D000 		.word	13631520
 7149 011c 3000C000 		.word	12582960
 7150 0120 2000D000 		.word	13631520
 7151 0124 4000B000 		.word	11534400
 7152 0128 2000D000 		.word	13631520
 7153 012c 5000A000 		.word	10485840
ARM GAS  /tmp/ccFxkDJm.s 			page 193


 7154 0130 2000D000 		.word	13631520
 7155 0134 60009000 		.word	9437280
 7156 0138 2000D000 		.word	13631520
 7157 013c 70008000 		.word	8388720
 7158 0140 2000D000 		.word	13631520
 7159 0144 80007000 		.word	7340160
 7160 0148 2000D000 		.word	13631520
 7161 014c 90006000 		.word	6291600
 7162 0150 2000D000 		.word	13631520
 7163 0154 A0005000 		.word	5243040
 7164 0158 2000D000 		.word	13631520
 7165 015c B0004000 		.word	4194480
 7166 0160 2000D000 		.word	13631520
 7167 0164 C0003000 		.word	3145920
 7168 0168 2000D000 		.word	13631520
 7169 016c D0002000 		.word	2097360
 7170 0170 2000D000 		.word	13631520
 7171 0174 E0001000 		.word	1048800
 7172 0178 2000D000 		.word	13631520
 7173 017c F0000000 		.word	240
 7174 0180 3000C000 		.word	12582960
 7175 0184 0000F000 		.word	15728640
 7176 0188 3000C000 		.word	12582960
 7177 018c 1000E000 		.word	14680080
 7178 0190 3000C000 		.word	12582960
 7179 0194 2000D000 		.word	13631520
 7180 0198 3000C000 		.word	12582960
 7181 019c 3000C000 		.word	12582960
 7182 01a0 3000C000 		.word	12582960
 7183 01a4 4000B000 		.word	11534400
 7184 01a8 3000C000 		.word	12582960
 7185 01ac 5000A000 		.word	10485840
 7186 01b0 3000C000 		.word	12582960
 7187 01b4 60009000 		.word	9437280
 7188 01b8 3000C000 		.word	12582960
 7189 01bc 70008000 		.word	8388720
 7190 01c0 3000C000 		.word	12582960
 7191 01c4 80007000 		.word	7340160
 7192 01c8 3000C000 		.word	12582960
 7193 01cc 90006000 		.word	6291600
 7194 01d0 3000C000 		.word	12582960
 7195 01d4 A0005000 		.word	5243040
 7196 01d8 3000C000 		.word	12582960
 7197 01dc B0004000 		.word	4194480
 7198 01e0 3000C000 		.word	12582960
 7199 01e4 C0003000 		.word	3145920
 7200 01e8 3000C000 		.word	12582960
 7201 01ec D0002000 		.word	2097360
 7202 01f0 3000C000 		.word	12582960
 7203 01f4 E0001000 		.word	1048800
 7204 01f8 3000C000 		.word	12582960
 7205 01fc F0000000 		.word	240
 7206 0200 4000B000 		.word	11534400
 7207 0204 0000F000 		.word	15728640
 7208 0208 4000B000 		.word	11534400
 7209 020c 1000E000 		.word	14680080
 7210 0210 4000B000 		.word	11534400
ARM GAS  /tmp/ccFxkDJm.s 			page 194


 7211 0214 2000D000 		.word	13631520
 7212 0218 4000B000 		.word	11534400
 7213 021c 3000C000 		.word	12582960
 7214 0220 4000B000 		.word	11534400
 7215 0224 4000B000 		.word	11534400
 7216 0228 4000B000 		.word	11534400
 7217 022c 5000A000 		.word	10485840
 7218 0230 4000B000 		.word	11534400
 7219 0234 60009000 		.word	9437280
 7220 0238 4000B000 		.word	11534400
 7221 023c 70008000 		.word	8388720
 7222 0240 4000B000 		.word	11534400
 7223 0244 80007000 		.word	7340160
 7224 0248 4000B000 		.word	11534400
 7225 024c 90006000 		.word	6291600
 7226 0250 4000B000 		.word	11534400
 7227 0254 A0005000 		.word	5243040
 7228 0258 4000B000 		.word	11534400
 7229 025c B0004000 		.word	4194480
 7230 0260 4000B000 		.word	11534400
 7231 0264 C0003000 		.word	3145920
 7232 0268 4000B000 		.word	11534400
 7233 026c D0002000 		.word	2097360
 7234 0270 4000B000 		.word	11534400
 7235 0274 E0001000 		.word	1048800
 7236 0278 4000B000 		.word	11534400
 7237 027c F0000000 		.word	240
 7238 0280 5000A000 		.word	10485840
 7239 0284 0000F000 		.word	15728640
 7240 0288 5000A000 		.word	10485840
 7241 028c 1000E000 		.word	14680080
 7242 0290 5000A000 		.word	10485840
 7243 0294 2000D000 		.word	13631520
 7244 0298 5000A000 		.word	10485840
 7245 029c 3000C000 		.word	12582960
 7246 02a0 5000A000 		.word	10485840
 7247 02a4 4000B000 		.word	11534400
 7248 02a8 5000A000 		.word	10485840
 7249 02ac 5000A000 		.word	10485840
 7250 02b0 5000A000 		.word	10485840
 7251 02b4 60009000 		.word	9437280
 7252 02b8 5000A000 		.word	10485840
 7253 02bc 70008000 		.word	8388720
 7254 02c0 5000A000 		.word	10485840
 7255 02c4 80007000 		.word	7340160
 7256 02c8 5000A000 		.word	10485840
 7257 02cc 90006000 		.word	6291600
 7258 02d0 5000A000 		.word	10485840
 7259 02d4 A0005000 		.word	5243040
 7260 02d8 5000A000 		.word	10485840
 7261 02dc B0004000 		.word	4194480
 7262 02e0 5000A000 		.word	10485840
 7263 02e4 C0003000 		.word	3145920
 7264 02e8 5000A000 		.word	10485840
 7265 02ec D0002000 		.word	2097360
 7266 02f0 5000A000 		.word	10485840
 7267 02f4 E0001000 		.word	1048800
ARM GAS  /tmp/ccFxkDJm.s 			page 195


 7268 02f8 5000A000 		.word	10485840
 7269 02fc F0000000 		.word	240
 7270 0300 60009000 		.word	9437280
 7271 0304 0000F000 		.word	15728640
 7272 0308 60009000 		.word	9437280
 7273 030c 1000E000 		.word	14680080
 7274 0310 60009000 		.word	9437280
 7275 0314 2000D000 		.word	13631520
 7276 0318 60009000 		.word	9437280
 7277 031c 3000C000 		.word	12582960
 7278 0320 60009000 		.word	9437280
 7279 0324 4000B000 		.word	11534400
 7280 0328 60009000 		.word	9437280
 7281 032c 5000A000 		.word	10485840
 7282 0330 60009000 		.word	9437280
 7283 0334 60009000 		.word	9437280
 7284 0338 60009000 		.word	9437280
 7285 033c 70008000 		.word	8388720
 7286 0340 60009000 		.word	9437280
 7287 0344 80007000 		.word	7340160
 7288 0348 60009000 		.word	9437280
 7289 034c 90006000 		.word	6291600
 7290 0350 60009000 		.word	9437280
 7291 0354 A0005000 		.word	5243040
 7292 0358 60009000 		.word	9437280
 7293 035c B0004000 		.word	4194480
 7294 0360 60009000 		.word	9437280
 7295 0364 C0003000 		.word	3145920
 7296 0368 60009000 		.word	9437280
 7297 036c D0002000 		.word	2097360
 7298 0370 60009000 		.word	9437280
 7299 0374 E0001000 		.word	1048800
 7300 0378 60009000 		.word	9437280
 7301 037c F0000000 		.word	240
 7302 0380 70008000 		.word	8388720
 7303 0384 0000F000 		.word	15728640
 7304 0388 70008000 		.word	8388720
 7305 038c 1000E000 		.word	14680080
 7306 0390 70008000 		.word	8388720
 7307 0394 2000D000 		.word	13631520
 7308 0398 70008000 		.word	8388720
 7309 039c 3000C000 		.word	12582960
 7310 03a0 70008000 		.word	8388720
 7311 03a4 4000B000 		.word	11534400
 7312 03a8 70008000 		.word	8388720
 7313 03ac 5000A000 		.word	10485840
 7314 03b0 70008000 		.word	8388720
 7315 03b4 60009000 		.word	9437280
 7316 03b8 70008000 		.word	8388720
 7317 03bc 70008000 		.word	8388720
 7318 03c0 70008000 		.word	8388720
 7319 03c4 80007000 		.word	7340160
 7320 03c8 70008000 		.word	8388720
 7321 03cc 90006000 		.word	6291600
 7322 03d0 70008000 		.word	8388720
 7323 03d4 A0005000 		.word	5243040
 7324 03d8 70008000 		.word	8388720
ARM GAS  /tmp/ccFxkDJm.s 			page 196


 7325 03dc B0004000 		.word	4194480
 7326 03e0 70008000 		.word	8388720
 7327 03e4 C0003000 		.word	3145920
 7328 03e8 70008000 		.word	8388720
 7329 03ec D0002000 		.word	2097360
 7330 03f0 70008000 		.word	8388720
 7331 03f4 E0001000 		.word	1048800
 7332 03f8 70008000 		.word	8388720
 7333 03fc F0000000 		.word	240
 7334 0400 80007000 		.word	7340160
 7335 0404 0000F000 		.word	15728640
 7336 0408 80007000 		.word	7340160
 7337 040c 1000E000 		.word	14680080
 7338 0410 80007000 		.word	7340160
 7339 0414 2000D000 		.word	13631520
 7340 0418 80007000 		.word	7340160
 7341 041c 3000C000 		.word	12582960
 7342 0420 80007000 		.word	7340160
 7343 0424 4000B000 		.word	11534400
 7344 0428 80007000 		.word	7340160
 7345 042c 5000A000 		.word	10485840
 7346 0430 80007000 		.word	7340160
 7347 0434 60009000 		.word	9437280
 7348 0438 80007000 		.word	7340160
 7349 043c 70008000 		.word	8388720
 7350 0440 80007000 		.word	7340160
 7351 0444 80007000 		.word	7340160
 7352 0448 80007000 		.word	7340160
 7353 044c 90006000 		.word	6291600
 7354 0450 80007000 		.word	7340160
 7355 0454 A0005000 		.word	5243040
 7356 0458 80007000 		.word	7340160
 7357 045c B0004000 		.word	4194480
 7358 0460 80007000 		.word	7340160
 7359 0464 C0003000 		.word	3145920
 7360 0468 80007000 		.word	7340160
 7361 046c D0002000 		.word	2097360
 7362 0470 80007000 		.word	7340160
 7363 0474 E0001000 		.word	1048800
 7364 0478 80007000 		.word	7340160
 7365 047c F0000000 		.word	240
 7366 0480 90006000 		.word	6291600
 7367 0484 0000F000 		.word	15728640
 7368 0488 90006000 		.word	6291600
 7369 048c 1000E000 		.word	14680080
 7370 0490 90006000 		.word	6291600
 7371 0494 2000D000 		.word	13631520
 7372 0498 90006000 		.word	6291600
 7373 049c 3000C000 		.word	12582960
 7374 04a0 90006000 		.word	6291600
 7375 04a4 4000B000 		.word	11534400
 7376 04a8 90006000 		.word	6291600
 7377 04ac 5000A000 		.word	10485840
 7378 04b0 90006000 		.word	6291600
 7379 04b4 60009000 		.word	9437280
 7380 04b8 90006000 		.word	6291600
 7381 04bc 70008000 		.word	8388720
ARM GAS  /tmp/ccFxkDJm.s 			page 197


 7382 04c0 90006000 		.word	6291600
 7383 04c4 80007000 		.word	7340160
 7384 04c8 90006000 		.word	6291600
 7385 04cc 90006000 		.word	6291600
 7386 04d0 90006000 		.word	6291600
 7387 04d4 A0005000 		.word	5243040
 7388 04d8 90006000 		.word	6291600
 7389 04dc B0004000 		.word	4194480
 7390 04e0 90006000 		.word	6291600
 7391 04e4 C0003000 		.word	3145920
 7392 04e8 90006000 		.word	6291600
 7393 04ec D0002000 		.word	2097360
 7394 04f0 90006000 		.word	6291600
 7395 04f4 E0001000 		.word	1048800
 7396 04f8 90006000 		.word	6291600
 7397 04fc F0000000 		.word	240
 7398 0500 A0005000 		.word	5243040
 7399 0504 0000F000 		.word	15728640
 7400 0508 A0005000 		.word	5243040
 7401 050c 1000E000 		.word	14680080
 7402 0510 A0005000 		.word	5243040
 7403 0514 2000D000 		.word	13631520
 7404 0518 A0005000 		.word	5243040
 7405 051c 3000C000 		.word	12582960
 7406 0520 A0005000 		.word	5243040
 7407 0524 4000B000 		.word	11534400
 7408 0528 A0005000 		.word	5243040
 7409 052c 5000A000 		.word	10485840
 7410 0530 A0005000 		.word	5243040
 7411 0534 60009000 		.word	9437280
 7412 0538 A0005000 		.word	5243040
 7413 053c 70008000 		.word	8388720
 7414 0540 A0005000 		.word	5243040
 7415 0544 80007000 		.word	7340160
 7416 0548 A0005000 		.word	5243040
 7417 054c 90006000 		.word	6291600
 7418 0550 A0005000 		.word	5243040
 7419 0554 A0005000 		.word	5243040
 7420 0558 A0005000 		.word	5243040
 7421 055c B0004000 		.word	4194480
 7422 0560 A0005000 		.word	5243040
 7423 0564 C0003000 		.word	3145920
 7424 0568 A0005000 		.word	5243040
 7425 056c D0002000 		.word	2097360
 7426 0570 A0005000 		.word	5243040
 7427 0574 E0001000 		.word	1048800
 7428 0578 A0005000 		.word	5243040
 7429 057c F0000000 		.word	240
 7430 0580 B0004000 		.word	4194480
 7431 0584 0000F000 		.word	15728640
 7432 0588 B0004000 		.word	4194480
 7433 058c 1000E000 		.word	14680080
 7434 0590 B0004000 		.word	4194480
 7435 0594 2000D000 		.word	13631520
 7436 0598 B0004000 		.word	4194480
 7437 059c 3000C000 		.word	12582960
 7438 05a0 B0004000 		.word	4194480
ARM GAS  /tmp/ccFxkDJm.s 			page 198


 7439 05a4 4000B000 		.word	11534400
 7440 05a8 B0004000 		.word	4194480
 7441 05ac 5000A000 		.word	10485840
 7442 05b0 B0004000 		.word	4194480
 7443 05b4 60009000 		.word	9437280
 7444 05b8 B0004000 		.word	4194480
 7445 05bc 70008000 		.word	8388720
 7446 05c0 B0004000 		.word	4194480
 7447 05c4 80007000 		.word	7340160
 7448 05c8 B0004000 		.word	4194480
 7449 05cc 90006000 		.word	6291600
 7450 05d0 B0004000 		.word	4194480
 7451 05d4 A0005000 		.word	5243040
 7452 05d8 B0004000 		.word	4194480
 7453 05dc B0004000 		.word	4194480
 7454 05e0 B0004000 		.word	4194480
 7455 05e4 C0003000 		.word	3145920
 7456 05e8 B0004000 		.word	4194480
 7457 05ec D0002000 		.word	2097360
 7458 05f0 B0004000 		.word	4194480
 7459 05f4 E0001000 		.word	1048800
 7460 05f8 B0004000 		.word	4194480
 7461 05fc F0000000 		.word	240
 7462 0600 C0003000 		.word	3145920
 7463 0604 0000F000 		.word	15728640
 7464 0608 C0003000 		.word	3145920
 7465 060c 1000E000 		.word	14680080
 7466 0610 C0003000 		.word	3145920
 7467 0614 2000D000 		.word	13631520
 7468 0618 C0003000 		.word	3145920
 7469 061c 3000C000 		.word	12582960
 7470 0620 C0003000 		.word	3145920
 7471 0624 4000B000 		.word	11534400
 7472 0628 C0003000 		.word	3145920
 7473 062c 5000A000 		.word	10485840
 7474 0630 C0003000 		.word	3145920
 7475 0634 60009000 		.word	9437280
 7476 0638 C0003000 		.word	3145920
 7477 063c 70008000 		.word	8388720
 7478 0640 C0003000 		.word	3145920
 7479 0644 80007000 		.word	7340160
 7480 0648 C0003000 		.word	3145920
 7481 064c 90006000 		.word	6291600
 7482 0650 C0003000 		.word	3145920
 7483 0654 A0005000 		.word	5243040
 7484 0658 C0003000 		.word	3145920
 7485 065c B0004000 		.word	4194480
 7486 0660 C0003000 		.word	3145920
 7487 0664 C0003000 		.word	3145920
 7488 0668 C0003000 		.word	3145920
 7489 066c D0002000 		.word	2097360
 7490 0670 C0003000 		.word	3145920
 7491 0674 E0001000 		.word	1048800
 7492 0678 C0003000 		.word	3145920
 7493 067c F0000000 		.word	240
 7494 0680 D0002000 		.word	2097360
 7495 0684 0000F000 		.word	15728640
ARM GAS  /tmp/ccFxkDJm.s 			page 199


 7496 0688 D0002000 		.word	2097360
 7497 068c 1000E000 		.word	14680080
 7498 0690 D0002000 		.word	2097360
 7499 0694 2000D000 		.word	13631520
 7500 0698 D0002000 		.word	2097360
 7501 069c 3000C000 		.word	12582960
 7502 06a0 D0002000 		.word	2097360
 7503 06a4 4000B000 		.word	11534400
 7504 06a8 D0002000 		.word	2097360
 7505 06ac 5000A000 		.word	10485840
 7506 06b0 D0002000 		.word	2097360
 7507 06b4 60009000 		.word	9437280
 7508 06b8 D0002000 		.word	2097360
 7509 06bc 70008000 		.word	8388720
 7510 06c0 D0002000 		.word	2097360
 7511 06c4 80007000 		.word	7340160
 7512 06c8 D0002000 		.word	2097360
 7513 06cc 90006000 		.word	6291600
 7514 06d0 D0002000 		.word	2097360
 7515 06d4 A0005000 		.word	5243040
 7516 06d8 D0002000 		.word	2097360
 7517 06dc B0004000 		.word	4194480
 7518 06e0 D0002000 		.word	2097360
 7519 06e4 C0003000 		.word	3145920
 7520 06e8 D0002000 		.word	2097360
 7521 06ec D0002000 		.word	2097360
 7522 06f0 D0002000 		.word	2097360
 7523 06f4 E0001000 		.word	1048800
 7524 06f8 D0002000 		.word	2097360
 7525 06fc F0000000 		.word	240
 7526 0700 E0001000 		.word	1048800
 7527 0704 0000F000 		.word	15728640
 7528 0708 E0001000 		.word	1048800
 7529 070c 1000E000 		.word	14680080
 7530 0710 E0001000 		.word	1048800
 7531 0714 2000D000 		.word	13631520
 7532 0718 E0001000 		.word	1048800
 7533 071c 3000C000 		.word	12582960
 7534 0720 E0001000 		.word	1048800
 7535 0724 4000B000 		.word	11534400
 7536 0728 E0001000 		.word	1048800
 7537 072c 5000A000 		.word	10485840
 7538 0730 E0001000 		.word	1048800
 7539 0734 60009000 		.word	9437280
 7540 0738 E0001000 		.word	1048800
 7541 073c 70008000 		.word	8388720
 7542 0740 E0001000 		.word	1048800
 7543 0744 80007000 		.word	7340160
 7544 0748 E0001000 		.word	1048800
 7545 074c 90006000 		.word	6291600
 7546 0750 E0001000 		.word	1048800
 7547 0754 A0005000 		.word	5243040
 7548 0758 E0001000 		.word	1048800
 7549 075c B0004000 		.word	4194480
 7550 0760 E0001000 		.word	1048800
 7551 0764 C0003000 		.word	3145920
 7552 0768 E0001000 		.word	1048800
ARM GAS  /tmp/ccFxkDJm.s 			page 200


 7553 076c D0002000 		.word	2097360
 7554 0770 E0001000 		.word	1048800
 7555 0774 E0001000 		.word	1048800
 7556 0778 E0001000 		.word	1048800
 7557 077c F0000000 		.word	240
 7558 0780 F0000000 		.word	240
 7559 0784 0000F000 		.word	15728640
 7560 0788 F0000000 		.word	240
 7561 078c 1000E000 		.word	14680080
 7562 0790 F0000000 		.word	240
 7563 0794 2000D000 		.word	13631520
 7564 0798 F0000000 		.word	240
 7565 079c 3000C000 		.word	12582960
 7566 07a0 F0000000 		.word	240
 7567 07a4 4000B000 		.word	11534400
 7568 07a8 F0000000 		.word	240
 7569 07ac 5000A000 		.word	10485840
 7570 07b0 F0000000 		.word	240
 7571 07b4 60009000 		.word	9437280
 7572 07b8 F0000000 		.word	240
 7573 07bc 70008000 		.word	8388720
 7574 07c0 F0000000 		.word	240
 7575 07c4 80007000 		.word	7340160
 7576 07c8 F0000000 		.word	240
 7577 07cc 90006000 		.word	6291600
 7578 07d0 F0000000 		.word	240
 7579 07d4 A0005000 		.word	5243040
 7580 07d8 F0000000 		.word	240
 7581 07dc B0004000 		.word	4194480
 7582 07e0 F0000000 		.word	240
 7583 07e4 C0003000 		.word	3145920
 7584 07e8 F0000000 		.word	240
 7585 07ec D0002000 		.word	2097360
 7586 07f0 F0000000 		.word	240
 7587 07f4 E0001000 		.word	1048800
 7588 07f8 F0000000 		.word	240
 7589 07fc F0000000 		.word	240
 7590              		.section	.rodata._ZTV7HD44780,"a",%progbits
 7591              		.align	2
 7592              		.set	.LANCHOR1,. + 0
 7595              	_ZTV7HD44780:
 7596 0000 00000000 		.word	0
 7597 0004 00000000 		.word	0
 7598 0008 00000000 		.word	_ZN7HD447806notifyEv
 7599              		.text
 7600              	.Letext0:
 7601              		.file 24 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/ty
 7602              		.file 25 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/ar
 7603              		.file 26 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/cs
 7604              		.file 27 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/cs
 7605              		.file 28 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bi
 7606              		.file 29 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/ut
 7607              		.file 30 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/cw
 7608              		.file 31 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/ne
 7609              		.file 32 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bi
 7610              		.file 33 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/de
 7611              		.file 34 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/cl
ARM GAS  /tmp/ccFxkDJm.s 			page 201


 7612              		.file 35 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/li
 7613              		.file 36 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bi
 7614              		.file 37 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/cs
 7615              		.file 38 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/cs
 7616              		.file 39 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/sy
 7617              		.file 40 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/cw
 7618              		.file 41 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/is
 7619              		.file 42 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bi
 7620              		.file 43 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bi
 7621              		.file 44 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bi
 7622              		.file 45 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/cs
 7623              		.file 46 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/os
 7624              		.file 47 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bi
 7625              		.file 48 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bi
 7626              		.file 49 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/bi
 7627              		.file 50 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/ex
 7628              		.file 51 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/ex
 7629              		.file 52 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/ex
 7630              		.file 53 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/includ
 7631              		.file 54 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_def
 7632              		.file 55 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.
 7633              		.file 56 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdint.h"
 7634              		.file 57 "<built-in>"
 7635              		.file 58 "../../src/periph/periph.h"
 7636              		.file 59 "../../src/bits/bits_rcc_f1.h"
 7637              		.file 60 "../../src/bits/bits_flash_f1.h"
 7638              		.file 61 "../../src/bits/bits_gpio_f1.h"
 7639              		.file 62 "../../src/bits/bits_afio_f1.h"
 7640              		.file 63 "../../src/bits/bits_systick_f0_f4.h"
 7641              		.file 64 "../../src/pins.h"
 7642              		.file 65 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 7643              		.file 66 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h
 7644              		.file 67 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 7645              		.file 68 "../../STM32F1_files/CMSIS/core_cm3.h"
 7646              		.file 69 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/includ
 7647              		.file 70 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/wchar.h"
 7648              		.file 71 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/locale.h"
 7649              		.file 72 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/ctype.h"
 7650              		.file 73 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 7651              		.file 74 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdio.h"
 7652              		.file 75 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/errno.h"
 7653              		.file 76 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/wctype.h"
 7654              		.file 77 "../../src/meta.h"
 7655              		.file 78 "/home/slonegd/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/string.h"
 7656              		.file 79 "../../src/periph/init_clock_f1.h"
ARM GAS  /tmp/ccFxkDJm.s 			page 202


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccFxkDJm.s:16     .text._ZN5Timer6notifyEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:23     .text._ZN5Timer6notifyEv:0000000000000000 _ZN5Timer6notifyEv
     /tmp/ccFxkDJm.s:42     .text._ZN13Select_screenILi6EE4initEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:49     .text._ZN13Select_screenILi6EE4initEv:0000000000000000 _ZN13Select_screenILi6EE4initEv
     /tmp/ccFxkDJm.s:65     .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_E4callEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:72     .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_E4callEv:0000000000000000 _ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_E4callEv
     /tmp/ccFxkDJm.s:88     .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE5_E4callEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:95     .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE5_E4callEv:0000000000000000 _ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE5_E4callEv
     /tmp/ccFxkDJm.s:110    .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_E4callEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:117    .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_E4callEv:0000000000000000 _ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_E4callEv
     /tmp/ccFxkDJm.s:132    .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_E4callEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:139    .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_E4callEv:0000000000000000 _ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_E4callEv
     /tmp/ccFxkDJm.s:154    .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_E4callEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:161    .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_E4callEv:0000000000000000 _ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_E4callEv
     /tmp/ccFxkDJm.s:176    .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_E4callEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:183    .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_E4callEv:0000000000000000 _ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_E4callEv
     /tmp/ccFxkDJm.s:198    .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_E4callEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:205    .text._ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_E4callEv:0000000000000000 _ZN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_E4callEv
     /tmp/ccFxkDJm.s:220    .text._ZN5Delay2usEm.part.9:0000000000000000 $t
     /tmp/ccFxkDJm.s:226    .text._ZN5Delay2usEm.part.9:0000000000000000 _ZN5Delay2usEm.part.9
     /tmp/ccFxkDJm.s:349    .text._ZN5Delay2usEm.part.9:0000000000000050 $d
     /tmp/ccFxkDJm.s:355    .text._ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_.isra.14.constprop.23:0000000000000000 $t
     /tmp/ccFxkDJm.s:361    .text._ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_.isra.14.constprop.23:0000000000000000 _ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_.isra.14.constprop.23
     /tmp/ccFxkDJm.s:393    .text._ZN3mcu5FLASH6unlockEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:400    .text._ZN3mcu5FLASH6unlockEv:0000000000000000 _ZN3mcu5FLASH6unlockEv
     /tmp/ccFxkDJm.s:431    .text._ZN3mcu5FLASH6unlockEv:0000000000000010 $d
     /tmp/ccFxkDJm.s:437    .text._ZNSt11char_traitsIcE6lengthEPKc:0000000000000000 $t
     /tmp/ccFxkDJm.s:444    .text._ZNSt11char_traitsIcE6lengthEPKc:0000000000000000 _ZNSt11char_traitsIcE6lengthEPKc
     /tmp/ccFxkDJm.s:467    .text._ZN3Pin3setEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:474    .text._ZN3Pin3setEv:0000000000000000 _ZN3Pin3setEv
     /tmp/ccFxkDJm.s:512    .text._ZN3Pin5clearEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:519    .text._ZN3Pin5clearEv:0000000000000000 _ZN3Pin5clearEv
     /tmp/ccFxkDJm.s:565    .text._ZZN7HD447804initEvENKUlvE_clEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:571    .text._ZZN7HD447804initEvENKUlvE_clEv:0000000000000000 _ZZN7HD447804initEvENKUlvE_clEv
     /tmp/ccFxkDJm.s:641    .text._ZZN7HD447804initEvENKUlmE0_clEm:0000000000000000 $t
     /tmp/ccFxkDJm.s:647    .text._ZZN7HD447804initEvENKUlmE0_clEm:0000000000000000 _ZZN7HD447804initEvENKUlmE0_clEm
     /tmp/ccFxkDJm.s:737    .text._ZN7HD447806notifyEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:744    .text._ZN7HD447806notifyEv:0000000000000000 _ZN7HD447806notifyEv
     /tmp/ccFxkDJm.s:917    .text._ZN7HD447806notifyEv:0000000000000074 $d
     /tmp/ccFxkDJm.s:6447   .rodata._ZN7HD447808Symbol_n5tableE:0000000000000000 _ZN7HD447808Symbol_n5tableE
     /tmp/ccFxkDJm.s:924    .text._ZN3Pin6is_setEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:931    .text._ZN3Pin6is_setEv:0000000000000000 _ZN3Pin6is_setEv
     /tmp/ccFxkDJm.s:970    .text._ZN9Publisher6notifyEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:977    .text._ZN9Publisher6notifyEv:0000000000000000 _ZN9Publisher6notifyEv
     /tmp/ccFxkDJm.s:1024   .text._ZN11TickUpdater9interruptEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:1031   .text._ZN11TickUpdater9interruptEv:0000000000000000 _ZN11TickUpdater9interruptEv
     /tmp/ccFxkDJm.s:1081   .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccFxkDJm.s:1088   .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccFxkDJm.s:1109   .text.SysTick_Handler:000000000000000c $d
     /tmp/ccFxkDJm.s:1114   .text._ZN5Timer5eventEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:1121   .text._ZN5Timer5eventEv:0000000000000000 _ZN5Timer5eventEv
     /tmp/ccFxkDJm.s:1149   .text._ZN5Timer4doneEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:1156   .text._ZN5Timer4doneEv:0000000000000000 _ZN5Timer4doneEv
     /tmp/ccFxkDJm.s:1178   .text._ZN5Timer7isCountEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:1185   .text._ZN5Timer7isCountEv:0000000000000000 _ZN5Timer7isCountEv
ARM GAS  /tmp/ccFxkDJm.s 			page 203


     /tmp/ccFxkDJm.s:1202   .text._ZN5Timer10timePassedEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:1209   .text._ZN5Timer10timePassedEv:0000000000000000 _ZN5Timer10timePassedEv
     /tmp/ccFxkDJm.s:1226   .text._ZN5Timer8timeLeftEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:1233   .text._ZN5Timer8timeLeftEv:0000000000000000 _ZN5Timer8timeLeftEv
     /tmp/ccFxkDJm.s:1252   .text._ZN5Timer9isGreaterEm:0000000000000000 $t
     /tmp/ccFxkDJm.s:1259   .text._ZN5Timer9isGreaterEm:0000000000000000 _ZN5Timer9isGreaterEm
     /tmp/ccFxkDJm.s:1279   .text._ZN14TickSubscriber16tick_unsubscribeEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:1286   .text._ZN14TickSubscriber16tick_unsubscribeEv:0000000000000000 _ZN14TickSubscriber16tick_unsubscribeEv
     /tmp/ccFxkDJm.s:1377   .text._ZN14TickSubscriber16tick_unsubscribeEv:000000000000003c $d
     /tmp/ccFxkDJm.s:1387   .text._ZN3mcu6Button6notifyEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:1394   .text._ZN3mcu6Button6notifyEv:0000000000000000 _ZN3mcu6Button6notifyEv
     /tmp/ccFxkDJm.s:1498   .text._ZN5Timer4stopEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:1505   .text._ZN5Timer4stopEv:0000000000000000 _ZN5Timer4stopEv
     /tmp/ccFxkDJm.s:1532   .text._ZN5Timer5pauseEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:1539   .text._ZN5Timer5pauseEv:0000000000000000 _ZN5Timer5pauseEv
     /tmp/ccFxkDJm.s:1560   .text._ZN14TickSubscriber14tick_subscribeEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:1567   .text._ZN14TickSubscriber14tick_subscribeEv:0000000000000000 _ZN14TickSubscriber14tick_subscribeEv
     /tmp/ccFxkDJm.s:1621   .text._ZN14TickSubscriber14tick_subscribeEv:0000000000000024 $d
     /tmp/ccFxkDJm.s:1626   .text._ZN5Timer5startEm:0000000000000000 $t
     /tmp/ccFxkDJm.s:1633   .text._ZN5Timer5startEm:0000000000000000 _ZN5Timer5startEm
     /tmp/ccFxkDJm.s:1657   .text._ZN5Timer5startEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:1664   .text._ZN5Timer5startEv:0000000000000000 _ZN5Timer5startEv
     /tmp/ccFxkDJm.s:1685   .text._ZN5Delay2msEm:0000000000000000 $t
     /tmp/ccFxkDJm.s:1692   .text._ZN5Delay2msEm:0000000000000000 _ZN5Delay2msEm
     /tmp/ccFxkDJm.s:1762   .text._Z11block_delayj:0000000000000000 $t
     /tmp/ccFxkDJm.s:1769   .text._Z11block_delayj:0000000000000000 _Z11block_delayj
     /tmp/ccFxkDJm.s:1796   .text._ZN7HD447804initEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:1803   .text._ZN7HD447804initEv:0000000000000000 _ZN7HD447804initEv
     /tmp/ccFxkDJm.s:2082   .text._ZN7HD447804initEv:00000000000000f8 $d
     /tmp/ccFxkDJm.s:6080   .rodata._ZTV5Timer:0000000000000000 _ZTV5Timer
     /tmp/ccFxkDJm.s:2087   .text._ZN3mcu6Button4pushEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:2094   .text._ZN3mcu6Button4pushEv:0000000000000000 _ZN3mcu6Button4pushEv
     /tmp/ccFxkDJm.s:2165   .text._ZN3mcu6Button6is_setEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:2172   .text._ZN3mcu6Button6is_setEv:0000000000000000 _ZN3mcu6Button6is_setEv
     /tmp/ccFxkDJm.s:2223   .text._ZN3mcu6Button4Some5clickEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:2230   .text._ZN3mcu6Button4Some5clickEv:0000000000000000 _ZN3mcu6Button4Some5clickEv
     /tmp/ccFxkDJm.s:2337   .text._ZN13String_bufferlsERFRS_S0_E:0000000000000000 $t
     /tmp/ccFxkDJm.s:2344   .text._ZN13String_bufferlsERFRS_S0_E:0000000000000000 _ZN13String_bufferlsERFRS_S0_E
     /tmp/ccFxkDJm.s:2367   .text._ZN13String_buffer4lineEj:0000000000000000 $t
     /tmp/ccFxkDJm.s:2374   .text._ZN13String_buffer4lineEj:0000000000000000 _ZN13String_buffer4lineEj
     /tmp/ccFxkDJm.s:2399   .text._ZN13String_buffer5widthEj:0000000000000000 $t
     /tmp/ccFxkDJm.s:2406   .text._ZN13String_buffer5widthEj:0000000000000000 _ZN13String_buffer5widthEj
     /tmp/ccFxkDJm.s:2423   .text._ZN13String_buffer6cursorEj:0000000000000000 $t
     /tmp/ccFxkDJm.s:2430   .text._ZN13String_buffer6cursorEj:0000000000000000 _ZN13String_buffer6cursorEj
     /tmp/ccFxkDJm.s:2468   .text._ZN13String_buffer6centerEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:2475   .text._ZN13String_buffer6centerEv:0000000000000000 _ZN13String_buffer6centerEv
     /tmp/ccFxkDJm.s:2493   .text.init_clock:0000000000000000 $t
     /tmp/ccFxkDJm.s:2500   .text.init_clock:0000000000000000 init_clock
     /tmp/ccFxkDJm.s:2670   .text.init_clock:0000000000000080 $d
     /tmp/ccFxkDJm.s:2679   .text._ZSt4copyIPKcPcET0_T_S4_S3_:0000000000000000 $t
     /tmp/ccFxkDJm.s:2686   .text._ZSt4copyIPKcPcET0_T_S4_S3_:0000000000000000 _ZSt4copyIPKcPcET0_T_S4_S3_
     /tmp/ccFxkDJm.s:2737   .text._ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE:0000000000000000 $t
     /tmp/ccFxkDJm.s:2744   .text._ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE:0000000000000000 _ZN13String_bufferlsESt17basic_string_viewIcSt11char_traitsIcEE
     /tmp/ccFxkDJm.s:3004   .text._Z9next_lineR13String_buffer:0000000000000000 $t
     /tmp/ccFxkDJm.s:3011   .text._Z9next_lineR13String_buffer:0000000000000000 _Z9next_lineR13String_buffer
     /tmp/ccFxkDJm.s:3080   .text._Z9next_lineR13String_buffer:0000000000000028 $d
     /tmp/ccFxkDJm.s:3085   .text._ZN13String_bufferlsEi:0000000000000000 $t
ARM GAS  /tmp/ccFxkDJm.s 			page 204


     /tmp/ccFxkDJm.s:3092   .text._ZN13String_bufferlsEi:0000000000000000 _ZN13String_bufferlsEi
     /tmp/ccFxkDJm.s:3222   .text._ZN13String_bufferlsEi:0000000000000050 $d
     /tmp/ccFxkDJm.s:3228   .text._Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEEN4meta19tuple_generate_implIR3PinNSt22_Make_integer_sequenceIjXsZT0_ENSt18_Build_index_tupleIXsZT0_EE6__typeEE6__typeEE4typeEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:3235   .text._Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEEN4meta19tuple_generate_implIR3PinNSt22_Make_integer_sequenceIjXsZT0_ENSt18_Build_index_tupleIXsZT0_EE6__typeEE6__typeEE4typeEv:0000000000000000 _Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEEN4meta19tuple_generate_implIR3PinNSt22_Make_integer_sequenceIjXsZT0_ENSt18_Build_index_tupleIXsZT0_EE6__typeEE6__typeEE4typeEv
     /tmp/ccFxkDJm.s:3733   .text._Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEEN4meta19tuple_generate_implIR3PinNSt22_Make_integer_sequenceIjXsZT0_ENSt18_Build_index_tupleIXsZT0_EE6__typeEE6__typeEE4typeEv:000000000000012c $d
     /tmp/ccFxkDJm.s:6223   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccFxkDJm.s:6230   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccFxkDJm.s:6209   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccFxkDJm.s:6216   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccFxkDJm.s:6195   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccFxkDJm.s:6202   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccFxkDJm.s:6181   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccFxkDJm.s:6188   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccFxkDJm.s:3235   .text._Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEEN4meta19tuple_generate_implIR3PinNSt22_Make_integer_sequenceIjXsZT0_ENSt18_Build_index_tupleIXsZT0_EE6__typeEE6__typeEE4typeEv:0000000000000000 _Z9make_pinsILN3mcu7PinModeE1EJNS0_4Pin_ILNS0_6PeriphE2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEEN4meta19tuple_generate_implIR3PinNSt22_Make_integer_sequenceIjXstDpT0_ENSt18_Build_index_tupleIXstSE_EE6__typeEE6__typeEE4typeEv
     /tmp/ccFxkDJm.s:3754   .text._ZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEERS_RKSt5arrayIcLj80EE:0000000000000000 $t
     /tmp/ccFxkDJm.s:3761   .text._ZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEERS_RKSt5arrayIcLj80EE:0000000000000000 _ZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEERS_RKSt5arrayIcLj80EE
     /tmp/ccFxkDJm.s:4283   .text._ZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEERS_RKSt5arrayIcLj80EE:0000000000000188 $d
     /tmp/ccFxkDJm.s:6335   .bss._ZGVZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEERS_RKSt5arrayIcLj80EEE6screen:0000000000000000 _ZGVZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEERS_RKSt5arrayIcLj80EEE6screen
     /tmp/ccFxkDJm.s:6342   .bss._ZZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEERS_RKSt5arrayIcLj80EEE6screen:0000000000000000 _ZZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEERS_RKSt5arrayIcLj80EEE6screen
     /tmp/ccFxkDJm.s:6377   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccFxkDJm.s:6384   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccFxkDJm.s:6363   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccFxkDJm.s:6370   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccFxkDJm.s:6349   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccFxkDJm.s:6356   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/ccFxkDJm.s:6560   .rodata._ZN4metaL8generateIL_Z10BSRR_valueIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5EEENS3_ILS4_2ELi6EEENS3_ILS4_2ELi7EEEEDacELj256EEE:0000000000000000 _ZN4metaL8generateIL_Z10BSRR_valueIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5EEENS3_ILS4_2ELi6EEENS3_ILS4_2ELi7EEEEDacELj256EEE
     /tmp/ccFxkDJm.s:7077   .rodata._ZN4metaL8generateIL_Z12BSRR_commandIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5EEENS3_ILS4_2ELi6EEENS3_ILS4_2ELi7EEEEDacELj256EEE:0000000000000000 _ZN4metaL8generateIL_Z12BSRR_commandIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5EEENS3_ILS4_2ELi6EEENS3_ILS4_2ELi7EEEEDacELj256EEE
     /tmp/ccFxkDJm.s:4310   .text._ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEEC2Ev:0000000000000000 $t
     /tmp/ccFxkDJm.s:4317   .text._ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEEC2Ev:0000000000000000 _ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEEC2Ev
     /tmp/ccFxkDJm.s:5295   .text._ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEEC2Ev:00000000000002dc $d
     /tmp/ccFxkDJm.s:6109   .rodata._ZTVN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEEE:0000000000000000 _ZTVN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEEE
     /tmp/ccFxkDJm.s:6419   .bss._ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button:0000000000000000 _ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button
     /tmp/ccFxkDJm.s:6426   .bss._ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button:0000000000000000 _ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button
     /tmp/ccFxkDJm.s:6433   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin
     /tmp/ccFxkDJm.s:6440   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin
     /tmp/ccFxkDJm.s:6090   .rodata._ZTVN3mcu6ButtonE:0000000000000000 _ZTVN3mcu6ButtonE
     /tmp/ccFxkDJm.s:6391   .bss._ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button:0000000000000000 _ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button
     /tmp/ccFxkDJm.s:6398   .bss._ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button:0000000000000000 _ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button
     /tmp/ccFxkDJm.s:6405   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin
     /tmp/ccFxkDJm.s:6412   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin
     /tmp/ccFxkDJm.s:6237   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_EET_E6holder:0000000000000000 _ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_EET_E6holder
     /tmp/ccFxkDJm.s:6172   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_EE:0000000000000000 _ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_EE
     /tmp/ccFxkDJm.s:6244   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_EET_E6holder:0000000000000000 _ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_EET_E6holder
     /tmp/ccFxkDJm.s:6321   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_EET_E6holder:0000000000000000 _ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_EET_E6holder
     /tmp/ccFxkDJm.s:6328   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_EET_E6holder:0000000000000000 _ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_EET_E6holder
     /tmp/ccFxkDJm.s:6118   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_EE:0000000000000000 _ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_EE
     /tmp/ccFxkDJm.s:6307   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_EET_E6holder:0000000000000000 _ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_EET_E6holder
     /tmp/ccFxkDJm.s:6314   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_EET_E6holder:0000000000000000 _ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_EET_E6holder
     /tmp/ccFxkDJm.s:6127   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_EE:0000000000000000 _ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_EE
     /tmp/ccFxkDJm.s:6293   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_EET_E6holder:0000000000000000 _ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_EET_E6holder
     /tmp/ccFxkDJm.s:6300   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_EET_E6holder:0000000000000000 _ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_EET_E6holder
     /tmp/ccFxkDJm.s:6136   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_EE:0000000000000000 _ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_EE
     /tmp/ccFxkDJm.s:6279   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_EET_E6holder:0000000000000000 _ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_EET_E6holder
     /tmp/ccFxkDJm.s:6286   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_EET_E6holder:0000000000000000 _ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_EET_E6holder
     /tmp/ccFxkDJm.s:6145   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_EE:0000000000000000 _ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_EE
     /tmp/ccFxkDJm.s:6265   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_EET_E6holder:0000000000000000 _ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_EET_E6holder
     /tmp/ccFxkDJm.s:6272   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_EET_E6holder:0000000000000000 _ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_EET_E6holder
ARM GAS  /tmp/ccFxkDJm.s 			page 205


     /tmp/ccFxkDJm.s:6154   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_EE:0000000000000000 _ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_EE
     /tmp/ccFxkDJm.s:6251   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE5_EET_E6holder:0000000000000000 _ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE5_EET_E6holder
     /tmp/ccFxkDJm.s:6258   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE5_EET_E6holder:0000000000000000 _ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE5_EET_E6holder
     /tmp/ccFxkDJm.s:6163   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE5_EE:0000000000000000 _ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE5_EE
     /tmp/ccFxkDJm.s:6099   .rodata._ZTV13Select_screenILi6EE:0000000000000000 _ZTV13Select_screenILi6EE
     /tmp/ccFxkDJm.s:4317   .text._ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEEC2Ev:0000000000000000 _ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEEC1Ev
     /tmp/ccFxkDJm.s:5341   .text.startup.main:0000000000000000 $t
     /tmp/ccFxkDJm.s:5348   .text.startup.main:0000000000000000 main
     /tmp/ccFxkDJm.s:5384   .text._ZN8FunctionIFvvEEclEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:5391   .text._ZN8FunctionIFvvEEclEv:0000000000000000 _ZN8FunctionIFvvEEclEv
     /tmp/ccFxkDJm.s:5419   .text._ZN13Select_screenILi6EE4drawEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:5426   .text._ZN13Select_screenILi6EE4drawEv:0000000000000000 _ZN13Select_screenILi6EE4drawEv
     /tmp/ccFxkDJm.s:5883   .text._ZN13Select_screenILi6EE4drawEv:000000000000016c $d
     /tmp/ccFxkDJm.s:5891   .text._ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEE6notifyEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:5898   .text._ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEE6notifyEv:0000000000000000 _ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEE6notifyEv
     /tmp/ccFxkDJm.s:5933   .text.startup._GLOBAL__sub_I__ZN3mcu5FLASH6unlockEv:0000000000000000 $t
     /tmp/ccFxkDJm.s:5939   .text.startup._GLOBAL__sub_I__ZN3mcu5FLASH6unlockEv:0000000000000000 _GLOBAL__sub_I__ZN3mcu5FLASH6unlockEv
     /tmp/ccFxkDJm.s:6066   .text.startup._GLOBAL__sub_I__ZN3mcu5FLASH6unlockEv:0000000000000038 $d
     /tmp/ccFxkDJm.s:6073   .init_array:0000000000000000 $d
     /tmp/ccFxkDJm.s:6077   .rodata._ZTV5Timer:0000000000000000 $d
     /tmp/ccFxkDJm.s:7595   .rodata._ZTV7HD44780:0000000000000000 _ZTV7HD44780
     /tmp/ccFxkDJm.s:6087   .rodata._ZTVN3mcu6ButtonE:0000000000000000 $d
     /tmp/ccFxkDJm.s:6096   .rodata._ZTV13Select_screenILi6EE:0000000000000000 $d
     /tmp/ccFxkDJm.s:6106   .rodata._ZTVN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEEE:0000000000000000 $d
     /tmp/ccFxkDJm.s:6115   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_EE:0000000000000000 $d
     /tmp/ccFxkDJm.s:6124   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_EE:0000000000000000 $d
     /tmp/ccFxkDJm.s:6133   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_EE:0000000000000000 $d
     /tmp/ccFxkDJm.s:6142   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_EE:0000000000000000 $d
     /tmp/ccFxkDJm.s:6151   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_EE:0000000000000000 $d
     /tmp/ccFxkDJm.s:6160   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE5_EE:0000000000000000 $d
     /tmp/ccFxkDJm.s:6169   .rodata._ZTVN8FunctionIFvvEE15Function_holderIZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_EE:0000000000000000 $d
     /tmp/ccFxkDJm.s:6178   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccFxkDJm.s:6185   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi7EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccFxkDJm.s:6192   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccFxkDJm.s:6199   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi6EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccFxkDJm.s:6206   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccFxkDJm.s:6213   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi5EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccFxkDJm.s:6220   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccFxkDJm.s:6227   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi4EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccFxkDJm.s:6234   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_EET_E6holder:0000000000000000 $d
     /tmp/ccFxkDJm.s:6241   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE_EET_E6holder:0000000000000000 $d
     /tmp/ccFxkDJm.s:6248   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE5_EET_E6holder:0000000000000000 $d
     /tmp/ccFxkDJm.s:6255   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE5_EET_E6holder:0000000000000000 $d
     /tmp/ccFxkDJm.s:6262   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_EET_E6holder:0000000000000000 $d
     /tmp/ccFxkDJm.s:6269   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE4_EET_E6holder:0000000000000000 $d
     /tmp/ccFxkDJm.s:6276   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_EET_E6holder:0000000000000000 $d
     /tmp/ccFxkDJm.s:6283   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE3_EET_E6holder:0000000000000000 $d
     /tmp/ccFxkDJm.s:6290   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_EET_E6holder:0000000000000000 $d
     /tmp/ccFxkDJm.s:6297   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE2_EET_E6holder:0000000000000000 $d
     /tmp/ccFxkDJm.s:6304   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_EET_E6holder:0000000000000000 $d
     /tmp/ccFxkDJm.s:6311   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE1_EET_E6holder:0000000000000000 $d
     /tmp/ccFxkDJm.s:6318   .bss._ZGVZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_EET_E6holder:0000000000000000 $d
     /tmp/ccFxkDJm.s:6325   .bss._ZZN8FunctionIFvvEEC4IZN3mcu7example13select_screenINS3_4Pin_ILNS3_6PeriphE3ELi12EEENS6_ILS7_4ELi2EEENS6_ILS7_2ELi3EEENS6_ILS7_2ELi4EEENS6_ILS7_2ELi5EEENS6_ILS7_2ELi6EEENS6_ILS7_2ELi7EEENS6_ILS7_2ELi8EEENS6_ILS7_2ELi9EEEEC4EvEUlvE0_EET_E6holder:0000000000000000 $d
     /tmp/ccFxkDJm.s:6332   .bss._ZGVZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEERS_RKSt5arrayIcLj80EEE6screen:0000000000000000 $d
     /tmp/ccFxkDJm.s:6339   .bss._ZZN7HD447804makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEEEERS_RKSt5arrayIcLj80EEE6screen:0000000000000000 $d
     /tmp/ccFxkDJm.s:6346   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccFxkDJm.s:6353   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi3EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
ARM GAS  /tmp/ccFxkDJm.s 			page 206


     /tmp/ccFxkDJm.s:6360   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccFxkDJm.s:6367   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE4ELi2EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccFxkDJm.s:6374   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccFxkDJm.s:6381   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE3ELi12EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/ccFxkDJm.s:6388   .bss._ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button:0000000000000000 $d
     /tmp/ccFxkDJm.s:6395   .bss._ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi9EEELb0EEERDavE6button:0000000000000000 $d
     /tmp/ccFxkDJm.s:6402   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin:0000000000000000 $d
     /tmp/ccFxkDJm.s:6409   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi9EEELNS1_7PinModeE0EEERDavE3pin:0000000000000000 $d
     /tmp/ccFxkDJm.s:6416   .bss._ZGVZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button:0000000000000000 $d
     /tmp/ccFxkDJm.s:6423   .bss._ZZN3mcu6Button4makeINS_4Pin_ILNS_6PeriphE2ELi8EEELb0EEERDavE6button:0000000000000000 $d
     /tmp/ccFxkDJm.s:6430   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin:0000000000000000 $d
     /tmp/ccFxkDJm.s:6437   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE2ELi8EEELNS1_7PinModeE0EEERDavE3pin:0000000000000000 $d
     /tmp/ccFxkDJm.s:6444   .rodata._ZN7HD447808Symbol_n5tableE:0000000000000000 $d
     /tmp/ccFxkDJm.s:6534   .bss.tickUpdater:0000000000000000 tickUpdater
     /tmp/ccFxkDJm.s:6530   .bss.tickUpdater:0000000000000000 $d
     /tmp/ccFxkDJm.s:6557   .rodata._ZN4metaL8generateIL_Z10BSRR_valueIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5EEENS3_ILS4_2ELi6EEENS3_ILS4_2ELi7EEEEDacELj256EEE:0000000000000000 $d
     /tmp/ccFxkDJm.s:7074   .rodata._ZN4metaL8generateIL_Z12BSRR_commandIN3mcu4Pin_ILNS2_6PeriphE2ELi4EEENS3_ILS4_2ELi5EEENS3_ILS4_2ELi6EEENS3_ILS4_2ELi7EEEEDacELj256EEE:0000000000000000 $d
     /tmp/ccFxkDJm.s:7591   .rodata._ZTV7HD44780:0000000000000000 $d
                           .group:0000000000000000 _ZN3mcu7example13select_screenINS_4Pin_ILNS_6PeriphE3ELi12EEENS2_ILS3_4ELi2EEENS2_ILS3_2ELi3EEENS2_ILS3_2ELi4EEENS2_ILS3_2ELi5EEENS2_ILS3_2ELi6EEENS2_ILS3_2ELi7EEENS2_ILS3_2ELi8EEENS2_ILS3_2ELi9EEEEC5Ev

UNDEFINED SYMBOLS
memset
strlen
__aeabi_uidivmod
memmove
sprintf
__cxa_guard_acquire
__cxa_guard_release
