ARM GAS  /tmp/cc2puB6n.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.cpp"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._ZN5Timer6notifyEv,"ax",%progbits
  16              		.align	1
  17              		.global	_ZN5Timer6notifyEv
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	_ZN5Timer6notifyEv:
  24              	.LFB147:
  25              		.file 1 "../../src/timers.h"
   1:../../src/timers.h **** #pragma once
   2:../../src/timers.h **** 
   3:../../src/timers.h **** #include <cstdint>
   4:../../src/timers.h **** #include "subscriber.h"
   5:../../src/timers.h **** #if not defined (TEST)
   6:../../src/timers.h ****    #include "systick.h"
   7:../../src/timers.h **** #endif
   8:../../src/timers.h **** 
   9:../../src/timers.h **** 
  10:../../src/timers.h **** struct TickUpdater : Publisher
  11:../../src/timers.h **** {
  12:../../src/timers.h **** #if not defined(TEST) 
  13:../../src/timers.h ****    TickUpdater() { mcu::make_reference<mcu::Periph::SysTick>().initInterrupt<1>(); }
  14:../../src/timers.h **** #endif
  15:../../src/timers.h ****    // using List::clear_subscribe;
  16:../../src/timers.h **** } tickUpdater;
  17:../../src/timers.h **** 
  18:../../src/timers.h **** extern "C" void SysTick_Handler()
  19:../../src/timers.h **** {
  20:../../src/timers.h ****    tickUpdater.notify();
  21:../../src/timers.h **** }
  22:../../src/timers.h **** 
  23:../../src/timers.h **** 
  24:../../src/timers.h **** class TickSubscriber : Subscriber
  25:../../src/timers.h **** {
  26:../../src/timers.h **** protected:
  27:../../src/timers.h ****    bool subscribed {false};
  28:../../src/timers.h ****    void subscribe();
  29:../../src/timers.h ****    void unsubscribe();
  30:../../src/timers.h **** public:
  31:../../src/timers.h ****    
  32:../../src/timers.h **** };
  33:../../src/timers.h **** 
ARM GAS  /tmp/cc2puB6n.s 			page 2


  34:../../src/timers.h **** 
  35:../../src/timers.h **** 
  36:../../src/timers.h **** class Timer : TickSubscriber
  37:../../src/timers.h **** {
  38:../../src/timers.h **** public:
  39:../../src/timers.h ****    Timer() = default;
  40:../../src/timers.h ****    Timer (uint32_t ms) { start(ms); }
  41:../../src/timers.h **** 
  42:../../src/timers.h ****    void     start   (uint32_t ms); /// –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å—á—ë—Ç —Å —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω
  43:../../src/timers.h ****    bool     event();   /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ —Ç–∞–π–º–µ—Ä –Ω–∞—Ç–∏–∫–∞–ª –∏ –ø–µ—
  44:../../src/timers.h ****    bool     done();    /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ —Ç–∞–π–º–µ—Ä –Ω–∞—Ç–∏–∫–∞–ª –∏ –ù–ï 
  45:../../src/timers.h ****    void     pause();   /// –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—á—ë—Ç, –Ω–æ –Ω–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—á
  46:../../src/timers.h ****    void     start();   /// –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å—á—ë—Ç —Å —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å—á—ë—
  47:../../src/timers.h ****    void     stop();    /// –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—á—ë—Ç –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—á—ë—Ç—á–∏
  48:../../src/timers.h ****    bool     isGreater (uint32_t val); /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ —Å—á—ë—Ç—á–∏–∫ –Ω–∞—Ç
  49:../../src/timers.h ****    bool     isCount(); /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –µ—Å–ª–∏ —Å—á–∏—Ç–∞–µ—Ç, –Ω–æ –Ω–µ –¥–æ—Å—á–∏—
  50:../../src/timers.h ****    uint32_t timePassed(); /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –Ω–∞—Ç–∏–∫–∞–ª
  51:../../src/timers.h ****    uint32_t timeLeft();   /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å
  52:../../src/timers.h ****    template<class function>
  53:../../src/timers.h ****    void     event (function); /// –≤—ã–ø–æ–ª–Ω—è–µ—Ç function, –∫–æ–≥–¥–∞ –¥–æ—Ç–∏–∫–∞–ª –∏ –ø–µ—Ä–
  54:../../src/timers.h **** 
  55:../../src/timers.h ****    volatile uint32_t timeSet {0};
  56:../../src/timers.h **** private:
  57:../../src/timers.h ****    volatile uint32_t timePassed_ {0};	
  58:../../src/timers.h **** 
  59:../../src/timers.h ****    void notify() override;
  60:../../src/timers.h **** };
  61:../../src/timers.h **** 
  62:../../src/timers.h **** 
  63:../../src/timers.h **** 
  64:../../src/timers.h **** void Timer::notify()
  65:../../src/timers.h **** {
  26              		.loc 1 65 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  66:../../src/timers.h ****    timePassed_++;
  32              		.loc 1 66 0
  33 0000 4369     		ldr	r3, [r0, #20]
  67:../../src/timers.h **** }
  34              		.loc 1 67 0
  35              		@ sp needed
  66:../../src/timers.h ****    timePassed_++;
  36              		.loc 1 66 0
  37 0002 0133     		adds	r3, r3, #1
  38 0004 4361     		str	r3, [r0, #20]
  39              		.loc 1 67 0
  40 0006 7047     		bx	lr
  41              		.cfi_endproc
  42              	.LFE147:
  44              		.section	.text._ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE6notifyEv,"ax",%progbits
  45              		.align	1
  46              		.syntax unified
  47              		.code	16
  48              		.thumb_func
ARM GAS  /tmp/cc2puB6n.s 			page 3


  49              		.fpu softvfp
  51              	_ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE6notifyEv:
  52              	.LFB3028:
  53              		.file 2 "../../src/modbus_slave.h"
   1:../../src/modbus_slave.h **** #pragma once
   2:../../src/modbus_slave.h **** 
   3:../../src/modbus_slave.h **** #include "timers.h"
   4:../../src/modbus_slave.h **** #include "table_crc.h"
   5:../../src/modbus_slave.h **** #if not defined (TEST)
   6:../../src/modbus_slave.h ****    #include "uart.h"
   7:../../src/modbus_slave.h ****    #include "interrupt.h"
   8:../../src/modbus_slave.h ****    #include <cstring>
   9:../../src/modbus_slave.h **** #endif
  10:../../src/modbus_slave.h **** 
  11:../../src/modbus_slave.h **** namespace mcu {
  12:../../src/modbus_slave.h **** 
  13:../../src/modbus_slave.h **** template <class InRegs_t, class OutRegs_t>
  14:../../src/modbus_slave.h **** class Modbus_slave : TickSubscriber
  15:../../src/modbus_slave.h **** {
  16:../../src/modbus_slave.h ****    enum class Function   : uint8_t {read_03 = 0x03, write_16 = 0x10};
  17:../../src/modbus_slave.h ****    enum class Error_code : uint8_t {wrong_func = 0x01, wrong_reg = 0x02, wrong_value = 0x03};
  18:../../src/modbus_slave.h **** 
  19:../../src/modbus_slave.h ****    UART& uart;
  20:../../src/modbus_slave.h ****    Interrupt& interrupt_usart;
  21:../../src/modbus_slave.h ****    Interrupt& interrupt_DMA_channel;
  22:../../src/modbus_slave.h **** 
  23:../../src/modbus_slave.h ****    int time {0}; // –≤—ã–¥–µ—Ä–∂–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –º–æ–¥–±–∞—Å–∞ 
  24:../../src/modbus_slave.h ****    int modbus_time {0};
  25:../../src/modbus_slave.h **** 
  26:../../src/modbus_slave.h ****    const uint8_t address;
  27:../../src/modbus_slave.h ****    uint8_t func;
  28:../../src/modbus_slave.h ****    uint16_t first_reg{0};
  29:../../src/modbus_slave.h ****    uint16_t last_reg {0};
  30:../../src/modbus_slave.h ****    uint16_t qty_reg  {0};
  31:../../src/modbus_slave.h ****    uint8_t  qty_byte {0};
  32:../../src/modbus_slave.h ****    uint16_t data;
  33:../../src/modbus_slave.h ****    uint16_t crc{0};
  34:../../src/modbus_slave.h ****    size_t last_message_size;
  35:../../src/modbus_slave.h **** 
  36:../../src/modbus_slave.h **** 
  37:../../src/modbus_slave.h ****    uint16_t crc16 (uint8_t* data, uint8_t length);
  38:../../src/modbus_slave.h ****    uint8_t  set_high_bit (uint8_t);
  39:../../src/modbus_slave.h **** 
  40:../../src/modbus_slave.h ****    bool check_CRC  ();
  41:../../src/modbus_slave.h ****    bool check_value();
  42:../../src/modbus_slave.h ****    bool check_reg  (uint16_t qty_reg_device);
  43:../../src/modbus_slave.h **** 
  44:../../src/modbus_slave.h ****    void answer_error (Error_code);
  45:../../src/modbus_slave.h ****    void answer_03();
  46:../../src/modbus_slave.h ****    template <class function> void answer_16 (function reaction);
  47:../../src/modbus_slave.h **** 
  48:../../src/modbus_slave.h ****    void uartInterrupt()
  49:../../src/modbus_slave.h ****    {
  50:../../src/modbus_slave.h ****       if (uart.is_IDLE()) 
  51:../../src/modbus_slave.h ****          subscribe();
  52:../../src/modbus_slave.h ****    }
  53:../../src/modbus_slave.h ****    void dmaInterrupt()
ARM GAS  /tmp/cc2puB6n.s 			page 4


  54:../../src/modbus_slave.h ****    {
  55:../../src/modbus_slave.h ****       if (uart.is_tx_complete())
  56:../../src/modbus_slave.h ****          uart.receive();
  57:../../src/modbus_slave.h ****    }
  58:../../src/modbus_slave.h **** 
  59:../../src/modbus_slave.h ****    void notify() override 
  54              		.loc 2 59 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.LVL1:
  60:../../src/modbus_slave.h ****    {
  61:../../src/modbus_slave.h ****       time++;
  60              		.loc 2 61 0
  61 0000 C369     		ldr	r3, [r0, #28]
  62:../../src/modbus_slave.h ****    }
  62              		.loc 2 62 0
  63              		@ sp needed
  61:../../src/modbus_slave.h ****    }
  64              		.loc 2 61 0
  65 0002 0133     		adds	r3, r3, #1
  66 0004 C361     		str	r3, [r0, #28]
  67              		.loc 2 62 0
  68 0006 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE3028:
  72              		.section	.text.SysTick_Handler,"ax",%progbits
  73              		.align	1
  74              		.global	SysTick_Handler
  75              		.syntax unified
  76              		.code	16
  77              		.thumb_func
  78              		.fpu softvfp
  80              	SysTick_Handler:
  81              	.LFB134:
  19:../../src/timers.h ****    tickUpdater.notify();
  82              		.loc 1 19 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              	.LVL2:
  87              	.LBB794:
  88              	.LBB795:
  89              		.file 3 "../../src/subscriber.h"
   1:../../src/subscriber.h **** #pragma once
   2:../../src/subscriber.h **** 
   3:../../src/subscriber.h **** #pragma once
   4:../../src/subscriber.h **** 
   5:../../src/subscriber.h **** #include "list.h"
   6:../../src/subscriber.h **** 
   7:../../src/subscriber.h **** struct Subscriber : Listable<Subscriber> {
   8:../../src/subscriber.h ****    virtual void notify() = 0;
   9:../../src/subscriber.h **** };
  10:../../src/subscriber.h **** 
  11:../../src/subscriber.h **** struct Publisher : private List<Subscriber>
  12:../../src/subscriber.h **** {
ARM GAS  /tmp/cc2puB6n.s 			page 5


  13:../../src/subscriber.h ****    void clear(){clear_subscribe();}
  14:../../src/subscriber.h ****    void subscribe  (Subscriber* p) { push_back(p); }
  15:../../src/subscriber.h ****    void unsubscribe(Subscriber* p) { remove(p);    }
  16:../../src/subscriber.h ****    // —Å—Å—ã–ª–∫–∞, —á—Ç–æ–±—ã –Ω–µ –∫–æ–ø–∏—Ä–æ–≤–∞–ª –∫–∞–∂–¥—ã–π subscriber –∏–∑ *this
  17:../../src/subscriber.h ****    void notify() {
  18:../../src/subscriber.h ****       for (auto& subscriber : *this)
  90              		.loc 3 18 0
  91 0000 054B     		ldr	r3, .L6
  92              	.LBE795:
  93              	.LBE794:
  19:../../src/timers.h ****    tickUpdater.notify();
  94              		.loc 1 19 0
  95 0002 10B5     		push	{r4, lr}
  96              	.LCFI0:
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 4, -8
  99              		.cfi_offset 14, -4
 100              	.LBB799:
 101              	.LBB798:
 102              		.loc 3 18 0
 103 0004 1C68     		ldr	r4, [r3]
 104              	.LVL3:
 105              	.L5:
 106 0006 002C     		cmp	r4, #0
 107 0008 05D0     		beq	.L3
  19:../../src/subscriber.h ****          subscriber.notify();
 108              		.loc 3 19 0
 109 000a 2368     		ldr	r3, [r4]
 110 000c 2000     		movs	r0, r4
 111 000e 1B68     		ldr	r3, [r3]
 112 0010 9847     		blx	r3
 113              	.LVL4:
 114              	.LBB796:
 115              	.LBB797:
 116              		.file 4 "../../src/list.h"
   1:../../src/list.h **** #pragma once
   2:../../src/list.h **** 
   3:../../src/list.h **** 
   4:../../src/list.h **** template<class T> struct Listable
   5:../../src/list.h **** {
   6:../../src/list.h ****    T* prev {nullptr};
   7:../../src/list.h ****    T* next {nullptr};
   8:../../src/list.h **** };
   9:../../src/list.h **** 
  10:../../src/list.h **** template<class T> class List
  11:../../src/list.h **** {
  12:../../src/list.h ****    T* first {nullptr};
  13:../../src/list.h ****    T* last  {nullptr};
  14:../../src/list.h **** public:
  15:../../src/list.h ****    void clear_subscribe(){first = nullptr; last = nullptr;}
  16:../../src/list.h ****    void push_back  (T*);
  17:../../src/list.h ****    void push_front (T*);
  18:../../src/list.h ****    void remove     (T*);
  19:../../src/list.h ****    
  20:../../src/list.h ****    class Iterator
  21:../../src/list.h ****    {
  22:../../src/list.h ****       T* p {nullptr};
ARM GAS  /tmp/cc2puB6n.s 			page 6


  23:../../src/list.h ****    public:
  24:../../src/list.h ****       Iterator (T*);
  25:../../src/list.h ****       Iterator() = default;
  26:../../src/list.h **** 
  27:../../src/list.h ****       T&        operator*  () const;
  28:../../src/list.h ****       bool      operator!= (const Iterator&) const;
  29:../../src/list.h ****       Iterator& operator++ ();
  30:../../src/list.h ****    };
  31:../../src/list.h **** 
  32:../../src/list.h ****    Iterator begin();
  33:../../src/list.h ****    Iterator end();
  34:../../src/list.h **** };
  35:../../src/list.h **** 
  36:../../src/list.h **** 
  37:../../src/list.h **** 
  38:../../src/list.h **** 
  39:../../src/list.h **** 
  40:../../src/list.h **** template<class T>
  41:../../src/list.h **** void List<T>::push_back (T* p)
  42:../../src/list.h **** {
  43:../../src/list.h ****    p->prev = last;
  44:../../src/list.h ****    if (last)
  45:../../src/list.h ****       last->next = p;
  46:../../src/list.h ****    last = p;
  47:../../src/list.h ****    if (not first)
  48:../../src/list.h ****       first = p;
  49:../../src/list.h **** }
  50:../../src/list.h **** 
  51:../../src/list.h **** 
  52:../../src/list.h **** template<class T>
  53:../../src/list.h **** void List<T>::push_front (T* p)
  54:../../src/list.h **** {
  55:../../src/list.h ****    // –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω
  56:../../src/list.h **** }
  57:../../src/list.h **** 
  58:../../src/list.h **** 
  59:../../src/list.h **** template<class T>
  60:../../src/list.h **** void List<T>::remove (T* p)
  61:../../src/list.h **** {
  62:../../src/list.h ****    if (p->prev and p->next) {       // –µ—Å–ª–∏ –≤ —Å–µ—Ä–µ–¥–∏–Ω–∫–µ
  63:../../src/list.h ****       p->prev->next = p->next;
  64:../../src/list.h ****       p->next->prev = p->prev;
  65:../../src/list.h ****    } else if (p->next) {            // –µ—Å–ª–∏ –ø–µ—Ä–≤—ã–π
  66:../../src/list.h ****       first = p->next;
  67:../../src/list.h ****       first->prev = nullptr;
  68:../../src/list.h ****       if (not first) last = nullptr;
  69:../../src/list.h ****    } else if (p->prev) {            // –µ—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π
  70:../../src/list.h ****       last = p->prev;
  71:../../src/list.h ****       last->next = nullptr;
  72:../../src/list.h ****       if (not last) first = nullptr;
  73:../../src/list.h ****    } else {                         // –µ—Å–ª–∏ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π 
  74:../../src/list.h ****       first = nullptr;
  75:../../src/list.h ****       last  = nullptr;
  76:../../src/list.h ****    }
  77:../../src/list.h ****    p->prev = nullptr;
  78:../../src/list.h ****    p->next = nullptr;
  79:../../src/list.h **** 
ARM GAS  /tmp/cc2puB6n.s 			page 7


  80:../../src/list.h **** }
  81:../../src/list.h **** 
  82:../../src/list.h **** 
  83:../../src/list.h **** template<class T>
  84:../../src/list.h **** typename List<T>::Iterator List<T>::begin()
  85:../../src/list.h **** {
  86:../../src/list.h ****    return List<T>::Iterator {first};
  87:../../src/list.h **** }
  88:../../src/list.h **** 
  89:../../src/list.h **** 
  90:../../src/list.h **** template<class T>
  91:../../src/list.h **** typename List<T>::Iterator List<T>::end()
  92:../../src/list.h **** {
  93:../../src/list.h ****    return List<T>::Iterator();
  94:../../src/list.h **** }
  95:../../src/list.h **** 
  96:../../src/list.h **** 
  97:../../src/list.h **** 
  98:../../src/list.h **** 
  99:../../src/list.h **** 
 100:../../src/list.h **** 
 101:../../src/list.h **** /// Iterator
 102:../../src/list.h **** template<class T>
 103:../../src/list.h **** List<T>::Iterator::Iterator (T* other) : p {other} {}
 104:../../src/list.h **** 
 105:../../src/list.h **** template<class T>
 106:../../src/list.h **** T& List<T>::Iterator::operator* () const 
 107:../../src/list.h **** {
 108:../../src/list.h ****    return *p;
 109:../../src/list.h **** }
 110:../../src/list.h **** 
 111:../../src/list.h **** template<class T>
 112:../../src/list.h **** bool List<T>::Iterator::operator!= (const List<T>::Iterator& other) const
 113:../../src/list.h **** {
 114:../../src/list.h ****    return p != other.p;
 115:../../src/list.h **** }
 116:../../src/list.h **** 
 117:../../src/list.h **** template<class T>
 118:../../src/list.h **** typename List<T>::Iterator& List<T>::Iterator::operator++ ()
 119:../../src/list.h **** {
 120:../../src/list.h ****    p = p->next;
 117              		.loc 4 120 0
 118 0012 A468     		ldr	r4, [r4, #8]
 119              	.LVL5:
 120 0014 F7E7     		b	.L5
 121              	.LVL6:
 122              	.L3:
 123              	.LBE797:
 124              	.LBE796:
 125              	.LBE798:
 126              	.LBE799:
  21:../../src/timers.h **** 
 127              		.loc 1 21 0
 128              		@ sp needed
 129              	.LVL7:
 130 0016 10BD     		pop	{r4, pc}
 131              	.L7:
ARM GAS  /tmp/cc2puB6n.s 			page 8


 132              		.align	2
 133              	.L6:
 134 0018 00000000 		.word	.LANCHOR0
 135              		.cfi_endproc
 136              	.LFE134:
 138              		.section	.text._ZN5Timer5eventEv,"ax",%progbits
 139              		.align	1
 140              		.global	_ZN5Timer5eventEv
 141              		.syntax unified
 142              		.code	16
 143              		.thumb_func
 144              		.fpu softvfp
 146              	_ZN5Timer5eventEv:
 147              	.LFB149:
  68:../../src/timers.h **** 
  69:../../src/timers.h **** 
  70:../../src/timers.h **** 
  71:../../src/timers.h **** void Timer::start (uint32_t ms)
  72:../../src/timers.h **** {
  73:../../src/timers.h ****    timeSet = ms;
  74:../../src/timers.h ****    subscribe();
  75:../../src/timers.h **** }
  76:../../src/timers.h **** 
  77:../../src/timers.h **** 
  78:../../src/timers.h **** bool Timer::event()
  79:../../src/timers.h **** {
 148              		.loc 1 79 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 153              	.LVL8:
  80:../../src/timers.h ****    if (timePassed_ >= timeSet) {
 154              		.loc 1 80 0
 155 0000 4169     		ldr	r1, [r0, #20]
 156 0002 0269     		ldr	r2, [r0, #16]
 157 0004 0023     		movs	r3, #0
 158 0006 9142     		cmp	r1, r2
 159 0008 01D3     		bcc	.L9
  81:../../src/timers.h ****       timePassed_ = 0;
 160              		.loc 1 81 0
 161 000a 4361     		str	r3, [r0, #20]
  82:../../src/timers.h ****       return (true);
 162              		.loc 1 82 0
 163 000c 0133     		adds	r3, r3, #1
 164              	.L9:
  83:../../src/timers.h ****    } else {
  84:../../src/timers.h ****       return (false);
  85:../../src/timers.h ****    }
  86:../../src/timers.h **** }
 165              		.loc 1 86 0
 166 000e 1800     		movs	r0, r3
 167              	.LVL9:
 168              		@ sp needed
 169 0010 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE149:
ARM GAS  /tmp/cc2puB6n.s 			page 9


 173              		.section	.text._ZN5Timer4doneEv,"ax",%progbits
 174              		.align	1
 175              		.global	_ZN5Timer4doneEv
 176              		.syntax unified
 177              		.code	16
 178              		.thumb_func
 179              		.fpu softvfp
 181              	_ZN5Timer4doneEv:
 182              	.LFB152:
  87:../../src/timers.h **** 
  88:../../src/timers.h **** 
  89:../../src/timers.h **** template<class Functor>
  90:../../src/timers.h **** void Timer::event (Functor functor)
  91:../../src/timers.h **** {
  92:../../src/timers.h ****    if (timePassed_ >= timeSet) {
  93:../../src/timers.h ****       timePassed_ = 0;
  94:../../src/timers.h ****       functor();
  95:../../src/timers.h ****    }
  96:../../src/timers.h **** }
  97:../../src/timers.h **** 
  98:../../src/timers.h **** 
  99:../../src/timers.h **** void Timer::stop()
 100:../../src/timers.h **** {
 101:../../src/timers.h ****    timePassed_ = 0;
 102:../../src/timers.h ****    unsubscribe();
 103:../../src/timers.h **** }
 104:../../src/timers.h **** 
 105:../../src/timers.h **** 
 106:../../src/timers.h **** bool     Timer::done()       { return timePassed_ >= timeSet; }
 183              		.loc 1 106 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 188              	.LVL10:
 189              		.loc 1 106 0
 190 0000 4269     		ldr	r2, [r0, #20]
 191 0002 0369     		ldr	r3, [r0, #16]
 192 0004 0020     		movs	r0, #0
 193              	.LVL11:
 194 0006 9A42     		cmp	r2, r3
 195 0008 4041     		adcs	r0, r0, r0
 196              		@ sp needed
 197 000a C0B2     		uxtb	r0, r0
 198 000c 7047     		bx	lr
 199              		.cfi_endproc
 200              	.LFE152:
 202              		.section	.text._ZN5Timer7isCountEv,"ax",%progbits
 203              		.align	1
 204              		.global	_ZN5Timer7isCountEv
 205              		.syntax unified
 206              		.code	16
 207              		.thumb_func
 208              		.fpu softvfp
 210              	_ZN5Timer7isCountEv:
 211              	.LFB155:
 107:../../src/timers.h **** void     Timer::pause()      { unsubscribe(); }
ARM GAS  /tmp/cc2puB6n.s 			page 10


 108:../../src/timers.h **** void     Timer::start()      { subscribe();  }
 109:../../src/timers.h **** bool     Timer::isCount()    { return subscribed; }
 212              		.loc 1 109 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 217              	.LVL12:
 218              		.loc 1 109 0
 219 0000 007B     		ldrb	r0, [r0, #12]
 220              	.LVL13:
 221              		@ sp needed
 222 0002 7047     		bx	lr
 223              		.cfi_endproc
 224              	.LFE155:
 226              		.section	.text._ZN5Timer10timePassedEv,"ax",%progbits
 227              		.align	1
 228              		.global	_ZN5Timer10timePassedEv
 229              		.syntax unified
 230              		.code	16
 231              		.thumb_func
 232              		.fpu softvfp
 234              	_ZN5Timer10timePassedEv:
 235              	.LFB156:
 110:../../src/timers.h **** uint32_t Timer::timePassed() { return timePassed_; }
 236              		.loc 1 110 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              		@ link register save eliminated.
 241              	.LVL14:
 242              		.loc 1 110 0
 243 0000 4069     		ldr	r0, [r0, #20]
 244              	.LVL15:
 245              		@ sp needed
 246 0002 7047     		bx	lr
 247              		.cfi_endproc
 248              	.LFE156:
 250              		.section	.text._ZN5Timer8timeLeftEv,"ax",%progbits
 251              		.align	1
 252              		.global	_ZN5Timer8timeLeftEv
 253              		.syntax unified
 254              		.code	16
 255              		.thumb_func
 256              		.fpu softvfp
 258              	_ZN5Timer8timeLeftEv:
 259              	.LFB157:
 111:../../src/timers.h **** uint32_t Timer::timeLeft(  ) { return timeSet - timePassed_; }
 260              		.loc 1 111 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 265              	.LVL16:
 266              		.loc 1 111 0
 267 0000 0369     		ldr	r3, [r0, #16]
 268 0002 4069     		ldr	r0, [r0, #20]
ARM GAS  /tmp/cc2puB6n.s 			page 11


 269              	.LVL17:
 270              		@ sp needed
 271 0004 181A     		subs	r0, r3, r0
 272 0006 7047     		bx	lr
 273              		.cfi_endproc
 274              	.LFE157:
 276              		.section	.text._ZN5Timer9isGreaterEm,"ax",%progbits
 277              		.align	1
 278              		.global	_ZN5Timer9isGreaterEm
 279              		.syntax unified
 280              		.code	16
 281              		.thumb_func
 282              		.fpu softvfp
 284              	_ZN5Timer9isGreaterEm:
 285              	.LFB158:
 112:../../src/timers.h **** bool     Timer::isGreater (uint32_t val) { return timePassed_ > val; }
 286              		.loc 1 112 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 291              	.LVL18:
 292              		.loc 1 112 0
 293 0000 4069     		ldr	r0, [r0, #20]
 294              	.LVL19:
 295              		@ sp needed
 296 0002 8142     		cmp	r1, r0
 297 0004 8041     		sbcs	r0, r0, r0
 298 0006 4042     		rsbs	r0, r0, #0
 299 0008 7047     		bx	lr
 300              		.cfi_endproc
 301              	.LFE158:
 303              		.section	.text._ZN14TickSubscriber11unsubscribeEv,"ax",%progbits
 304              		.align	1
 305              		.global	_ZN14TickSubscriber11unsubscribeEv
 306              		.syntax unified
 307              		.code	16
 308              		.thumb_func
 309              		.fpu softvfp
 311              	_ZN14TickSubscriber11unsubscribeEv:
 312              	.LFB159:
 113:../../src/timers.h **** 
 114:../../src/timers.h **** 
 115:../../src/timers.h **** 
 116:../../src/timers.h **** void TickSubscriber::unsubscribe()
 117:../../src/timers.h **** {
 313              		.loc 1 117 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              		@ link register save eliminated.
 318              	.LVL20:
 118:../../src/timers.h ****    if (subscribed) {
 319              		.loc 1 118 0
 320 0000 037B     		ldrb	r3, [r0, #12]
 321 0002 002B     		cmp	r3, #0
 322 0004 0DD0     		beq	.L16
ARM GAS  /tmp/cc2puB6n.s 			page 12


 323              	.LVL21:
 324              	.LBB806:
 325              	.LBB807:
 119:../../src/timers.h ****       subscribed = false;
 326              		.loc 1 119 0
 327 0006 0023     		movs	r3, #0
 328              	.LBB808:
 329              	.LBB809:
 330              	.LBB810:
  62:../../src/list.h ****       p->prev->next = p->next;
 331              		.loc 4 62 0
 332 0008 4268     		ldr	r2, [r0, #4]
 333              	.LBE810:
 334              	.LBE809:
 335              	.LBE808:
 336              		.loc 1 119 0
 337 000a 0373     		strb	r3, [r0, #12]
 338              	.LVL22:
 339 000c 8368     		ldr	r3, [r0, #8]
 340              	.LBB815:
 341              	.LBB813:
 342              	.LBB811:
  62:../../src/list.h ****       p->prev->next = p->next;
 343              		.loc 4 62 0
 344 000e 002A     		cmp	r2, #0
 345 0010 0ED0     		beq	.L18
 346 0012 002B     		cmp	r3, #0
 347 0014 08D0     		beq	.L19
  63:../../src/list.h ****       p->next->prev = p->prev;
 348              		.loc 4 63 0
 349 0016 9360     		str	r3, [r2, #8]
  64:../../src/list.h ****    } else if (p->next) {            // –µ—Å–ª–∏ –ø–µ—Ä–≤—ã–π
 350              		.loc 4 64 0
 351 0018 8368     		ldr	r3, [r0, #8]
 352              	.L27:
  67:../../src/list.h ****       if (not first) last = nullptr;
 353              		.loc 4 67 0
 354 001a 5A60     		str	r2, [r3, #4]
 355              	.L20:
  77:../../src/list.h ****    p->next = nullptr;
 356              		.loc 4 77 0
 357 001c 0023     		movs	r3, #0
 358 001e 4360     		str	r3, [r0, #4]
  78:../../src/list.h **** 
 359              		.loc 4 78 0
 360 0020 8360     		str	r3, [r0, #8]
 361              	.LVL23:
 362              	.L16:
 363              	.LBE811:
 364              	.LBE813:
 365              	.LBE815:
 366              	.LBE807:
 367              	.LBE806:
 120:../../src/timers.h ****       tickUpdater.unsubscribe (this);
 121:../../src/timers.h ****    }
 122:../../src/timers.h **** }
 368              		.loc 1 122 0
ARM GAS  /tmp/cc2puB6n.s 			page 13


 369              		@ sp needed
 370 0022 7047     		bx	lr
 371              	.LVL24:
 372              	.L21:
 373              	.LBB818:
 374              	.LBB817:
 375              	.LBB816:
 376              	.LBB814:
 377              	.LBB812:
  66:../../src/list.h ****       first->prev = nullptr;
 378              		.loc 4 66 0
 379 0024 0B60     		str	r3, [r1]
 380 0026 F8E7     		b	.L27
 381              	.L19:
  70:../../src/list.h ****       last->next = nullptr;
 382              		.loc 4 70 0
 383 0028 0449     		ldr	r1, .L28
  71:../../src/list.h ****       if (not last) first = nullptr;
 384              		.loc 4 71 0
 385 002a 9360     		str	r3, [r2, #8]
  70:../../src/list.h ****       last->next = nullptr;
 386              		.loc 4 70 0
 387 002c 4A60     		str	r2, [r1, #4]
 388 002e F5E7     		b	.L20
 389              	.L18:
 390 0030 0249     		ldr	r1, .L28
  65:../../src/list.h ****       first = p->next;
 391              		.loc 4 65 0
 392 0032 002B     		cmp	r3, #0
 393 0034 F6D1     		bne	.L21
  74:../../src/list.h ****       last  = nullptr;
 394              		.loc 4 74 0
 395 0036 0B60     		str	r3, [r1]
  75:../../src/list.h ****    }
 396              		.loc 4 75 0
 397 0038 4B60     		str	r3, [r1, #4]
 398 003a EFE7     		b	.L20
 399              	.L29:
 400              		.align	2
 401              	.L28:
 402 003c 00000000 		.word	.LANCHOR0
 403              	.LBE812:
 404              	.LBE814:
 405              	.LBE816:
 406              	.LBE817:
 407              	.LBE818:
 408              		.cfi_endproc
 409              	.LFE159:
 411              		.section	.text._ZN5Timer4stopEv,"ax",%progbits
 412              		.align	1
 413              		.global	_ZN5Timer4stopEv
 414              		.syntax unified
 415              		.code	16
 416              		.thumb_func
 417              		.fpu softvfp
 419              	_ZN5Timer4stopEv:
 420              	.LFB151:
ARM GAS  /tmp/cc2puB6n.s 			page 14


 100:../../src/timers.h ****    timePassed_ = 0;
 421              		.loc 1 100 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              	.LVL25:
 101:../../src/timers.h ****    unsubscribe();
 426              		.loc 1 101 0
 427 0000 0023     		movs	r3, #0
 100:../../src/timers.h ****    timePassed_ = 0;
 428              		.loc 1 100 0
 429 0002 10B5     		push	{r4, lr}
 430              	.LCFI1:
 431              		.cfi_def_cfa_offset 8
 432              		.cfi_offset 4, -8
 433              		.cfi_offset 14, -4
 101:../../src/timers.h ****    unsubscribe();
 434              		.loc 1 101 0
 435 0004 4361     		str	r3, [r0, #20]
 102:../../src/timers.h **** }
 436              		.loc 1 102 0
 437 0006 FFF7FEFF 		bl	_ZN14TickSubscriber11unsubscribeEv
 438              	.LVL26:
 103:../../src/timers.h **** 
 439              		.loc 1 103 0
 440              		@ sp needed
 441 000a 10BD     		pop	{r4, pc}
 442              		.cfi_endproc
 443              	.LFE151:
 445              		.section	.text._ZN5Timer5pauseEv,"ax",%progbits
 446              		.align	1
 447              		.global	_ZN5Timer5pauseEv
 448              		.syntax unified
 449              		.code	16
 450              		.thumb_func
 451              		.fpu softvfp
 453              	_ZN5Timer5pauseEv:
 454              	.LFB153:
 107:../../src/timers.h **** void     Timer::start()      { subscribe();  }
 455              		.loc 1 107 0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459              	.LVL27:
 460 0000 10B5     		push	{r4, lr}
 461              	.LCFI2:
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 4, -8
 464              		.cfi_offset 14, -4
 107:../../src/timers.h **** void     Timer::start()      { subscribe();  }
 465              		.loc 1 107 0
 466 0002 FFF7FEFF 		bl	_ZN14TickSubscriber11unsubscribeEv
 467              	.LVL28:
 468              		@ sp needed
 469 0006 10BD     		pop	{r4, pc}
 470              		.cfi_endproc
 471              	.LFE153:
ARM GAS  /tmp/cc2puB6n.s 			page 15


 473              		.section	.text._ZN14TickSubscriber9subscribeEv,"ax",%progbits
 474              		.align	1
 475              		.global	_ZN14TickSubscriber9subscribeEv
 476              		.syntax unified
 477              		.code	16
 478              		.thumb_func
 479              		.fpu softvfp
 481              	_ZN14TickSubscriber9subscribeEv:
 482              	.LFB160:
 123:../../src/timers.h **** 
 124:../../src/timers.h **** 
 125:../../src/timers.h **** void TickSubscriber::subscribe()
 126:../../src/timers.h **** {
 483              		.loc 1 126 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              		@ link register save eliminated.
 488              	.LVL29:
 127:../../src/timers.h ****    if (not subscribed) {
 489              		.loc 1 127 0
 490 0000 037B     		ldrb	r3, [r0, #12]
 491 0002 002B     		cmp	r3, #0
 492 0004 0CD1     		bne	.L32
 493              	.LVL30:
 494              	.LBB825:
 495              	.LBB826:
 128:../../src/timers.h ****       subscribed = true;
 496              		.loc 1 128 0
 497 0006 0133     		adds	r3, r3, #1
 498 0008 0373     		strb	r3, [r0, #12]
 499              	.LVL31:
 500              	.LBB827:
 501              	.LBB828:
 502              	.LBB829:
  43:../../src/list.h ****    if (last)
 503              		.loc 4 43 0
 504 000a 064B     		ldr	r3, .L40
 505 000c 5A68     		ldr	r2, [r3, #4]
 506 000e 4260     		str	r2, [r0, #4]
  44:../../src/list.h ****       last->next = p;
 507              		.loc 4 44 0
 508 0010 002A     		cmp	r2, #0
 509 0012 00D0     		beq	.L35
  45:../../src/list.h ****    last = p;
 510              		.loc 4 45 0
 511 0014 9060     		str	r0, [r2, #8]
 512              	.L35:
  47:../../src/list.h ****       first = p;
 513              		.loc 4 47 0
 514 0016 1A68     		ldr	r2, [r3]
  46:../../src/list.h ****    if (not first)
 515              		.loc 4 46 0
 516 0018 5860     		str	r0, [r3, #4]
  47:../../src/list.h ****       first = p;
 517              		.loc 4 47 0
 518 001a 002A     		cmp	r2, #0
ARM GAS  /tmp/cc2puB6n.s 			page 16


 519 001c 00D1     		bne	.L32
  48:../../src/list.h **** }
 520              		.loc 4 48 0
 521 001e 1860     		str	r0, [r3]
 522              	.LVL32:
 523              	.L32:
 524              	.LBE829:
 525              	.LBE828:
 526              	.LBE827:
 527              	.LBE826:
 528              	.LBE825:
 129:../../src/timers.h ****       tickUpdater.subscribe (this);
 130:../../src/timers.h ****    }
 131:../../src/timers.h **** }...
 529              		.loc 1 131 0
 530              		@ sp needed
 531 0020 7047     		bx	lr
 532              	.L41:
 533 0022 C046     		.align	2
 534              	.L40:
 535 0024 00000000 		.word	.LANCHOR0
 536              		.cfi_endproc
 537              	.LFE160:
 539              		.section	.text._ZN5Timer5startEm,"ax",%progbits
 540              		.align	1
 541              		.global	_ZN5Timer5startEm
 542              		.syntax unified
 543              		.code	16
 544              		.thumb_func
 545              		.fpu softvfp
 547              	_ZN5Timer5startEm:
 548              	.LFB148:
  72:../../src/timers.h **** {
 549              		.loc 1 72 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553              	.LVL33:
 554 0000 10B5     		push	{r4, lr}
 555              	.LCFI3:
 556              		.cfi_def_cfa_offset 8
 557              		.cfi_offset 4, -8
 558              		.cfi_offset 14, -4
  73:../../src/timers.h ****    timeSet = ms;
 559              		.loc 1 73 0
 560 0002 0161     		str	r1, [r0, #16]
  74:../../src/timers.h ****    subscribe();
 561              		.loc 1 74 0
 562 0004 FFF7FEFF 		bl	_ZN14TickSubscriber9subscribeEv
 563              	.LVL34:
  75:../../src/timers.h **** }
 564              		.loc 1 75 0
 565              		@ sp needed
 566 0008 10BD     		pop	{r4, pc}
 567              		.cfi_endproc
 568              	.LFE148:
 570              		.section	.text._ZN5Timer5startEv,"ax",%progbits
ARM GAS  /tmp/cc2puB6n.s 			page 17


 571              		.align	1
 572              		.global	_ZN5Timer5startEv
 573              		.syntax unified
 574              		.code	16
 575              		.thumb_func
 576              		.fpu softvfp
 578              	_ZN5Timer5startEv:
 579              	.LFB154:
 108:../../src/timers.h **** void     Timer::start()      { subscribe();  }
 580              		.loc 1 108 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              	.LVL35:
 585 0000 10B5     		push	{r4, lr}
 586              	.LCFI4:
 587              		.cfi_def_cfa_offset 8
 588              		.cfi_offset 4, -8
 589              		.cfi_offset 14, -4
 108:../../src/timers.h **** void     Timer::start()      { subscribe();  }
 590              		.loc 1 108 0
 591 0002 FFF7FEFF 		bl	_ZN14TickSubscriber9subscribeEv
 592              	.LVL36:
 593              		@ sp needed
 594 0006 10BD     		pop	{r4, pc}
 595              		.cfi_endproc
 596              	.LFE154:
 598              		.section	.text._ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE14uart_interrupt9interruptEv,
 599              		.align	1
 600              		.syntax unified
 601              		.code	16
 602              		.thumb_func
 603              		.fpu softvfp
 605              	_ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE14uart_interrupt9interruptEv:
 606              	.LFB3030:
  63:../../src/modbus_slave.h **** 
  64:../../src/modbus_slave.h ****    using Parent = Modbus_slave;
  65:../../src/modbus_slave.h **** 
  66:../../src/modbus_slave.h ****    struct uart_interrupt : Interrupting
  67:../../src/modbus_slave.h ****    {
  68:../../src/modbus_slave.h ****       Parent& parent;
  69:../../src/modbus_slave.h ****       uart_interrupt (Parent& parent) : parent(parent) {
  70:../../src/modbus_slave.h ****          parent.interrupt_usart.subscribe (this);
  71:../../src/modbus_slave.h ****       }
  72:../../src/modbus_slave.h ****       void interrupt() override {parent.uartInterrupt();} 
 607              		.loc 2 72 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              	.LVL37:
 612 0000 10B5     		push	{r4, lr}
 613              	.LCFI5:
 614              		.cfi_def_cfa_offset 8
 615              		.cfi_offset 4, -8
 616              		.cfi_offset 14, -4
 617              		.loc 2 72 0
 618 0002 8068     		ldr	r0, [r0, #8]
ARM GAS  /tmp/cc2puB6n.s 			page 18


 619              	.LVL38:
 620              	.LBB842:
 621              	.LBB843:
  50:../../src/modbus_slave.h ****          subscribe();
 622              		.loc 2 50 0
 623 0004 0269     		ldr	r2, [r0, #16]
 624              	.LVL39:
 625              	.LBB844:
 626              	.LBB845:
 627              		.file 5 "../../src/uart.h"
   1:../../src/uart.h **** #pragma once
   2:../../src/uart.h **** 
   3:../../src/uart.h **** 
   4:../../src/uart.h **** #include <array>
   5:../../src/uart.h **** #include <type_traits>
   6:../../src/uart.h **** #include "periph_usart.h"
   7:../../src/uart.h **** #include "periph_dma.h"
   8:../../src/uart.h **** #include "net_buffer.h"
   9:../../src/uart.h **** 
  10:../../src/uart.h **** 
  11:../../src/uart.h **** #if defined(USE_MOCK_DMA) or defined(USE_MOCK_USART)
  12:../../src/uart.h **** using namespace mock;
  13:../../src/uart.h **** #define NS mock
  14:../../src/uart.h **** #else
  15:../../src/uart.h **** using namespace mcu;
  16:../../src/uart.h **** #define NS 
  17:../../src/uart.h **** #endif
  18:../../src/uart.h **** 
  19:../../src/uart.h **** template<size_t buffer_size = 255>
  20:../../src/uart.h **** class UART_sized
  21:../../src/uart.h **** {
  22:../../src/uart.h ****    Pin& tx;
  23:../../src/uart.h ****    Pin& rx;
  24:../../src/uart.h ****    Pin& rts;
  25:../../src/uart.h ****    Pin& led;
  26:../../src/uart.h ****    USART& usart;
  27:../../src/uart.h ****    DMA_stream& TXstream;
  28:../../src/uart.h ****    DMA_stream& RXstream;
  29:../../src/uart.h ****    const mcu::Periph uart_periph;
  30:../../src/uart.h **** 
  31:../../src/uart.h **** public:
  32:../../src/uart.h ****    using Parity         = USART::Parity;
  33:../../src/uart.h ****    using WakeMethod     = USART::WakeMethod;
  34:../../src/uart.h ****    using DataBits       = USART::DataBits;
  35:../../src/uart.h ****    using BreakDetection = USART::BreakDetection;
  36:../../src/uart.h ****    using StopBits       = USART::StopBits;
  37:../../src/uart.h ****    using Baudrate       = USART::Baudrate;
  38:../../src/uart.h ****    using DataSize       = DMA_stream::DataSize;
  39:../../src/uart.h ****    using Priority       = DMA_stream::Priority;
  40:../../src/uart.h ****    using DataDirection  = DMA_stream::DataDirection;
  41:../../src/uart.h **** 
  42:../../src/uart.h ****    Net_buffer<buffer_size> buffer;
  43:../../src/uart.h **** 
  44:../../src/uart.h ****    UART_sized (
  45:../../src/uart.h ****         Pin& tx
  46:../../src/uart.h ****       , Pin& rx
  47:../../src/uart.h ****       , Pin& rts
ARM GAS  /tmp/cc2puB6n.s 			page 19


  48:../../src/uart.h ****       , Pin& led
  49:../../src/uart.h ****       , USART& usart
  50:../../src/uart.h ****       , DMA_stream& TXstream
  51:../../src/uart.h ****       , DMA_stream& RXstream
  52:../../src/uart.h ****       , mcu::Periph uart_periph
  53:../../src/uart.h ****    )  : tx       {tx}
  54:../../src/uart.h ****       , rx       {rx}
  55:../../src/uart.h ****       , rts      {rts}
  56:../../src/uart.h ****       , led      {led}
  57:../../src/uart.h ****       , usart    {usart}
  58:../../src/uart.h ****       , TXstream {TXstream}
  59:../../src/uart.h ****       , RXstream {RXstream}
  60:../../src/uart.h ****       , uart_periph {uart_periph}
  61:../../src/uart.h ****    {}
  62:../../src/uart.h **** 
  63:../../src/uart.h ****    struct Settings {
  64:../../src/uart.h ****       bool     parity_enable :1;
  65:../../src/uart.h ****       Parity   parity        :1;
  66:../../src/uart.h ****       DataBits data_bits     :1;
  67:../../src/uart.h ****       StopBits stop_bits     :2;
  68:../../src/uart.h ****       Baudrate baudrate      :3;
  69:../../src/uart.h ****       uint16_t res           :8;
  70:../../src/uart.h ****    };
  71:../../src/uart.h **** 
  72:../../src/uart.h ****    template <
  73:../../src/uart.h ****         mcu::Periph usart
  74:../../src/uart.h ****       , class TXpin
  75:../../src/uart.h ****       , class RXpin
  76:../../src/uart.h ****       , class RTSpin
  77:../../src/uart.h ****       , class LEDpin
  78:../../src/uart.h ****    > static auto& make();
  79:../../src/uart.h ****    void init (const Settings&);
  80:../../src/uart.h ****    void transmit();
  81:../../src/uart.h ****    void receive();
  82:../../src/uart.h ****    bool is_tx_complete();
  83:../../src/uart.h ****    bool is_IDLE();
  84:../../src/uart.h ****    
  85:../../src/uart.h ****    int modbus_time (Baudrate);
  86:../../src/uart.h ****    bool is_receiving() { return buffer.size() < (buffer_size - RXstream.qty_transactions_left()); }
  87:../../src/uart.h **** 
  88:../../src/uart.h **** };
  89:../../src/uart.h **** 
  90:../../src/uart.h **** using UART = UART_sized<>;
  91:../../src/uart.h **** 
  92:../../src/uart.h **** 
  93:../../src/uart.h **** 
  94:../../src/uart.h **** 
  95:../../src/uart.h **** 
  96:../../src/uart.h **** 
  97:../../src/uart.h **** 
  98:../../src/uart.h **** 
  99:../../src/uart.h **** 
 100:../../src/uart.h **** 
 101:../../src/uart.h **** 
 102:../../src/uart.h **** 
 103:../../src/uart.h **** 
 104:../../src/uart.h **** 
ARM GAS  /tmp/cc2puB6n.s 			page 20


 105:../../src/uart.h **** 
 106:../../src/uart.h **** 
 107:../../src/uart.h **** 
 108:../../src/uart.h **** 
 109:../../src/uart.h **** 
 110:../../src/uart.h **** 
 111:../../src/uart.h **** 
 112:../../src/uart.h **** 
 113:../../src/uart.h **** 
 114:../../src/uart.h **** 
 115:../../src/uart.h **** 
 116:../../src/uart.h **** 
 117:../../src/uart.h **** 
 118:../../src/uart.h **** 
 119:../../src/uart.h **** 
 120:../../src/uart.h **** 
 121:../../src/uart.h **** 
 122:../../src/uart.h **** 
 123:../../src/uart.h **** template<size_t buffer_size>
 124:../../src/uart.h **** template <mcu::Periph uart_periph, class TXpin, class RXpin, class RTSpin, class LEDpin> 
 125:../../src/uart.h **** auto& UART_sized<buffer_size>::make()
 126:../../src/uart.h **** {
 127:../../src/uart.h ****    USART::pin_static_assert<uart_periph, TXpin, RXpin>();
 128:../../src/uart.h ****    
 129:../../src/uart.h ****    constexpr auto TX_stream  = USART::default_stream<TXpin>();
 130:../../src/uart.h ****    constexpr auto RX_stream  = USART::default_stream<RXpin>();
 131:../../src/uart.h ****    constexpr auto TXpin_mode = USART::pin_mode<TXpin>();
 132:../../src/uart.h ****    constexpr auto RXpin_mode = USART::pin_mode<RXpin>();
 133:../../src/uart.h **** 
 134:../../src/uart.h ****    static UART_sized<buffer_size> uart {
 135:../../src/uart.h ****         Pin::make<TXpin, TXpin_mode>()
 136:../../src/uart.h ****       , Pin::make<RXpin, RXpin_mode>()
 137:../../src/uart.h ****       , Pin::make<RTSpin, mcu::PinMode::Output>()
 138:../../src/uart.h ****       , Pin::make<LEDpin, mcu::PinMode::Output>()
 139:../../src/uart.h ****       , mcu::make_reference<uart_periph>()
 140:../../src/uart.h ****       , mcu::make_reference<TX_stream>()
 141:../../src/uart.h ****       , mcu::make_reference<RX_stream>()
 142:../../src/uart.h ****       , uart_periph
 143:../../src/uart.h ****    };
 144:../../src/uart.h **** 
 145:../../src/uart.h ****    auto& rcc = REF(RCC);
 146:../../src/uart.h ****    rcc.clock_enable<uart_periph>();
 147:../../src/uart.h ****    uart.usart.tx_enable()
 148:../../src/uart.h ****              .rx_enable()
 149:../../src/uart.h ****              .DMA_tx_enable()
 150:../../src/uart.h ****              .DMA_rx_enable()
 151:../../src/uart.h ****              .enable_IDLE_interrupt()
 152:../../src/uart.h ****              .enable();
 153:../../src/uart.h ****    NS::NVIC_EnableIRQ(uart.usart.IRQn(uart_periph));
 154:../../src/uart.h **** 
 155:../../src/uart.h ****    rcc.clock_enable<TX_stream>();
 156:../../src/uart.h ****    uart.TXstream.direction(DataDirection::MemToPer)
 157:../../src/uart.h ****                 .set_memory_adr(size_t(uart.buffer.begin()))
 158:../../src/uart.h ****                 .set_periph_adr(uart.usart.transmit_data_adr())
 159:../../src/uart.h ****                 .inc_memory()
 160:../../src/uart.h ****                 .size_memory(DataSize::byte8)
 161:../../src/uart.h ****                 .size_periph(DataSize::byte8)
ARM GAS  /tmp/cc2puB6n.s 			page 21


 162:../../src/uart.h ****                 .enable_transfer_complete_interrupt();
 163:../../src/uart.h ****       NS::NVIC_EnableIRQ(uart.TXstream.IRQn(TX_stream));
 164:../../src/uart.h **** 
 165:../../src/uart.h ****    uart.RXstream.direction(DataDirection::PerToMem)
 166:../../src/uart.h ****             	 .set_memory_adr(size_t(uart.buffer.begin()))
 167:../../src/uart.h ****             	 .set_periph_adr(uart.usart.transmit_data_adr())
 168:../../src/uart.h ****             	 .set_qty_transactions(buffer_size)
 169:../../src/uart.h ****             	 .inc_memory()
 170:../../src/uart.h ****             	 .size_memory(DataSize::byte8)
 171:../../src/uart.h ****             	 .size_periph(DataSize::byte8);
 172:../../src/uart.h **** 
 173:../../src/uart.h ****    return uart;
 174:../../src/uart.h **** }
 175:../../src/uart.h **** 
 176:../../src/uart.h **** template<size_t buffer_size>
 177:../../src/uart.h **** void UART_sized<buffer_size>::init (const UART_sized<buffer_size>::Settings& set) 
 178:../../src/uart.h **** {
 179:../../src/uart.h ****    usart.set(set.baudrate, uart_periph)
 180:../../src/uart.h ****         .set(set.parity)
 181:../../src/uart.h ****         .set(set.data_bits)
 182:../../src/uart.h ****         .set(set.stop_bits);
 183:../../src/uart.h **** }
 184:../../src/uart.h **** 
 185:../../src/uart.h **** template<size_t buffer_size>
 186:../../src/uart.h **** void UART_sized<buffer_size>::transmit()
 187:../../src/uart.h **** {
 188:../../src/uart.h ****    rts = led = true;
 189:../../src/uart.h ****    RXstream.disable();
 190:../../src/uart.h ****    TXstream.disable()
 191:../../src/uart.h ****            .set_qty_transactions(buffer.size())
 192:../../src/uart.h ****            .enable();
 193:../../src/uart.h **** }
 194:../../src/uart.h **** 
 195:../../src/uart.h **** template<size_t buffer_size>
 196:../../src/uart.h **** void UART_sized<buffer_size>::receive()
 197:../../src/uart.h **** {
 198:../../src/uart.h ****    buffer.clear();
 199:../../src/uart.h ****    rts = led = false;
 200:../../src/uart.h ****    TXstream.disable();
 201:../../src/uart.h ****    RXstream.disable()
 202:../../src/uart.h ****            .enable();
 203:../../src/uart.h **** }
 204:../../src/uart.h **** 
 205:../../src/uart.h **** template<size_t buffer_size>
 206:../../src/uart.h **** int UART_sized<buffer_size>::modbus_time (Baudrate baudrate)
 207:../../src/uart.h **** {
 208:../../src/uart.h ****    return baudrate == Baudrate::BR9600  ? 4 :
 209:../../src/uart.h ****           baudrate == Baudrate::BR14400 ? 3 :
 210:../../src/uart.h ****           baudrate == Baudrate::BR19200 ? 2 :
 211:../../src/uart.h ****           baudrate == Baudrate::BR28800 ? 2 : 1;
 212:../../src/uart.h **** }
 213:../../src/uart.h **** 
 214:../../src/uart.h **** template<size_t buffer_size>
 215:../../src/uart.h **** bool UART_sized<buffer_size>::is_IDLE()
 216:../../src/uart.h **** {
 217:../../src/uart.h ****    auto res = usart.is_IDLE_interrupt();
 628              		.loc 5 217 0
ARM GAS  /tmp/cc2puB6n.s 			page 22


 629 0006 1369     		ldr	r3, [r2, #16]
 630              	.LVL40:
 631              	.LBB846:
 632              	.LBB847:
 633              		.file 6 "../../src/periph/f1_f4_usart.h"
   1:../../src/periph/f1_f4_usart.h **** #pragma once
   2:../../src/periph/f1_f4_usart.h **** 
   3:../../src/periph/f1_f4_usart.h **** #include <type_traits>
   4:../../src/periph/f1_f4_usart.h **** #if defined(STM32F1)
   5:../../src/periph/f1_f4_usart.h **** #include "f1_bits_usart.h"
   6:../../src/periph/f1_f4_usart.h **** #elif defined(STM32F4)
   7:../../src/periph/f1_f4_usart.h **** #include "f4_bits_usart.h"
   8:../../src/periph/f1_f4_usart.h **** #endif
   9:../../src/periph/f1_f4_usart.h **** #include "periph_rcc.h"
  10:../../src/periph/f1_f4_usart.h **** #include "pin.h"
  11:../../src/periph/f1_f4_usart.h **** #include "meta.h"
  12:../../src/periph/f1_f4_usart.h **** 
  13:../../src/periph/f1_f4_usart.h **** namespace mcu {
  14:../../src/periph/f1_f4_usart.h **** 
  15:../../src/periph/f1_f4_usart.h **** class USART {
  16:../../src/periph/f1_f4_usart.h ****    volatile USART_bits::SR  SR;   // USART Status register,                   offset: 0x00
  17:../../src/periph/f1_f4_usart.h ****    volatile uint32_t        DR;   // USART Data register,                     offset: 0x04
  18:../../src/periph/f1_f4_usart.h ****    volatile uint32_t        BRR;  // USART Baud rate register,                offset: 0x08
  19:../../src/periph/f1_f4_usart.h ****    volatile USART_bits::CR1 CR1;  // USART Control register 1,                offset: 0x0C
  20:../../src/periph/f1_f4_usart.h ****    volatile USART_bits::CR2 CR2;  // USART Control register 2,                offset: 0x10
  21:../../src/periph/f1_f4_usart.h ****    volatile USART_bits::CR3 CR3;  // USART Control register 3,                offset: 0x14
  22:../../src/periph/f1_f4_usart.h ****    volatile uint32_t        GTPR; // USART Guard time and prescaler register, offset: 0x18
  23:../../src/periph/f1_f4_usart.h **** 
  24:../../src/periph/f1_f4_usart.h **** public:
  25:../../src/periph/f1_f4_usart.h ****    using CMSIS_type     = USART_TypeDef;
  26:../../src/periph/f1_f4_usart.h ****    using Parity         = USART_bits::CR1::Parity;
  27:../../src/periph/f1_f4_usart.h ****    using WakeMethod     = USART_bits::CR1::WakeMethod;
  28:../../src/periph/f1_f4_usart.h ****    using DataBits       = USART_bits::CR1::DataBits;
  29:../../src/periph/f1_f4_usart.h ****    using BreakDetection = USART_bits::CR2::BreakDetection;
  30:../../src/periph/f1_f4_usart.h ****    using StopBits       = USART_bits::CR2::StopBits;
  31:../../src/periph/f1_f4_usart.h **** 
  32:../../src/periph/f1_f4_usart.h ****    enum Baudrate {
  33:../../src/periph/f1_f4_usart.h ****       BR9600   = 0b000, // modbus time 4 ms
  34:../../src/periph/f1_f4_usart.h ****       BR14400  = 0b001, // modbus time 3 ms
  35:../../src/periph/f1_f4_usart.h ****       BR19200  = 0b010, // modbus time 2 ms
  36:../../src/periph/f1_f4_usart.h ****       BR28800  = 0b011, // modbus time 2 ms
  37:../../src/periph/f1_f4_usart.h ****       BR38400  = 0b100, // modbus time 2 ms
  38:../../src/periph/f1_f4_usart.h ****       BR57600  = 0b101, // modbus time 2 ms
  39:../../src/periph/f1_f4_usart.h ****       BR76800  = 0b110, // modbus time 2 ms
  40:../../src/periph/f1_f4_usart.h ****       BR115200 = 0b111  // modbus time 2 ms
  41:../../src/periph/f1_f4_usart.h ****    };
  42:../../src/periph/f1_f4_usart.h **** 
  43:../../src/periph/f1_f4_usart.h ****    auto& like_CMSIS() { return *reinterpret_cast<CMSIS_type*>(this); }
  44:../../src/periph/f1_f4_usart.h **** 
  45:../../src/periph/f1_f4_usart.h ****    USART& set (Parity         v)         {CR1.PS    = v; return *this;}
  46:../../src/periph/f1_f4_usart.h ****    USART& set (DataBits       v)         {CR1.M     = v; return *this;}
  47:../../src/periph/f1_f4_usart.h ****    USART& set (StopBits       v)         {CR2.STOP  = v; return *this;}
  48:../../src/periph/f1_f4_usart.h ****    USART& set (WakeMethod     v)         {CR1.WAKE  = v; return *this;}
  49:../../src/periph/f1_f4_usart.h ****    USART& set (BreakDetection v)         {CR2.LBDL  = v; return *this;}
  50:../../src/periph/f1_f4_usart.h ****    // USART& send_byte (uint8_t  v)         {DR = v;        return *this;} // no test
  51:../../src/periph/f1_f4_usart.h ****    USART& set (Baudrate, Periph);
  52:../../src/periph/f1_f4_usart.h **** 
ARM GAS  /tmp/cc2puB6n.s 			page 23


  53:../../src/periph/f1_f4_usart.h ****    USART& enable        (){CR1.UE   = true;  return *this;}
  54:../../src/periph/f1_f4_usart.h ****    USART& disable       (){CR1.UE   = false; return *this;}
  55:../../src/periph/f1_f4_usart.h ****    USART& rx_enable     (){CR1.RE   = true;  return *this;}
  56:../../src/periph/f1_f4_usart.h ****    USART& rx_disable    (){CR1.RE   = false; return *this;}
  57:../../src/periph/f1_f4_usart.h ****    USART& tx_enable     (){CR1.TE   = true;  return *this;}
  58:../../src/periph/f1_f4_usart.h ****    USART& tx_disable    (){CR1.TE   = false; return *this;}
  59:../../src/periph/f1_f4_usart.h ****    USART& rts_enable    (){CR3.RTSE = true;  return *this;}
  60:../../src/periph/f1_f4_usart.h ****    USART& rts_disable   (){CR3.RTSE = false; return *this;}
  61:../../src/periph/f1_f4_usart.h ****    USART& DMA_tx_enable (){CR3.DMAT = true;  return *this;}
  62:../../src/periph/f1_f4_usart.h ****    USART& DMA_rx_enable (){CR3.DMAR = true;  return *this;}
  63:../../src/periph/f1_f4_usart.h ****    USART& parity_enable (){CR1.PCE  = true;  return *this;}
  64:../../src/periph/f1_f4_usart.h ****    USART& parity_disable(){CR1.PCE  = false; return *this;}
  65:../../src/periph/f1_f4_usart.h ****    // bool   is_ready_read (){return SR.RXNE;} // no test
  66:../../src/periph/f1_f4_usart.h **** 
  67:../../src/periph/f1_f4_usart.h ****    USART& enable_IDLE_interrupt          (){CR1.IDLEIE = true;  return *this;}
  68:../../src/periph/f1_f4_usart.h ****    bool   is_IDLE_interrupt              (){return SR.IDLE;}
 634              		.loc 6 68 0
 635 0008 1B68     		ldr	r3, [r3]
 636              	.LBE847:
 637              	.LBE846:
 218:../../src/uart.h ****    if (res)
 638              		.loc 5 218 0
 639 000a DB06     		lsls	r3, r3, #27
 640 000c 0DD5     		bpl	.L44
 641              	.LBB848:
 642              	.LBB849:
 643              		.file 7 "../../src/net_buffer.h"
   1:../../src/net_buffer.h **** #pragma once
   2:../../src/net_buffer.h **** 
   3:../../src/net_buffer.h **** #include <array>
   4:../../src/net_buffer.h **** #include <type_traits>
   5:../../src/net_buffer.h **** 
   6:../../src/net_buffer.h **** 
   7:../../src/net_buffer.h **** template<size_t size_>
   8:../../src/net_buffer.h **** class Net_buffer : public std::array<uint8_t,size_> {
   9:../../src/net_buffer.h ****    using Container = std::array<uint8_t,size_>;
  10:../../src/net_buffer.h ****    size_t begin_i {0};
  11:../../src/net_buffer.h ****    size_t end_i   {0};
  12:../../src/net_buffer.h ****    auto& base() { return *static_cast<Container*>(this); }
  13:../../src/net_buffer.h **** public:
  14:../../src/net_buffer.h ****    void clear() { begin_i = 0; end_i = 0; }
  15:../../src/net_buffer.h ****    auto begin() { return base().begin() + begin_i; }
  16:../../src/net_buffer.h ****    auto end()   { return base().begin() + end_i; }
  17:../../src/net_buffer.h ****    auto size()  { return end_i - begin_i; }
  18:../../src/net_buffer.h ****    void set_size (size_t v) { begin_i = 0; end_i = std::min(v,size_); }
 644              		.loc 7 18 0
 645 000e 0021     		movs	r1, #0
 646              	.LBE849:
 647              	.LBE848:
 219:../../src/uart.h ****       buffer.set_size (buffer_size - RXstream.qty_transactions_left());
 648              		.loc 5 219 0
 649 0010 9369     		ldr	r3, [r2, #24]
 650              	.LVL41:
 651              	.LBB853:
 652              	.LBB850:
 653              		.loc 7 18 0
 654 0012 FC32     		adds	r2, r2, #252
ARM GAS  /tmp/cc2puB6n.s 			page 24


 655              	.LVL42:
 656              	.LBE850:
 657              	.LBE853:
 658              	.LBB854:
 659              	.LBB855:
 660              		.file 8 "../../src/periph/f0_f1_periph_dma_stream.h"
   1:../../src/periph/f0_f1_periph_dma_stream.h **** #pragma once
   2:../../src/periph/f0_f1_periph_dma_stream.h **** 
   3:../../src/periph/f0_f1_periph_dma_stream.h **** #include "f0_f1_bits_dma_stream.h"
   4:../../src/periph/f0_f1_periph_dma_stream.h **** #include "periph_dma.h"
   5:../../src/periph/f0_f1_periph_dma_stream.h **** 
   6:../../src/periph/f0_f1_periph_dma_stream.h **** namespace mcu {
   7:../../src/periph/f0_f1_periph_dma_stream.h **** 
   8:../../src/periph/f0_f1_periph_dma_stream.h **** class DMA_stream {
   9:../../src/periph/f0_f1_periph_dma_stream.h ****    volatile DMA_bits::CCR CCR;   // DMA channel x configuration register      offset: 0x08 + 0d20 √
  10:../../src/periph/f0_f1_periph_dma_stream.h ****    volatile uint32_t      CNDTR; // DMA channel x number of data register     offset: 0x0C + 0d20 √
  11:../../src/periph/f0_f1_periph_dma_stream.h ****    volatile uint32_t      CPAR;  // DMA channel x peripheral address register offset: 0x10 + 0d20 √
  12:../../src/periph/f0_f1_periph_dma_stream.h ****    volatile uint32_t      CMAR;  // DMA channel x memory address register     offset: 0x14 + 0d20 √
  13:../../src/periph/f0_f1_periph_dma_stream.h **** 
  14:../../src/periph/f0_f1_periph_dma_stream.h **** public:
  15:../../src/periph/f0_f1_periph_dma_stream.h ****    using CMSIS_type    = DMA_Channel_TypeDef;
  16:../../src/periph/f0_f1_periph_dma_stream.h ****    using DataSize      = DMA_bits::CCR::DataSize;
  17:../../src/periph/f0_f1_periph_dma_stream.h ****    using Priority      = DMA_bits::CCR::Priority;
  18:../../src/periph/f0_f1_periph_dma_stream.h ****    using DataDirection = DMA_bits::CCR::DataDirection;
  19:../../src/periph/f0_f1_periph_dma_stream.h ****    using Channel       = DMA::Channel;
  20:../../src/periph/f0_f1_periph_dma_stream.h **** 
  21:../../src/periph/f0_f1_periph_dma_stream.h ****    auto& like_CMSIS() { return *reinterpret_cast<CMSIS_type*>(this); }
  22:../../src/periph/f0_f1_periph_dma_stream.h **** 
  23:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& enable       (){CCR.EN = true; while(not CCR.EN){} return *this;}
  24:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& disable      (){CCR.EN = false;  return *this;}
  25:../../src/periph/f0_f1_periph_dma_stream.h ****    bool        is_disable   (){return (not CCR.EN);}
  26:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& inc_memory   (){CCR.MINC = true; return *this;}
  27:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& inc_periph   (){CCR.PINC = true; return *this;}
  28:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& circular_mode(){CCR.CIRC = true; return *this;}
  29:../../src/periph/f0_f1_periph_dma_stream.h **** 
  30:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& set_memory_adr      (uint32_t v){CMAR  = v; return *this;}
  31:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& set_periph_adr      (uint32_t v){CPAR  = v; return *this;}
  32:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& set_qty_transactions(uint16_t v){CNDTR = v; return *this;}
  33:../../src/periph/f0_f1_periph_dma_stream.h **** 
  34:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& direction  (DataDirection d){CCR.DIR = d;   return *this;}
  35:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& size_memory(DataSize d)     {CCR.MSIZE = d; return *this;}
  36:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& size_periph(DataSize d)     {CCR.PSIZE = d; return *this;}
  37:../../src/periph/f0_f1_periph_dma_stream.h **** 
  38:../../src/periph/f0_f1_periph_dma_stream.h ****    static constexpr IRQn_Type IRQn (Periph);
  39:../../src/periph/f0_f1_periph_dma_stream.h **** 
  40:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& enable_transfer_complete_interrupt(){CCR.TCIE = true; return *this;}
  41:../../src/periph/f0_f1_periph_dma_stream.h **** 
  42:../../src/periph/f0_f1_periph_dma_stream.h ****    uint16_t qty_transactions_left(){return CNDTR;}
 661              		.loc 8 42 0
 662 0014 5B68     		ldr	r3, [r3, #4]
 663              	.LVL43:
 664              	.LBE855:
 665              	.LBE854:
 666              	.LBB856:
 667              	.LBB851:
 668              		.loc 7 18 0
 669 0016 5162     		str	r1, [r2, #36]
ARM GAS  /tmp/cc2puB6n.s 			page 25


 670              	.LVL44:
 671              	.LBE851:
 672              	.LBE856:
 673              		.loc 5 219 0
 674 0018 9BB2     		uxth	r3, r3
 675              	.LVL45:
 676 001a FF31     		adds	r1, r1, #255
 677 001c CB1A     		subs	r3, r1, r3
 678              	.LBB857:
 679              	.LBB852:
 680              		.loc 7 18 0
 681 001e 8B42     		cmp	r3, r1
 682 0020 00D9     		bls	.L46
 683 0022 0B00     		movs	r3, r1
 684              	.L46:
 685 0024 9362     		str	r3, [r2, #40]
 686              	.LVL46:
 687              	.LBE852:
 688              	.LBE857:
 689              	.LBE845:
 690              	.LBE844:
  51:../../src/modbus_slave.h ****    }
 691              		.loc 2 51 0
 692 0026 FFF7FEFF 		bl	_ZN14TickSubscriber9subscribeEv
 693              	.LVL47:
 694              	.L44:
 695              	.LBE843:
 696              	.LBE842:
 697              		.loc 2 72 0
 698              		@ sp needed
 699 002a 10BD     		pop	{r4, pc}
 700              		.cfi_endproc
 701              	.LFE3030:
 703              		.global	__aeabi_uidiv
 704              		.global	__aeabi_idiv
 705              		.section	.text._ZN3mcu5USART3setENS0_8BaudrateENS_6PeriphE,"ax",%progbits
 706              		.align	1
 707              		.global	_ZN3mcu5USART3setENS0_8BaudrateENS_6PeriphE
 708              		.syntax unified
 709              		.code	16
 710              		.thumb_func
 711              		.fpu softvfp
 713              	_ZN3mcu5USART3setENS0_8BaudrateENS_6PeriphE:
 714              	.LFB2275:
  69:../../src/periph/f1_f4_usart.h ****    USART& enable_tx_complete_interrupt   (){CR1.TCIE   = true;  return *this;}
  70:../../src/periph/f1_f4_usart.h ****    USART& disable_tx_complete_interrupt  (){CR1.TCIE   = false; return *this;}
  71:../../src/periph/f1_f4_usart.h ****    bool   is_tx_complete                 (){return SR.TC;}
  72:../../src/periph/f1_f4_usart.h ****    bool   is_tx_complete_interrupt_enable(){return CR1.TCIE;}
  73:../../src/periph/f1_f4_usart.h **** 
  74:../../src/periph/f1_f4_usart.h ****    
  75:../../src/periph/f1_f4_usart.h ****    VIRTUAL_TEST uint32_t read_SR() { return *reinterpret_cast<volatile uint32_t*>(&SR); }
  76:../../src/periph/f1_f4_usart.h ****    VIRTUAL_TEST uint32_t read_DR() { return DR; }
  77:../../src/periph/f1_f4_usart.h ****    USART& clear_interrupt_flags()
  78:../../src/periph/f1_f4_usart.h ****    {
  79:../../src/periph/f1_f4_usart.h ****       [[maybe_unused]] auto 
  80:../../src/periph/f1_f4_usart.h ****       _ = read_SR();
  81:../../src/periph/f1_f4_usart.h ****       IF_TEST_WAIT_MS(100);
ARM GAS  /tmp/cc2puB6n.s 			page 26


  82:../../src/periph/f1_f4_usart.h ****       _ = read_DR();
  83:../../src/periph/f1_f4_usart.h ****       return *this;
  84:../../src/periph/f1_f4_usart.h ****    }
  85:../../src/periph/f1_f4_usart.h **** 
  86:../../src/periph/f1_f4_usart.h ****    size_t receive_data_adr () {return reinterpret_cast<size_t>(&DR);}
  87:../../src/periph/f1_f4_usart.h ****    size_t transmit_data_adr() {return reinterpret_cast<size_t>(&DR);}
  88:../../src/periph/f1_f4_usart.h **** 
  89:../../src/periph/f1_f4_usart.h ****    
  90:../../src/periph/f1_f4_usart.h ****    static constexpr IRQn_Type IRQn(Periph);
  91:../../src/periph/f1_f4_usart.h ****    template<class Pin> static constexpr Periph default_stream();
  92:../../src/periph/f1_f4_usart.h ****    template<class Pin> static constexpr PinMode pin_mode();
  93:../../src/periph/f1_f4_usart.h ****    template<Periph usart, class TXpin, class RXpin> static void pin_static_assert();
  94:../../src/periph/f1_f4_usart.h **** };
  95:../../src/periph/f1_f4_usart.h **** 
  96:../../src/periph/f1_f4_usart.h **** 
  97:../../src/periph/f1_f4_usart.h **** 
  98:../../src/periph/f1_f4_usart.h **** #if not defined(USE_MOCK_USART)
  99:../../src/periph/f1_f4_usart.h **** SFINAE(USART1,USART) make_reference() {return *reinterpret_cast<USART*>(USART1_BASE);}
 100:../../src/periph/f1_f4_usart.h **** SFINAE(USART2,USART) make_reference() {return *reinterpret_cast<USART*>(USART2_BASE);}
 101:../../src/periph/f1_f4_usart.h **** SFINAE(USART3,USART) make_reference() {return *reinterpret_cast<USART*>(USART3_BASE);}
 102:../../src/periph/f1_f4_usart.h **** #if defined(STM32F4)
 103:../../src/periph/f1_f4_usart.h **** SFINAE(USART4,USART) make_reference() {return *reinterpret_cast<USART*>(UART4_BASE );}
 104:../../src/periph/f1_f4_usart.h **** SFINAE(USART5,USART) make_reference() {return *reinterpret_cast<USART*>(UART5_BASE );}
 105:../../src/periph/f1_f4_usart.h **** SFINAE(USART6,USART) make_reference() {return *reinterpret_cast<USART*>(USART6_BASE);}
 106:../../src/periph/f1_f4_usart.h **** #endif
 107:../../src/periph/f1_f4_usart.h **** #endif
 108:../../src/periph/f1_f4_usart.h **** 
 109:../../src/periph/f1_f4_usart.h **** 
 110:../../src/periph/f1_f4_usart.h **** 
 111:../../src/periph/f1_f4_usart.h **** 
 112:../../src/periph/f1_f4_usart.h **** 
 113:../../src/periph/f1_f4_usart.h **** 
 114:../../src/periph/f1_f4_usart.h **** 
 115:../../src/periph/f1_f4_usart.h **** 
 116:../../src/periph/f1_f4_usart.h **** 
 117:../../src/periph/f1_f4_usart.h **** 
 118:../../src/periph/f1_f4_usart.h **** 
 119:../../src/periph/f1_f4_usart.h **** 
 120:../../src/periph/f1_f4_usart.h **** 
 121:../../src/periph/f1_f4_usart.h **** 
 122:../../src/periph/f1_f4_usart.h **** 
 123:../../src/periph/f1_f4_usart.h **** 
 124:../../src/periph/f1_f4_usart.h **** 
 125:../../src/periph/f1_f4_usart.h **** USART& USART::set (Baudrate baudrate, Periph p)
 126:../../src/periph/f1_f4_usart.h **** {
 715              		.loc 6 126 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              	.LVL48:
 720 0000 10B5     		push	{r4, lr}
 721              	.LCFI6:
 722              		.cfi_def_cfa_offset 8
 723              		.cfi_offset 4, -8
 724              		.cfi_offset 14, -4
 725              		.loc 6 126 0
 726 0002 0400     		movs	r4, r0
ARM GAS  /tmp/cc2puB6n.s 			page 27


 727              	.LBB872:
 728              	.LBB873:
 729              		.file 9 "../../src/periph/f1_rcc.h"
   1:../../src/periph/f1_rcc.h **** #pragma once
   2:../../src/periph/f1_rcc.h **** 
   3:../../src/periph/f1_rcc.h **** #include "f1_bits_rcc.h"
   4:../../src/periph/f1_rcc.h **** 
   5:../../src/periph/f1_rcc.h **** namespace mcu {
   6:../../src/periph/f1_rcc.h **** 
   7:../../src/periph/f1_rcc.h **** class RCC {
   8:../../src/periph/f1_rcc.h ****    __IO RCC_bits::CR      CR;       // RCC clock control register,                offset: 0x00
   9:../../src/periph/f1_rcc.h ****    __IO RCC_bits::CFGR    CFGR;     // RCC clock configuration register,          offset: 0x04
  10:../../src/periph/f1_rcc.h ****    __IO uint32_t          CIR;      // RCC clock interrupt register,              offset: 0x08
  11:../../src/periph/f1_rcc.h ****    __IO uint32_t          APB2RSTR; // RCC APB2 peripheral reset register,        offset: 0x0C
  12:../../src/periph/f1_rcc.h ****    __IO uint32_t          APB1RSTR; // RCC APB1 peripheral reset register,        offset: 0x10
  13:../../src/periph/f1_rcc.h ****    __IO RCC_bits::AHBENR  AHBENR;   // RCC AHB peripheral clock register,         offset: 0x14
  14:../../src/periph/f1_rcc.h ****    __IO RCC_bits::APB2ENR APB2ENR;  // RCC APB2 peripheral clock enable register, offset: 0x18
  15:../../src/periph/f1_rcc.h ****    __IO RCC_bits::APB1ENR APB1ENR;  // RCC APB1 peripheral clock enable register, offset: 0x1C
  16:../../src/periph/f1_rcc.h ****    __IO uint32_t          BDCR;     // RCC Backup domain control register,        offset: 0x20
  17:../../src/periph/f1_rcc.h ****    __IO uint32_t          CSR;      // RCC clock control & status register,       offset: 0x24
  18:../../src/periph/f1_rcc.h **** 
  19:../../src/periph/f1_rcc.h **** public:
  20:../../src/periph/f1_rcc.h ****    using CMSIS_type    = RCC_TypeDef;
  21:../../src/periph/f1_rcc.h ****    using AHBprescaler  = RCC_bits::CFGR::AHBprescaler;
  22:../../src/periph/f1_rcc.h ****    using APBprescaler  = RCC_bits::CFGR::APBprescaler;
  23:../../src/periph/f1_rcc.h ****    using ADCprescaler  = RCC_bits::CFGR::ADCprescaler;
  24:../../src/periph/f1_rcc.h ****    using SystemClock   = RCC_bits::CFGR::SystemClock;
  25:../../src/periph/f1_rcc.h ****    using PLLsource     = RCC_bits::CFGR::PLLsource;
  26:../../src/periph/f1_rcc.h ****    using PLLmultiplier = RCC_bits::CFGR::PLLmultiplier;
  27:../../src/periph/f1_rcc.h **** 
  28:../../src/periph/f1_rcc.h ****    auto& like_CMSIS() { return *reinterpret_cast<CMSIS_type*>(this); }
  29:../../src/periph/f1_rcc.h **** 
  30:../../src/periph/f1_rcc.h ****    RCC& set       (AHBprescaler  v) { CFGR.HPRE   = v; return *this; } //
  31:../../src/periph/f1_rcc.h ****    RCC& set_APB1  (APBprescaler  v) { CFGR.PPRE1  = v; return *this; } //
  32:../../src/periph/f1_rcc.h ****    RCC& set_APB2  (APBprescaler  v) { CFGR.PPRE2  = v; return *this; } //
  33:../../src/periph/f1_rcc.h ****    // RCC& set       (ADCprescaler  v) { CFGR.ADCPRE = v; return *this; } // dont use yet
  34:../../src/periph/f1_rcc.h ****    RCC& set       (SystemClock   v) { CFGR.SW     = v; return *this; } //
  35:../../src/periph/f1_rcc.h ****    RCC& set       (PLLsource     v) { CFGR.PLLSRC = v; return *this; } //
  36:../../src/periph/f1_rcc.h ****    RCC& set       (PLLmultiplier v) { CFGR.PLLMUL = v; return *this; } //
  37:../../src/periph/f1_rcc.h **** 
  38:../../src/periph/f1_rcc.h ****    RCC& on_HSE        () { CR.HSEON = true;         return *this; }
  39:../../src/periph/f1_rcc.h ****    RCC& wait_HSE_ready() { while (not CR.HSERDY) {} return *this; }
  40:../../src/periph/f1_rcc.h ****    RCC& on_PLL        () { CR.PLLON = true;         return *this; }
  41:../../src/periph/f1_rcc.h ****    RCC& wait_PLL_ready() { while (not CR.PLLRDY) {} return *this; }
  42:../../src/periph/f1_rcc.h **** 
  43:../../src/periph/f1_rcc.h ****    size_t get_APB1_clock(){return get_APB_clock (CFGR.PPRE1);}
  44:../../src/periph/f1_rcc.h ****    size_t get_APB2_clock(){return get_APB_clock (CFGR.PPRE2);}
  45:../../src/periph/f1_rcc.h **** 
  46:../../src/periph/f1_rcc.h ****    template<Periph p> void clock_enable()
  47:../../src/periph/f1_rcc.h ****    {
  48:../../src/periph/f1_rcc.h ****       if      constexpr (p == Periph::GPIOA) APB2ENR.IOPAEN = true;
  49:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOB) APB2ENR.IOPBEN = true;
  50:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
  51:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOD) APB2ENR.IOPDEN = true;
  52:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOE) APB2ENR.IOPEEN = true;
  53:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::AFIO ) APB2ENR.AFIOEN = true;
  54:../../src/periph/f1_rcc.h **** 
ARM GAS  /tmp/cc2puB6n.s 			page 28


  55:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::USART1) APB2ENR.USART1EN = true;
  56:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::USART2) APB1ENR.USART2EN = true;
  57:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::USART3) APB1ENR.USART3EN = true;
  58:../../src/periph/f1_rcc.h **** 
  59:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::DMA1) AHBENR.DMA1EN = true;
  60:../../src/periph/f1_rcc.h ****       else if constexpr (
  61:../../src/periph/f1_rcc.h ****             p == Periph::DMA1_stream1
  62:../../src/periph/f1_rcc.h ****          or p == Periph::DMA1_stream2
  63:../../src/periph/f1_rcc.h ****          or p == Periph::DMA1_stream3
  64:../../src/periph/f1_rcc.h ****          or p == Periph::DMA1_stream4
  65:../../src/periph/f1_rcc.h ****          or p == Periph::DMA1_stream5
  66:../../src/periph/f1_rcc.h ****          or p == Periph::DMA1_stream6
  67:../../src/periph/f1_rcc.h ****          or p == Periph::DMA1_stream7
  68:../../src/periph/f1_rcc.h ****       )
  69:../../src/periph/f1_rcc.h ****          clock_enable<Periph::DMA1>();
  70:../../src/periph/f1_rcc.h **** 
  71:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::TIM4) APB1ENR.TIM4EN = true;
  72:../../src/periph/f1_rcc.h ****       static_assert (
  73:../../src/periph/f1_rcc.h ****             p == Periph::GPIOA  or p == Periph::GPIOB  or p == Periph::GPIOC
  74:../../src/periph/f1_rcc.h ****          or p == Periph::GPIOD  or p == Periph::GPIOE  or p == Periph::AFIO
  75:../../src/periph/f1_rcc.h ****          or p == Periph::USART1 or p == Periph::USART2 or p == Periph::USART3
  76:../../src/periph/f1_rcc.h ****          or p == Periph::DMA1   or p == Periph::TIM4
  77:../../src/periph/f1_rcc.h ****          or p == Periph::DMA1_stream1 or p == Periph::DMA1_stream2 or p == Periph::DMA1_stream3
  78:../../src/periph/f1_rcc.h ****          or p == Periph::DMA1_stream4 or p == Periph::DMA1_stream5 or p == Periph::DMA1_stream6
  79:../../src/periph/f1_rcc.h ****          or p == Periph::DMA1_stream6 or p == Periph::DMA1_stream7
  80:../../src/periph/f1_rcc.h ****          , "–¥–æ–ø–∏—à–∏ clock_enable"
  81:../../src/periph/f1_rcc.h ****       );
  82:../../src/periph/f1_rcc.h ****    }
  83:../../src/periph/f1_rcc.h **** 
  84:../../src/periph/f1_rcc.h ****    auto clock (Periph p)
  85:../../src/periph/f1_rcc.h ****    {
  86:../../src/periph/f1_rcc.h ****       if (p == Periph::USART1) 
 730              		.loc 9 86 0
 731 0004 072A     		cmp	r2, #7
 732 0006 19D1     		bne	.L51
 733              	.LVL49:
 734              	.LBB874:
 735              	.LBB875:
  44:../../src/periph/f1_rcc.h **** 
 736              		.loc 9 44 0
 737 0008 204B     		ldr	r3, .L84
 738 000a 5B68     		ldr	r3, [r3, #4]
 739 000c 9B04     		lsls	r3, r3, #18
 740              	.LVL50:
 741              	.L83:
 742              	.LBE875:
 743              	.LBE874:
 744              	.LBB886:
 745              	.LBB887:
  43:../../src/periph/f1_rcc.h ****    size_t get_APB2_clock(){return get_APB_clock (CFGR.PPRE2);}
 746              		.loc 9 43 0
 747 000e 5B0F     		lsrs	r3, r3, #29
 748              	.LVL51:
 749              	.LBB888:
 750              	.LBB889:
  87:../../src/periph/f1_rcc.h ****          return get_APB2_clock();
  88:../../src/periph/f1_rcc.h ****       else if (p == Periph::USART2 or p == Periph::USART3)
ARM GAS  /tmp/cc2puB6n.s 			page 29


  89:../../src/periph/f1_rcc.h ****          return get_APB1_clock();
  90:../../src/periph/f1_rcc.h ****       return size_t(0);
  91:../../src/periph/f1_rcc.h ****    }
  92:../../src/periph/f1_rcc.h **** 
  93:../../src/periph/f1_rcc.h **** 
  94:../../src/periph/f1_rcc.h **** private:
  95:../../src/periph/f1_rcc.h ****    size_t get_APB_clock (APBprescaler v)
  96:../../src/periph/f1_rcc.h ****    {
  97:../../src/periph/f1_rcc.h ****       return v == APBprescaler::APBnotdiv ? F_CPU     :
 751              		.loc 9 97 0
 752 0010 1CD0     		beq	.L68
 753 0012 042B     		cmp	r3, #4
 754 0014 1CD0     		beq	.L69
 755              	.LVL52:
 756              	.LBB890:
 757              	.LBB891:
 758 0016 052B     		cmp	r3, #5
 759 0018 1CD0     		beq	.L70
 760              	.LBE891:
 761              	.LBE890:
 762              	.LBE889:
 763              	.LBE888:
 764              	.LBE887:
 765              	.LBE886:
 766              	.LBB893:
 767              	.LBB884:
 768              	.LBB876:
 769              	.LBB877:
 770              	.LBB878:
 771              	.LBB879:
 772 001a 063B     		subs	r3, r3, #6
 773 001c 5A1E     		subs	r2, r3, #1
 774 001e 9341     		sbcs	r3, r3, r2
 775 0020 1B4A     		ldr	r2, .L84+4
 776 0022 5B42     		rsbs	r3, r3, #0
 777 0024 1340     		ands	r3, r2
 778 0026 1B4A     		ldr	r2, .L84+8
 779 0028 9B18     		adds	r3, r3, r2
 780              	.LVL53:
 781              	.L52:
 782              	.LBE879:
 783              	.LBE878:
 784              	.LBE877:
 785              	.LBE876:
 786              	.LBE884:
 787              	.LBE893:
 788              	.LBE873:
 789              	.LBE872:
 127:../../src/periph/f1_f4_usart.h ****    auto clock = REF(RCC).clock(p);
 128:../../src/periph/f1_f4_usart.h ****    switch (baudrate) {
 790              		.loc 6 128 0
 791 002a 0729     		cmp	r1, #7
 792 002c 1AD8     		bhi	.L53
 793 002e 0800     		movs	r0, r1
 794              	.LVL54:
 795 0030 FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 796              	.L55:
ARM GAS  /tmp/cc2puB6n.s 			page 30


 797 0034 12       		.byte	(.L54-.L55)/2
 798 0035 1A       		.byte	(.L56-.L55)/2
 799 0036 1C       		.byte	(.L57-.L55)/2
 800 0037 1F       		.byte	(.L58-.L55)/2
 801 0038 21       		.byte	(.L59-.L55)/2
 802 0039 24       		.byte	(.L60-.L55)/2
 803 003a 26       		.byte	(.L61-.L55)/2
 804 003b 29       		.byte	(.L62-.L55)/2
 805              	.LVL55:
 806              		.p2align 1
 807              	.L51:
 808              	.LBB897:
 809              	.LBB896:
  88:../../src/periph/f1_rcc.h ****          return get_APB1_clock();
 810              		.loc 9 88 0
 811 003c 083A     		subs	r2, r2, #8
 812              	.LVL56:
  90:../../src/periph/f1_rcc.h ****    }
 813              		.loc 9 90 0
 814 003e 0023     		movs	r3, #0
  88:../../src/periph/f1_rcc.h ****          return get_APB1_clock();
 815              		.loc 9 88 0
 816 0040 012A     		cmp	r2, #1
 817 0042 F2D8     		bhi	.L52
 818              	.LVL57:
 819              	.LBB894:
 820              	.LBB892:
  43:../../src/periph/f1_rcc.h ****    size_t get_APB2_clock(){return get_APB_clock (CFGR.PPRE2);}
 821              		.loc 9 43 0
 822 0044 114B     		ldr	r3, .L84
 823 0046 5B68     		ldr	r3, [r3, #4]
 824 0048 5B05     		lsls	r3, r3, #21
 825 004a E0E7     		b	.L83
 826              	.LVL58:
 827              	.L68:
 828              	.LBE892:
 829              	.LBE894:
 830              	.LBB895:
 831              	.LBB885:
 832              	.LBB883:
 833              	.LBB882:
 834              		.loc 9 97 0
 835 004c 124B     		ldr	r3, .L84+12
 836 004e ECE7     		b	.L52
 837              	.L69:
 838 0050 124B     		ldr	r3, .L84+16
 839 0052 EAE7     		b	.L52
 840              	.L70:
 841              	.LBB881:
 842              	.LBB880:
 843 0054 124B     		ldr	r3, .L84+20
 844 0056 E8E7     		b	.L52
 845              	.LVL59:
 846              	.L54:
 847              	.LBE880:
 848              	.LBE881:
 849              	.LBE882:
ARM GAS  /tmp/cc2puB6n.s 			page 31


 850              	.LBE883:
 851              	.LBE885:
 852              	.LBE895:
 853              	.LBE896:
 854              	.LBE897:
 129:../../src/periph/f1_f4_usart.h ****       case BR9600:   BRR = clock/9600  ; break;
 855              		.loc 6 129 0
 856 0058 9621     		movs	r1, #150
 857              	.LVL60:
 858              	.L77:
 130:../../src/periph/f1_f4_usart.h ****       case BR14400:  BRR = clock/14400 ; break;
 859              		.loc 6 130 0
 860 005a 8901     		lsls	r1, r1, #6
 861              	.L73:
 131:../../src/periph/f1_f4_usart.h ****       case BR19200:  BRR = clock/19200 ; break;
 132:../../src/periph/f1_f4_usart.h ****       case BR28800:  BRR = clock/28800 ; break;
 133:../../src/periph/f1_f4_usart.h ****       case BR38400:  BRR = clock/38400 ; break;
 134:../../src/periph/f1_f4_usart.h ****       case BR57600:  BRR = clock/57600 ; break;
 135:../../src/periph/f1_f4_usart.h ****       case BR76800:  BRR = clock/76800 ; break;
 136:../../src/periph/f1_f4_usart.h ****       case BR115200: BRR = clock/115200; break;
 862              		.loc 6 136 0
 863 005c 1800     		movs	r0, r3
 864 005e FFF7FEFF 		bl	__aeabi_uidiv
 865              	.LVL61:
 866 0062 A060     		str	r0, [r4, #8]
 867              	.L53:
 137:../../src/periph/f1_f4_usart.h ****    }
 138:../../src/periph/f1_f4_usart.h ****    return *this;
 139:../../src/periph/f1_f4_usart.h **** }
 868              		.loc 6 139 0
 869 0064 2000     		movs	r0, r4
 870              		@ sp needed
 871              	.LVL62:
 872 0066 10BD     		pop	{r4, pc}
 873              	.LVL63:
 874              	.L56:
 130:../../src/periph/f1_f4_usart.h ****       case BR19200:  BRR = clock/19200 ; break;
 875              		.loc 6 130 0
 876 0068 E121     		movs	r1, #225
 877              	.LVL64:
 878 006a F6E7     		b	.L77
 879              	.LVL65:
 880              	.L57:
 131:../../src/periph/f1_f4_usart.h ****       case BR19200:  BRR = clock/19200 ; break;
 881              		.loc 6 131 0
 882 006c 9621     		movs	r1, #150
 883              	.LVL66:
 884              	.L79:
 132:../../src/periph/f1_f4_usart.h ****       case BR38400:  BRR = clock/38400 ; break;
 885              		.loc 6 132 0
 886 006e C901     		lsls	r1, r1, #7
 887 0070 F4E7     		b	.L73
 888              	.LVL67:
 889              	.L58:
 890 0072 E121     		movs	r1, #225
 891              	.LVL68:
 892 0074 FBE7     		b	.L79
ARM GAS  /tmp/cc2puB6n.s 			page 32


 893              	.LVL69:
 894              	.L59:
 133:../../src/periph/f1_f4_usart.h ****       case BR57600:  BRR = clock/57600 ; break;
 895              		.loc 6 133 0
 896 0076 9621     		movs	r1, #150
 897              	.LVL70:
 898              	.L78:
 134:../../src/periph/f1_f4_usart.h ****       case BR76800:  BRR = clock/76800 ; break;
 899              		.loc 6 134 0
 900 0078 0902     		lsls	r1, r1, #8
 901 007a EFE7     		b	.L73
 902              	.LVL71:
 903              	.L60:
 904 007c E121     		movs	r1, #225
 905              	.LVL72:
 906 007e FBE7     		b	.L78
 907              	.LVL73:
 908              	.L61:
 135:../../src/periph/f1_f4_usart.h ****       case BR115200: BRR = clock/115200; break;
 909              		.loc 6 135 0
 910 0080 9621     		movs	r1, #150
 911              	.LVL74:
 912              	.L74:
 136:../../src/periph/f1_f4_usart.h ****    }
 913              		.loc 6 136 0
 914 0082 4902     		lsls	r1, r1, #9
 915 0084 EAE7     		b	.L73
 916              	.LVL75:
 917              	.L62:
 918 0086 E121     		movs	r1, #225
 919              	.LVL76:
 920 0088 FBE7     		b	.L74
 921              	.L85:
 922 008a C046     		.align	2
 923              	.L84:
 924 008c 00100240 		.word	1073876992
 925 0090 E055BBFF 		.word	-4500000
 926 0094 40548900 		.word	9000000
 927 0098 00A24A04 		.word	72000000
 928 009c 00512502 		.word	36000000
 929 00a0 80A81201 		.word	18000000
 930              		.cfi_endproc
 931              	.LFE2275:
 933              		.section	.text._ZN3mcu3DMA21clear_interrupt_flagsENS0_7ChannelE,"ax",%progbits
 934              		.align	1
 935              		.global	_ZN3mcu3DMA21clear_interrupt_flagsENS0_7ChannelE
 936              		.syntax unified
 937              		.code	16
 938              		.thumb_func
 939              		.fpu softvfp
 941              	_ZN3mcu3DMA21clear_interrupt_flagsENS0_7ChannelE:
 942              	.LFB2282:
 943              		.file 10 "../../src/periph/f1_dma.h"
   1:../../src/periph/f1_dma.h **** #pragma once
   2:../../src/periph/f1_dma.h **** 
   3:../../src/periph/f1_dma.h **** #include "f1_bits_dma.h"
   4:../../src/periph/f1_dma.h **** 
ARM GAS  /tmp/cc2puB6n.s 			page 33


   5:../../src/periph/f1_dma.h **** namespace mcu {
   6:../../src/periph/f1_dma.h **** 
   7:../../src/periph/f1_dma.h **** class DMA 
   8:../../src/periph/f1_dma.h **** {
   9:../../src/periph/f1_dma.h ****    __IO DMA_bits::ISR  ISR;  // DMA interrupt status register     offset: 0x00
  10:../../src/periph/f1_dma.h ****    __IO DMA_bits::IFCR IFCR; // DMA interrupt flag clear register offset: 0x04
  11:../../src/periph/f1_dma.h **** 
  12:../../src/periph/f1_dma.h **** public:
  13:../../src/periph/f1_dma.h ****    using CMSIS_type = DMA_TypeDef;
  14:../../src/periph/f1_dma.h ****    enum class Channel { _1 = 1, _2, _3, _4, _5, _6, _7, error };
  15:../../src/periph/f1_dma.h **** 
  16:../../src/periph/f1_dma.h ****    auto& like_CMSIS() { return *reinterpret_cast<CMSIS_type*>(this); }
  17:../../src/periph/f1_dma.h **** 
  18:../../src/periph/f1_dma.h ****    void clear_interrupt_flags         (Channel);
  19:../../src/periph/f1_dma.h ****    bool is_transfer_complete_interrupt(Channel);
  20:../../src/periph/f1_dma.h **** };
  21:../../src/periph/f1_dma.h **** 
  22:../../src/periph/f1_dma.h **** #if not defined(USE_MOCK_DMA)
  23:../../src/periph/f1_dma.h **** template <Periph p> std::enable_if_t<p == Periph::DMA1, DMA&> make_reference() {return *reinterpret
  24:../../src/periph/f1_dma.h **** #endif
  25:../../src/periph/f1_dma.h **** 
  26:../../src/periph/f1_dma.h **** 
  27:../../src/periph/f1_dma.h **** 
  28:../../src/periph/f1_dma.h **** 
  29:../../src/periph/f1_dma.h **** 
  30:../../src/periph/f1_dma.h **** 
  31:../../src/periph/f1_dma.h **** 
  32:../../src/periph/f1_dma.h **** 
  33:../../src/periph/f1_dma.h **** 
  34:../../src/periph/f1_dma.h **** 
  35:../../src/periph/f1_dma.h **** 
  36:../../src/periph/f1_dma.h **** 
  37:../../src/periph/f1_dma.h **** 
  38:../../src/periph/f1_dma.h **** 
  39:../../src/periph/f1_dma.h **** 
  40:../../src/periph/f1_dma.h **** void DMA::clear_interrupt_flags(Channel channel)
  41:../../src/periph/f1_dma.h **** {
 944              		.loc 10 41 0
 945              		.cfi_startproc
 946              		@ args = 0, pretend = 0, frame = 0
 947              		@ frame_needed = 0, uses_anonymous_args = 0
 948              		@ link register save eliminated.
 949              	.LVL77:
  42:../../src/periph/f1_dma.h ****    if      (channel == Channel::_1) IFCR.CGIF1 = true;
 950              		.loc 10 42 0
 951 0000 0129     		cmp	r1, #1
 952 0002 03D1     		bne	.L87
 953              		.loc 10 42 0 is_stmt 0 discriminator 1
 954 0004 0379     		ldrb	r3, [r0, #4]
 955 0006 1943     		orrs	r1, r3
 956              	.LVL78:
 957 0008 0171     		strb	r1, [r0, #4]
 958              	.L86:
  43:../../src/periph/f1_dma.h ****    else if (channel == Channel::_2) IFCR.CGIF2 = true;
  44:../../src/periph/f1_dma.h ****    else if (channel == Channel::_3) IFCR.CGIF3 = true;
  45:../../src/periph/f1_dma.h ****    else if (channel == Channel::_4) IFCR.CGIF4 = true;
  46:../../src/periph/f1_dma.h ****    else if (channel == Channel::_5) IFCR.CGIF5 = true;
ARM GAS  /tmp/cc2puB6n.s 			page 34


  47:../../src/periph/f1_dma.h ****    else if (channel == Channel::_6) IFCR.CGIF6 = true;
  48:../../src/periph/f1_dma.h ****    else if (channel == Channel::_7) IFCR.CGIF7 = true;
  49:../../src/periph/f1_dma.h **** }
 959              		.loc 10 49 0 is_stmt 1
 960              		@ sp needed
 961 000a 7047     		bx	lr
 962              	.LVL79:
 963              	.L87:
  43:../../src/periph/f1_dma.h ****    else if (channel == Channel::_2) IFCR.CGIF2 = true;
 964              		.loc 10 43 0
 965 000c 0229     		cmp	r1, #2
 966 000e 04D1     		bne	.L89
  43:../../src/periph/f1_dma.h ****    else if (channel == Channel::_2) IFCR.CGIF2 = true;
 967              		.loc 10 43 0 is_stmt 0 discriminator 1
 968 0010 1023     		movs	r3, #16
 969 0012 0279     		ldrb	r2, [r0, #4]
 970 0014 1343     		orrs	r3, r2
 971 0016 0371     		strb	r3, [r0, #4]
 972 0018 F7E7     		b	.L86
 973              	.L89:
  44:../../src/periph/f1_dma.h ****    else if (channel == Channel::_4) IFCR.CGIF4 = true;
 974              		.loc 10 44 0 is_stmt 1
 975 001a 0329     		cmp	r1, #3
 976 001c 04D1     		bne	.L90
  44:../../src/periph/f1_dma.h ****    else if (channel == Channel::_4) IFCR.CGIF4 = true;
 977              		.loc 10 44 0 is_stmt 0 discriminator 1
 978 001e 0123     		movs	r3, #1
 979 0020 4279     		ldrb	r2, [r0, #5]
 980              	.L94:
  45:../../src/periph/f1_dma.h ****    else if (channel == Channel::_5) IFCR.CGIF5 = true;
 981              		.loc 10 45 0 is_stmt 1 discriminator 1
 982 0022 1343     		orrs	r3, r2
 983 0024 4371     		strb	r3, [r0, #5]
 984 0026 F0E7     		b	.L86
 985              	.L90:
  45:../../src/periph/f1_dma.h ****    else if (channel == Channel::_5) IFCR.CGIF5 = true;
 986              		.loc 10 45 0 is_stmt 0
 987 0028 0429     		cmp	r1, #4
 988 002a 02D1     		bne	.L91
  45:../../src/periph/f1_dma.h ****    else if (channel == Channel::_5) IFCR.CGIF5 = true;
 989              		.loc 10 45 0 discriminator 1
 990 002c 4279     		ldrb	r2, [r0, #5]
 991 002e 1023     		movs	r3, #16
 992 0030 F7E7     		b	.L94
 993              	.L91:
  46:../../src/periph/f1_dma.h ****    else if (channel == Channel::_6) IFCR.CGIF6 = true;
 994              		.loc 10 46 0 is_stmt 1
 995 0032 0529     		cmp	r1, #5
 996 0034 04D1     		bne	.L92
  46:../../src/periph/f1_dma.h ****    else if (channel == Channel::_6) IFCR.CGIF6 = true;
 997              		.loc 10 46 0 is_stmt 0 discriminator 1
 998 0036 0123     		movs	r3, #1
 999 0038 8279     		ldrb	r2, [r0, #6]
 1000              	.L95:
 1001              	.LBB900:
 1002              	.LBB901:
  47:../../src/periph/f1_dma.h ****    else if (channel == Channel::_7) IFCR.CGIF7 = true;
ARM GAS  /tmp/cc2puB6n.s 			page 35


 1003              		.loc 10 47 0 is_stmt 1
 1004 003a 1343     		orrs	r3, r2
 1005 003c 8371     		strb	r3, [r0, #6]
 1006 003e E4E7     		b	.L86
 1007              	.L92:
 1008              	.LVL80:
 1009 0040 0629     		cmp	r1, #6
 1010 0042 02D1     		bne	.L93
 1011 0044 8279     		ldrb	r2, [r0, #6]
 1012 0046 1023     		movs	r3, #16
 1013 0048 F7E7     		b	.L95
 1014              	.L93:
  48:../../src/periph/f1_dma.h **** }
 1015              		.loc 10 48 0
 1016 004a 0729     		cmp	r1, #7
 1017 004c DDD1     		bne	.L86
 1018 004e 0123     		movs	r3, #1
 1019 0050 C279     		ldrb	r2, [r0, #7]
 1020 0052 1343     		orrs	r3, r2
 1021 0054 C371     		strb	r3, [r0, #7]
 1022              	.LBE901:
 1023              	.LBE900:
 1024              		.loc 10 49 0
 1025 0056 D8E7     		b	.L86
 1026              		.cfi_endproc
 1027              	.LFE2282:
 1029              		.section	.text._ZN3mcu3DMA30is_transfer_complete_interruptENS0_7ChannelE,"ax",%progbits
 1030              		.align	1
 1031              		.global	_ZN3mcu3DMA30is_transfer_complete_interruptENS0_7ChannelE
 1032              		.syntax unified
 1033              		.code	16
 1034              		.thumb_func
 1035              		.fpu softvfp
 1037              	_ZN3mcu3DMA30is_transfer_complete_interruptENS0_7ChannelE:
 1038              	.LFB2283:
  50:../../src/periph/f1_dma.h **** 
  51:../../src/periph/f1_dma.h **** bool DMA::is_transfer_complete_interrupt(Channel channel)
  52:../../src/periph/f1_dma.h **** {
 1039              		.loc 10 52 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 0
 1042              		@ frame_needed = 0, uses_anonymous_args = 0
 1043              		@ link register save eliminated.
 1044              	.LVL81:
 1045              		.loc 10 52 0
 1046 0000 0300     		movs	r3, r0
  53:../../src/periph/f1_dma.h ****    if      (channel == Channel::_1) return ISR.TCIF1;
 1047              		.loc 10 53 0
 1048 0002 0129     		cmp	r1, #1
 1049 0004 02D1     		bne	.L97
 1050              		.loc 10 53 0 is_stmt 0 discriminator 1
 1051 0006 0078     		ldrb	r0, [r0]
 1052              	.LVL82:
 1053              	.L105:
  54:../../src/periph/f1_dma.h ****    else if (channel == Channel::_2) return ISR.TCIF2;
  55:../../src/periph/f1_dma.h ****    else if (channel == Channel::_3) return ISR.TCIF3;
  56:../../src/periph/f1_dma.h ****    else if (channel == Channel::_4) return ISR.TCIF4;
ARM GAS  /tmp/cc2puB6n.s 			page 36


  57:../../src/periph/f1_dma.h ****    else if (channel == Channel::_5) return ISR.TCIF5;
  58:../../src/periph/f1_dma.h ****    else if (channel == Channel::_6) return ISR.TCIF6;
  59:../../src/periph/f1_dma.h ****    else if (channel == Channel::_7) return ISR.TCIF7;
 1054              		.loc 10 59 0 is_stmt 1 discriminator 1
 1055 0008 8007     		lsls	r0, r0, #30
 1056 000a 03E0     		b	.L106
 1057              	.LVL83:
 1058              	.L97:
  54:../../src/periph/f1_dma.h ****    else if (channel == Channel::_2) return ISR.TCIF2;
 1059              		.loc 10 54 0
 1060 000c 0229     		cmp	r1, #2
 1061 000e 03D1     		bne	.L99
  54:../../src/periph/f1_dma.h ****    else if (channel == Channel::_2) return ISR.TCIF2;
 1062              		.loc 10 54 0 is_stmt 0 discriminator 1
 1063 0010 0078     		ldrb	r0, [r0]
 1064              	.LVL84:
 1065              	.L107:
  58:../../src/periph/f1_dma.h ****    else if (channel == Channel::_7) return ISR.TCIF7;
 1066              		.loc 10 58 0 is_stmt 1 discriminator 1
 1067 0012 8006     		lsls	r0, r0, #26
 1068              	.L106:
 1069              		.loc 10 59 0 discriminator 1
 1070 0014 C00F     		lsrs	r0, r0, #31
 1071              	.L98:
  60:../../src/periph/f1_dma.h ****    else return false;
  61:../../src/periph/f1_dma.h **** }
 1072              		.loc 10 61 0
 1073              		@ sp needed
 1074 0016 7047     		bx	lr
 1075              	.LVL85:
 1076              	.L99:
  55:../../src/periph/f1_dma.h ****    else if (channel == Channel::_4) return ISR.TCIF4;
 1077              		.loc 10 55 0
 1078 0018 0329     		cmp	r1, #3
 1079 001a 01D1     		bne	.L100
  55:../../src/periph/f1_dma.h ****    else if (channel == Channel::_4) return ISR.TCIF4;
 1080              		.loc 10 55 0 is_stmt 0 discriminator 1
 1081 001c 4078     		ldrb	r0, [r0, #1]
 1082              	.LVL86:
 1083 001e F3E7     		b	.L105
 1084              	.LVL87:
 1085              	.L100:
  56:../../src/periph/f1_dma.h ****    else if (channel == Channel::_5) return ISR.TCIF5;
 1086              		.loc 10 56 0 is_stmt 1
 1087 0020 0429     		cmp	r1, #4
 1088 0022 01D1     		bne	.L101
  56:../../src/periph/f1_dma.h ****    else if (channel == Channel::_5) return ISR.TCIF5;
 1089              		.loc 10 56 0 is_stmt 0 discriminator 1
 1090 0024 4078     		ldrb	r0, [r0, #1]
 1091              	.LVL88:
 1092 0026 F4E7     		b	.L107
 1093              	.LVL89:
 1094              	.L101:
  57:../../src/periph/f1_dma.h ****    else if (channel == Channel::_6) return ISR.TCIF6;
 1095              		.loc 10 57 0 is_stmt 1
 1096 0028 0529     		cmp	r1, #5
 1097 002a 01D1     		bne	.L102
ARM GAS  /tmp/cc2puB6n.s 			page 37


  57:../../src/periph/f1_dma.h ****    else if (channel == Channel::_6) return ISR.TCIF6;
 1098              		.loc 10 57 0 is_stmt 0 discriminator 1
 1099 002c 8078     		ldrb	r0, [r0, #2]
 1100              	.LVL90:
 1101 002e EBE7     		b	.L105
 1102              	.LVL91:
 1103              	.L102:
  58:../../src/periph/f1_dma.h ****    else if (channel == Channel::_7) return ISR.TCIF7;
 1104              		.loc 10 58 0 is_stmt 1
 1105 0030 0629     		cmp	r1, #6
 1106 0032 01D1     		bne	.L103
  58:../../src/periph/f1_dma.h ****    else if (channel == Channel::_7) return ISR.TCIF7;
 1107              		.loc 10 58 0 is_stmt 0 discriminator 1
 1108 0034 8078     		ldrb	r0, [r0, #2]
 1109              	.LVL92:
 1110 0036 ECE7     		b	.L107
 1111              	.LVL93:
 1112              	.L103:
  60:../../src/periph/f1_dma.h **** }
 1113              		.loc 10 60 0 is_stmt 1
 1114 0038 0020     		movs	r0, #0
 1115              	.LVL94:
  59:../../src/periph/f1_dma.h ****    else return false;
 1116              		.loc 10 59 0
 1117 003a 0729     		cmp	r1, #7
 1118 003c EBD1     		bne	.L98
  59:../../src/periph/f1_dma.h ****    else return false;
 1119              		.loc 10 59 0 is_stmt 0 discriminator 1
 1120 003e D878     		ldrb	r0, [r3, #3]
 1121 0040 E2E7     		b	.L105
 1122              		.cfi_endproc
 1123              	.LFE2283:
 1125              		.section	.text._ZN9Interrupt9interruptEv,"axG",%progbits,_ZN9Interrupt9interruptEv,comdat
 1126              		.align	1
 1127              		.weak	_ZN9Interrupt9interruptEv
 1128              		.syntax unified
 1129              		.code	16
 1130              		.thumb_func
 1131              		.fpu softvfp
 1133              	_ZN9Interrupt9interruptEv:
 1134              	.LFB2333:
 1135              		.file 11 "../../src/interrupt.h"
   1:../../src/interrupt.h **** #pragma once
   2:../../src/interrupt.h **** 
   3:../../src/interrupt.h **** #include "periph.h"
   4:../../src/interrupt.h **** 
   5:../../src/interrupt.h **** /// –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
   6:../../src/interrupt.h **** struct Interrupting
   7:../../src/interrupt.h **** {
   8:../../src/interrupt.h ****    Interrupting* next {nullptr};
   9:../../src/interrupt.h ****    virtual void interrupt() = 0;
  10:../../src/interrupt.h **** };
  11:../../src/interrupt.h **** 
  12:../../src/interrupt.h **** class Interrupt 
  13:../../src/interrupt.h **** {
  14:../../src/interrupt.h ****    Interrupting* first{nullptr};
  15:../../src/interrupt.h **** 
ARM GAS  /tmp/cc2puB6n.s 			page 38


  16:../../src/interrupt.h **** public:
  17:../../src/interrupt.h ****    
  18:../../src/interrupt.h ****    void subscribe(Interrupting* ps)
  19:../../src/interrupt.h ****    {
  20:../../src/interrupt.h ****       auto p = first;
  21:../../src/interrupt.h ****       if (p) {
  22:../../src/interrupt.h ****          while (p->next)
  23:../../src/interrupt.h ****             p = p->next;
  24:../../src/interrupt.h ****          p->next = ps;
  25:../../src/interrupt.h ****       } else {  
  26:../../src/interrupt.h ****          first = ps;
  27:../../src/interrupt.h ****       } 
  28:../../src/interrupt.h ****    }
  29:../../src/interrupt.h ****    void interrupt()
 1136              		.loc 11 29 0 is_stmt 1
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 1140              	.LVL95:
 1141 0000 10B5     		push	{r4, lr}
 1142              	.LCFI7:
 1143              		.cfi_def_cfa_offset 8
 1144              		.cfi_offset 4, -8
 1145              		.cfi_offset 14, -4
  30:../../src/interrupt.h ****    {
  31:../../src/interrupt.h ****       auto p = first;
 1146              		.loc 11 31 0
 1147 0002 0468     		ldr	r4, [r0]
 1148              	.LVL96:
 1149              	.L110:
  32:../../src/interrupt.h ****       while (p) {
 1150              		.loc 11 32 0
 1151 0004 002C     		cmp	r4, #0
 1152 0006 05D0     		beq	.L108
  33:../../src/interrupt.h ****          p->interrupt();
 1153              		.loc 11 33 0
 1154 0008 2368     		ldr	r3, [r4]
 1155 000a 2000     		movs	r0, r4
 1156 000c 1B68     		ldr	r3, [r3]
 1157 000e 9847     		blx	r3
 1158              	.LVL97:
  34:../../src/interrupt.h ****          p = p->next;
 1159              		.loc 11 34 0
 1160 0010 6468     		ldr	r4, [r4, #4]
 1161              	.LVL98:
  32:../../src/interrupt.h ****       while (p) {
 1162              		.loc 11 32 0
 1163 0012 F7E7     		b	.L110
 1164              	.L108:
  35:../../src/interrupt.h ****       }
  36:../../src/interrupt.h ****    }
 1165              		.loc 11 36 0
 1166              		@ sp needed
 1167              	.LVL99:
 1168 0014 10BD     		pop	{r4, pc}
 1169              		.cfi_endproc
 1170              	.LFE2333:
ARM GAS  /tmp/cc2puB6n.s 			page 39


 1172              		.section	.text.WWDG_IRQHandler,"ax",%progbits
 1173              		.align	1
 1174              		.global	WWDG_IRQHandler
 1175              		.syntax unified
 1176              		.code	16
 1177              		.thumb_func
 1178              		.fpu softvfp
 1180              	WWDG_IRQHandler:
 1181              	.LFB2337:
 1182              		.file 12 "../../src/interrupts.h"
   1:../../src/interrupts.h **** #pragma once
   2:../../src/interrupts.h **** #include "interrupt.h"
   3:../../src/interrupts.h **** #include "periph_usart.h"
   4:../../src/interrupts.h **** #include "periph_dma.h"
   5:../../src/interrupts.h **** 
   6:../../src/interrupts.h **** #if defined (STM32F103xB)
   7:../../src/interrupts.h **** 
   8:../../src/interrupts.h **** 	// —Å–ø–∏—Å–æ–∫ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –æ–ø–∏—Å–∞–Ω—ã
   9:../../src/interrupts.h **** 	extern "C" void WWDG_IRQHandler            () { while(1) {} }
 1183              		.loc 12 9 0
 1184              		.cfi_startproc
 1185              		@ Volatile: function does not return.
 1186              		@ args = 0, pretend = 0, frame = 0
 1187              		@ frame_needed = 0, uses_anonymous_args = 0
 1188              		@ link register save eliminated.
 1189              	.L112:
 1190 0000 FEE7     		b	.L112
 1191              		.cfi_endproc
 1192              	.LFE2337:
 1194              		.section	.text.PVD_IRQHandler,"ax",%progbits
 1195              		.align	1
 1196              		.global	PVD_IRQHandler
 1197              		.syntax unified
 1198              		.code	16
 1199              		.thumb_func
 1200              		.fpu softvfp
 1202              	PVD_IRQHandler:
 1203              	.LFB2338:
  10:../../src/interrupts.h ****    extern "C" void PVD_IRQHandler             () { while(1) {} }
 1204              		.loc 12 10 0
 1205              		.cfi_startproc
 1206              		@ Volatile: function does not return.
 1207              		@ args = 0, pretend = 0, frame = 0
 1208              		@ frame_needed = 0, uses_anonymous_args = 0
 1209              		@ link register save eliminated.
 1210              	.L114:
 1211 0000 FEE7     		b	.L114
 1212              		.cfi_endproc
 1213              	.LFE2338:
 1215              		.section	.text.TAMPER_IRQHandler,"ax",%progbits
 1216              		.align	1
 1217              		.global	TAMPER_IRQHandler
 1218              		.syntax unified
 1219              		.code	16
 1220              		.thumb_func
 1221              		.fpu softvfp
 1223              	TAMPER_IRQHandler:
ARM GAS  /tmp/cc2puB6n.s 			page 40


 1224              	.LFB2339:
  11:../../src/interrupts.h ****    extern "C" void TAMPER_IRQHandler          () { while(1) {} }
 1225              		.loc 12 11 0
 1226              		.cfi_startproc
 1227              		@ Volatile: function does not return.
 1228              		@ args = 0, pretend = 0, frame = 0
 1229              		@ frame_needed = 0, uses_anonymous_args = 0
 1230              		@ link register save eliminated.
 1231              	.L116:
 1232 0000 FEE7     		b	.L116
 1233              		.cfi_endproc
 1234              	.LFE2339:
 1236              		.section	.text.RTC_IRQHandler,"ax",%progbits
 1237              		.align	1
 1238              		.global	RTC_IRQHandler
 1239              		.syntax unified
 1240              		.code	16
 1241              		.thumb_func
 1242              		.fpu softvfp
 1244              	RTC_IRQHandler:
 1245              	.LFB2340:
  12:../../src/interrupts.h ****    extern "C" void RTC_IRQHandler             () { while(1) {} }
 1246              		.loc 12 12 0
 1247              		.cfi_startproc
 1248              		@ Volatile: function does not return.
 1249              		@ args = 0, pretend = 0, frame = 0
 1250              		@ frame_needed = 0, uses_anonymous_args = 0
 1251              		@ link register save eliminated.
 1252              	.L118:
 1253 0000 FEE7     		b	.L118
 1254              		.cfi_endproc
 1255              	.LFE2340:
 1257              		.section	.text.FLASH_IRQHandler,"ax",%progbits
 1258              		.align	1
 1259              		.global	FLASH_IRQHandler
 1260              		.syntax unified
 1261              		.code	16
 1262              		.thumb_func
 1263              		.fpu softvfp
 1265              	FLASH_IRQHandler:
 1266              	.LFB2341:
  13:../../src/interrupts.h ****    extern "C" void FLASH_IRQHandler           () { while(1) {} }
 1267              		.loc 12 13 0
 1268              		.cfi_startproc
 1269              		@ Volatile: function does not return.
 1270              		@ args = 0, pretend = 0, frame = 0
 1271              		@ frame_needed = 0, uses_anonymous_args = 0
 1272              		@ link register save eliminated.
 1273              	.L120:
 1274 0000 FEE7     		b	.L120
 1275              		.cfi_endproc
 1276              	.LFE2341:
 1278              		.section	.text.RCC_IRQHandler,"ax",%progbits
 1279              		.align	1
 1280              		.global	RCC_IRQHandler
 1281              		.syntax unified
 1282              		.code	16
ARM GAS  /tmp/cc2puB6n.s 			page 41


 1283              		.thumb_func
 1284              		.fpu softvfp
 1286              	RCC_IRQHandler:
 1287              	.LFB2342:
  14:../../src/interrupts.h ****    extern "C" void RCC_IRQHandler             () { while(1) {} }
 1288              		.loc 12 14 0
 1289              		.cfi_startproc
 1290              		@ Volatile: function does not return.
 1291              		@ args = 0, pretend = 0, frame = 0
 1292              		@ frame_needed = 0, uses_anonymous_args = 0
 1293              		@ link register save eliminated.
 1294              	.L122:
 1295 0000 FEE7     		b	.L122
 1296              		.cfi_endproc
 1297              	.LFE2342:
 1299              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 1300              		.align	1
 1301              		.global	EXTI0_IRQHandler
 1302              		.syntax unified
 1303              		.code	16
 1304              		.thumb_func
 1305              		.fpu softvfp
 1307              	EXTI0_IRQHandler:
 1308              	.LFB2343:
  15:../../src/interrupts.h ****    extern "C" void EXTI0_IRQHandler           () { while(1) {} }
 1309              		.loc 12 15 0
 1310              		.cfi_startproc
 1311              		@ Volatile: function does not return.
 1312              		@ args = 0, pretend = 0, frame = 0
 1313              		@ frame_needed = 0, uses_anonymous_args = 0
 1314              		@ link register save eliminated.
 1315              	.L124:
 1316 0000 FEE7     		b	.L124
 1317              		.cfi_endproc
 1318              	.LFE2343:
 1320              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 1321              		.align	1
 1322              		.global	EXTI1_IRQHandler
 1323              		.syntax unified
 1324              		.code	16
 1325              		.thumb_func
 1326              		.fpu softvfp
 1328              	EXTI1_IRQHandler:
 1329              	.LFB2344:
  16:../../src/interrupts.h ****    extern "C" void EXTI1_IRQHandler           () { while(1) {} }
 1330              		.loc 12 16 0
 1331              		.cfi_startproc
 1332              		@ Volatile: function does not return.
 1333              		@ args = 0, pretend = 0, frame = 0
 1334              		@ frame_needed = 0, uses_anonymous_args = 0
 1335              		@ link register save eliminated.
 1336              	.L126:
 1337 0000 FEE7     		b	.L126
 1338              		.cfi_endproc
 1339              	.LFE2344:
 1341              		.section	.text.EXTI2_IRQHandler,"ax",%progbits
 1342              		.align	1
ARM GAS  /tmp/cc2puB6n.s 			page 42


 1343              		.global	EXTI2_IRQHandler
 1344              		.syntax unified
 1345              		.code	16
 1346              		.thumb_func
 1347              		.fpu softvfp
 1349              	EXTI2_IRQHandler:
 1350              	.LFB2345:
  17:../../src/interrupts.h ****    extern "C" void EXTI2_IRQHandler           () { while(1) {} }
 1351              		.loc 12 17 0
 1352              		.cfi_startproc
 1353              		@ Volatile: function does not return.
 1354              		@ args = 0, pretend = 0, frame = 0
 1355              		@ frame_needed = 0, uses_anonymous_args = 0
 1356              		@ link register save eliminated.
 1357              	.L128:
 1358 0000 FEE7     		b	.L128
 1359              		.cfi_endproc
 1360              	.LFE2345:
 1362              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 1363              		.align	1
 1364              		.global	EXTI3_IRQHandler
 1365              		.syntax unified
 1366              		.code	16
 1367              		.thumb_func
 1368              		.fpu softvfp
 1370              	EXTI3_IRQHandler:
 1371              	.LFB2346:
  18:../../src/interrupts.h ****    extern "C" void EXTI3_IRQHandler           () { while(1) {} }
 1372              		.loc 12 18 0
 1373              		.cfi_startproc
 1374              		@ Volatile: function does not return.
 1375              		@ args = 0, pretend = 0, frame = 0
 1376              		@ frame_needed = 0, uses_anonymous_args = 0
 1377              		@ link register save eliminated.
 1378              	.L130:
 1379 0000 FEE7     		b	.L130
 1380              		.cfi_endproc
 1381              	.LFE2346:
 1383              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 1384              		.align	1
 1385              		.global	EXTI4_IRQHandler
 1386              		.syntax unified
 1387              		.code	16
 1388              		.thumb_func
 1389              		.fpu softvfp
 1391              	EXTI4_IRQHandler:
 1392              	.LFB2347:
  19:../../src/interrupts.h ****    extern "C" void EXTI4_IRQHandler           () { while(1) {} }
 1393              		.loc 12 19 0
 1394              		.cfi_startproc
 1395              		@ Volatile: function does not return.
 1396              		@ args = 0, pretend = 0, frame = 0
 1397              		@ frame_needed = 0, uses_anonymous_args = 0
 1398              		@ link register save eliminated.
 1399              	.L132:
 1400 0000 FEE7     		b	.L132
 1401              		.cfi_endproc
ARM GAS  /tmp/cc2puB6n.s 			page 43


 1402              	.LFE2347:
 1404              		.section	.text.ADC1_2_IRQHandler,"ax",%progbits
 1405              		.align	1
 1406              		.global	ADC1_2_IRQHandler
 1407              		.syntax unified
 1408              		.code	16
 1409              		.thumb_func
 1410              		.fpu softvfp
 1412              	ADC1_2_IRQHandler:
 1413              	.LFB2348:
  20:../../src/interrupts.h ****    extern "C" void ADC1_2_IRQHandler          () { while(1) {} }
 1414              		.loc 12 20 0
 1415              		.cfi_startproc
 1416              		@ Volatile: function does not return.
 1417              		@ args = 0, pretend = 0, frame = 0
 1418              		@ frame_needed = 0, uses_anonymous_args = 0
 1419              		@ link register save eliminated.
 1420              	.L134:
 1421 0000 FEE7     		b	.L134
 1422              		.cfi_endproc
 1423              	.LFE2348:
 1425              		.section	.text.USB_HP_CAN1_TX_IRQHandler,"ax",%progbits
 1426              		.align	1
 1427              		.global	USB_HP_CAN1_TX_IRQHandler
 1428              		.syntax unified
 1429              		.code	16
 1430              		.thumb_func
 1431              		.fpu softvfp
 1433              	USB_HP_CAN1_TX_IRQHandler:
 1434              	.LFB2349:
  21:../../src/interrupts.h ****    extern "C" void USB_HP_CAN1_TX_IRQHandler  () { while(1) {} }
 1435              		.loc 12 21 0
 1436              		.cfi_startproc
 1437              		@ Volatile: function does not return.
 1438              		@ args = 0, pretend = 0, frame = 0
 1439              		@ frame_needed = 0, uses_anonymous_args = 0
 1440              		@ link register save eliminated.
 1441              	.L136:
 1442 0000 FEE7     		b	.L136
 1443              		.cfi_endproc
 1444              	.LFE2349:
 1446              		.section	.text.USB_LP_CAN1_RX0_IRQHandler,"ax",%progbits
 1447              		.align	1
 1448              		.global	USB_LP_CAN1_RX0_IRQHandler
 1449              		.syntax unified
 1450              		.code	16
 1451              		.thumb_func
 1452              		.fpu softvfp
 1454              	USB_LP_CAN1_RX0_IRQHandler:
 1455              	.LFB2350:
  22:../../src/interrupts.h ****    extern "C" void USB_LP_CAN1_RX0_IRQHandler () { while(1) {} }
 1456              		.loc 12 22 0
 1457              		.cfi_startproc
 1458              		@ Volatile: function does not return.
 1459              		@ args = 0, pretend = 0, frame = 0
 1460              		@ frame_needed = 0, uses_anonymous_args = 0
 1461              		@ link register save eliminated.
ARM GAS  /tmp/cc2puB6n.s 			page 44


 1462              	.L138:
 1463 0000 FEE7     		b	.L138
 1464              		.cfi_endproc
 1465              	.LFE2350:
 1467              		.section	.text.CAN1_RX1_IRQHandler,"ax",%progbits
 1468              		.align	1
 1469              		.global	CAN1_RX1_IRQHandler
 1470              		.syntax unified
 1471              		.code	16
 1472              		.thumb_func
 1473              		.fpu softvfp
 1475              	CAN1_RX1_IRQHandler:
 1476              	.LFB2351:
  23:../../src/interrupts.h ****    extern "C" void CAN1_RX1_IRQHandler        () { while(1) {} }
 1477              		.loc 12 23 0
 1478              		.cfi_startproc
 1479              		@ Volatile: function does not return.
 1480              		@ args = 0, pretend = 0, frame = 0
 1481              		@ frame_needed = 0, uses_anonymous_args = 0
 1482              		@ link register save eliminated.
 1483              	.L140:
 1484 0000 FEE7     		b	.L140
 1485              		.cfi_endproc
 1486              	.LFE2351:
 1488              		.section	.text.CAN1_SCE_IRQHandler,"ax",%progbits
 1489              		.align	1
 1490              		.global	CAN1_SCE_IRQHandler
 1491              		.syntax unified
 1492              		.code	16
 1493              		.thumb_func
 1494              		.fpu softvfp
 1496              	CAN1_SCE_IRQHandler:
 1497              	.LFB2352:
  24:../../src/interrupts.h ****    extern "C" void CAN1_SCE_IRQHandler        () { while(1) {} }
 1498              		.loc 12 24 0
 1499              		.cfi_startproc
 1500              		@ Volatile: function does not return.
 1501              		@ args = 0, pretend = 0, frame = 0
 1502              		@ frame_needed = 0, uses_anonymous_args = 0
 1503              		@ link register save eliminated.
 1504              	.L142:
 1505 0000 FEE7     		b	.L142
 1506              		.cfi_endproc
 1507              	.LFE2352:
 1509              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 1510              		.align	1
 1511              		.global	EXTI9_5_IRQHandler
 1512              		.syntax unified
 1513              		.code	16
 1514              		.thumb_func
 1515              		.fpu softvfp
 1517              	EXTI9_5_IRQHandler:
 1518              	.LFB2353:
  25:../../src/interrupts.h ****    extern "C" void EXTI9_5_IRQHandler         () { while(1) {} }
 1519              		.loc 12 25 0
 1520              		.cfi_startproc
 1521              		@ Volatile: function does not return.
ARM GAS  /tmp/cc2puB6n.s 			page 45


 1522              		@ args = 0, pretend = 0, frame = 0
 1523              		@ frame_needed = 0, uses_anonymous_args = 0
 1524              		@ link register save eliminated.
 1525              	.L144:
 1526 0000 FEE7     		b	.L144
 1527              		.cfi_endproc
 1528              	.LFE2353:
 1530              		.section	.text.TIM1_BRK_IRQHandler,"ax",%progbits
 1531              		.align	1
 1532              		.global	TIM1_BRK_IRQHandler
 1533              		.syntax unified
 1534              		.code	16
 1535              		.thumb_func
 1536              		.fpu softvfp
 1538              	TIM1_BRK_IRQHandler:
 1539              	.LFB2354:
  26:../../src/interrupts.h ****    extern "C" void TIM1_BRK_IRQHandler        () { while(1) {} }
 1540              		.loc 12 26 0
 1541              		.cfi_startproc
 1542              		@ Volatile: function does not return.
 1543              		@ args = 0, pretend = 0, frame = 0
 1544              		@ frame_needed = 0, uses_anonymous_args = 0
 1545              		@ link register save eliminated.
 1546              	.L146:
 1547 0000 FEE7     		b	.L146
 1548              		.cfi_endproc
 1549              	.LFE2354:
 1551              		.section	.text.TIM1_UP_IRQHandler,"ax",%progbits
 1552              		.align	1
 1553              		.global	TIM1_UP_IRQHandler
 1554              		.syntax unified
 1555              		.code	16
 1556              		.thumb_func
 1557              		.fpu softvfp
 1559              	TIM1_UP_IRQHandler:
 1560              	.LFB2355:
  27:../../src/interrupts.h ****    extern "C" void TIM1_UP_IRQHandler         () { while(1) {} }
 1561              		.loc 12 27 0
 1562              		.cfi_startproc
 1563              		@ Volatile: function does not return.
 1564              		@ args = 0, pretend = 0, frame = 0
 1565              		@ frame_needed = 0, uses_anonymous_args = 0
 1566              		@ link register save eliminated.
 1567              	.L148:
 1568 0000 FEE7     		b	.L148
 1569              		.cfi_endproc
 1570              	.LFE2355:
 1572              		.section	.text.TIM1_TRG_COM_IRQHandler,"ax",%progbits
 1573              		.align	1
 1574              		.global	TIM1_TRG_COM_IRQHandler
 1575              		.syntax unified
 1576              		.code	16
 1577              		.thumb_func
 1578              		.fpu softvfp
 1580              	TIM1_TRG_COM_IRQHandler:
 1581              	.LFB2356:
  28:../../src/interrupts.h ****    extern "C" void TIM1_TRG_COM_IRQHandler    () { while(1) {} }
ARM GAS  /tmp/cc2puB6n.s 			page 46


 1582              		.loc 12 28 0
 1583              		.cfi_startproc
 1584              		@ Volatile: function does not return.
 1585              		@ args = 0, pretend = 0, frame = 0
 1586              		@ frame_needed = 0, uses_anonymous_args = 0
 1587              		@ link register save eliminated.
 1588              	.L150:
 1589 0000 FEE7     		b	.L150
 1590              		.cfi_endproc
 1591              	.LFE2356:
 1593              		.section	.text.TIM1_CC_IRQHandler,"ax",%progbits
 1594              		.align	1
 1595              		.global	TIM1_CC_IRQHandler
 1596              		.syntax unified
 1597              		.code	16
 1598              		.thumb_func
 1599              		.fpu softvfp
 1601              	TIM1_CC_IRQHandler:
 1602              	.LFB2357:
  29:../../src/interrupts.h ****    extern "C" void TIM1_CC_IRQHandler         () { while(1) {} }
 1603              		.loc 12 29 0
 1604              		.cfi_startproc
 1605              		@ Volatile: function does not return.
 1606              		@ args = 0, pretend = 0, frame = 0
 1607              		@ frame_needed = 0, uses_anonymous_args = 0
 1608              		@ link register save eliminated.
 1609              	.L152:
 1610 0000 FEE7     		b	.L152
 1611              		.cfi_endproc
 1612              	.LFE2357:
 1614              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 1615              		.align	1
 1616              		.global	TIM2_IRQHandler
 1617              		.syntax unified
 1618              		.code	16
 1619              		.thumb_func
 1620              		.fpu softvfp
 1622              	TIM2_IRQHandler:
 1623              	.LFB2358:
  30:../../src/interrupts.h ****    extern "C" void TIM2_IRQHandler            () { while(1) {} }
 1624              		.loc 12 30 0
 1625              		.cfi_startproc
 1626              		@ Volatile: function does not return.
 1627              		@ args = 0, pretend = 0, frame = 0
 1628              		@ frame_needed = 0, uses_anonymous_args = 0
 1629              		@ link register save eliminated.
 1630              	.L154:
 1631 0000 FEE7     		b	.L154
 1632              		.cfi_endproc
 1633              	.LFE2358:
 1635              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 1636              		.align	1
 1637              		.global	TIM3_IRQHandler
 1638              		.syntax unified
 1639              		.code	16
 1640              		.thumb_func
 1641              		.fpu softvfp
ARM GAS  /tmp/cc2puB6n.s 			page 47


 1643              	TIM3_IRQHandler:
 1644              	.LFB2359:
  31:../../src/interrupts.h ****    extern "C" void TIM3_IRQHandler            () { while(1) {} }
 1645              		.loc 12 31 0
 1646              		.cfi_startproc
 1647              		@ Volatile: function does not return.
 1648              		@ args = 0, pretend = 0, frame = 0
 1649              		@ frame_needed = 0, uses_anonymous_args = 0
 1650              		@ link register save eliminated.
 1651              	.L156:
 1652 0000 FEE7     		b	.L156
 1653              		.cfi_endproc
 1654              	.LFE2359:
 1656              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 1657              		.align	1
 1658              		.global	TIM4_IRQHandler
 1659              		.syntax unified
 1660              		.code	16
 1661              		.thumb_func
 1662              		.fpu softvfp
 1664              	TIM4_IRQHandler:
 1665              	.LFB2360:
  32:../../src/interrupts.h ****    extern "C" void TIM4_IRQHandler            () { while(1) {} }
 1666              		.loc 12 32 0
 1667              		.cfi_startproc
 1668              		@ Volatile: function does not return.
 1669              		@ args = 0, pretend = 0, frame = 0
 1670              		@ frame_needed = 0, uses_anonymous_args = 0
 1671              		@ link register save eliminated.
 1672              	.L158:
 1673 0000 FEE7     		b	.L158
 1674              		.cfi_endproc
 1675              	.LFE2360:
 1677              		.section	.text.I2C1_EV_IRQHandler,"ax",%progbits
 1678              		.align	1
 1679              		.global	I2C1_EV_IRQHandler
 1680              		.syntax unified
 1681              		.code	16
 1682              		.thumb_func
 1683              		.fpu softvfp
 1685              	I2C1_EV_IRQHandler:
 1686              	.LFB2361:
  33:../../src/interrupts.h ****    extern "C" void I2C1_EV_IRQHandler         () { while(1) {} }
 1687              		.loc 12 33 0
 1688              		.cfi_startproc
 1689              		@ Volatile: function does not return.
 1690              		@ args = 0, pretend = 0, frame = 0
 1691              		@ frame_needed = 0, uses_anonymous_args = 0
 1692              		@ link register save eliminated.
 1693              	.L160:
 1694 0000 FEE7     		b	.L160
 1695              		.cfi_endproc
 1696              	.LFE2361:
 1698              		.section	.text.I2C1_ER_IRQHandler,"ax",%progbits
 1699              		.align	1
 1700              		.global	I2C1_ER_IRQHandler
 1701              		.syntax unified
ARM GAS  /tmp/cc2puB6n.s 			page 48


 1702              		.code	16
 1703              		.thumb_func
 1704              		.fpu softvfp
 1706              	I2C1_ER_IRQHandler:
 1707              	.LFB2362:
  34:../../src/interrupts.h ****    extern "C" void I2C1_ER_IRQHandler         () { while(1) {} }
 1708              		.loc 12 34 0
 1709              		.cfi_startproc
 1710              		@ Volatile: function does not return.
 1711              		@ args = 0, pretend = 0, frame = 0
 1712              		@ frame_needed = 0, uses_anonymous_args = 0
 1713              		@ link register save eliminated.
 1714              	.L162:
 1715 0000 FEE7     		b	.L162
 1716              		.cfi_endproc
 1717              	.LFE2362:
 1719              		.section	.text.I2C2_EV_IRQHandler,"ax",%progbits
 1720              		.align	1
 1721              		.global	I2C2_EV_IRQHandler
 1722              		.syntax unified
 1723              		.code	16
 1724              		.thumb_func
 1725              		.fpu softvfp
 1727              	I2C2_EV_IRQHandler:
 1728              	.LFB2363:
  35:../../src/interrupts.h ****    extern "C" void I2C2_EV_IRQHandler         () { while(1) {} }
 1729              		.loc 12 35 0
 1730              		.cfi_startproc
 1731              		@ Volatile: function does not return.
 1732              		@ args = 0, pretend = 0, frame = 0
 1733              		@ frame_needed = 0, uses_anonymous_args = 0
 1734              		@ link register save eliminated.
 1735              	.L164:
 1736 0000 FEE7     		b	.L164
 1737              		.cfi_endproc
 1738              	.LFE2363:
 1740              		.section	.text.I2C2_ER_IRQHandler,"ax",%progbits
 1741              		.align	1
 1742              		.global	I2C2_ER_IRQHandler
 1743              		.syntax unified
 1744              		.code	16
 1745              		.thumb_func
 1746              		.fpu softvfp
 1748              	I2C2_ER_IRQHandler:
 1749              	.LFB2364:
  36:../../src/interrupts.h ****    extern "C" void I2C2_ER_IRQHandler         () { while(1) {} }
 1750              		.loc 12 36 0
 1751              		.cfi_startproc
 1752              		@ Volatile: function does not return.
 1753              		@ args = 0, pretend = 0, frame = 0
 1754              		@ frame_needed = 0, uses_anonymous_args = 0
 1755              		@ link register save eliminated.
 1756              	.L166:
 1757 0000 FEE7     		b	.L166
 1758              		.cfi_endproc
 1759              	.LFE2364:
 1761              		.section	.text.SPI1_IRQHandler,"ax",%progbits
ARM GAS  /tmp/cc2puB6n.s 			page 49


 1762              		.align	1
 1763              		.global	SPI1_IRQHandler
 1764              		.syntax unified
 1765              		.code	16
 1766              		.thumb_func
 1767              		.fpu softvfp
 1769              	SPI1_IRQHandler:
 1770              	.LFB2365:
  37:../../src/interrupts.h ****    extern "C" void SPI1_IRQHandler            () { while(1) {} }
 1771              		.loc 12 37 0
 1772              		.cfi_startproc
 1773              		@ Volatile: function does not return.
 1774              		@ args = 0, pretend = 0, frame = 0
 1775              		@ frame_needed = 0, uses_anonymous_args = 0
 1776              		@ link register save eliminated.
 1777              	.L168:
 1778 0000 FEE7     		b	.L168
 1779              		.cfi_endproc
 1780              	.LFE2365:
 1782              		.section	.text.SPI2_IRQHandler,"ax",%progbits
 1783              		.align	1
 1784              		.global	SPI2_IRQHandler
 1785              		.syntax unified
 1786              		.code	16
 1787              		.thumb_func
 1788              		.fpu softvfp
 1790              	SPI2_IRQHandler:
 1791              	.LFB2366:
  38:../../src/interrupts.h ****    extern "C" void SPI2_IRQHandler            () { while(1) {} }
 1792              		.loc 12 38 0
 1793              		.cfi_startproc
 1794              		@ Volatile: function does not return.
 1795              		@ args = 0, pretend = 0, frame = 0
 1796              		@ frame_needed = 0, uses_anonymous_args = 0
 1797              		@ link register save eliminated.
 1798              	.L170:
 1799 0000 FEE7     		b	.L170
 1800              		.cfi_endproc
 1801              	.LFE2366:
 1803              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 1804              		.align	1
 1805              		.global	EXTI15_10_IRQHandler
 1806              		.syntax unified
 1807              		.code	16
 1808              		.thumb_func
 1809              		.fpu softvfp
 1811              	EXTI15_10_IRQHandler:
 1812              	.LFB2367:
  39:../../src/interrupts.h ****    extern "C" void EXTI15_10_IRQHandler       () { while(1) {} }
 1813              		.loc 12 39 0
 1814              		.cfi_startproc
 1815              		@ Volatile: function does not return.
 1816              		@ args = 0, pretend = 0, frame = 0
 1817              		@ frame_needed = 0, uses_anonymous_args = 0
 1818              		@ link register save eliminated.
 1819              	.L172:
 1820 0000 FEE7     		b	.L172
ARM GAS  /tmp/cc2puB6n.s 			page 50


 1821              		.cfi_endproc
 1822              	.LFE2367:
 1824              		.section	.text.RTC_Alarm_IRQHandler,"ax",%progbits
 1825              		.align	1
 1826              		.global	RTC_Alarm_IRQHandler
 1827              		.syntax unified
 1828              		.code	16
 1829              		.thumb_func
 1830              		.fpu softvfp
 1832              	RTC_Alarm_IRQHandler:
 1833              	.LFB2368:
  40:../../src/interrupts.h ****    extern "C" void RTC_Alarm_IRQHandler       () { while(1) {} }
 1834              		.loc 12 40 0
 1835              		.cfi_startproc
 1836              		@ Volatile: function does not return.
 1837              		@ args = 0, pretend = 0, frame = 0
 1838              		@ frame_needed = 0, uses_anonymous_args = 0
 1839              		@ link register save eliminated.
 1840              	.L174:
 1841 0000 FEE7     		b	.L174
 1842              		.cfi_endproc
 1843              	.LFE2368:
 1845              		.section	.text.USBWakeUp_IRQHandler,"ax",%progbits
 1846              		.align	1
 1847              		.global	USBWakeUp_IRQHandler
 1848              		.syntax unified
 1849              		.code	16
 1850              		.thumb_func
 1851              		.fpu softvfp
 1853              	USBWakeUp_IRQHandler:
 1854              	.LFB2369:
  41:../../src/interrupts.h ****    extern "C" void USBWakeUp_IRQHandler       () { while(1) {} }
 1855              		.loc 12 41 0
 1856              		.cfi_startproc
 1857              		@ Volatile: function does not return.
 1858              		@ args = 0, pretend = 0, frame = 0
 1859              		@ frame_needed = 0, uses_anonymous_args = 0
 1860              		@ link register save eliminated.
 1861              	.L176:
 1862 0000 FEE7     		b	.L176
 1863              		.cfi_endproc
 1864              	.LFE2369:
 1866              		.section	.text.USART1_IRQHandler,"ax",%progbits
 1867              		.align	1
 1868              		.global	USART1_IRQHandler
 1869              		.syntax unified
 1870              		.code	16
 1871              		.thumb_func
 1872              		.fpu softvfp
 1874              	USART1_IRQHandler:
 1875              	.LFB2370:
  42:../../src/interrupts.h **** 
  43:../../src/interrupts.h **** 	extern "C" void USART1_IRQHandler          () { interrupt_usart1.interrupt(); mcu::make_reference<
 1876              		.loc 12 43 0
 1877              		.cfi_startproc
 1878              		@ args = 0, pretend = 0, frame = 0
 1879              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc2puB6n.s 			page 51


 1880              		.loc 12 43 0
 1881 0000 10B5     		push	{r4, lr}
 1882              	.LCFI8:
 1883              		.cfi_def_cfa_offset 8
 1884              		.cfi_offset 4, -8
 1885              		.cfi_offset 14, -4
 1886              		.loc 12 43 0
 1887 0002 0348     		ldr	r0, .L178
 1888 0004 FFF7FEFF 		bl	_ZN9Interrupt9interruptEv
 1889              	.LVL100:
 1890              	.LBB902:
 1891              	.LBB903:
 1892              	.LBB904:
 1893              	.LBB905:
  75:../../src/periph/f1_f4_usart.h ****    VIRTUAL_TEST uint32_t read_DR() { return DR; }
 1894              		.loc 6 75 0
 1895 0008 024B     		ldr	r3, .L178+4
 1896              	.LBE905:
 1897              	.LBE904:
 1898              	.LBE903:
 1899              	.LBE902:
 1900              		.loc 12 43 0
 1901              		@ sp needed
 1902              	.LBB911:
 1903              	.LBB910:
 1904              	.LBB907:
 1905              	.LBB906:
  75:../../src/periph/f1_f4_usart.h ****    VIRTUAL_TEST uint32_t read_DR() { return DR; }
 1906              		.loc 6 75 0
 1907 000a 1A68     		ldr	r2, [r3]
 1908              	.LBE906:
 1909              	.LBE907:
 1910              	.LBB908:
 1911              	.LBB909:
  76:../../src/periph/f1_f4_usart.h ****    USART& clear_interrupt_flags()
 1912              		.loc 6 76 0
 1913 000c 5B68     		ldr	r3, [r3, #4]
 1914              	.LBE909:
 1915              	.LBE908:
 1916              	.LBE910:
 1917              	.LBE911:
 1918              		.loc 12 43 0
 1919 000e 10BD     		pop	{r4, pc}
 1920              	.L179:
 1921              		.align	2
 1922              	.L178:
 1923 0010 00000000 		.word	.LANCHOR1
 1924 0014 00380140 		.word	1073821696
 1925              		.cfi_endproc
 1926              	.LFE2370:
 1928              		.section	.text.USART2_IRQHandler,"ax",%progbits
 1929              		.align	1
 1930              		.global	USART2_IRQHandler
 1931              		.syntax unified
 1932              		.code	16
 1933              		.thumb_func
 1934              		.fpu softvfp
ARM GAS  /tmp/cc2puB6n.s 			page 52


 1936              	USART2_IRQHandler:
 1937              	.LFB2371:
  44:../../src/interrupts.h ****    extern "C" void USART2_IRQHandler          () { interrupt_usart2.interrupt(); mcu::make_referenc
 1938              		.loc 12 44 0
 1939              		.cfi_startproc
 1940              		@ args = 0, pretend = 0, frame = 0
 1941              		@ frame_needed = 0, uses_anonymous_args = 0
 1942 0000 10B5     		push	{r4, lr}
 1943              	.LCFI9:
 1944              		.cfi_def_cfa_offset 8
 1945              		.cfi_offset 4, -8
 1946              		.cfi_offset 14, -4
 1947              		.loc 12 44 0
 1948 0002 0348     		ldr	r0, .L181
 1949 0004 FFF7FEFF 		bl	_ZN9Interrupt9interruptEv
 1950              	.LVL101:
 1951              	.LBB912:
 1952              	.LBB913:
 1953              	.LBB914:
 1954              	.LBB915:
  75:../../src/periph/f1_f4_usart.h ****    VIRTUAL_TEST uint32_t read_DR() { return DR; }
 1955              		.loc 6 75 0
 1956 0008 024B     		ldr	r3, .L181+4
 1957              	.LBE915:
 1958              	.LBE914:
 1959              	.LBE913:
 1960              	.LBE912:
 1961              		.loc 12 44 0
 1962              		@ sp needed
 1963              	.LBB921:
 1964              	.LBB920:
 1965              	.LBB917:
 1966              	.LBB916:
  75:../../src/periph/f1_f4_usart.h ****    VIRTUAL_TEST uint32_t read_DR() { return DR; }
 1967              		.loc 6 75 0
 1968 000a 1A68     		ldr	r2, [r3]
 1969              	.LBE916:
 1970              	.LBE917:
 1971              	.LBB918:
 1972              	.LBB919:
  76:../../src/periph/f1_f4_usart.h ****    USART& clear_interrupt_flags()
 1973              		.loc 6 76 0
 1974 000c 5B68     		ldr	r3, [r3, #4]
 1975              	.LBE919:
 1976              	.LBE918:
 1977              	.LBE920:
 1978              	.LBE921:
 1979              		.loc 12 44 0
 1980 000e 10BD     		pop	{r4, pc}
 1981              	.L182:
 1982              		.align	2
 1983              	.L181:
 1984 0010 00000000 		.word	.LANCHOR2
 1985 0014 00440040 		.word	1073759232
 1986              		.cfi_endproc
 1987              	.LFE2371:
 1989              		.section	.text.USART3_IRQHandler,"ax",%progbits
ARM GAS  /tmp/cc2puB6n.s 			page 53


 1990              		.align	1
 1991              		.global	USART3_IRQHandler
 1992              		.syntax unified
 1993              		.code	16
 1994              		.thumb_func
 1995              		.fpu softvfp
 1997              	USART3_IRQHandler:
 1998              	.LFB2372:
  45:../../src/interrupts.h ****    extern "C" void USART3_IRQHandler          () { interrupt_usart3.interrupt(); mcu::make_referenc
 1999              		.loc 12 45 0
 2000              		.cfi_startproc
 2001              		@ args = 0, pretend = 0, frame = 0
 2002              		@ frame_needed = 0, uses_anonymous_args = 0
 2003 0000 10B5     		push	{r4, lr}
 2004              	.LCFI10:
 2005              		.cfi_def_cfa_offset 8
 2006              		.cfi_offset 4, -8
 2007              		.cfi_offset 14, -4
 2008              		.loc 12 45 0
 2009 0002 0348     		ldr	r0, .L184
 2010 0004 FFF7FEFF 		bl	_ZN9Interrupt9interruptEv
 2011              	.LVL102:
 2012              	.LBB922:
 2013              	.LBB923:
 2014              	.LBB924:
 2015              	.LBB925:
  75:../../src/periph/f1_f4_usart.h ****    VIRTUAL_TEST uint32_t read_DR() { return DR; }
 2016              		.loc 6 75 0
 2017 0008 024B     		ldr	r3, .L184+4
 2018              	.LBE925:
 2019              	.LBE924:
 2020              	.LBE923:
 2021              	.LBE922:
 2022              		.loc 12 45 0
 2023              		@ sp needed
 2024              	.LBB931:
 2025              	.LBB930:
 2026              	.LBB927:
 2027              	.LBB926:
  75:../../src/periph/f1_f4_usart.h ****    VIRTUAL_TEST uint32_t read_DR() { return DR; }
 2028              		.loc 6 75 0
 2029 000a 1A68     		ldr	r2, [r3]
 2030              	.LBE926:
 2031              	.LBE927:
 2032              	.LBB928:
 2033              	.LBB929:
  76:../../src/periph/f1_f4_usart.h ****    USART& clear_interrupt_flags()
 2034              		.loc 6 76 0
 2035 000c 5B68     		ldr	r3, [r3, #4]
 2036              	.LBE929:
 2037              	.LBE928:
 2038              	.LBE930:
 2039              	.LBE931:
 2040              		.loc 12 45 0
 2041 000e 10BD     		pop	{r4, pc}
 2042              	.L185:
 2043              		.align	2
ARM GAS  /tmp/cc2puB6n.s 			page 54


 2044              	.L184:
 2045 0010 00000000 		.word	.LANCHOR3
 2046 0014 00480040 		.word	1073760256
 2047              		.cfi_endproc
 2048              	.LFE2372:
 2050              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 2051              		.align	1
 2052              		.global	DMA1_Channel1_IRQHandler
 2053              		.syntax unified
 2054              		.code	16
 2055              		.thumb_func
 2056              		.fpu softvfp
 2058              	DMA1_Channel1_IRQHandler:
 2059              	.LFB2373:
  46:../../src/interrupts.h **** 
  47:../../src/interrupts.h **** 	extern "C" void DMA1_Channel1_IRQHandler   () { interrupt_DMA_channel1.interrupt(); mcu::make_refe
 2060              		.loc 12 47 0
 2061              		.cfi_startproc
 2062              		@ args = 0, pretend = 0, frame = 0
 2063              		@ frame_needed = 0, uses_anonymous_args = 0
 2064 0000 10B5     		push	{r4, lr}
 2065              	.LCFI11:
 2066              		.cfi_def_cfa_offset 8
 2067              		.cfi_offset 4, -8
 2068              		.cfi_offset 14, -4
 2069              		.loc 12 47 0
 2070 0002 0448     		ldr	r0, .L187
 2071 0004 FFF7FEFF 		bl	_ZN9Interrupt9interruptEv
 2072              	.LVL103:
 2073              	.LBB932:
 2074              	.LBB933:
  42:../../src/periph/f1_dma.h ****    else if (channel == Channel::_2) IFCR.CGIF2 = true;
 2075              		.loc 10 42 0
 2076 0008 0123     		movs	r3, #1
 2077 000a 034A     		ldr	r2, .L187+4
 2078              	.LBE933:
 2079              	.LBE932:
 2080              		.loc 12 47 0
 2081              		@ sp needed
 2082              	.LBB935:
 2083              	.LBB934:
  42:../../src/periph/f1_dma.h ****    else if (channel == Channel::_2) IFCR.CGIF2 = true;
 2084              		.loc 10 42 0
 2085 000c 5168     		ldr	r1, [r2, #4]
 2086 000e 0B43     		orrs	r3, r1
 2087 0010 5360     		str	r3, [r2, #4]
 2088              	.LVL104:
 2089              	.LBE934:
 2090              	.LBE935:
 2091              		.loc 12 47 0
 2092 0012 10BD     		pop	{r4, pc}
 2093              	.L188:
 2094              		.align	2
 2095              	.L187:
 2096 0014 00000000 		.word	.LANCHOR4
 2097 0018 00000240 		.word	1073872896
 2098              		.cfi_endproc
ARM GAS  /tmp/cc2puB6n.s 			page 55


 2099              	.LFE2373:
 2101              		.section	.text.DMA1_Channel2_IRQHandler,"ax",%progbits
 2102              		.align	1
 2103              		.global	DMA1_Channel2_IRQHandler
 2104              		.syntax unified
 2105              		.code	16
 2106              		.thumb_func
 2107              		.fpu softvfp
 2109              	DMA1_Channel2_IRQHandler:
 2110              	.LFB2374:
  48:../../src/interrupts.h ****    extern "C" void DMA1_Channel2_IRQHandler   () { interrupt_DMA_channel2.interrupt(); mcu::make_re
 2111              		.loc 12 48 0
 2112              		.cfi_startproc
 2113              		@ args = 0, pretend = 0, frame = 0
 2114              		@ frame_needed = 0, uses_anonymous_args = 0
 2115 0000 10B5     		push	{r4, lr}
 2116              	.LCFI12:
 2117              		.cfi_def_cfa_offset 8
 2118              		.cfi_offset 4, -8
 2119              		.cfi_offset 14, -4
 2120              		.loc 12 48 0
 2121 0002 0448     		ldr	r0, .L190
 2122 0004 FFF7FEFF 		bl	_ZN9Interrupt9interruptEv
 2123              	.LVL105:
 2124              	.LBB936:
 2125              	.LBB937:
  43:../../src/periph/f1_dma.h ****    else if (channel == Channel::_3) IFCR.CGIF3 = true;
 2126              		.loc 10 43 0
 2127 0008 1023     		movs	r3, #16
 2128 000a 034A     		ldr	r2, .L190+4
 2129              	.LBE937:
 2130              	.LBE936:
 2131              		.loc 12 48 0
 2132              		@ sp needed
 2133              	.LBB939:
 2134              	.LBB938:
  43:../../src/periph/f1_dma.h ****    else if (channel == Channel::_3) IFCR.CGIF3 = true;
 2135              		.loc 10 43 0
 2136 000c 5168     		ldr	r1, [r2, #4]
 2137 000e 0B43     		orrs	r3, r1
 2138 0010 5360     		str	r3, [r2, #4]
 2139              	.LVL106:
 2140              	.LBE938:
 2141              	.LBE939:
 2142              		.loc 12 48 0
 2143 0012 10BD     		pop	{r4, pc}
 2144              	.L191:
 2145              		.align	2
 2146              	.L190:
 2147 0014 00000000 		.word	.LANCHOR5
 2148 0018 00000240 		.word	1073872896
 2149              		.cfi_endproc
 2150              	.LFE2374:
 2152              		.section	.text.DMA1_Channel3_IRQHandler,"ax",%progbits
 2153              		.align	1
 2154              		.global	DMA1_Channel3_IRQHandler
 2155              		.syntax unified
ARM GAS  /tmp/cc2puB6n.s 			page 56


 2156              		.code	16
 2157              		.thumb_func
 2158              		.fpu softvfp
 2160              	DMA1_Channel3_IRQHandler:
 2161              	.LFB2375:
  49:../../src/interrupts.h ****    extern "C" void DMA1_Channel3_IRQHandler   () { interrupt_DMA_channel3.interrupt(); mcu::make_re
 2162              		.loc 12 49 0
 2163              		.cfi_startproc
 2164              		@ args = 0, pretend = 0, frame = 0
 2165              		@ frame_needed = 0, uses_anonymous_args = 0
 2166 0000 10B5     		push	{r4, lr}
 2167              	.LCFI13:
 2168              		.cfi_def_cfa_offset 8
 2169              		.cfi_offset 4, -8
 2170              		.cfi_offset 14, -4
 2171              		.loc 12 49 0
 2172 0002 0548     		ldr	r0, .L193
 2173 0004 FFF7FEFF 		bl	_ZN9Interrupt9interruptEv
 2174              	.LVL107:
 2175              	.LBB940:
 2176              	.LBB941:
  44:../../src/periph/f1_dma.h ****    else if (channel == Channel::_4) IFCR.CGIF4 = true;
 2177              		.loc 10 44 0
 2178 0008 8023     		movs	r3, #128
 2179 000a 044A     		ldr	r2, .L193+4
 2180 000c 5B00     		lsls	r3, r3, #1
 2181 000e 5168     		ldr	r1, [r2, #4]
 2182              	.LBE941:
 2183              	.LBE940:
 2184              		.loc 12 49 0
 2185              		@ sp needed
 2186              	.LBB943:
 2187              	.LBB942:
  44:../../src/periph/f1_dma.h ****    else if (channel == Channel::_4) IFCR.CGIF4 = true;
 2188              		.loc 10 44 0
 2189 0010 0B43     		orrs	r3, r1
 2190 0012 5360     		str	r3, [r2, #4]
 2191              	.LVL108:
 2192              	.LBE942:
 2193              	.LBE943:
 2194              		.loc 12 49 0
 2195 0014 10BD     		pop	{r4, pc}
 2196              	.L194:
 2197 0016 C046     		.align	2
 2198              	.L193:
 2199 0018 00000000 		.word	.LANCHOR6
 2200 001c 00000240 		.word	1073872896
 2201              		.cfi_endproc
 2202              	.LFE2375:
 2204              		.section	.text.DMA1_Channel4_IRQHandler,"ax",%progbits
 2205              		.align	1
 2206              		.global	DMA1_Channel4_IRQHandler
 2207              		.syntax unified
 2208              		.code	16
 2209              		.thumb_func
 2210              		.fpu softvfp
 2212              	DMA1_Channel4_IRQHandler:
ARM GAS  /tmp/cc2puB6n.s 			page 57


 2213              	.LFB2376:
  50:../../src/interrupts.h ****    extern "C" void DMA1_Channel4_IRQHandler   () { interrupt_DMA_channel4.interrupt(); mcu::make_re
 2214              		.loc 12 50 0
 2215              		.cfi_startproc
 2216              		@ args = 0, pretend = 0, frame = 0
 2217              		@ frame_needed = 0, uses_anonymous_args = 0
 2218 0000 10B5     		push	{r4, lr}
 2219              	.LCFI14:
 2220              		.cfi_def_cfa_offset 8
 2221              		.cfi_offset 4, -8
 2222              		.cfi_offset 14, -4
 2223              		.loc 12 50 0
 2224 0002 0548     		ldr	r0, .L196
 2225 0004 FFF7FEFF 		bl	_ZN9Interrupt9interruptEv
 2226              	.LVL109:
 2227              	.LBB944:
 2228              	.LBB945:
  45:../../src/periph/f1_dma.h ****    else if (channel == Channel::_5) IFCR.CGIF5 = true;
 2229              		.loc 10 45 0
 2230 0008 8023     		movs	r3, #128
 2231 000a 044A     		ldr	r2, .L196+4
 2232 000c 5B01     		lsls	r3, r3, #5
 2233 000e 5168     		ldr	r1, [r2, #4]
 2234              	.LBE945:
 2235              	.LBE944:
 2236              		.loc 12 50 0
 2237              		@ sp needed
 2238              	.LBB947:
 2239              	.LBB946:
  45:../../src/periph/f1_dma.h ****    else if (channel == Channel::_5) IFCR.CGIF5 = true;
 2240              		.loc 10 45 0
 2241 0010 0B43     		orrs	r3, r1
 2242 0012 5360     		str	r3, [r2, #4]
 2243              	.LVL110:
 2244              	.LBE946:
 2245              	.LBE947:
 2246              		.loc 12 50 0
 2247 0014 10BD     		pop	{r4, pc}
 2248              	.L197:
 2249 0016 C046     		.align	2
 2250              	.L196:
 2251 0018 00000000 		.word	.LANCHOR7
 2252 001c 00000240 		.word	1073872896
 2253              		.cfi_endproc
 2254              	.LFE2376:
 2256              		.section	.text.DMA1_Channel5_IRQHandler,"ax",%progbits
 2257              		.align	1
 2258              		.global	DMA1_Channel5_IRQHandler
 2259              		.syntax unified
 2260              		.code	16
 2261              		.thumb_func
 2262              		.fpu softvfp
 2264              	DMA1_Channel5_IRQHandler:
 2265              	.LFB2377:
  51:../../src/interrupts.h ****    extern "C" void DMA1_Channel5_IRQHandler   () { interrupt_DMA_channel5.interrupt(); mcu::make_re
 2266              		.loc 12 51 0
 2267              		.cfi_startproc
ARM GAS  /tmp/cc2puB6n.s 			page 58


 2268              		@ args = 0, pretend = 0, frame = 0
 2269              		@ frame_needed = 0, uses_anonymous_args = 0
 2270 0000 10B5     		push	{r4, lr}
 2271              	.LCFI15:
 2272              		.cfi_def_cfa_offset 8
 2273              		.cfi_offset 4, -8
 2274              		.cfi_offset 14, -4
 2275              		.loc 12 51 0
 2276 0002 0548     		ldr	r0, .L199
 2277 0004 FFF7FEFF 		bl	_ZN9Interrupt9interruptEv
 2278              	.LVL111:
 2279              	.LBB948:
 2280              	.LBB949:
  46:../../src/periph/f1_dma.h ****    else if (channel == Channel::_6) IFCR.CGIF6 = true;
 2281              		.loc 10 46 0
 2282 0008 8023     		movs	r3, #128
 2283 000a 044A     		ldr	r2, .L199+4
 2284 000c 5B02     		lsls	r3, r3, #9
 2285 000e 5168     		ldr	r1, [r2, #4]
 2286              	.LBE949:
 2287              	.LBE948:
 2288              		.loc 12 51 0
 2289              		@ sp needed
 2290              	.LBB951:
 2291              	.LBB950:
  46:../../src/periph/f1_dma.h ****    else if (channel == Channel::_6) IFCR.CGIF6 = true;
 2292              		.loc 10 46 0
 2293 0010 0B43     		orrs	r3, r1
 2294 0012 5360     		str	r3, [r2, #4]
 2295              	.LVL112:
 2296              	.LBE950:
 2297              	.LBE951:
 2298              		.loc 12 51 0
 2299 0014 10BD     		pop	{r4, pc}
 2300              	.L200:
 2301 0016 C046     		.align	2
 2302              	.L199:
 2303 0018 00000000 		.word	.LANCHOR8
 2304 001c 00000240 		.word	1073872896
 2305              		.cfi_endproc
 2306              	.LFE2377:
 2308              		.section	.text.DMA1_Channel6_IRQHandler,"ax",%progbits
 2309              		.align	1
 2310              		.global	DMA1_Channel6_IRQHandler
 2311              		.syntax unified
 2312              		.code	16
 2313              		.thumb_func
 2314              		.fpu softvfp
 2316              	DMA1_Channel6_IRQHandler:
 2317              	.LFB2378:
  52:../../src/interrupts.h ****    extern "C" void DMA1_Channel6_IRQHandler   () { interrupt_DMA_channel6.interrupt(); mcu::make_re
 2318              		.loc 12 52 0
 2319              		.cfi_startproc
 2320              		@ args = 0, pretend = 0, frame = 0
 2321              		@ frame_needed = 0, uses_anonymous_args = 0
 2322 0000 10B5     		push	{r4, lr}
 2323              	.LCFI16:
ARM GAS  /tmp/cc2puB6n.s 			page 59


 2324              		.cfi_def_cfa_offset 8
 2325              		.cfi_offset 4, -8
 2326              		.cfi_offset 14, -4
 2327              		.loc 12 52 0
 2328 0002 0548     		ldr	r0, .L202
 2329 0004 FFF7FEFF 		bl	_ZN9Interrupt9interruptEv
 2330              	.LVL113:
 2331              	.LBB956:
 2332              	.LBB957:
 2333              	.LBB958:
  47:../../src/periph/f1_dma.h ****    else if (channel == Channel::_7) IFCR.CGIF7 = true;
 2334              		.loc 10 47 0
 2335 0008 8023     		movs	r3, #128
 2336 000a 044A     		ldr	r2, .L202+4
 2337 000c 5B03     		lsls	r3, r3, #13
 2338 000e 5168     		ldr	r1, [r2, #4]
 2339              	.LBE958:
 2340              	.LBE957:
 2341              	.LBE956:
 2342              		.loc 12 52 0
 2343              		@ sp needed
 2344              	.LBB961:
 2345              	.LBB960:
 2346              	.LBB959:
  47:../../src/periph/f1_dma.h ****    else if (channel == Channel::_7) IFCR.CGIF7 = true;
 2347              		.loc 10 47 0
 2348 0010 0B43     		orrs	r3, r1
 2349 0012 5360     		str	r3, [r2, #4]
 2350              	.LVL114:
 2351              	.LBE959:
 2352              	.LBE960:
 2353              	.LBE961:
 2354              		.loc 12 52 0
 2355 0014 10BD     		pop	{r4, pc}
 2356              	.L203:
 2357 0016 C046     		.align	2
 2358              	.L202:
 2359 0018 00000000 		.word	.LANCHOR9
 2360 001c 00000240 		.word	1073872896
 2361              		.cfi_endproc
 2362              	.LFE2378:
 2364              		.section	.text.DMA1_Channel7_IRQHandler,"ax",%progbits
 2365              		.align	1
 2366              		.global	DMA1_Channel7_IRQHandler
 2367              		.syntax unified
 2368              		.code	16
 2369              		.thumb_func
 2370              		.fpu softvfp
 2372              	DMA1_Channel7_IRQHandler:
 2373              	.LFB2379:
  53:../../src/interrupts.h ****    extern "C" void DMA1_Channel7_IRQHandler   () { interrupt_DMA_channel7.interrupt(); mcu::make_re
 2374              		.loc 12 53 0
 2375              		.cfi_startproc
 2376              		@ args = 0, pretend = 0, frame = 0
 2377              		@ frame_needed = 0, uses_anonymous_args = 0
 2378 0000 10B5     		push	{r4, lr}
 2379              	.LCFI17:
ARM GAS  /tmp/cc2puB6n.s 			page 60


 2380              		.cfi_def_cfa_offset 8
 2381              		.cfi_offset 4, -8
 2382              		.cfi_offset 14, -4
 2383              		.loc 12 53 0
 2384 0002 0548     		ldr	r0, .L205
 2385 0004 FFF7FEFF 		bl	_ZN9Interrupt9interruptEv
 2386              	.LVL115:
 2387              	.LBB966:
 2388              	.LBB967:
 2389              	.LBB968:
  48:../../src/periph/f1_dma.h **** }
 2390              		.loc 10 48 0
 2391 0008 8023     		movs	r3, #128
 2392 000a 044A     		ldr	r2, .L205+4
 2393 000c 5B04     		lsls	r3, r3, #17
 2394 000e 5168     		ldr	r1, [r2, #4]
 2395              	.LBE968:
 2396              	.LBE967:
 2397              	.LBE966:
 2398              		.loc 12 53 0
 2399              		@ sp needed
 2400              	.LBB971:
 2401              	.LBB970:
 2402              	.LBB969:
  48:../../src/periph/f1_dma.h **** }
 2403              		.loc 10 48 0
 2404 0010 0B43     		orrs	r3, r1
 2405 0012 5360     		str	r3, [r2, #4]
 2406              	.LVL116:
 2407              	.LBE969:
 2408              	.LBE970:
 2409              	.LBE971:
 2410              		.loc 12 53 0
 2411 0014 10BD     		pop	{r4, pc}
 2412              	.L206:
 2413 0016 C046     		.align	2
 2414              	.L205:
 2415 0018 00000000 		.word	.LANCHOR10
 2416 001c 00000240 		.word	1073872896
 2417              		.cfi_endproc
 2418              	.LFE2379:
 2420              		.section	.text.init_clock,"ax",%progbits
 2421              		.align	1
 2422              		.global	init_clock
 2423              		.syntax unified
 2424              		.code	16
 2425              		.thumb_func
 2426              		.fpu softvfp
 2428              	init_clock:
 2429              	.LFB2402:
 2430              		.file 13 "main.cpp"
   1:main.cpp      **** #define STM32F103xB
   2:main.cpp      **** #define F_OSC   8000000UL
   3:main.cpp      **** #define F_CPU   72000000UL
   4:main.cpp      **** // #include <iostream>
   5:main.cpp      **** #include "periph_rcc.h"
   6:main.cpp      **** #include "periph_flash.h"
ARM GAS  /tmp/cc2puB6n.s 			page 61


   7:main.cpp      **** // #include "pin.h"
   8:main.cpp      **** // // #include "timers.h"
   9:main.cpp      **** // // #include "pwm.h"
  10:main.cpp      **** // #include "uart.h"
  11:main.cpp      **** // #include "fifo.h"
  12:main.cpp      **** # include "modbus_slave.h"
  13:main.cpp      **** // #include "modbus_master.h"
  14:main.cpp      **** // #include "buttons.h"
  15:main.cpp      **** // #include "lcd_ram.h"
  16:main.cpp      **** 
  17:main.cpp      **** 
  18:main.cpp      **** /// —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–µ—Ä–≤–æ–π –≤ startup —Ñ–∞–π–ª–µ
  19:main.cpp      **** extern "C" void init_clock ()
  20:main.cpp      **** {
 2431              		.loc 13 20 0
 2432              		.cfi_startproc
 2433              		@ args = 0, pretend = 0, frame = 0
 2434              		@ frame_needed = 0, uses_anonymous_args = 0
 2435              		@ link register save eliminated.
 2436              	.LBB972:
 2437              	.LBB973:
 2438              		.file 14 "../../src/periph/f1_flash.h"
   1:../../src/periph/f1_flash.h **** #pragma once
   2:../../src/periph/f1_flash.h **** 
   3:../../src/periph/f1_flash.h **** #include "f1_bits_flash.h"
   4:../../src/periph/f1_flash.h **** 
   5:../../src/periph/f1_flash.h **** namespace mcu {
   6:../../src/periph/f1_flash.h **** 
   7:../../src/periph/f1_flash.h **** class FLASH {
   8:../../src/periph/f1_flash.h ****    __IO FLASH_bits::ACR ACR;     // access control register,   offset: 0x00
   9:../../src/periph/f1_flash.h ****    __IO uint32_t        KEYR;    // key register,              offset: 0x04
  10:../../src/periph/f1_flash.h ****    __IO uint32_t        OPTKEYR; // option key register,       offset: 0x08
  11:../../src/periph/f1_flash.h ****    __IO uint32_t        SR;      // status register,           offset: 0x0C
  12:../../src/periph/f1_flash.h ****    __IO uint32_t        CR;      // control register,          offset: 0x10
  13:../../src/periph/f1_flash.h ****    __IO uint32_t        AR;      // Flash address register     offset: 0x14
  14:../../src/periph/f1_flash.h ****    __IO uint32_t        RESERVED;
  15:../../src/periph/f1_flash.h ****    __IO uint32_t        OBR;     // Option byte register       offset: 0x1C
  16:../../src/periph/f1_flash.h ****    __IO uint32_t        WRPR;    // Write protection register  offset: 0x20
  17:../../src/periph/f1_flash.h **** public:
  18:../../src/periph/f1_flash.h ****    using CMSIS_type = FLASH_TypeDef;
  19:../../src/periph/f1_flash.h ****    using Latency    = FLASH_bits::ACR::Latency;
  20:../../src/periph/f1_flash.h ****    // using ProgSize     = FLASH_bits::CR::ProgSize;
  21:../../src/periph/f1_flash.h ****    // using Sector       = FLASH_bits::CR::Sector;
  22:../../src/periph/f1_flash.h **** 
  23:../../src/periph/f1_flash.h ****    FLASH& set (Latency v)            { ACR.LATENCY = v;    return *this; }
  24:../../src/periph/f1_flash.h ****    FLASH& enable ()                  { ACR.PRFTBE = true;  return *this; }
 2439              		.loc 14 24 0
 2440 0000 1022     		movs	r2, #16
 2441 0002 1F4B     		ldr	r3, .L214
 2442 0004 1968     		ldr	r1, [r3]
 2443 0006 0A43     		orrs	r2, r1
 2444              	.LBE973:
 2445              	.LBE972:
 2446              	.LBB975:
 2447              	.LBB976:
  23:../../src/periph/f1_flash.h ****    FLASH& enable ()                  { ACR.PRFTBE = true;  return *this; }
 2448              		.loc 14 23 0
ARM GAS  /tmp/cc2puB6n.s 			page 62


 2449 0008 0721     		movs	r1, #7
 2450              	.LBE976:
 2451              	.LBE975:
 2452              	.LBB978:
 2453              	.LBB974:
 2454              		.loc 14 24 0
 2455 000a 1A60     		str	r2, [r3]
 2456              	.LVL117:
 2457              	.LBE974:
 2458              	.LBE978:
 2459              	.LBB979:
 2460              	.LBB977:
  23:../../src/periph/f1_flash.h ****    FLASH& enable ()                  { ACR.PRFTBE = true;  return *this; }
 2461              		.loc 14 23 0
 2462 000c 1A68     		ldr	r2, [r3]
 2463 000e 8A43     		bics	r2, r1
 2464 0010 1100     		movs	r1, r2
 2465 0012 0222     		movs	r2, #2
 2466 0014 0A43     		orrs	r2, r1
 2467 0016 1A60     		str	r2, [r3]
 2468              	.LVL118:
 2469              	.LBE977:
 2470              	.LBE979:
 2471              	.LBB980:
 2472              	.LBB981:
  38:../../src/periph/f1_rcc.h ****    RCC& wait_HSE_ready() { while (not CR.HSERDY) {} return *this; }
 2473              		.loc 9 38 0
 2474 0018 8022     		movs	r2, #128
 2475 001a 1A4B     		ldr	r3, .L214+4
 2476 001c 5202     		lsls	r2, r2, #9
 2477 001e 1968     		ldr	r1, [r3]
 2478 0020 0A43     		orrs	r2, r1
 2479 0022 1A60     		str	r2, [r3]
 2480              	.L208:
 2481              	.LBE981:
 2482              	.LBE980:
 2483              	.LBB982:
 2484              	.LBB983:
  39:../../src/periph/f1_rcc.h ****    RCC& on_PLL        () { CR.PLLON = true;         return *this; }
 2485              		.loc 9 39 0
 2486 0024 1A68     		ldr	r2, [r3]
 2487 0026 9203     		lsls	r2, r2, #14
 2488 0028 FCD5     		bpl	.L208
 2489              	.LVL119:
 2490              	.LBE983:
 2491              	.LBE982:
 2492              	.LBB984:
 2493              	.LBB985:
  30:../../src/periph/f1_rcc.h ****    RCC& set_APB1  (APBprescaler  v) { CFGR.PPRE1  = v; return *this; } //
 2494              		.loc 9 30 0
 2495 002a F021     		movs	r1, #240
 2496 002c 5A68     		ldr	r2, [r3, #4]
 2497 002e 8A43     		bics	r2, r1
 2498 0030 5A60     		str	r2, [r3, #4]
 2499              	.LVL120:
 2500              	.LBE985:
 2501              	.LBE984:
ARM GAS  /tmp/cc2puB6n.s 			page 63


 2502              	.LBB986:
 2503              	.LBB987:
  31:../../src/periph/f1_rcc.h ****    RCC& set_APB2  (APBprescaler  v) { CFGR.PPRE2  = v; return *this; } //
 2504              		.loc 9 31 0
 2505 0032 5A68     		ldr	r2, [r3, #4]
 2506 0034 1449     		ldr	r1, .L214+8
 2507 0036 1140     		ands	r1, r2
 2508 0038 8022     		movs	r2, #128
 2509 003a D200     		lsls	r2, r2, #3
 2510 003c 0A43     		orrs	r2, r1
 2511 003e 5A60     		str	r2, [r3, #4]
 2512              	.LVL121:
 2513              	.LBE987:
 2514              	.LBE986:
 2515              	.LBB988:
 2516              	.LBB989:
  32:../../src/periph/f1_rcc.h ****    // RCC& set       (ADCprescaler  v) { CFGR.ADCPRE = v; return *this; } // dont use yet
 2517              		.loc 9 32 0
 2518 0040 5A68     		ldr	r2, [r3, #4]
 2519 0042 1249     		ldr	r1, .L214+12
 2520 0044 0A40     		ands	r2, r1
 2521 0046 5A60     		str	r2, [r3, #4]
 2522              	.LVL122:
 2523              	.LBE989:
 2524              	.LBE988:
 2525              	.LBB990:
 2526              	.LBB991:
  35:../../src/periph/f1_rcc.h ****    RCC& set       (PLLmultiplier v) { CFGR.PLLMUL = v; return *this; } //
 2527              		.loc 9 35 0
 2528 0048 8022     		movs	r2, #128
 2529 004a 5968     		ldr	r1, [r3, #4]
 2530 004c 5202     		lsls	r2, r2, #9
 2531 004e 0A43     		orrs	r2, r1
 2532 0050 5A60     		str	r2, [r3, #4]
 2533              	.LVL123:
 2534              	.LBE991:
 2535              	.LBE990:
 2536              	.LBB992:
 2537              	.LBB993:
  36:../../src/periph/f1_rcc.h **** 
 2538              		.loc 9 36 0
 2539 0052 5A68     		ldr	r2, [r3, #4]
 2540 0054 0E49     		ldr	r1, .L214+16
 2541 0056 1140     		ands	r1, r2
 2542 0058 E022     		movs	r2, #224
 2543 005a 5203     		lsls	r2, r2, #13
 2544 005c 0A43     		orrs	r2, r1
 2545 005e 5A60     		str	r2, [r3, #4]
 2546              	.LVL124:
 2547              	.LBE993:
 2548              	.LBE992:
 2549              	.LBB994:
 2550              	.LBB995:
  40:../../src/periph/f1_rcc.h ****    RCC& wait_PLL_ready() { while (not CR.PLLRDY) {} return *this; }
 2551              		.loc 9 40 0
 2552 0060 8022     		movs	r2, #128
 2553 0062 1968     		ldr	r1, [r3]
ARM GAS  /tmp/cc2puB6n.s 			page 64


 2554 0064 5204     		lsls	r2, r2, #17
 2555 0066 0A43     		orrs	r2, r1
 2556 0068 1A60     		str	r2, [r3]
 2557              	.L209:
 2558              	.LBE995:
 2559              	.LBE994:
 2560              	.LBB996:
 2561              	.LBB997:
  41:../../src/periph/f1_rcc.h **** 
 2562              		.loc 9 41 0
 2563 006a 1A68     		ldr	r2, [r3]
 2564 006c 9201     		lsls	r2, r2, #6
 2565 006e FCD5     		bpl	.L209
 2566              	.LVL125:
 2567              	.LBE997:
 2568              	.LBE996:
 2569              	.LBB998:
 2570              	.LBB999:
  34:../../src/periph/f1_rcc.h ****    RCC& set       (PLLsource     v) { CFGR.PLLSRC = v; return *this; } //
 2571              		.loc 9 34 0
 2572 0070 0321     		movs	r1, #3
 2573 0072 5A68     		ldr	r2, [r3, #4]
 2574              	.LBE999:
 2575              	.LBE998:
  21:main.cpp      ****    mcu::make_reference<mcu::Periph::FLASH>()
  22:main.cpp      ****       .enable()
  23:main.cpp      ****       .set(mcu::FLASH::Latency::_48_72MHz);
  24:main.cpp      ****    
  25:main.cpp      **** 
  26:main.cpp      ****    mcu::make_reference<mcu::Periph::RCC>()
  27:main.cpp      ****       .on_HSE()
  28:main.cpp      ****       .wait_HSE_ready()
  29:main.cpp      ****       .set      (mcu::RCC::AHBprescaler::AHBnotdiv)
  30:main.cpp      ****       .set_APB1 (mcu::RCC::APBprescaler::APBdiv2)
  31:main.cpp      ****       .set_APB2 (mcu::RCC::APBprescaler::APBnotdiv)
  32:main.cpp      ****       .set      (mcu::RCC::PLLsource::HSE)
  33:main.cpp      ****       .set      (mcu::RCC::PLLmultiplier::_9)
  34:main.cpp      ****       .on_PLL()
  35:main.cpp      ****       .wait_PLL_ready()
  36:main.cpp      ****       .set      (mcu::RCC::SystemClock::CS_PLL);
  37:main.cpp      **** }
 2576              		.loc 13 37 0
 2577              		@ sp needed
 2578              	.LBB1001:
 2579              	.LBB1000:
  34:../../src/periph/f1_rcc.h ****    RCC& set       (PLLsource     v) { CFGR.PLLSRC = v; return *this; } //
 2580              		.loc 9 34 0
 2581 0074 8A43     		bics	r2, r1
 2582 0076 1100     		movs	r1, r2
 2583 0078 0222     		movs	r2, #2
 2584 007a 0A43     		orrs	r2, r1
 2585 007c 5A60     		str	r2, [r3, #4]
 2586              	.LVL126:
 2587              	.LBE1000:
 2588              	.LBE1001:
 2589              		.loc 13 37 0
 2590 007e 7047     		bx	lr
ARM GAS  /tmp/cc2puB6n.s 			page 65


 2591              	.L215:
 2592              		.align	2
 2593              	.L214:
 2594 0080 00200240 		.word	1073881088
 2595 0084 00100240 		.word	1073876992
 2596 0088 FFF8FFFF 		.word	-1793
 2597 008c FFC7FFFF 		.word	-14337
 2598 0090 FFFFC3FF 		.word	-3932161
 2599              		.cfi_endproc
 2600              	.LFE2402:
 2602              		.section	.text._ZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10E
 2603              		.align	1
 2604              		.weak	_ZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10EEENS4_ILS
 2605              		.syntax unified
 2606              		.code	16
 2607              		.thumb_func
 2608              		.fpu softvfp
 2610              	_ZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10EEENS4_ILS3_1ELi1
 2611              	.LFB2405:
 125:../../src/uart.h **** {
 2612              		.loc 5 125 0
 2613              		.cfi_startproc
 2614              		@ args = 0, pretend = 0, frame = 0
 2615              		@ frame_needed = 0, uses_anonymous_args = 0
 2616              	.LVL127:
 2617 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2618              	.LCFI18:
 2619              		.cfi_def_cfa_offset 24
 2620              		.cfi_offset 3, -24
 2621              		.cfi_offset 4, -20
 2622              		.cfi_offset 5, -16
 2623              		.cfi_offset 6, -12
 2624              		.cfi_offset 7, -8
 2625              		.cfi_offset 14, -4
 134:../../src/uart.h ****         Pin::make<TXpin, TXpin_mode>()
 2626              		.loc 5 134 0
 2627 0002 0126     		movs	r6, #1
 2628 0004 844B     		ldr	r3, .L247
 2629 0006 854C     		ldr	r4, .L247+4
 2630 0008 1B78     		ldrb	r3, [r3]
 2631 000a BFF35B8F 		dmb	ish
 2632 000e 3342     		tst	r3, r6
 2633 0010 00D0     		beq	.LCB1898
 2634 0012 9FE0     		b	.L218	@long jump
 2635              	.LCB1898:
 134:../../src/uart.h ****         Pin::make<TXpin, TXpin_mode>()
 2636              		.loc 5 134 0 is_stmt 0 discriminator 1
 2637 0014 8048     		ldr	r0, .L247
 2638 0016 FFF7FEFF 		bl	__cxa_guard_acquire
 2639              	.LVL128:
 2640 001a 0028     		cmp	r0, #0
 2641 001c 00D1     		bne	.LCB1903
 2642 001e 99E0     		b	.L218	@long jump
 2643              	.LCB1903:
 2644              	.LBB1112:
 2645              	.LBB1113:
 2646              		.file 15 "../../src/pin.h"
ARM GAS  /tmp/cc2puB6n.s 			page 66


   1:../../src/pin.h **** #pragma once
   2:../../src/pin.h **** 
   3:../../src/pin.h **** #include "periph_gpio.h"
   4:../../src/pin.h **** #include "pins.h"
   5:../../src/pin.h **** 
   6:../../src/pin.h **** #if defined(USE_MOCK_GPIO)
   7:../../src/pin.h **** using namespace mock;
   8:../../src/pin.h **** #else
   9:../../src/pin.h **** using namespace mcu;
  10:../../src/pin.h **** #endif
  11:../../src/pin.h **** 
  12:../../src/pin.h **** class Pin {
  13:../../src/pin.h ****    GPIO& port;
  14:../../src/pin.h ****    const int n;
  15:../../src/pin.h **** public:
  16:../../src/pin.h ****    Pin (GPIO& port, int n) : port{port}, n{n} {}
  17:../../src/pin.h **** 
  18:../../src/pin.h ****    template<class Pin_, mcu::PinMode mode> static auto& make()
  19:../../src/pin.h ****    {
  20:../../src/pin.h ****       static Pin pin { mcu::make_reference<Pin_::periph>(), Pin_::n };
 2647              		.loc 15 20 0 is_stmt 1
 2648 0020 7F4D     		ldr	r5, .L247+8
 2649 0022 2B78     		ldrb	r3, [r5]
 2650 0024 BFF35B8F 		dmb	ish
 2651 0028 7E4F     		ldr	r7, .L247+12
 2652 002a 3342     		tst	r3, r6
 2653 002c 0BD1     		bne	.L221
 2654 002e 2800     		movs	r0, r5
 2655 0030 FFF7FEFF 		bl	__cxa_guard_acquire
 2656              	.LVL129:
 2657 0034 0028     		cmp	r0, #0
 2658 0036 06D0     		beq	.L221
 2659              	.LVL130:
 2660              	.LBB1114:
 2661              	.LBB1115:
 2662              	.LBB1116:
  16:../../src/pin.h **** 
 2663              		.loc 15 16 0
 2664 0038 7B4B     		ldr	r3, .L247+16
 2665              	.LBE1116:
 2666              	.LBE1115:
 2667              	.LBE1114:
 2668              		.loc 15 20 0
 2669 003a 2800     		movs	r0, r5
 2670              	.LBB1119:
 2671              	.LBB1118:
 2672              	.LBB1117:
  16:../../src/pin.h **** 
 2673              		.loc 15 16 0
 2674 003c 3B60     		str	r3, [r7]
 2675 003e 0923     		movs	r3, #9
 2676 0040 7B60     		str	r3, [r7, #4]
 2677              	.LVL131:
 2678              	.LBE1117:
 2679              	.LBE1118:
 2680              	.LBE1119:
 2681              		.loc 15 20 0
ARM GAS  /tmp/cc2puB6n.s 			page 67


 2682 0042 FFF7FEFF 		bl	__cxa_guard_release
 2683              	.LVL132:
 2684              	.L221:
 2685              	.LBB1120:
 2686              	.LBB1121:
  48:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOB) APB2ENR.IOPBEN = true;
 2687              		.loc 9 48 0
 2688 0046 0423     		movs	r3, #4
 2689              	.LBE1121:
 2690              	.LBE1120:
 2691              	.LBB1125:
 2692              	.LBB1126:
 2693              	.LBB1127:
  53:../../src/periph/f1_rcc.h **** 
 2694              		.loc 9 53 0
 2695 0048 0121     		movs	r1, #1
 2696              	.LBE1127:
 2697              	.LBE1126:
 2698              	.LBE1125:
 2699              	.LBB1136:
 2700              	.LBB1122:
  48:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOB) APB2ENR.IOPBEN = true;
 2701              		.loc 9 48 0
 2702 004a A269     		ldr	r2, [r4, #24]
 2703              	.LBE1122:
 2704              	.LBE1136:
 2705              	.LBE1113:
 2706              	.LBE1112:
 2707              	.LBB1143:
 2708              	.LBB1144:
 2709              		.loc 15 20 0
 2710 004c 774D     		ldr	r5, .L247+20
 2711              	.LBE1144:
 2712              	.LBE1143:
 2713              	.LBB1170:
 2714              	.LBB1142:
 2715              	.LBB1137:
 2716              	.LBB1123:
  48:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOB) APB2ENR.IOPBEN = true;
 2717              		.loc 9 48 0
 2718 004e 1343     		orrs	r3, r2
 2719              	.LBE1123:
 2720              	.LBE1137:
 2721              	.LBB1138:
 2722              	.LBB1130:
 2723              	.LBB1131:
 2724              		.file 16 "../../src/periph/f1_gpio.h"
   1:../../src/periph/f1_gpio.h **** #pragma once
   2:../../src/periph/f1_gpio.h **** 
   3:../../src/periph/f1_gpio.h **** #include "f1_bits_gpio.h"
   4:../../src/periph/f1_gpio.h **** #include "periph_rcc.h"
   5:../../src/periph/f1_gpio.h **** #include "periph_afio.h"
   6:../../src/periph/f1_gpio.h **** #include "pins.h"
   7:../../src/periph/f1_gpio.h **** 
   8:../../src/periph/f1_gpio.h **** namespace mcu {
   9:../../src/periph/f1_gpio.h **** 
  10:../../src/periph/f1_gpio.h **** enum class PinMode {Input, Output, USART1_TX, USART1_RX, USART2_TX, USART2_RX, USART3_TX, USART3_RX
ARM GAS  /tmp/cc2puB6n.s 			page 68


  11:../../src/periph/f1_gpio.h **** 
  12:../../src/periph/f1_gpio.h **** class GPIO {
  13:../../src/periph/f1_gpio.h ****   volatile GPIO_bits::CR CR;   // Port configuration register      offset: 0x00
  14:../../src/periph/f1_gpio.h ****   volatile GPIO_bits::DR IDR;  // Port input data register         offset: 0x08
  15:../../src/periph/f1_gpio.h ****   volatile uint32_t      ODR;  // Port output data register        offset: 0x0C
  16:../../src/periph/f1_gpio.h ****   volatile uint32_t      BSRR; // Port bit set/reset register      offset: 0x10
  17:../../src/periph/f1_gpio.h ****   volatile uint32_t      BRR;  // Port bit reset register          offset: 0x14
  18:../../src/periph/f1_gpio.h ****   volatile uint32_t      LCKR; // Port configuration lock register offset: 0x18
  19:../../src/periph/f1_gpio.h **** 
  20:../../src/periph/f1_gpio.h **** public:
  21:../../src/periph/f1_gpio.h ****    using CMSIS_type = GPIO_TypeDef;
  22:../../src/periph/f1_gpio.h ****    using Mode       = GPIO_bits::CR::Mode;
  23:../../src/periph/f1_gpio.h ****    using Remap      = AFIO::Remap;
  24:../../src/periph/f1_gpio.h **** 
  25:../../src/periph/f1_gpio.h ****    auto& like_CMSIS(){return *reinterpret_cast<CMSIS_type*>(this);}
  26:../../src/periph/f1_gpio.h **** 
  27:../../src/periph/f1_gpio.h ****    void set        (size_t n) { BSRR |= (1 << n);              }
  28:../../src/periph/f1_gpio.h ****    void clear      (size_t n) { BSRR |= (1 << (n + 16));       }
  29:../../src/periph/f1_gpio.h ****    bool is_set     (size_t n) { return IDR.reg & (1 << n);     }
  30:../../src/periph/f1_gpio.h ****    void toggle     (size_t n) { is_set(n) ? clear(n) : set(n); }
  31:../../src/periph/f1_gpio.h ****    void atomic_write (uint32_t value) {BSRR = value;}
  32:../../src/periph/f1_gpio.h **** 
  33:../../src/periph/f1_gpio.h ****    template<class Pin_, PinMode> void init();
  34:../../src/periph/f1_gpio.h **** 
  35:../../src/periph/f1_gpio.h **** private:
  36:../../src/periph/f1_gpio.h ****    template<size_t> GPIO& set (Mode);
  37:../../src/periph/f1_gpio.h **** };
  38:../../src/periph/f1_gpio.h **** 
  39:../../src/periph/f1_gpio.h **** 
  40:../../src/periph/f1_gpio.h **** 
  41:../../src/periph/f1_gpio.h **** #if not defined(USE_MOCK_GPIO)
  42:../../src/periph/f1_gpio.h **** template<Periph gpio> std::enable_if_t<gpio == Periph::GPIOA, GPIO&> make_reference() { return *rei
  43:../../src/periph/f1_gpio.h **** template<Periph gpio> std::enable_if_t<gpio == Periph::GPIOB, GPIO&> make_reference() { return *rei
  44:../../src/periph/f1_gpio.h **** template<Periph gpio> std::enable_if_t<gpio == Periph::GPIOC, GPIO&> make_reference() { return *rei
  45:../../src/periph/f1_gpio.h **** template<Periph gpio> std::enable_if_t<gpio == Periph::GPIOD, GPIO&> make_reference() { return *rei
  46:../../src/periph/f1_gpio.h **** template<Periph gpio> std::enable_if_t<gpio == Periph::GPIOE, GPIO&> make_reference() { return *rei
  47:../../src/periph/f1_gpio.h **** #endif // #if not defined(USE_MOCK_GPIO)
  48:../../src/periph/f1_gpio.h **** 
  49:../../src/periph/f1_gpio.h **** 
  50:../../src/periph/f1_gpio.h **** 
  51:../../src/periph/f1_gpio.h **** 
  52:../../src/periph/f1_gpio.h **** 
  53:../../src/periph/f1_gpio.h **** 
  54:../../src/periph/f1_gpio.h **** 
  55:../../src/periph/f1_gpio.h **** 
  56:../../src/periph/f1_gpio.h **** 
  57:../../src/periph/f1_gpio.h **** 
  58:../../src/periph/f1_gpio.h **** 
  59:../../src/periph/f1_gpio.h **** 
  60:../../src/periph/f1_gpio.h **** 
  61:../../src/periph/f1_gpio.h **** 
  62:../../src/periph/f1_gpio.h **** 
  63:../../src/periph/f1_gpio.h **** 
  64:../../src/periph/f1_gpio.h **** 
  65:../../src/periph/f1_gpio.h **** 
  66:../../src/periph/f1_gpio.h **** template<size_t n> GPIO& GPIO::set (Mode v) 
  67:../../src/periph/f1_gpio.h **** {
ARM GAS  /tmp/cc2puB6n.s 			page 69


  68:../../src/periph/f1_gpio.h ****    if      constexpr (n == 0)  { CR.CNF_MODE0  = v; return *this; }
  69:../../src/periph/f1_gpio.h ****    else if constexpr (n == 1)  { CR.CNF_MODE1  = v; return *this; }
  70:../../src/periph/f1_gpio.h ****    else if constexpr (n == 2)  { CR.CNF_MODE2  = v; return *this; }
  71:../../src/periph/f1_gpio.h ****    else if constexpr (n == 3)  { CR.CNF_MODE3  = v; return *this; }
  72:../../src/periph/f1_gpio.h ****    else if constexpr (n == 4)  { CR.CNF_MODE4  = v; return *this; }
  73:../../src/periph/f1_gpio.h ****    else if constexpr (n == 5)  { CR.CNF_MODE5  = v; return *this; }
  74:../../src/periph/f1_gpio.h ****    else if constexpr (n == 6)  { CR.CNF_MODE6  = v; return *this; }
  75:../../src/periph/f1_gpio.h ****    else if constexpr (n == 7)  { CR.CNF_MODE7  = v; return *this; }
  76:../../src/periph/f1_gpio.h ****    else if constexpr (n == 8)  { CR.CNF_MODE8  = v; return *this; }
  77:../../src/periph/f1_gpio.h ****    else if constexpr (n == 9)  { CR.CNF_MODE9  = v; return *this; }
 2725              		.loc 16 77 0
 2726 0050 F022     		movs	r2, #240
 2727              	.LBE1131:
 2728              	.LBE1130:
 2729              	.LBE1138:
 2730              	.LBB1139:
 2731              	.LBB1124:
  48:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOB) APB2ENR.IOPBEN = true;
 2732              		.loc 9 48 0
 2733 0052 A361     		str	r3, [r4, #24]
 2734              	.LBE1124:
 2735              	.LBE1139:
 2736              	.LBB1140:
 2737              	.LBB1133:
 2738              	.LBB1128:
  53:../../src/periph/f1_rcc.h **** 
 2739              		.loc 9 53 0
 2740 0054 A369     		ldr	r3, [r4, #24]
 2741              	.LBE1128:
 2742              	.LBE1133:
 2743              	.LBE1140:
  21:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
  22:../../src/pin.h ****          .template clock_enable<Pin_::periph>();
  23:../../src/pin.h ****       pin.port.template init<Pin_, mode>();
 2744              		.loc 15 23 0
 2745 0056 3868     		ldr	r0, [r7]
 2746              	.LVL133:
 2747              	.LBB1141:
 2748              	.LBB1134:
 2749              	.LBB1129:
  53:../../src/periph/f1_rcc.h **** 
 2750              		.loc 9 53 0
 2751 0058 0B43     		orrs	r3, r1
 2752 005a A361     		str	r3, [r4, #24]
 2753              	.LVL134:
 2754              	.LBE1129:
 2755              	.LBE1134:
 2756              	.LBB1135:
 2757              	.LBB1132:
 2758              		.loc 16 77 0
 2759 005c 4368     		ldr	r3, [r0, #4]
 2760 005e 9343     		bics	r3, r2
 2761 0060 1A00     		movs	r2, r3
 2762 0062 A023     		movs	r3, #160
 2763 0064 1343     		orrs	r3, r2
 2764 0066 4360     		str	r3, [r0, #4]
 2765              	.LVL135:
ARM GAS  /tmp/cc2puB6n.s 			page 70


 2766              	.LBE1132:
 2767              	.LBE1135:
 2768              	.LBE1141:
 2769              	.LBE1142:
 2770              	.LBE1170:
 2771              	.LBB1171:
 2772              	.LBB1168:
  20:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 2773              		.loc 15 20 0
 2774 0068 2B78     		ldrb	r3, [r5]
 2775 006a BFF35B8F 		dmb	ish
 2776 006e 0B42     		tst	r3, r1
 2777 0070 0CD1     		bne	.L224
 2778 0072 2800     		movs	r0, r5
 2779 0074 FFF7FEFF 		bl	__cxa_guard_acquire
 2780              	.LVL136:
 2781 0078 0028     		cmp	r0, #0
 2782 007a 07D0     		beq	.L224
 2783              	.LVL137:
 2784              	.LBB1145:
 2785              	.LBB1146:
 2786              	.LBB1147:
  16:../../src/pin.h **** 
 2787              		.loc 15 16 0
 2788 007c 6A4B     		ldr	r3, .L247+16
 2789 007e 6C4A     		ldr	r2, .L247+24
 2790              	.LBE1147:
 2791              	.LBE1146:
 2792              	.LBE1145:
  20:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 2793              		.loc 15 20 0
 2794 0080 2800     		movs	r0, r5
 2795              	.LBB1150:
 2796              	.LBB1149:
 2797              	.LBB1148:
  16:../../src/pin.h **** 
 2798              		.loc 15 16 0
 2799 0082 1360     		str	r3, [r2]
 2800 0084 0A23     		movs	r3, #10
 2801 0086 5360     		str	r3, [r2, #4]
 2802              	.LVL138:
 2803              	.LBE1148:
 2804              	.LBE1149:
 2805              	.LBE1150:
  20:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 2806              		.loc 15 20 0
 2807 0088 FFF7FEFF 		bl	__cxa_guard_release
 2808              	.LVL139:
 2809              	.L224:
 2810              	.LBB1151:
 2811              	.LBB1152:
  48:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOB) APB2ENR.IOPBEN = true;
 2812              		.loc 9 48 0
 2813 008c 0423     		movs	r3, #4
 2814              	.LBE1152:
 2815              	.LBE1151:
 2816              	.LBB1155:
ARM GAS  /tmp/cc2puB6n.s 			page 71


 2817              	.LBB1156:
 2818              	.LBB1157:
  53:../../src/periph/f1_rcc.h **** 
 2819              		.loc 9 53 0
 2820 008e 0121     		movs	r1, #1
 2821              	.LBE1157:
 2822              	.LBE1156:
 2823              	.LBE1155:
 2824              	.LBB1164:
 2825              	.LBB1153:
  48:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOB) APB2ENR.IOPBEN = true;
 2826              		.loc 9 48 0
 2827 0090 A269     		ldr	r2, [r4, #24]
 2828              	.LBE1153:
 2829              	.LBE1164:
 2830              	.LBE1168:
 2831              	.LBE1171:
 2832              	.LBB1172:
 2833              	.LBB1173:
  20:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 2834              		.loc 15 20 0
 2835 0092 684D     		ldr	r5, .L247+28
 2836              	.LBE1173:
 2837              	.LBE1172:
 2838              	.LBB1186:
 2839              	.LBB1169:
 2840              	.LBB1165:
 2841              	.LBB1154:
  48:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOB) APB2ENR.IOPBEN = true;
 2842              		.loc 9 48 0
 2843 0094 1343     		orrs	r3, r2
 2844 0096 A361     		str	r3, [r4, #24]
 2845              	.LBE1154:
 2846              	.LBE1165:
 2847              		.loc 15 23 0
 2848 0098 654B     		ldr	r3, .L247+24
 2849              	.LBB1166:
 2850              	.LBB1159:
 2851              	.LBB1160:
  78:../../src/periph/f1_gpio.h ****    else if constexpr (n == 10) { CR.CNF_MODE10 = v; return *this; }
 2852              		.loc 16 78 0
 2853 009a 674A     		ldr	r2, .L247+32
 2854              	.LBE1160:
 2855              	.LBE1159:
 2856              	.LBE1166:
 2857              		.loc 15 23 0
 2858 009c 1868     		ldr	r0, [r3]
 2859              	.LVL140:
 2860              	.LBB1167:
 2861              	.LBB1162:
 2862              	.LBB1158:
  53:../../src/periph/f1_rcc.h **** 
 2863              		.loc 9 53 0
 2864 009e A369     		ldr	r3, [r4, #24]
 2865 00a0 0B43     		orrs	r3, r1
 2866 00a2 A361     		str	r3, [r4, #24]
 2867              	.LVL141:
ARM GAS  /tmp/cc2puB6n.s 			page 72


 2868              	.LBE1158:
 2869              	.LBE1162:
 2870              	.LBB1163:
 2871              	.LBB1161:
 2872              		.loc 16 78 0
 2873 00a4 4368     		ldr	r3, [r0, #4]
 2874 00a6 1A40     		ands	r2, r3
 2875 00a8 A023     		movs	r3, #160
 2876 00aa 1B01     		lsls	r3, r3, #4
 2877 00ac 1343     		orrs	r3, r2
 2878 00ae 4360     		str	r3, [r0, #4]
 2879              	.LVL142:
 2880              	.LBE1161:
 2881              	.LBE1163:
 2882              	.LBE1167:
 2883              	.LBE1169:
 2884              	.LBE1186:
 2885              	.LBB1187:
 2886              	.LBB1185:
  20:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 2887              		.loc 15 20 0
 2888 00b0 2B78     		ldrb	r3, [r5]
 2889 00b2 BFF35B8F 		dmb	ish
 2890 00b6 614E     		ldr	r6, .L247+36
 2891 00b8 0B42     		tst	r3, r1
 2892 00ba 0BD1     		bne	.L227
 2893 00bc 2800     		movs	r0, r5
 2894 00be FFF7FEFF 		bl	__cxa_guard_acquire
 2895              	.LVL143:
 2896 00c2 0028     		cmp	r0, #0
 2897 00c4 06D0     		beq	.L227
 2898              	.LVL144:
 2899              	.LBB1174:
 2900              	.LBB1175:
 2901              	.LBB1176:
  16:../../src/pin.h **** 
 2902              		.loc 15 16 0
 2903 00c6 584B     		ldr	r3, .L247+16
 2904              	.LBE1176:
 2905              	.LBE1175:
 2906              	.LBE1174:
  20:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 2907              		.loc 15 20 0
 2908 00c8 2800     		movs	r0, r5
 2909              	.LBB1179:
 2910              	.LBB1178:
 2911              	.LBB1177:
  16:../../src/pin.h **** 
 2912              		.loc 15 16 0
 2913 00ca 3360     		str	r3, [r6]
 2914 00cc 0B23     		movs	r3, #11
 2915 00ce 7360     		str	r3, [r6, #4]
 2916              	.LVL145:
 2917              	.LBE1177:
 2918              	.LBE1178:
 2919              	.LBE1179:
  20:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
ARM GAS  /tmp/cc2puB6n.s 			page 73


 2920              		.loc 15 20 0
 2921 00d0 FFF7FEFF 		bl	__cxa_guard_release
 2922              	.LVL146:
 2923              	.L227:
 2924              	.LBB1180:
 2925              	.LBB1181:
  48:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOB) APB2ENR.IOPBEN = true;
 2926              		.loc 9 48 0
 2927 00d4 0423     		movs	r3, #4
 2928 00d6 A269     		ldr	r2, [r4, #24]
 2929 00d8 1343     		orrs	r3, r2
 2930 00da A361     		str	r3, [r4, #24]
 2931              	.LBE1181:
 2932              	.LBE1180:
 2933              		.loc 15 23 0
 2934 00dc 3168     		ldr	r1, [r6]
 2935              	.LVL147:
 2936              	.LBB1182:
 2937              	.LBB1183:
 2938              	.LBB1184:
  79:../../src/periph/f1_gpio.h ****    else if constexpr (n == 11) { CR.CNF_MODE11 = v; return *this; }
 2939              		.loc 16 79 0
 2940 00de 584A     		ldr	r2, .L247+40
 2941 00e0 4B68     		ldr	r3, [r1, #4]
 2942 00e2 1A40     		ands	r2, r3
 2943 00e4 8023     		movs	r3, #128
 2944 00e6 9B01     		lsls	r3, r3, #6
 2945 00e8 1343     		orrs	r3, r2
 2946 00ea 4B60     		str	r3, [r1, #4]
 2947              	.LVL148:
 2948              	.LBE1184:
 2949              	.LBE1183:
 2950              	.LBE1182:
 2951              	.LBE1185:
 2952              	.LBE1187:
 2953              	.LBB1188:
 2954              	.LBB1189:
  20:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 2955              		.loc 15 20 0
 2956 00ec 554B     		ldr	r3, .L247+44
 2957 00ee 1B78     		ldrb	r3, [r3]
 2958 00f0 BFF35B8F 		dmb	ish
 2959 00f4 544D     		ldr	r5, .L247+48
 2960 00f6 DB07     		lsls	r3, r3, #31
 2961 00f8 0BD4     		bmi	.L230
 2962 00fa 5248     		ldr	r0, .L247+44
 2963 00fc FFF7FEFF 		bl	__cxa_guard_acquire
 2964              	.LVL149:
 2965 0100 0028     		cmp	r0, #0
 2966 0102 06D0     		beq	.L230
 2967              	.LVL150:
 2968              	.LBB1190:
 2969              	.LBB1191:
 2970              	.LBB1192:
  16:../../src/pin.h **** 
 2971              		.loc 15 16 0
 2972 0104 484B     		ldr	r3, .L247+16
ARM GAS  /tmp/cc2puB6n.s 			page 74


 2973              	.LBE1192:
 2974              	.LBE1191:
 2975              	.LBE1190:
  20:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 2976              		.loc 15 20 0
 2977 0106 4F48     		ldr	r0, .L247+44
 2978              	.LBB1195:
 2979              	.LBB1194:
 2980              	.LBB1193:
  16:../../src/pin.h **** 
 2981              		.loc 15 16 0
 2982 0108 2B60     		str	r3, [r5]
 2983 010a 0C23     		movs	r3, #12
 2984 010c 6B60     		str	r3, [r5, #4]
 2985              	.LVL151:
 2986              	.LBE1193:
 2987              	.LBE1194:
 2988              	.LBE1195:
  20:../../src/pin.h ****       mcu::make_reference<mcu::Periph::RCC>()
 2989              		.loc 15 20 0
 2990 010e FFF7FEFF 		bl	__cxa_guard_release
 2991              	.LVL152:
 2992              	.L230:
 2993              	.LBB1196:
 2994              	.LBB1197:
  48:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOB) APB2ENR.IOPBEN = true;
 2995              		.loc 9 48 0
 2996 0112 0423     		movs	r3, #4
 2997 0114 A269     		ldr	r2, [r4, #24]
 2998              	.LBE1197:
 2999              	.LBE1196:
 3000              	.LBE1189:
 3001              	.LBE1188:
 134:../../src/uart.h ****         Pin::make<TXpin, TXpin_mode>()
 3002              		.loc 5 134 0
 3003 0116 4048     		ldr	r0, .L247
 3004              	.LBB1204:
 3005              	.LBB1203:
 3006              	.LBB1199:
 3007              	.LBB1198:
  48:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOB) APB2ENR.IOPBEN = true;
 3008              		.loc 9 48 0
 3009 0118 1343     		orrs	r3, r2
 3010 011a A361     		str	r3, [r4, #24]
 3011              	.LBE1198:
 3012              	.LBE1199:
 3013              		.loc 15 23 0
 3014 011c 2968     		ldr	r1, [r5]
 3015              	.LVL153:
 3016              	.LBB1200:
 3017              	.LBB1201:
 3018              	.LBB1202:
  80:../../src/periph/f1_gpio.h ****    else if constexpr (n == 12) { CR.CNF_MODE12 = v; return *this; }
 3019              		.loc 16 80 0
 3020 011e 4B4A     		ldr	r2, .L247+52
 3021 0120 4B68     		ldr	r3, [r1, #4]
 3022 0122 1A40     		ands	r2, r3
ARM GAS  /tmp/cc2puB6n.s 			page 75


 3023 0124 8023     		movs	r3, #128
 3024 0126 9B02     		lsls	r3, r3, #10
 3025 0128 1343     		orrs	r3, r2
 3026 012a 4B60     		str	r3, [r1, #4]
 3027              	.LVL154:
 3028              	.LBE1202:
 3029              	.LBE1201:
 3030              	.LBE1200:
 3031              	.LBE1203:
 3032              	.LBE1204:
 3033              	.LBB1205:
 3034              	.LBB1206:
 3035              	.LBB1207:
  60:../../src/uart.h ****    {}
 3036              		.loc 5 60 0
 3037 012c 404A     		ldr	r2, .L247+24
 3038 012e 484B     		ldr	r3, .L247+56
 3039 0130 5A60     		str	r2, [r3, #4]
 3040 0132 484A     		ldr	r2, .L247+60
 3041 0134 1F60     		str	r7, [r3]
 3042 0136 1A61     		str	r2, [r3, #16]
 3043 0138 474A     		ldr	r2, .L247+64
 3044 013a 9E60     		str	r6, [r3, #8]
 3045 013c 5A61     		str	r2, [r3, #20]
 3046 013e 474A     		ldr	r2, .L247+68
 3047 0140 DD60     		str	r5, [r3, #12]
 3048 0142 9A61     		str	r2, [r3, #24]
 3049 0144 0722     		movs	r2, #7
 3050 0146 DA61     		str	r2, [r3, #28]
 3051              	.LVL155:
 3052              	.LBB1208:
 3053              	.LBB1209:
   8:../../src/net_buffer.h ****    using Container = std::array<uint8_t,size_>;
 3054              		.loc 7 8 0
 3055 0148 0022     		movs	r2, #0
 3056 014a FC33     		adds	r3, r3, #252
 3057 014c 5A62     		str	r2, [r3, #36]
 3058 014e 9A62     		str	r2, [r3, #40]
 3059              	.LVL156:
 3060              	.LBE1209:
 3061              	.LBE1208:
 3062              	.LBE1207:
 3063              	.LBE1206:
 3064              	.LBE1205:
 134:../../src/uart.h ****         Pin::make<TXpin, TXpin_mode>()
 3065              		.loc 5 134 0
 3066 0150 FFF7FEFF 		bl	__cxa_guard_release
 3067              	.LVL157:
 3068              	.L218:
 3069              	.LBB1210:
 3070              	.LBB1211:
  55:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::USART2) APB1ENR.USART2EN = true;
 3071              		.loc 9 55 0
 3072 0154 8022     		movs	r2, #128
 3073 0156 A369     		ldr	r3, [r4, #24]
 3074 0158 D201     		lsls	r2, r2, #7
 3075 015a 1343     		orrs	r3, r2
ARM GAS  /tmp/cc2puB6n.s 			page 76


 3076              	.LBE1211:
 3077              	.LBE1210:
 3078              	.LBB1213:
 3079              	.LBB1214:
  57:../../src/periph/f1_f4_usart.h ****    USART& tx_disable    (){CR1.TE   = false; return *this;}
 3080              		.loc 6 57 0
 3081 015c 0822     		movs	r2, #8
 3082              	.LBE1214:
 3083              	.LBE1213:
 147:../../src/uart.h ****              .rx_enable()
 3084              		.loc 5 147 0
 3085 015e 3C48     		ldr	r0, .L247+56
 3086              	.LBB1217:
 3087              	.LBB1212:
  55:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::USART2) APB1ENR.USART2EN = true;
 3088              		.loc 9 55 0
 3089 0160 A361     		str	r3, [r4, #24]
 3090              	.LBE1212:
 3091              	.LBE1217:
 147:../../src/uart.h ****              .rx_enable()
 3092              		.loc 5 147 0
 3093 0162 0369     		ldr	r3, [r0, #16]
 3094              	.LVL158:
 3095              	.LBB1218:
 3096              	.LBB1219:
 3097              		.file 17 "../../STM32F1_files/CMSIS/core_cm3.h"
   1:../../STM32F1_files/CMSIS/core_cm3.h **** /**************************************************************************//**
   2:../../STM32F1_files/CMSIS/core_cm3.h ****  * @file     core_cm3.h
   3:../../STM32F1_files/CMSIS/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:../../STM32F1_files/CMSIS/core_cm3.h ****  * @version  V4.30
   5:../../STM32F1_files/CMSIS/core_cm3.h ****  * @date     20. October 2015
   6:../../STM32F1_files/CMSIS/core_cm3.h ****  ******************************************************************************/
   7:../../STM32F1_files/CMSIS/core_cm3.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../../STM32F1_files/CMSIS/core_cm3.h **** 
   9:../../STM32F1_files/CMSIS/core_cm3.h ****    All rights reserved.
  10:../../STM32F1_files/CMSIS/core_cm3.h ****    Redistribution and use in source and binary forms, with or without
  11:../../STM32F1_files/CMSIS/core_cm3.h ****    modification, are permitted provided that the following conditions are met:
  12:../../STM32F1_files/CMSIS/core_cm3.h ****    - Redistributions of source code must retain the above copyright
  13:../../STM32F1_files/CMSIS/core_cm3.h ****      notice, this list of conditions and the following disclaimer.
  14:../../STM32F1_files/CMSIS/core_cm3.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../../STM32F1_files/CMSIS/core_cm3.h ****      notice, this list of conditions and the following disclaimer in the
  16:../../STM32F1_files/CMSIS/core_cm3.h ****      documentation and/or other materials provided with the distribution.
  17:../../STM32F1_files/CMSIS/core_cm3.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../../STM32F1_files/CMSIS/core_cm3.h ****      to endorse or promote products derived from this software without
  19:../../STM32F1_files/CMSIS/core_cm3.h ****      specific prior written permission.
  20:../../STM32F1_files/CMSIS/core_cm3.h ****    *
  21:../../STM32F1_files/CMSIS/core_cm3.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../../STM32F1_files/CMSIS/core_cm3.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../../STM32F1_files/CMSIS/core_cm3.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../../STM32F1_files/CMSIS/core_cm3.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../../STM32F1_files/CMSIS/core_cm3.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../../STM32F1_files/CMSIS/core_cm3.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../../STM32F1_files/CMSIS/core_cm3.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../../STM32F1_files/CMSIS/core_cm3.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../../STM32F1_files/CMSIS/core_cm3.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../../STM32F1_files/CMSIS/core_cm3.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../../STM32F1_files/CMSIS/core_cm3.h ****    POSSIBILITY OF SUCH DAMAGE.
ARM GAS  /tmp/cc2puB6n.s 			page 77


  32:../../STM32F1_files/CMSIS/core_cm3.h ****    ---------------------------------------------------------------------------*/
  33:../../STM32F1_files/CMSIS/core_cm3.h **** 
  34:../../STM32F1_files/CMSIS/core_cm3.h **** 
  35:../../STM32F1_files/CMSIS/core_cm3.h **** #if   defined ( __ICCARM__ )
  36:../../STM32F1_files/CMSIS/core_cm3.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:../../STM32F1_files/CMSIS/core_cm3.h ****   #pragma clang system_header   /* treat file as system include file */
  39:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
  40:../../STM32F1_files/CMSIS/core_cm3.h **** 
  41:../../STM32F1_files/CMSIS/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
  42:../../STM32F1_files/CMSIS/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  43:../../STM32F1_files/CMSIS/core_cm3.h **** 
  44:../../STM32F1_files/CMSIS/core_cm3.h **** #include <stdint.h>
  45:../../STM32F1_files/CMSIS/core_cm3.h **** 
  46:../../STM32F1_files/CMSIS/core_cm3.h **** #ifdef __cplusplus
  47:../../STM32F1_files/CMSIS/core_cm3.h ****  extern "C" {
  48:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
  49:../../STM32F1_files/CMSIS/core_cm3.h **** 
  50:../../STM32F1_files/CMSIS/core_cm3.h **** /**
  51:../../STM32F1_files/CMSIS/core_cm3.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:../../STM32F1_files/CMSIS/core_cm3.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:../../STM32F1_files/CMSIS/core_cm3.h **** 
  54:../../STM32F1_files/CMSIS/core_cm3.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:../../STM32F1_files/CMSIS/core_cm3.h ****      Function definitions in header files are used to allow 'inlining'.
  56:../../STM32F1_files/CMSIS/core_cm3.h **** 
  57:../../STM32F1_files/CMSIS/core_cm3.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:../../STM32F1_files/CMSIS/core_cm3.h ****      Unions are used for effective representation of core registers.
  59:../../STM32F1_files/CMSIS/core_cm3.h **** 
  60:../../STM32F1_files/CMSIS/core_cm3.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:../../STM32F1_files/CMSIS/core_cm3.h ****      Function-like macros are used to allow more efficient code.
  62:../../STM32F1_files/CMSIS/core_cm3.h ****  */
  63:../../STM32F1_files/CMSIS/core_cm3.h **** 
  64:../../STM32F1_files/CMSIS/core_cm3.h **** 
  65:../../STM32F1_files/CMSIS/core_cm3.h **** /*******************************************************************************
  66:../../STM32F1_files/CMSIS/core_cm3.h ****  *                 CMSIS definitions
  67:../../STM32F1_files/CMSIS/core_cm3.h ****  ******************************************************************************/
  68:../../STM32F1_files/CMSIS/core_cm3.h **** /**
  69:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup Cortex_M3
  70:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
  71:../../STM32F1_files/CMSIS/core_cm3.h ****  */
  72:../../STM32F1_files/CMSIS/core_cm3.h **** 
  73:../../STM32F1_files/CMSIS/core_cm3.h **** /*  CMSIS CM3 definitions */
  74:../../STM32F1_files/CMSIS/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:../../STM32F1_files/CMSIS/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:../../STM32F1_files/CMSIS/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16U) | \
  77:../../STM32F1_files/CMSIS/core_cm3.h ****                                     __CM3_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:../../STM32F1_files/CMSIS/core_cm3.h **** 
  79:../../STM32F1_files/CMSIS/core_cm3.h **** #define __CORTEX_M                (0x03U)                                      /*!< Cortex-M Core *
  80:../../STM32F1_files/CMSIS/core_cm3.h **** 
  81:../../STM32F1_files/CMSIS/core_cm3.h **** 
  82:../../STM32F1_files/CMSIS/core_cm3.h **** #if   defined ( __CC_ARM )
  83:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  86:../../STM32F1_files/CMSIS/core_cm3.h **** 
  87:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
ARM GAS  /tmp/cc2puB6n.s 			page 78


  89:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  91:../../STM32F1_files/CMSIS/core_cm3.h **** 
  92:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined ( __GNUC__ )
  93:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __STATIC_INLINE  static inline
  96:../../STM32F1_files/CMSIS/core_cm3.h **** 
  97:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined ( __ICCARM__ )
  98:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __STATIC_INLINE  static inline
 101:../../STM32F1_files/CMSIS/core_cm3.h **** 
 102:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined ( __TMS470__ )
 103:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __STATIC_INLINE  static inline
 105:../../STM32F1_files/CMSIS/core_cm3.h **** 
 106:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined ( __TASKING__ )
 107:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __STATIC_INLINE  static inline
 110:../../STM32F1_files/CMSIS/core_cm3.h **** 
 111:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined ( __CSMC__ )
 112:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __packed
 113:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __STATIC_INLINE  static inline
 116:../../STM32F1_files/CMSIS/core_cm3.h **** 
 117:../../STM32F1_files/CMSIS/core_cm3.h **** #else
 118:../../STM32F1_files/CMSIS/core_cm3.h ****   #error Unknown compiler
 119:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
 120:../../STM32F1_files/CMSIS/core_cm3.h **** 
 121:../../STM32F1_files/CMSIS/core_cm3.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:../../STM32F1_files/CMSIS/core_cm3.h ****     This core does not support an FPU at all
 123:../../STM32F1_files/CMSIS/core_cm3.h **** */
 124:../../STM32F1_files/CMSIS/core_cm3.h **** #define __FPU_USED       0U
 125:../../STM32F1_files/CMSIS/core_cm3.h **** 
 126:../../STM32F1_files/CMSIS/core_cm3.h **** #if defined ( __CC_ARM )
 127:../../STM32F1_files/CMSIS/core_cm3.h ****   #if defined __TARGET_FPU_VFP
 128:../../STM32F1_files/CMSIS/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 129:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 130:../../STM32F1_files/CMSIS/core_cm3.h **** 
 131:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 132:../../STM32F1_files/CMSIS/core_cm3.h ****   #if defined __ARM_PCS_VFP
 133:../../STM32F1_files/CMSIS/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 134:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 135:../../STM32F1_files/CMSIS/core_cm3.h **** 
 136:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined ( __GNUC__ )
 137:../../STM32F1_files/CMSIS/core_cm3.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 138:../../STM32F1_files/CMSIS/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 139:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 140:../../STM32F1_files/CMSIS/core_cm3.h **** 
 141:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined ( __ICCARM__ )
 142:../../STM32F1_files/CMSIS/core_cm3.h ****   #if defined __ARMVFP__
 143:../../STM32F1_files/CMSIS/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 144:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 145:../../STM32F1_files/CMSIS/core_cm3.h **** 
ARM GAS  /tmp/cc2puB6n.s 			page 79


 146:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined ( __TMS470__ )
 147:../../STM32F1_files/CMSIS/core_cm3.h ****   #if defined __TI_VFP_SUPPORT__
 148:../../STM32F1_files/CMSIS/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 149:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 150:../../STM32F1_files/CMSIS/core_cm3.h **** 
 151:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined ( __TASKING__ )
 152:../../STM32F1_files/CMSIS/core_cm3.h ****   #if defined __FPU_VFP__
 153:../../STM32F1_files/CMSIS/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 154:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 155:../../STM32F1_files/CMSIS/core_cm3.h **** 
 156:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined ( __CSMC__ )
 157:../../STM32F1_files/CMSIS/core_cm3.h ****   #if ( __CSMC__ & 0x400U)
 158:../../STM32F1_files/CMSIS/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 159:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 160:../../STM32F1_files/CMSIS/core_cm3.h **** 
 161:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
 162:../../STM32F1_files/CMSIS/core_cm3.h **** 
 163:../../STM32F1_files/CMSIS/core_cm3.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 164:../../STM32F1_files/CMSIS/core_cm3.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 165:../../STM32F1_files/CMSIS/core_cm3.h **** 
 166:../../STM32F1_files/CMSIS/core_cm3.h **** #ifdef __cplusplus
 167:../../STM32F1_files/CMSIS/core_cm3.h **** }
 168:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
 169:../../STM32F1_files/CMSIS/core_cm3.h **** 
 170:../../STM32F1_files/CMSIS/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
 171:../../STM32F1_files/CMSIS/core_cm3.h **** 
 172:../../STM32F1_files/CMSIS/core_cm3.h **** #ifndef __CMSIS_GENERIC
 173:../../STM32F1_files/CMSIS/core_cm3.h **** 
 174:../../STM32F1_files/CMSIS/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
 175:../../STM32F1_files/CMSIS/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
 176:../../STM32F1_files/CMSIS/core_cm3.h **** 
 177:../../STM32F1_files/CMSIS/core_cm3.h **** #ifdef __cplusplus
 178:../../STM32F1_files/CMSIS/core_cm3.h ****  extern "C" {
 179:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
 180:../../STM32F1_files/CMSIS/core_cm3.h **** 
 181:../../STM32F1_files/CMSIS/core_cm3.h **** /* check device defines and use defaults */
 182:../../STM32F1_files/CMSIS/core_cm3.h **** #if defined __CHECK_DEVICE_DEFINES
 183:../../STM32F1_files/CMSIS/core_cm3.h ****   #ifndef __CM3_REV
 184:../../STM32F1_files/CMSIS/core_cm3.h ****     #define __CM3_REV               0x0200U
 185:../../STM32F1_files/CMSIS/core_cm3.h ****     #warning "__CM3_REV not defined in device header file; using default!"
 186:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 187:../../STM32F1_files/CMSIS/core_cm3.h **** 
 188:../../STM32F1_files/CMSIS/core_cm3.h ****   #ifndef __MPU_PRESENT
 189:../../STM32F1_files/CMSIS/core_cm3.h ****     #define __MPU_PRESENT             0U
 190:../../STM32F1_files/CMSIS/core_cm3.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 191:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 192:../../STM32F1_files/CMSIS/core_cm3.h **** 
 193:../../STM32F1_files/CMSIS/core_cm3.h ****   #ifndef __NVIC_PRIO_BITS
 194:../../STM32F1_files/CMSIS/core_cm3.h ****     #define __NVIC_PRIO_BITS          4U
 195:../../STM32F1_files/CMSIS/core_cm3.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 196:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 197:../../STM32F1_files/CMSIS/core_cm3.h **** 
 198:../../STM32F1_files/CMSIS/core_cm3.h ****   #ifndef __Vendor_SysTickConfig
 199:../../STM32F1_files/CMSIS/core_cm3.h ****     #define __Vendor_SysTickConfig    0U
 200:../../STM32F1_files/CMSIS/core_cm3.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 201:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 202:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
ARM GAS  /tmp/cc2puB6n.s 			page 80


 203:../../STM32F1_files/CMSIS/core_cm3.h **** 
 204:../../STM32F1_files/CMSIS/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
 205:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 206:../../STM32F1_files/CMSIS/core_cm3.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 207:../../STM32F1_files/CMSIS/core_cm3.h **** 
 208:../../STM32F1_files/CMSIS/core_cm3.h ****     <strong>IO Type Qualifiers</strong> are used
 209:../../STM32F1_files/CMSIS/core_cm3.h ****     \li to specify the access to peripheral variables.
 210:../../STM32F1_files/CMSIS/core_cm3.h ****     \li for automatic generation of peripheral register debug information.
 211:../../STM32F1_files/CMSIS/core_cm3.h **** */
 212:../../STM32F1_files/CMSIS/core_cm3.h **** #ifdef __cplusplus
 213:../../STM32F1_files/CMSIS/core_cm3.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 214:../../STM32F1_files/CMSIS/core_cm3.h **** #else
 215:../../STM32F1_files/CMSIS/core_cm3.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 216:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
 217:../../STM32F1_files/CMSIS/core_cm3.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 218:../../STM32F1_files/CMSIS/core_cm3.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 219:../../STM32F1_files/CMSIS/core_cm3.h **** 
 220:../../STM32F1_files/CMSIS/core_cm3.h **** /* following defines should be used for structure members */
 221:../../STM32F1_files/CMSIS/core_cm3.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 222:../../STM32F1_files/CMSIS/core_cm3.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 223:../../STM32F1_files/CMSIS/core_cm3.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 224:../../STM32F1_files/CMSIS/core_cm3.h **** 
 225:../../STM32F1_files/CMSIS/core_cm3.h **** /*@} end of group Cortex_M3 */
 226:../../STM32F1_files/CMSIS/core_cm3.h **** 
 227:../../STM32F1_files/CMSIS/core_cm3.h **** 
 228:../../STM32F1_files/CMSIS/core_cm3.h **** 
 229:../../STM32F1_files/CMSIS/core_cm3.h **** /*******************************************************************************
 230:../../STM32F1_files/CMSIS/core_cm3.h ****  *                 Register Abstraction
 231:../../STM32F1_files/CMSIS/core_cm3.h ****   Core Register contain:
 232:../../STM32F1_files/CMSIS/core_cm3.h ****   - Core Register
 233:../../STM32F1_files/CMSIS/core_cm3.h ****   - Core NVIC Register
 234:../../STM32F1_files/CMSIS/core_cm3.h ****   - Core SCB Register
 235:../../STM32F1_files/CMSIS/core_cm3.h ****   - Core SysTick Register
 236:../../STM32F1_files/CMSIS/core_cm3.h ****   - Core Debug Register
 237:../../STM32F1_files/CMSIS/core_cm3.h ****   - Core MPU Register
 238:../../STM32F1_files/CMSIS/core_cm3.h ****  ******************************************************************************/
 239:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 240:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 241:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 242:../../STM32F1_files/CMSIS/core_cm3.h **** */
 243:../../STM32F1_files/CMSIS/core_cm3.h **** 
 244:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 245:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup    CMSIS_core_register
 246:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 247:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief      Core Register type definitions.
 248:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
 249:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 250:../../STM32F1_files/CMSIS/core_cm3.h **** 
 251:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 252:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 253:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 254:../../STM32F1_files/CMSIS/core_cm3.h **** typedef union
 255:../../STM32F1_files/CMSIS/core_cm3.h **** {
 256:../../STM32F1_files/CMSIS/core_cm3.h ****   struct
 257:../../STM32F1_files/CMSIS/core_cm3.h ****   {
 258:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved */
 259:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
ARM GAS  /tmp/cc2puB6n.s 			page 81


 260:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 261:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 262:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 263:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 264:../../STM32F1_files/CMSIS/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 265:../../STM32F1_files/CMSIS/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 266:../../STM32F1_files/CMSIS/core_cm3.h **** } APSR_Type;
 267:../../STM32F1_files/CMSIS/core_cm3.h **** 
 268:../../STM32F1_files/CMSIS/core_cm3.h **** /* APSR Register Definitions */
 269:../../STM32F1_files/CMSIS/core_cm3.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 270:../../STM32F1_files/CMSIS/core_cm3.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 271:../../STM32F1_files/CMSIS/core_cm3.h **** 
 272:../../STM32F1_files/CMSIS/core_cm3.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 273:../../STM32F1_files/CMSIS/core_cm3.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 274:../../STM32F1_files/CMSIS/core_cm3.h **** 
 275:../../STM32F1_files/CMSIS/core_cm3.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 276:../../STM32F1_files/CMSIS/core_cm3.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 277:../../STM32F1_files/CMSIS/core_cm3.h **** 
 278:../../STM32F1_files/CMSIS/core_cm3.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 279:../../STM32F1_files/CMSIS/core_cm3.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 280:../../STM32F1_files/CMSIS/core_cm3.h **** 
 281:../../STM32F1_files/CMSIS/core_cm3.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 282:../../STM32F1_files/CMSIS/core_cm3.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 283:../../STM32F1_files/CMSIS/core_cm3.h **** 
 284:../../STM32F1_files/CMSIS/core_cm3.h **** 
 285:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 286:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 287:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 288:../../STM32F1_files/CMSIS/core_cm3.h **** typedef union
 289:../../STM32F1_files/CMSIS/core_cm3.h **** {
 290:../../STM32F1_files/CMSIS/core_cm3.h ****   struct
 291:../../STM32F1_files/CMSIS/core_cm3.h ****   {
 292:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 293:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 294:../../STM32F1_files/CMSIS/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 295:../../STM32F1_files/CMSIS/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 296:../../STM32F1_files/CMSIS/core_cm3.h **** } IPSR_Type;
 297:../../STM32F1_files/CMSIS/core_cm3.h **** 
 298:../../STM32F1_files/CMSIS/core_cm3.h **** /* IPSR Register Definitions */
 299:../../STM32F1_files/CMSIS/core_cm3.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 300:../../STM32F1_files/CMSIS/core_cm3.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 301:../../STM32F1_files/CMSIS/core_cm3.h **** 
 302:../../STM32F1_files/CMSIS/core_cm3.h **** 
 303:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 304:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 305:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 306:../../STM32F1_files/CMSIS/core_cm3.h **** typedef union
 307:../../STM32F1_files/CMSIS/core_cm3.h **** {
 308:../../STM32F1_files/CMSIS/core_cm3.h ****   struct
 309:../../STM32F1_files/CMSIS/core_cm3.h ****   {
 310:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 311:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 312:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 313:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 314:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 315:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 316:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
ARM GAS  /tmp/cc2puB6n.s 			page 82


 317:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 318:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 319:../../STM32F1_files/CMSIS/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 320:../../STM32F1_files/CMSIS/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:../../STM32F1_files/CMSIS/core_cm3.h **** } xPSR_Type;
 322:../../STM32F1_files/CMSIS/core_cm3.h **** 
 323:../../STM32F1_files/CMSIS/core_cm3.h **** /* xPSR Register Definitions */
 324:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 325:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 326:../../STM32F1_files/CMSIS/core_cm3.h **** 
 327:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 328:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 329:../../STM32F1_files/CMSIS/core_cm3.h **** 
 330:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 331:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 332:../../STM32F1_files/CMSIS/core_cm3.h **** 
 333:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 334:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 335:../../STM32F1_files/CMSIS/core_cm3.h **** 
 336:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 337:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 338:../../STM32F1_files/CMSIS/core_cm3.h **** 
 339:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 340:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 341:../../STM32F1_files/CMSIS/core_cm3.h **** 
 342:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 343:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 344:../../STM32F1_files/CMSIS/core_cm3.h **** 
 345:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 346:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 347:../../STM32F1_files/CMSIS/core_cm3.h **** 
 348:../../STM32F1_files/CMSIS/core_cm3.h **** 
 349:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 350:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Union type to access the Control Registers (CONTROL).
 351:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 352:../../STM32F1_files/CMSIS/core_cm3.h **** typedef union
 353:../../STM32F1_files/CMSIS/core_cm3.h **** {
 354:../../STM32F1_files/CMSIS/core_cm3.h ****   struct
 355:../../STM32F1_files/CMSIS/core_cm3.h ****   {
 356:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 357:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 358:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 359:../../STM32F1_files/CMSIS/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 360:../../STM32F1_files/CMSIS/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 361:../../STM32F1_files/CMSIS/core_cm3.h **** } CONTROL_Type;
 362:../../STM32F1_files/CMSIS/core_cm3.h **** 
 363:../../STM32F1_files/CMSIS/core_cm3.h **** /* CONTROL Register Definitions */
 364:../../STM32F1_files/CMSIS/core_cm3.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 365:../../STM32F1_files/CMSIS/core_cm3.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 366:../../STM32F1_files/CMSIS/core_cm3.h **** 
 367:../../STM32F1_files/CMSIS/core_cm3.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 368:../../STM32F1_files/CMSIS/core_cm3.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 369:../../STM32F1_files/CMSIS/core_cm3.h **** 
 370:../../STM32F1_files/CMSIS/core_cm3.h **** /*@} end of group CMSIS_CORE */
 371:../../STM32F1_files/CMSIS/core_cm3.h **** 
 372:../../STM32F1_files/CMSIS/core_cm3.h **** 
 373:../../STM32F1_files/CMSIS/core_cm3.h **** /**
ARM GAS  /tmp/cc2puB6n.s 			page 83


 374:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup    CMSIS_core_register
 375:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 376:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief      Type definitions for the NVIC Registers
 377:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
 378:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 379:../../STM32F1_files/CMSIS/core_cm3.h **** 
 380:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 381:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 382:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 383:../../STM32F1_files/CMSIS/core_cm3.h **** typedef struct
 384:../../STM32F1_files/CMSIS/core_cm3.h **** {
 385:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 386:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED0[24U];
 387:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 388:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RSERVED1[24U];
 389:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 390:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED2[24U];
 391:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 392:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED3[24U];
 393:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 394:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED4[56U];
 395:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 396:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED5[644U];
 397:../../STM32F1_files/CMSIS/core_cm3.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 398:../../STM32F1_files/CMSIS/core_cm3.h **** }  NVIC_Type;
 399:../../STM32F1_files/CMSIS/core_cm3.h **** 
 400:../../STM32F1_files/CMSIS/core_cm3.h **** /* Software Triggered Interrupt Register Definitions */
 401:../../STM32F1_files/CMSIS/core_cm3.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 402:../../STM32F1_files/CMSIS/core_cm3.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 403:../../STM32F1_files/CMSIS/core_cm3.h **** 
 404:../../STM32F1_files/CMSIS/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 405:../../STM32F1_files/CMSIS/core_cm3.h **** 
 406:../../STM32F1_files/CMSIS/core_cm3.h **** 
 407:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 408:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup  CMSIS_core_register
 409:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 410:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief    Type definitions for the System Control Block Registers
 411:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
 412:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 413:../../STM32F1_files/CMSIS/core_cm3.h **** 
 414:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 415:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Structure type to access the System Control Block (SCB).
 416:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 417:../../STM32F1_files/CMSIS/core_cm3.h **** typedef struct
 418:../../STM32F1_files/CMSIS/core_cm3.h **** {
 419:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 420:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 421:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 422:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 423:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 424:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 425:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 426:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 427:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 428:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 429:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 430:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
ARM GAS  /tmp/cc2puB6n.s 			page 84


 431:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 432:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 433:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 434:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 435:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 436:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 437:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 438:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED0[5U];
 439:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 440:../../STM32F1_files/CMSIS/core_cm3.h **** } SCB_Type;
 441:../../STM32F1_files/CMSIS/core_cm3.h **** 
 442:../../STM32F1_files/CMSIS/core_cm3.h **** /* SCB CPUID Register Definitions */
 443:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 444:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 445:../../STM32F1_files/CMSIS/core_cm3.h **** 
 446:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 447:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 448:../../STM32F1_files/CMSIS/core_cm3.h **** 
 449:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 450:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 451:../../STM32F1_files/CMSIS/core_cm3.h **** 
 452:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 453:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 454:../../STM32F1_files/CMSIS/core_cm3.h **** 
 455:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 456:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 457:../../STM32F1_files/CMSIS/core_cm3.h **** 
 458:../../STM32F1_files/CMSIS/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 459:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 460:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 461:../../STM32F1_files/CMSIS/core_cm3.h **** 
 462:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 463:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 464:../../STM32F1_files/CMSIS/core_cm3.h **** 
 465:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 466:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 467:../../STM32F1_files/CMSIS/core_cm3.h **** 
 468:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 469:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 470:../../STM32F1_files/CMSIS/core_cm3.h **** 
 471:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 472:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 473:../../STM32F1_files/CMSIS/core_cm3.h **** 
 474:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 475:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 476:../../STM32F1_files/CMSIS/core_cm3.h **** 
 477:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 478:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 479:../../STM32F1_files/CMSIS/core_cm3.h **** 
 480:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 481:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 482:../../STM32F1_files/CMSIS/core_cm3.h **** 
 483:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 484:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 485:../../STM32F1_files/CMSIS/core_cm3.h **** 
 486:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 487:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
ARM GAS  /tmp/cc2puB6n.s 			page 85


 488:../../STM32F1_files/CMSIS/core_cm3.h **** 
 489:../../STM32F1_files/CMSIS/core_cm3.h **** /* SCB Vector Table Offset Register Definitions */
 490:../../STM32F1_files/CMSIS/core_cm3.h **** #if (__CM3_REV < 0x0201U)                   /* core r2p1 */
 491:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29U                                            /*!< SCB 
 492:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 493:../../STM32F1_files/CMSIS/core_cm3.h **** 
 494:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 495:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 496:../../STM32F1_files/CMSIS/core_cm3.h **** #else
 497:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 498:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 499:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
 500:../../STM32F1_files/CMSIS/core_cm3.h **** 
 501:../../STM32F1_files/CMSIS/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 502:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 503:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 504:../../STM32F1_files/CMSIS/core_cm3.h **** 
 505:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 506:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 507:../../STM32F1_files/CMSIS/core_cm3.h **** 
 508:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 509:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 510:../../STM32F1_files/CMSIS/core_cm3.h **** 
 511:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 512:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 513:../../STM32F1_files/CMSIS/core_cm3.h **** 
 514:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 515:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 516:../../STM32F1_files/CMSIS/core_cm3.h **** 
 517:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 518:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 519:../../STM32F1_files/CMSIS/core_cm3.h **** 
 520:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 521:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 522:../../STM32F1_files/CMSIS/core_cm3.h **** 
 523:../../STM32F1_files/CMSIS/core_cm3.h **** /* SCB System Control Register Definitions */
 524:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 525:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 526:../../STM32F1_files/CMSIS/core_cm3.h **** 
 527:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 528:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 529:../../STM32F1_files/CMSIS/core_cm3.h **** 
 530:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 531:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 532:../../STM32F1_files/CMSIS/core_cm3.h **** 
 533:../../STM32F1_files/CMSIS/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 534:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 535:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 536:../../STM32F1_files/CMSIS/core_cm3.h **** 
 537:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 538:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 539:../../STM32F1_files/CMSIS/core_cm3.h **** 
 540:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 541:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 542:../../STM32F1_files/CMSIS/core_cm3.h **** 
 543:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 544:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
ARM GAS  /tmp/cc2puB6n.s 			page 86


 545:../../STM32F1_files/CMSIS/core_cm3.h **** 
 546:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 547:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 548:../../STM32F1_files/CMSIS/core_cm3.h **** 
 549:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 550:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 551:../../STM32F1_files/CMSIS/core_cm3.h **** 
 552:../../STM32F1_files/CMSIS/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 553:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 554:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 555:../../STM32F1_files/CMSIS/core_cm3.h **** 
 556:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 557:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 558:../../STM32F1_files/CMSIS/core_cm3.h **** 
 559:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 560:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 561:../../STM32F1_files/CMSIS/core_cm3.h **** 
 562:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 563:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 564:../../STM32F1_files/CMSIS/core_cm3.h **** 
 565:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 566:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 567:../../STM32F1_files/CMSIS/core_cm3.h **** 
 568:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 569:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 570:../../STM32F1_files/CMSIS/core_cm3.h **** 
 571:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 572:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 573:../../STM32F1_files/CMSIS/core_cm3.h **** 
 574:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 575:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 576:../../STM32F1_files/CMSIS/core_cm3.h **** 
 577:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 578:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 579:../../STM32F1_files/CMSIS/core_cm3.h **** 
 580:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 581:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 582:../../STM32F1_files/CMSIS/core_cm3.h **** 
 583:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 584:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 585:../../STM32F1_files/CMSIS/core_cm3.h **** 
 586:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 587:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 588:../../STM32F1_files/CMSIS/core_cm3.h **** 
 589:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 590:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 591:../../STM32F1_files/CMSIS/core_cm3.h **** 
 592:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 593:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 594:../../STM32F1_files/CMSIS/core_cm3.h **** 
 595:../../STM32F1_files/CMSIS/core_cm3.h **** /* SCB Configurable Fault Status Register Definitions */
 596:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 597:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 598:../../STM32F1_files/CMSIS/core_cm3.h **** 
 599:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 600:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 601:../../STM32F1_files/CMSIS/core_cm3.h **** 
ARM GAS  /tmp/cc2puB6n.s 			page 87


 602:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 603:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 604:../../STM32F1_files/CMSIS/core_cm3.h **** 
 605:../../STM32F1_files/CMSIS/core_cm3.h **** /* SCB Hard Fault Status Register Definitions */
 606:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 607:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 608:../../STM32F1_files/CMSIS/core_cm3.h **** 
 609:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 610:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 611:../../STM32F1_files/CMSIS/core_cm3.h **** 
 612:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 613:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 614:../../STM32F1_files/CMSIS/core_cm3.h **** 
 615:../../STM32F1_files/CMSIS/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 616:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 617:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 618:../../STM32F1_files/CMSIS/core_cm3.h **** 
 619:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 620:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 621:../../STM32F1_files/CMSIS/core_cm3.h **** 
 622:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 623:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 624:../../STM32F1_files/CMSIS/core_cm3.h **** 
 625:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 626:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 627:../../STM32F1_files/CMSIS/core_cm3.h **** 
 628:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 629:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 630:../../STM32F1_files/CMSIS/core_cm3.h **** 
 631:../../STM32F1_files/CMSIS/core_cm3.h **** /*@} end of group CMSIS_SCB */
 632:../../STM32F1_files/CMSIS/core_cm3.h **** 
 633:../../STM32F1_files/CMSIS/core_cm3.h **** 
 634:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 635:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup  CMSIS_core_register
 636:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 637:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 638:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
 639:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 640:../../STM32F1_files/CMSIS/core_cm3.h **** 
 641:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 642:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 643:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 644:../../STM32F1_files/CMSIS/core_cm3.h **** typedef struct
 645:../../STM32F1_files/CMSIS/core_cm3.h **** {
 646:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED0[1U];
 647:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 648:../../STM32F1_files/CMSIS/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200U))
 649:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 650:../../STM32F1_files/CMSIS/core_cm3.h **** #else
 651:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED1[1U];
 652:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
 653:../../STM32F1_files/CMSIS/core_cm3.h **** } SCnSCB_Type;
 654:../../STM32F1_files/CMSIS/core_cm3.h **** 
 655:../../STM32F1_files/CMSIS/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 656:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 657:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 658:../../STM32F1_files/CMSIS/core_cm3.h **** 
ARM GAS  /tmp/cc2puB6n.s 			page 88


 659:../../STM32F1_files/CMSIS/core_cm3.h **** /* Auxiliary Control Register Definitions */
 660:../../STM32F1_files/CMSIS/core_cm3.h **** 
 661:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 662:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 663:../../STM32F1_files/CMSIS/core_cm3.h **** 
 664:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 665:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 666:../../STM32F1_files/CMSIS/core_cm3.h **** 
 667:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 668:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 669:../../STM32F1_files/CMSIS/core_cm3.h **** 
 670:../../STM32F1_files/CMSIS/core_cm3.h **** /*@} end of group CMSIS_SCnotSCB */
 671:../../STM32F1_files/CMSIS/core_cm3.h **** 
 672:../../STM32F1_files/CMSIS/core_cm3.h **** 
 673:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 674:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup  CMSIS_core_register
 675:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 676:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief    Type definitions for the System Timer Registers.
 677:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
 678:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 679:../../STM32F1_files/CMSIS/core_cm3.h **** 
 680:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 681:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Structure type to access the System Timer (SysTick).
 682:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 683:../../STM32F1_files/CMSIS/core_cm3.h **** typedef struct
 684:../../STM32F1_files/CMSIS/core_cm3.h **** {
 685:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 686:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 687:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 688:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 689:../../STM32F1_files/CMSIS/core_cm3.h **** } SysTick_Type;
 690:../../STM32F1_files/CMSIS/core_cm3.h **** 
 691:../../STM32F1_files/CMSIS/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 692:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 693:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 694:../../STM32F1_files/CMSIS/core_cm3.h **** 
 695:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 696:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 697:../../STM32F1_files/CMSIS/core_cm3.h **** 
 698:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 699:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 700:../../STM32F1_files/CMSIS/core_cm3.h **** 
 701:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 702:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 703:../../STM32F1_files/CMSIS/core_cm3.h **** 
 704:../../STM32F1_files/CMSIS/core_cm3.h **** /* SysTick Reload Register Definitions */
 705:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 706:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 707:../../STM32F1_files/CMSIS/core_cm3.h **** 
 708:../../STM32F1_files/CMSIS/core_cm3.h **** /* SysTick Current Register Definitions */
 709:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 710:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 711:../../STM32F1_files/CMSIS/core_cm3.h **** 
 712:../../STM32F1_files/CMSIS/core_cm3.h **** /* SysTick Calibration Register Definitions */
 713:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 714:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 715:../../STM32F1_files/CMSIS/core_cm3.h **** 
ARM GAS  /tmp/cc2puB6n.s 			page 89


 716:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 717:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 718:../../STM32F1_files/CMSIS/core_cm3.h **** 
 719:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 720:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 721:../../STM32F1_files/CMSIS/core_cm3.h **** 
 722:../../STM32F1_files/CMSIS/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 723:../../STM32F1_files/CMSIS/core_cm3.h **** 
 724:../../STM32F1_files/CMSIS/core_cm3.h **** 
 725:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 726:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup  CMSIS_core_register
 727:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 728:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 729:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
 730:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 731:../../STM32F1_files/CMSIS/core_cm3.h **** 
 732:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 733:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 734:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 735:../../STM32F1_files/CMSIS/core_cm3.h **** typedef struct
 736:../../STM32F1_files/CMSIS/core_cm3.h **** {
 737:../../STM32F1_files/CMSIS/core_cm3.h ****   __OM  union
 738:../../STM32F1_files/CMSIS/core_cm3.h ****   {
 739:../../STM32F1_files/CMSIS/core_cm3.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 740:../../STM32F1_files/CMSIS/core_cm3.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 741:../../STM32F1_files/CMSIS/core_cm3.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 742:../../STM32F1_files/CMSIS/core_cm3.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 743:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED0[864U];
 744:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 745:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED1[15U];
 746:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 747:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED2[15U];
 748:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 749:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED3[29U];
 750:../../STM32F1_files/CMSIS/core_cm3.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 751:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 752:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 753:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED4[43U];
 754:../../STM32F1_files/CMSIS/core_cm3.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 755:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 756:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED5[6U];
 757:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 758:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 759:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 760:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 761:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 762:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 763:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 764:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 765:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 766:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 767:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 768:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 769:../../STM32F1_files/CMSIS/core_cm3.h **** } ITM_Type;
 770:../../STM32F1_files/CMSIS/core_cm3.h **** 
 771:../../STM32F1_files/CMSIS/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 772:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
ARM GAS  /tmp/cc2puB6n.s 			page 90


 773:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 774:../../STM32F1_files/CMSIS/core_cm3.h **** 
 775:../../STM32F1_files/CMSIS/core_cm3.h **** /* ITM Trace Control Register Definitions */
 776:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 777:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 778:../../STM32F1_files/CMSIS/core_cm3.h **** 
 779:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 780:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 781:../../STM32F1_files/CMSIS/core_cm3.h **** 
 782:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 783:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 784:../../STM32F1_files/CMSIS/core_cm3.h **** 
 785:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 786:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 787:../../STM32F1_files/CMSIS/core_cm3.h **** 
 788:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 789:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 790:../../STM32F1_files/CMSIS/core_cm3.h **** 
 791:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 792:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 793:../../STM32F1_files/CMSIS/core_cm3.h **** 
 794:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 795:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 796:../../STM32F1_files/CMSIS/core_cm3.h **** 
 797:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 798:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 799:../../STM32F1_files/CMSIS/core_cm3.h **** 
 800:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 801:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 802:../../STM32F1_files/CMSIS/core_cm3.h **** 
 803:../../STM32F1_files/CMSIS/core_cm3.h **** /* ITM Integration Write Register Definitions */
 804:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 805:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 806:../../STM32F1_files/CMSIS/core_cm3.h **** 
 807:../../STM32F1_files/CMSIS/core_cm3.h **** /* ITM Integration Read Register Definitions */
 808:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 809:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 810:../../STM32F1_files/CMSIS/core_cm3.h **** 
 811:../../STM32F1_files/CMSIS/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 812:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 813:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 814:../../STM32F1_files/CMSIS/core_cm3.h **** 
 815:../../STM32F1_files/CMSIS/core_cm3.h **** /* ITM Lock Status Register Definitions */
 816:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 817:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 818:../../STM32F1_files/CMSIS/core_cm3.h **** 
 819:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 820:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 821:../../STM32F1_files/CMSIS/core_cm3.h **** 
 822:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 823:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 824:../../STM32F1_files/CMSIS/core_cm3.h **** 
 825:../../STM32F1_files/CMSIS/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 826:../../STM32F1_files/CMSIS/core_cm3.h **** 
 827:../../STM32F1_files/CMSIS/core_cm3.h **** 
 828:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 829:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup  CMSIS_core_register
ARM GAS  /tmp/cc2puB6n.s 			page 91


 830:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 831:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 832:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
 833:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 834:../../STM32F1_files/CMSIS/core_cm3.h **** 
 835:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 836:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 837:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 838:../../STM32F1_files/CMSIS/core_cm3.h **** typedef struct
 839:../../STM32F1_files/CMSIS/core_cm3.h **** {
 840:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 841:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 842:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 843:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 844:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 845:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 846:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 847:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 848:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 849:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 850:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 851:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED0[1U];
 852:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 853:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 854:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 855:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED1[1U];
 856:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 857:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 858:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 859:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED2[1U];
 860:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 861:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 862:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 863:../../STM32F1_files/CMSIS/core_cm3.h **** } DWT_Type;
 864:../../STM32F1_files/CMSIS/core_cm3.h **** 
 865:../../STM32F1_files/CMSIS/core_cm3.h **** /* DWT Control Register Definitions */
 866:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 867:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 868:../../STM32F1_files/CMSIS/core_cm3.h **** 
 869:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 870:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 871:../../STM32F1_files/CMSIS/core_cm3.h **** 
 872:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 873:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 874:../../STM32F1_files/CMSIS/core_cm3.h **** 
 875:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 876:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 877:../../STM32F1_files/CMSIS/core_cm3.h **** 
 878:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 879:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 880:../../STM32F1_files/CMSIS/core_cm3.h **** 
 881:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 882:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 883:../../STM32F1_files/CMSIS/core_cm3.h **** 
 884:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 885:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 886:../../STM32F1_files/CMSIS/core_cm3.h **** 
ARM GAS  /tmp/cc2puB6n.s 			page 92


 887:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 888:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 889:../../STM32F1_files/CMSIS/core_cm3.h **** 
 890:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 891:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 892:../../STM32F1_files/CMSIS/core_cm3.h **** 
 893:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 894:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 895:../../STM32F1_files/CMSIS/core_cm3.h **** 
 896:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 897:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 898:../../STM32F1_files/CMSIS/core_cm3.h **** 
 899:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 900:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 901:../../STM32F1_files/CMSIS/core_cm3.h **** 
 902:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 903:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 904:../../STM32F1_files/CMSIS/core_cm3.h **** 
 905:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 906:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 907:../../STM32F1_files/CMSIS/core_cm3.h **** 
 908:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 909:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 910:../../STM32F1_files/CMSIS/core_cm3.h **** 
 911:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 912:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 913:../../STM32F1_files/CMSIS/core_cm3.h **** 
 914:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 915:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 916:../../STM32F1_files/CMSIS/core_cm3.h **** 
 917:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 918:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 919:../../STM32F1_files/CMSIS/core_cm3.h **** 
 920:../../STM32F1_files/CMSIS/core_cm3.h **** /* DWT CPI Count Register Definitions */
 921:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 922:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 923:../../STM32F1_files/CMSIS/core_cm3.h **** 
 924:../../STM32F1_files/CMSIS/core_cm3.h **** /* DWT Exception Overhead Count Register Definitions */
 925:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 926:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 927:../../STM32F1_files/CMSIS/core_cm3.h **** 
 928:../../STM32F1_files/CMSIS/core_cm3.h **** /* DWT Sleep Count Register Definitions */
 929:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 930:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 931:../../STM32F1_files/CMSIS/core_cm3.h **** 
 932:../../STM32F1_files/CMSIS/core_cm3.h **** /* DWT LSU Count Register Definitions */
 933:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 934:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 935:../../STM32F1_files/CMSIS/core_cm3.h **** 
 936:../../STM32F1_files/CMSIS/core_cm3.h **** /* DWT Folded-instruction Count Register Definitions */
 937:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 938:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 939:../../STM32F1_files/CMSIS/core_cm3.h **** 
 940:../../STM32F1_files/CMSIS/core_cm3.h **** /* DWT Comparator Mask Register Definitions */
 941:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
 942:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 943:../../STM32F1_files/CMSIS/core_cm3.h **** 
ARM GAS  /tmp/cc2puB6n.s 			page 93


 944:../../STM32F1_files/CMSIS/core_cm3.h **** /* DWT Comparator Function Register Definitions */
 945:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 946:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 947:../../STM32F1_files/CMSIS/core_cm3.h **** 
 948:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
 949:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 950:../../STM32F1_files/CMSIS/core_cm3.h **** 
 951:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
 952:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 953:../../STM32F1_files/CMSIS/core_cm3.h **** 
 954:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 955:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 956:../../STM32F1_files/CMSIS/core_cm3.h **** 
 957:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
 958:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 959:../../STM32F1_files/CMSIS/core_cm3.h **** 
 960:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
 961:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 962:../../STM32F1_files/CMSIS/core_cm3.h **** 
 963:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
 964:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 965:../../STM32F1_files/CMSIS/core_cm3.h **** 
 966:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
 967:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 968:../../STM32F1_files/CMSIS/core_cm3.h **** 
 969:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
 970:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 971:../../STM32F1_files/CMSIS/core_cm3.h **** 
 972:../../STM32F1_files/CMSIS/core_cm3.h **** /*@}*/ /* end of group CMSIS_DWT */
 973:../../STM32F1_files/CMSIS/core_cm3.h **** 
 974:../../STM32F1_files/CMSIS/core_cm3.h **** 
 975:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 976:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup  CMSIS_core_register
 977:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 978:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
 979:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
 980:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 981:../../STM32F1_files/CMSIS/core_cm3.h **** 
 982:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 983:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 984:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 985:../../STM32F1_files/CMSIS/core_cm3.h **** typedef struct
 986:../../STM32F1_files/CMSIS/core_cm3.h **** {
 987:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 988:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 989:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED0[2U];
 990:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 991:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED1[55U];
 992:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 993:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED2[131U];
 994:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 995:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 996:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 997:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED3[759U];
 998:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 999:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1000:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
ARM GAS  /tmp/cc2puB6n.s 			page 94


1001:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED4[1U];
1002:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1003:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1004:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1005:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED5[39U];
1006:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1007:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1008:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED7[8U];
1009:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1010:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1011:../../STM32F1_files/CMSIS/core_cm3.h **** } TPI_Type;
1012:../../STM32F1_files/CMSIS/core_cm3.h **** 
1013:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1014:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1015:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1016:../../STM32F1_files/CMSIS/core_cm3.h **** 
1017:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI Selected Pin Protocol Register Definitions */
1018:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1019:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1020:../../STM32F1_files/CMSIS/core_cm3.h **** 
1021:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI Formatter and Flush Status Register Definitions */
1022:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1023:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1024:../../STM32F1_files/CMSIS/core_cm3.h **** 
1025:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1026:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1027:../../STM32F1_files/CMSIS/core_cm3.h **** 
1028:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1029:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1030:../../STM32F1_files/CMSIS/core_cm3.h **** 
1031:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1032:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1033:../../STM32F1_files/CMSIS/core_cm3.h **** 
1034:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI Formatter and Flush Control Register Definitions */
1035:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1036:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1037:../../STM32F1_files/CMSIS/core_cm3.h **** 
1038:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1039:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1040:../../STM32F1_files/CMSIS/core_cm3.h **** 
1041:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI TRIGGER Register Definitions */
1042:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1043:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1044:../../STM32F1_files/CMSIS/core_cm3.h **** 
1045:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1046:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1047:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1048:../../STM32F1_files/CMSIS/core_cm3.h **** 
1049:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1050:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1051:../../STM32F1_files/CMSIS/core_cm3.h **** 
1052:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1053:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1054:../../STM32F1_files/CMSIS/core_cm3.h **** 
1055:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1056:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1057:../../STM32F1_files/CMSIS/core_cm3.h **** 
ARM GAS  /tmp/cc2puB6n.s 			page 95


1058:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1059:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1060:../../STM32F1_files/CMSIS/core_cm3.h **** 
1061:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1062:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1063:../../STM32F1_files/CMSIS/core_cm3.h **** 
1064:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1065:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1066:../../STM32F1_files/CMSIS/core_cm3.h **** 
1067:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI ITATBCTR2 Register Definitions */
1068:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1069:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1070:../../STM32F1_files/CMSIS/core_cm3.h **** 
1071:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1072:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1073:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1074:../../STM32F1_files/CMSIS/core_cm3.h **** 
1075:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1076:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1077:../../STM32F1_files/CMSIS/core_cm3.h **** 
1078:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1079:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1080:../../STM32F1_files/CMSIS/core_cm3.h **** 
1081:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1082:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1083:../../STM32F1_files/CMSIS/core_cm3.h **** 
1084:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1085:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1086:../../STM32F1_files/CMSIS/core_cm3.h **** 
1087:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1088:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1089:../../STM32F1_files/CMSIS/core_cm3.h **** 
1090:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1091:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1092:../../STM32F1_files/CMSIS/core_cm3.h **** 
1093:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI ITATBCTR0 Register Definitions */
1094:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1095:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1096:../../STM32F1_files/CMSIS/core_cm3.h **** 
1097:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI Integration Mode Control Register Definitions */
1098:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1099:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1100:../../STM32F1_files/CMSIS/core_cm3.h **** 
1101:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI DEVID Register Definitions */
1102:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1103:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1104:../../STM32F1_files/CMSIS/core_cm3.h **** 
1105:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1106:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1107:../../STM32F1_files/CMSIS/core_cm3.h **** 
1108:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1109:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1110:../../STM32F1_files/CMSIS/core_cm3.h **** 
1111:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1112:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1113:../../STM32F1_files/CMSIS/core_cm3.h **** 
1114:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
ARM GAS  /tmp/cc2puB6n.s 			page 96


1115:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1116:../../STM32F1_files/CMSIS/core_cm3.h **** 
1117:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1118:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1119:../../STM32F1_files/CMSIS/core_cm3.h **** 
1120:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI DEVTYPE Register Definitions */
1121:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1122:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1123:../../STM32F1_files/CMSIS/core_cm3.h **** 
1124:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1125:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1126:../../STM32F1_files/CMSIS/core_cm3.h **** 
1127:../../STM32F1_files/CMSIS/core_cm3.h **** /*@}*/ /* end of group CMSIS_TPI */
1128:../../STM32F1_files/CMSIS/core_cm3.h **** 
1129:../../STM32F1_files/CMSIS/core_cm3.h **** 
1130:../../STM32F1_files/CMSIS/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1131:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1132:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup  CMSIS_core_register
1133:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1134:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1135:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
1136:../../STM32F1_files/CMSIS/core_cm3.h ****  */
1137:../../STM32F1_files/CMSIS/core_cm3.h **** 
1138:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1139:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1140:../../STM32F1_files/CMSIS/core_cm3.h ****  */
1141:../../STM32F1_files/CMSIS/core_cm3.h **** typedef struct
1142:../../STM32F1_files/CMSIS/core_cm3.h **** {
1143:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1144:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1145:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1146:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1147:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1148:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1149:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1150:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1151:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1152:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1153:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1154:../../STM32F1_files/CMSIS/core_cm3.h **** } MPU_Type;
1155:../../STM32F1_files/CMSIS/core_cm3.h **** 
1156:../../STM32F1_files/CMSIS/core_cm3.h **** /* MPU Type Register Definitions */
1157:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1158:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1159:../../STM32F1_files/CMSIS/core_cm3.h **** 
1160:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1161:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1162:../../STM32F1_files/CMSIS/core_cm3.h **** 
1163:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1164:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1165:../../STM32F1_files/CMSIS/core_cm3.h **** 
1166:../../STM32F1_files/CMSIS/core_cm3.h **** /* MPU Control Register Definitions */
1167:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1168:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1169:../../STM32F1_files/CMSIS/core_cm3.h **** 
1170:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1171:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
ARM GAS  /tmp/cc2puB6n.s 			page 97


1172:../../STM32F1_files/CMSIS/core_cm3.h **** 
1173:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1174:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1175:../../STM32F1_files/CMSIS/core_cm3.h **** 
1176:../../STM32F1_files/CMSIS/core_cm3.h **** /* MPU Region Number Register Definitions */
1177:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1178:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1179:../../STM32F1_files/CMSIS/core_cm3.h **** 
1180:../../STM32F1_files/CMSIS/core_cm3.h **** /* MPU Region Base Address Register Definitions */
1181:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1182:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1183:../../STM32F1_files/CMSIS/core_cm3.h **** 
1184:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1185:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1186:../../STM32F1_files/CMSIS/core_cm3.h **** 
1187:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1188:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1189:../../STM32F1_files/CMSIS/core_cm3.h **** 
1190:../../STM32F1_files/CMSIS/core_cm3.h **** /* MPU Region Attribute and Size Register Definitions */
1191:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1192:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1193:../../STM32F1_files/CMSIS/core_cm3.h **** 
1194:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1195:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1196:../../STM32F1_files/CMSIS/core_cm3.h **** 
1197:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1198:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1199:../../STM32F1_files/CMSIS/core_cm3.h **** 
1200:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1201:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1202:../../STM32F1_files/CMSIS/core_cm3.h **** 
1203:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1204:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1205:../../STM32F1_files/CMSIS/core_cm3.h **** 
1206:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1207:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1208:../../STM32F1_files/CMSIS/core_cm3.h **** 
1209:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1210:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1211:../../STM32F1_files/CMSIS/core_cm3.h **** 
1212:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1213:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1214:../../STM32F1_files/CMSIS/core_cm3.h **** 
1215:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1216:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1217:../../STM32F1_files/CMSIS/core_cm3.h **** 
1218:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1219:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1220:../../STM32F1_files/CMSIS/core_cm3.h **** 
1221:../../STM32F1_files/CMSIS/core_cm3.h **** /*@} end of group CMSIS_MPU */
1222:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
1223:../../STM32F1_files/CMSIS/core_cm3.h **** 
1224:../../STM32F1_files/CMSIS/core_cm3.h **** 
1225:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1226:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup  CMSIS_core_register
1227:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1228:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief    Type definitions for the Core Debug Registers
ARM GAS  /tmp/cc2puB6n.s 			page 98


1229:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
1230:../../STM32F1_files/CMSIS/core_cm3.h ****  */
1231:../../STM32F1_files/CMSIS/core_cm3.h **** 
1232:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1233:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1234:../../STM32F1_files/CMSIS/core_cm3.h ****  */
1235:../../STM32F1_files/CMSIS/core_cm3.h **** typedef struct
1236:../../STM32F1_files/CMSIS/core_cm3.h **** {
1237:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1238:../../STM32F1_files/CMSIS/core_cm3.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1239:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1240:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1241:../../STM32F1_files/CMSIS/core_cm3.h **** } CoreDebug_Type;
1242:../../STM32F1_files/CMSIS/core_cm3.h **** 
1243:../../STM32F1_files/CMSIS/core_cm3.h **** /* Debug Halting Control and Status Register Definitions */
1244:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1245:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1246:../../STM32F1_files/CMSIS/core_cm3.h **** 
1247:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1248:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1249:../../STM32F1_files/CMSIS/core_cm3.h **** 
1250:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1251:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1252:../../STM32F1_files/CMSIS/core_cm3.h **** 
1253:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1254:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1255:../../STM32F1_files/CMSIS/core_cm3.h **** 
1256:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1257:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1258:../../STM32F1_files/CMSIS/core_cm3.h **** 
1259:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1260:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1261:../../STM32F1_files/CMSIS/core_cm3.h **** 
1262:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1263:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1264:../../STM32F1_files/CMSIS/core_cm3.h **** 
1265:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1266:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1267:../../STM32F1_files/CMSIS/core_cm3.h **** 
1268:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1269:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1270:../../STM32F1_files/CMSIS/core_cm3.h **** 
1271:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1272:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1273:../../STM32F1_files/CMSIS/core_cm3.h **** 
1274:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1275:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1276:../../STM32F1_files/CMSIS/core_cm3.h **** 
1277:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1278:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1279:../../STM32F1_files/CMSIS/core_cm3.h **** 
1280:../../STM32F1_files/CMSIS/core_cm3.h **** /* Debug Core Register Selector Register Definitions */
1281:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1282:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1283:../../STM32F1_files/CMSIS/core_cm3.h **** 
1284:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1285:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
ARM GAS  /tmp/cc2puB6n.s 			page 99


1286:../../STM32F1_files/CMSIS/core_cm3.h **** 
1287:../../STM32F1_files/CMSIS/core_cm3.h **** /* Debug Exception and Monitor Control Register Definitions */
1288:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1289:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1290:../../STM32F1_files/CMSIS/core_cm3.h **** 
1291:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1292:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1293:../../STM32F1_files/CMSIS/core_cm3.h **** 
1294:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1295:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1296:../../STM32F1_files/CMSIS/core_cm3.h **** 
1297:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1298:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1299:../../STM32F1_files/CMSIS/core_cm3.h **** 
1300:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1301:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1302:../../STM32F1_files/CMSIS/core_cm3.h **** 
1303:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1304:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1305:../../STM32F1_files/CMSIS/core_cm3.h **** 
1306:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1307:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1308:../../STM32F1_files/CMSIS/core_cm3.h **** 
1309:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1310:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1311:../../STM32F1_files/CMSIS/core_cm3.h **** 
1312:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1313:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1314:../../STM32F1_files/CMSIS/core_cm3.h **** 
1315:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1316:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1317:../../STM32F1_files/CMSIS/core_cm3.h **** 
1318:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1319:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1320:../../STM32F1_files/CMSIS/core_cm3.h **** 
1321:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1322:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1323:../../STM32F1_files/CMSIS/core_cm3.h **** 
1324:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1325:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1326:../../STM32F1_files/CMSIS/core_cm3.h **** 
1327:../../STM32F1_files/CMSIS/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
1328:../../STM32F1_files/CMSIS/core_cm3.h **** 
1329:../../STM32F1_files/CMSIS/core_cm3.h **** 
1330:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1331:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup    CMSIS_core_register
1332:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1333:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1334:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
1335:../../STM32F1_files/CMSIS/core_cm3.h ****  */
1336:../../STM32F1_files/CMSIS/core_cm3.h **** 
1337:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1338:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1339:../../STM32F1_files/CMSIS/core_cm3.h ****   \param[in] field  Name of the register bit field.
1340:../../STM32F1_files/CMSIS/core_cm3.h ****   \param[in] value  Value of the bit field.
1341:../../STM32F1_files/CMSIS/core_cm3.h ****   \return           Masked and shifted value.
1342:../../STM32F1_files/CMSIS/core_cm3.h **** */
ARM GAS  /tmp/cc2puB6n.s 			page 100


1343:../../STM32F1_files/CMSIS/core_cm3.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1344:../../STM32F1_files/CMSIS/core_cm3.h **** 
1345:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1346:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1347:../../STM32F1_files/CMSIS/core_cm3.h ****   \param[in] field  Name of the register bit field.
1348:../../STM32F1_files/CMSIS/core_cm3.h ****   \param[in] value  Value of register.
1349:../../STM32F1_files/CMSIS/core_cm3.h ****   \return           Masked and shifted bit field value.
1350:../../STM32F1_files/CMSIS/core_cm3.h **** */
1351:../../STM32F1_files/CMSIS/core_cm3.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1352:../../STM32F1_files/CMSIS/core_cm3.h **** 
1353:../../STM32F1_files/CMSIS/core_cm3.h **** /*@} end of group CMSIS_core_bitfield */
1354:../../STM32F1_files/CMSIS/core_cm3.h **** 
1355:../../STM32F1_files/CMSIS/core_cm3.h **** 
1356:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1357:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup    CMSIS_core_register
1358:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup   CMSIS_core_base     Core Definitions
1359:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief      Definitions for base addresses, unions, and structures.
1360:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
1361:../../STM32F1_files/CMSIS/core_cm3.h ****  */
1362:../../STM32F1_files/CMSIS/core_cm3.h **** 
1363:../../STM32F1_files/CMSIS/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
1364:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1365:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1366:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1367:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1368:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1369:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1370:../../STM32F1_files/CMSIS/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1371:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1372:../../STM32F1_files/CMSIS/core_cm3.h **** 
1373:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1374:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1375:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1376:../../STM32F1_files/CMSIS/core_cm3.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1377:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1378:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1379:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1380:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1381:../../STM32F1_files/CMSIS/core_cm3.h **** 
1382:../../STM32F1_files/CMSIS/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1383:../../STM32F1_files/CMSIS/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1384:../../STM32F1_files/CMSIS/core_cm3.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1385:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
1386:../../STM32F1_files/CMSIS/core_cm3.h **** 
1387:../../STM32F1_files/CMSIS/core_cm3.h **** /*@} */
1388:../../STM32F1_files/CMSIS/core_cm3.h **** 
1389:../../STM32F1_files/CMSIS/core_cm3.h **** 
1390:../../STM32F1_files/CMSIS/core_cm3.h **** 
1391:../../STM32F1_files/CMSIS/core_cm3.h **** /*******************************************************************************
1392:../../STM32F1_files/CMSIS/core_cm3.h ****  *                Hardware Abstraction Layer
1393:../../STM32F1_files/CMSIS/core_cm3.h ****   Core Function Interface contains:
1394:../../STM32F1_files/CMSIS/core_cm3.h ****   - Core NVIC Functions
1395:../../STM32F1_files/CMSIS/core_cm3.h ****   - Core SysTick Functions
1396:../../STM32F1_files/CMSIS/core_cm3.h ****   - Core Debug Functions
1397:../../STM32F1_files/CMSIS/core_cm3.h ****   - Core Register Access Functions
1398:../../STM32F1_files/CMSIS/core_cm3.h ****  ******************************************************************************/
1399:../../STM32F1_files/CMSIS/core_cm3.h **** /**
ARM GAS  /tmp/cc2puB6n.s 			page 101


1400:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1401:../../STM32F1_files/CMSIS/core_cm3.h **** */
1402:../../STM32F1_files/CMSIS/core_cm3.h **** 
1403:../../STM32F1_files/CMSIS/core_cm3.h **** 
1404:../../STM32F1_files/CMSIS/core_cm3.h **** 
1405:../../STM32F1_files/CMSIS/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1406:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1407:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1408:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1409:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1410:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
1411:../../STM32F1_files/CMSIS/core_cm3.h ****  */
1412:../../STM32F1_files/CMSIS/core_cm3.h **** 
1413:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1414:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief   Set Priority Grouping
1415:../../STM32F1_files/CMSIS/core_cm3.h ****   \details Sets the priority grouping field using the required unlock sequence.
1416:../../STM32F1_files/CMSIS/core_cm3.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1417:../../STM32F1_files/CMSIS/core_cm3.h ****            Only values from 0..7 are used.
1418:../../STM32F1_files/CMSIS/core_cm3.h ****            In case of a conflict between priority grouping and available
1419:../../STM32F1_files/CMSIS/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1420:../../STM32F1_files/CMSIS/core_cm3.h ****   \param [in]      PriorityGroup  Priority grouping field.
1421:../../STM32F1_files/CMSIS/core_cm3.h ****  */
1422:../../STM32F1_files/CMSIS/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1423:../../STM32F1_files/CMSIS/core_cm3.h **** {
1424:../../STM32F1_files/CMSIS/core_cm3.h ****   uint32_t reg_value;
1425:../../STM32F1_files/CMSIS/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1426:../../STM32F1_files/CMSIS/core_cm3.h **** 
1427:../../STM32F1_files/CMSIS/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1428:../../STM32F1_files/CMSIS/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1429:../../STM32F1_files/CMSIS/core_cm3.h ****   reg_value  =  (reg_value                                   |
1430:../../STM32F1_files/CMSIS/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1431:../../STM32F1_files/CMSIS/core_cm3.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1432:../../STM32F1_files/CMSIS/core_cm3.h ****   SCB->AIRCR =  reg_value;
1433:../../STM32F1_files/CMSIS/core_cm3.h **** }
1434:../../STM32F1_files/CMSIS/core_cm3.h **** 
1435:../../STM32F1_files/CMSIS/core_cm3.h **** 
1436:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1437:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief   Get Priority Grouping
1438:../../STM32F1_files/CMSIS/core_cm3.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1439:../../STM32F1_files/CMSIS/core_cm3.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1440:../../STM32F1_files/CMSIS/core_cm3.h ****  */
1441:../../STM32F1_files/CMSIS/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1442:../../STM32F1_files/CMSIS/core_cm3.h **** {
1443:../../STM32F1_files/CMSIS/core_cm3.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1444:../../STM32F1_files/CMSIS/core_cm3.h **** }
1445:../../STM32F1_files/CMSIS/core_cm3.h **** 
1446:../../STM32F1_files/CMSIS/core_cm3.h **** 
1447:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1448:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief   Enable External Interrupt
1449:../../STM32F1_files/CMSIS/core_cm3.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1450:../../STM32F1_files/CMSIS/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1451:../../STM32F1_files/CMSIS/core_cm3.h ****  */
1452:../../STM32F1_files/CMSIS/core_cm3.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1453:../../STM32F1_files/CMSIS/core_cm3.h **** {
1454:../../STM32F1_files/CMSIS/core_cm3.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
 3098              		.loc 17 1454 0
 3099 0164 3E4F     		ldr	r7, .L247+72
ARM GAS  /tmp/cc2puB6n.s 			page 102


 3100              	.LBE1219:
 3101              	.LBE1218:
 3102              	.LBB1222:
 3103              	.LBB1215:
  57:../../src/periph/f1_f4_usart.h ****    USART& tx_disable    (){CR1.TE   = false; return *this;}
 3104              		.loc 6 57 0
 3105 0166 D968     		ldr	r1, [r3, #12]
 3106              	.LBE1215:
 3107              	.LBE1222:
 174:../../src/uart.h **** 
 3108              		.loc 5 174 0
 3109              		@ sp needed
 3110              	.LBB1223:
 3111              	.LBB1216:
  57:../../src/periph/f1_f4_usart.h ****    USART& tx_disable    (){CR1.TE   = false; return *this;}
 3112              		.loc 6 57 0
 3113 0168 0A43     		orrs	r2, r1
 3114 016a DA60     		str	r2, [r3, #12]
 3115              	.LVL159:
 3116              	.LBE1216:
 3117              	.LBE1223:
 3118              	.LBB1224:
 3119              	.LBB1225:
  55:../../src/periph/f1_f4_usart.h ****    USART& rx_disable    (){CR1.RE   = false; return *this;}
 3120              		.loc 6 55 0
 3121 016c 0422     		movs	r2, #4
 3122 016e D968     		ldr	r1, [r3, #12]
 3123 0170 0A43     		orrs	r2, r1
 3124 0172 DA60     		str	r2, [r3, #12]
 3125              	.LBE1225:
 3126              	.LBE1224:
 3127              	.LBB1226:
 3128              	.LBB1227:
  61:../../src/periph/f1_f4_usart.h ****    USART& DMA_rx_enable (){CR3.DMAR = true;  return *this;}
 3129              		.loc 6 61 0
 3130 0174 8022     		movs	r2, #128
 3131 0176 5969     		ldr	r1, [r3, #20]
 3132 0178 1143     		orrs	r1, r2
 3133 017a 5961     		str	r1, [r3, #20]
 3134              	.LBE1227:
 3135              	.LBE1226:
 3136              	.LBB1228:
 3137              	.LBB1229:
  62:../../src/periph/f1_f4_usart.h ****    USART& parity_enable (){CR1.PCE  = true;  return *this;}
 3138              		.loc 6 62 0
 3139 017c 4021     		movs	r1, #64
 3140 017e 5D69     		ldr	r5, [r3, #20]
 3141 0180 2943     		orrs	r1, r5
 3142 0182 5961     		str	r1, [r3, #20]
 3143              	.LBE1229:
 3144              	.LBE1228:
 3145              	.LBB1230:
 3146              	.LBB1231:
  67:../../src/periph/f1_f4_usart.h ****    bool   is_IDLE_interrupt              (){return SR.IDLE;}
 3147              		.loc 6 67 0
 3148 0184 1021     		movs	r1, #16
 3149 0186 DD68     		ldr	r5, [r3, #12]
ARM GAS  /tmp/cc2puB6n.s 			page 103


 3150 0188 0D43     		orrs	r5, r1
 3151 018a DD60     		str	r5, [r3, #12]
 3152              	.LBE1231:
 3153              	.LBE1230:
 3154              	.LBB1232:
 3155              	.LBB1233:
  53:../../src/periph/f1_f4_usart.h ****    USART& disable       (){CR1.UE   = false; return *this;}
 3156              		.loc 6 53 0
 3157 018c 8025     		movs	r5, #128
 3158 018e DE68     		ldr	r6, [r3, #12]
 3159 0190 AD01     		lsls	r5, r5, #6
 3160 0192 3543     		orrs	r5, r6
 3161 0194 DD60     		str	r5, [r3, #12]
 3162              	.LVL160:
 3163              	.LBE1233:
 3164              	.LBE1232:
 3165              	.LBB1234:
 3166              	.LBB1220:
 3167              		.loc 17 1454 0
 3168 0196 2023     		movs	r3, #32
 3169              	.LBE1220:
 3170              	.LBE1234:
 3171              	.LBB1235:
 3172              	.LBB1236:
  15:../../src/net_buffer.h ****    auto end()   { return base().begin() + end_i; }
 3173              		.loc 7 15 0
 3174 0198 0600     		movs	r6, r0
 3175              	.LBE1236:
 3176              	.LBE1235:
 3177              	.LBB1240:
 3178              	.LBB1221:
 3179              		.loc 17 1454 0
 3180 019a 7B60     		str	r3, [r7, #4]
 3181              	.LVL161:
 3182              	.LBE1221:
 3183              	.LBE1240:
 3184              	.LBB1241:
 3185              	.LBB1242:
 3186              	.LBB1243:
  59:../../src/periph/f1_rcc.h ****       else if constexpr (
 3187              		.loc 9 59 0
 3188 019c 6569     		ldr	r5, [r4, #20]
 3189 019e 1F3B     		subs	r3, r3, #31
 3190 01a0 2B43     		orrs	r3, r5
 3191 01a2 6361     		str	r3, [r4, #20]
 3192              	.LBE1243:
 3193              	.LBE1242:
 3194              	.LBE1241:
 156:../../src/uart.h ****                 .set_memory_adr(size_t(uart.buffer.begin()))
 3195              		.loc 5 156 0
 3196 01a4 4369     		ldr	r3, [r0, #20]
 3197              	.LVL162:
 3198              	.LBB1244:
 3199              	.LBB1237:
  15:../../src/net_buffer.h ****    auto end()   { return base().begin() + end_i; }
 3200              		.loc 7 15 0
 3201 01a6 FC36     		adds	r6, r6, #252
ARM GAS  /tmp/cc2puB6n.s 			page 104


 3202              	.LBE1237:
 3203              	.LBE1244:
 3204              	.LBB1245:
 3205              	.LBB1246:
  34:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& size_memory(DataSize d)     {CCR.MSIZE = d; return *this;}
 3206              		.loc 8 34 0
 3207 01a8 1C68     		ldr	r4, [r3]
 3208              	.LBE1246:
 3209              	.LBE1245:
 3210              	.LBB1248:
 3211              	.LBB1238:
  15:../../src/net_buffer.h ****    auto end()   { return base().begin() + end_i; }
 3212              		.loc 7 15 0
 3213 01aa 2E4D     		ldr	r5, .L247+76
 3214              	.LBE1238:
 3215              	.LBE1248:
 3216              	.LBB1249:
 3217              	.LBB1247:
  34:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& size_memory(DataSize d)     {CCR.MSIZE = d; return *this;}
 3218              		.loc 8 34 0
 3219 01ac 0C43     		orrs	r4, r1
 3220 01ae 1C60     		str	r4, [r3]
 3221              	.LVL163:
 3222              	.LBE1247:
 3223              	.LBE1249:
 3224              	.LBB1250:
 3225              	.LBB1239:
  15:../../src/net_buffer.h ****    auto end()   { return base().begin() + end_i; }
 3226              		.loc 7 15 0
 3227 01b0 746A     		ldr	r4, [r6, #36]
 3228 01b2 6419     		adds	r4, r4, r5
 3229              	.LVL164:
 3230              	.LBE1239:
 3231              	.LBE1250:
 3232              	.LBB1251:
 3233              	.LBB1252:
  30:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& set_periph_adr      (uint32_t v){CPAR  = v; return *this;}
 3234              		.loc 8 30 0
 3235 01b4 DC60     		str	r4, [r3, #12]
 3236              	.LVL165:
 3237              	.LBE1252:
 3238              	.LBE1251:
 3239              	.LBB1253:
 3240              	.LBB1254:
  87:../../src/periph/f1_f4_usart.h **** 
 3241              		.loc 6 87 0
 3242 01b6 0469     		ldr	r4, [r0, #16]
 3243              	.LBE1254:
 3244              	.LBE1253:
 3245              	.LBB1256:
 3246              	.LBB1257:
  35:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& size_periph(DataSize d)     {CCR.PSIZE = d; return *this;}
 3247              		.loc 8 35 0
 3248 01b8 2B4D     		ldr	r5, .L247+80
 3249              	.LBE1257:
 3250              	.LBE1256:
 3251              	.LBB1260:
ARM GAS  /tmp/cc2puB6n.s 			page 105


 3252              	.LBB1255:
  87:../../src/periph/f1_f4_usart.h **** 
 3253              		.loc 6 87 0
 3254 01ba 0434     		adds	r4, r4, #4
 3255              	.LVL166:
 3256              	.LBE1255:
 3257              	.LBE1260:
 3258              	.LBB1261:
 3259              	.LBB1262:
  31:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& set_qty_transactions(uint16_t v){CNDTR = v; return *this;}
 3260              		.loc 8 31 0
 3261 01bc 9C60     		str	r4, [r3, #8]
 3262              	.LBE1262:
 3263              	.LBE1261:
 3264              	.LBB1263:
 3265              	.LBB1264:
  26:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& inc_periph   (){CCR.PINC = true; return *this;}
 3266              		.loc 8 26 0
 3267 01be 1C68     		ldr	r4, [r3]
 3268              	.LBE1264:
 3269              	.LBE1263:
 3270              	.LBB1266:
 3271              	.LBB1258:
  35:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& size_periph(DataSize d)     {CCR.PSIZE = d; return *this;}
 3272              		.loc 8 35 0
 3273 01c0 AC46     		mov	ip, r5
 3274              	.LBE1258:
 3275              	.LBE1266:
 3276              	.LBB1267:
 3277              	.LBB1265:
  26:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& inc_periph   (){CCR.PINC = true; return *this;}
 3278              		.loc 8 26 0
 3279 01c2 1443     		orrs	r4, r2
 3280 01c4 1C60     		str	r4, [r3]
 3281              	.LVL167:
 3282              	.LBE1265:
 3283              	.LBE1267:
 3284              	.LBB1268:
 3285              	.LBB1259:
  35:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& size_periph(DataSize d)     {CCR.PSIZE = d; return *this;}
 3286              		.loc 8 35 0
 3287 01c6 1C68     		ldr	r4, [r3]
 3288 01c8 2C40     		ands	r4, r5
 3289 01ca 1C60     		str	r4, [r3]
 3290              	.LVL168:
 3291              	.LBE1259:
 3292              	.LBE1268:
 3293              	.LBB1269:
 3294              	.LBB1270:
  36:../../src/periph/f0_f1_periph_dma_stream.h **** 
 3295              		.loc 8 36 0
 3296 01cc 1C68     		ldr	r4, [r3]
 3297 01ce 274D     		ldr	r5, .L247+84
 3298 01d0 2C40     		ands	r4, r5
 3299 01d2 1C60     		str	r4, [r3]
 3300              	.LVL169:
 3301              	.LBE1270:
ARM GAS  /tmp/cc2puB6n.s 			page 106


 3302              	.LBE1269:
 3303              	.LBB1271:
 3304              	.LBB1272:
  40:../../src/periph/f0_f1_periph_dma_stream.h **** 
 3305              		.loc 8 40 0
 3306 01d4 1C68     		ldr	r4, [r3]
 3307 01d6 2500     		movs	r5, r4
 3308 01d8 0224     		movs	r4, #2
 3309 01da 2C43     		orrs	r4, r5
 3310 01dc 1C60     		str	r4, [r3]
 3311              	.LVL170:
 3312              	.LBE1272:
 3313              	.LBE1271:
 3314              	.LBB1273:
 3315              	.LBB1274:
 3316              		.loc 17 1454 0
 3317 01de 8023     		movs	r3, #128
 3318 01e0 DB01     		lsls	r3, r3, #7
 3319 01e2 3B60     		str	r3, [r7]
 3320              	.LVL171:
 3321              	.LBE1274:
 3322              	.LBE1273:
 165:../../src/uart.h ****             	 .set_memory_adr(size_t(uart.buffer.begin()))
 3323              		.loc 5 165 0
 3324 01e4 8369     		ldr	r3, [r0, #24]
 3325              	.LVL172:
 3326              	.LBB1275:
 3327              	.LBB1276:
  36:../../src/periph/f0_f1_periph_dma_stream.h **** 
 3328              		.loc 8 36 0
 3329 01e6 214D     		ldr	r5, .L247+84
 3330              	.LBE1276:
 3331              	.LBE1275:
 3332              	.LBB1278:
 3333              	.LBB1279:
  34:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& size_memory(DataSize d)     {CCR.MSIZE = d; return *this;}
 3334              		.loc 8 34 0
 3335 01e8 1C68     		ldr	r4, [r3]
 3336 01ea 8C43     		bics	r4, r1
 3337 01ec 1C60     		str	r4, [r3]
 3338              	.LVL173:
 3339              	.LBE1279:
 3340              	.LBE1278:
 3341              	.LBB1280:
 3342              	.LBB1281:
  15:../../src/net_buffer.h ****    auto end()   { return base().begin() + end_i; }
 3343              		.loc 7 15 0
 3344 01ee 716A     		ldr	r1, [r6, #36]
 3345 01f0 1C4C     		ldr	r4, .L247+76
 3346 01f2 0919     		adds	r1, r1, r4
 3347              	.LVL174:
 3348              	.LBE1281:
 3349              	.LBE1280:
 3350              	.LBB1282:
 3351              	.LBB1283:
  30:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& set_periph_adr      (uint32_t v){CPAR  = v; return *this;}
 3352              		.loc 8 30 0
ARM GAS  /tmp/cc2puB6n.s 			page 107


 3353 01f4 D960     		str	r1, [r3, #12]
 3354              	.LVL175:
 3355              	.LBE1283:
 3356              	.LBE1282:
 3357              	.LBB1284:
 3358              	.LBB1285:
  87:../../src/periph/f1_f4_usart.h **** 
 3359              		.loc 6 87 0
 3360 01f6 0169     		ldr	r1, [r0, #16]
 3361 01f8 0431     		adds	r1, r1, #4
 3362              	.LVL176:
 3363              	.LBE1285:
 3364              	.LBE1284:
 3365              	.LBB1286:
 3366              	.LBB1287:
  31:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& set_qty_transactions(uint16_t v){CNDTR = v; return *this;}
 3367              		.loc 8 31 0
 3368 01fa 9960     		str	r1, [r3, #8]
 3369              	.LVL177:
 3370              	.LBE1287:
 3371              	.LBE1286:
 3372              	.LBB1288:
 3373              	.LBB1289:
  32:../../src/periph/f0_f1_periph_dma_stream.h **** 
 3374              		.loc 8 32 0
 3375 01fc FF21     		movs	r1, #255
 3376 01fe 5960     		str	r1, [r3, #4]
 3377              	.LVL178:
 3378              	.LBE1289:
 3379              	.LBE1288:
 3380              	.LBB1290:
 3381              	.LBB1291:
  26:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& inc_periph   (){CCR.PINC = true; return *this;}
 3382              		.loc 8 26 0
 3383 0200 1968     		ldr	r1, [r3]
 3384 0202 0A43     		orrs	r2, r1
 3385              	.LBE1291:
 3386              	.LBE1290:
 3387              	.LBB1293:
 3388              	.LBB1294:
  35:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& size_periph(DataSize d)     {CCR.PSIZE = d; return *this;}
 3389              		.loc 8 35 0
 3390 0204 6146     		mov	r1, ip
 3391              	.LBE1294:
 3392              	.LBE1293:
 3393              	.LBB1296:
 3394              	.LBB1292:
  26:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& inc_periph   (){CCR.PINC = true; return *this;}
 3395              		.loc 8 26 0
 3396 0206 1A60     		str	r2, [r3]
 3397              	.LVL179:
 3398              	.LBE1292:
 3399              	.LBE1296:
 3400              	.LBB1297:
 3401              	.LBB1295:
  35:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& size_periph(DataSize d)     {CCR.PSIZE = d; return *this;}
 3402              		.loc 8 35 0
ARM GAS  /tmp/cc2puB6n.s 			page 108


 3403 0208 1A68     		ldr	r2, [r3]
 3404 020a 0A40     		ands	r2, r1
 3405 020c 1A60     		str	r2, [r3]
 3406              	.LVL180:
 3407              	.LBE1295:
 3408              	.LBE1297:
 3409              	.LBB1298:
 3410              	.LBB1277:
  36:../../src/periph/f0_f1_periph_dma_stream.h **** 
 3411              		.loc 8 36 0
 3412 020e 1A68     		ldr	r2, [r3]
 3413 0210 1540     		ands	r5, r2
 3414 0212 1D60     		str	r5, [r3]
 3415              	.LVL181:
 3416              	.LBE1277:
 3417              	.LBE1298:
 174:../../src/uart.h **** 
 3418              		.loc 5 174 0
 3419 0214 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3420              	.L248:
 3421 0216 C046     		.align	2
 3422              	.L247:
 3423 0218 00000000 		.word	_ZGVZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10EEENS4_
 3424 021c 00100240 		.word	1073876992
 3425 0220 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi9EEELNS1_7PinModeE2EEERDavE3pin
 3426 0224 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi9EEELNS1_7PinModeE2EEERDavE3pin
 3427 0228 00080140 		.word	1073809408
 3428 022c 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi10EEELNS1_7PinModeE3EEERDavE3pin
 3429 0230 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi10EEELNS1_7PinModeE3EEERDavE3pin
 3430 0234 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi11EEELNS1_7PinModeE1EEERDavE3pin
 3431 0238 FFF0FFFF 		.word	-3841
 3432 023c 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi11EEELNS1_7PinModeE1EEERDavE3pin
 3433 0240 FF0FFFFF 		.word	-61441
 3434 0244 00000000 		.word	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi12EEELNS1_7PinModeE1EEERDavE3pin
 3435 0248 00000000 		.word	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi12EEELNS1_7PinModeE1EEERDavE3pin
 3436 024c FFFFF0FF 		.word	-983041
 3437 0250 00000000 		.word	_ZZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10EEENS4_IL
 3438 0254 00380140 		.word	1073821696
 3439 0258 44000240 		.word	1073872964
 3440 025c 58000240 		.word	1073872984
 3441 0260 00E100E0 		.word	-536813312
 3442 0264 20000000 		.word	_ZZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10EEENS4_IL
 3443 0268 FFF3FFFF 		.word	-3073
 3444 026c FFFCFFFF 		.word	-769
 3445              		.cfi_endproc
 3446              	.LFE2405:
 3448              		.section	.text._ZN10UART_sizedILj255EE7receiveEv,"axG",%progbits,_ZN10UART_sizedILj255EE7receiveEv
 3449              		.align	1
 3450              		.weak	_ZN10UART_sizedILj255EE7receiveEv
 3451              		.syntax unified
 3452              		.code	16
 3453              		.thumb_func
 3454              		.fpu softvfp
 3456              	_ZN10UART_sizedILj255EE7receiveEv:
 3457              	.LFB2792:
 196:../../src/uart.h **** {
 3458              		.loc 5 196 0
ARM GAS  /tmp/cc2puB6n.s 			page 109


 3459              		.cfi_startproc
 3460              		@ args = 0, pretend = 0, frame = 0
 3461              		@ frame_needed = 0, uses_anonymous_args = 0
 3462              	.LVL182:
 3463              	.LBB1319:
 3464              	.LBB1320:
  14:../../src/net_buffer.h ****    auto begin() { return base().begin() + begin_i; }
 3465              		.loc 7 14 0
 3466 0000 0300     		movs	r3, r0
 3467 0002 0022     		movs	r2, #0
 3468 0004 FC33     		adds	r3, r3, #252
 3469              	.LBE1320:
 3470              	.LBE1319:
 196:../../src/uart.h **** {
 3471              		.loc 5 196 0
 3472 0006 30B5     		push	{r4, r5, lr}
 3473              	.LCFI19:
 3474              		.cfi_def_cfa_offset 12
 3475              		.cfi_offset 4, -12
 3476              		.cfi_offset 5, -8
 3477              		.cfi_offset 14, -4
 3478              	.LBB1322:
 3479              	.LBB1321:
  14:../../src/net_buffer.h ****    auto begin() { return base().begin() + begin_i; }
 3480              		.loc 7 14 0
 3481 0008 5A62     		str	r2, [r3, #36]
 3482 000a 9A62     		str	r2, [r3, #40]
 3483              	.LVL183:
 3484              	.LBE1321:
 3485              	.LBE1322:
 199:../../src/uart.h ****    TXstream.disable();
 3486              		.loc 5 199 0
 3487 000c C368     		ldr	r3, [r0, #12]
 3488              	.LVL184:
 3489              	.LBB1323:
 3490              	.LBB1324:
 3491              	.LBB1325:
  24:../../src/pin.h ****       return pin;
  25:../../src/pin.h ****    }
  26:../../src/pin.h **** 
  27:../../src/pin.h ****    void set()       { port.set(n);             }
  28:../../src/pin.h ****    void clear()     { port.clear(n);           }
 3492              		.loc 15 28 0
 3493 000e 1C68     		ldr	r4, [r3]
 3494              	.LVL185:
 3495              	.LBB1326:
 3496              	.LBB1327:
  28:../../src/periph/f1_gpio.h ****    bool is_set     (size_t n) { return IDR.reg & (1 << n);     }
 3497              		.loc 16 28 0
 3498 0010 5968     		ldr	r1, [r3, #4]
 3499 0012 0123     		movs	r3, #1
 3500              	.LVL186:
 3501 0014 1A00     		movs	r2, r3
 3502 0016 1031     		adds	r1, r1, #16
 3503              	.LVL187:
 3504 0018 8A40     		lsls	r2, r2, r1
 3505 001a 2569     		ldr	r5, [r4, #16]
ARM GAS  /tmp/cc2puB6n.s 			page 110


 3506 001c 2A43     		orrs	r2, r5
 3507 001e 2261     		str	r2, [r4, #16]
 3508              	.LVL188:
 3509              	.LBE1327:
 3510              	.LBE1326:
 3511              	.LBE1325:
 3512              	.LBE1324:
 3513              	.LBE1323:
 3514              	.LBB1328:
 3515              	.LBB1329:
 3516              	.LBB1330:
 3517              	.LBB1331:
 3518              	.LBB1332:
 3519 0020 1A00     		movs	r2, r3
 3520              	.LBE1332:
 3521              	.LBE1331:
 3522              	.LBE1330:
 3523              	.LBE1329:
 3524              	.LBE1328:
 199:../../src/uart.h ****    TXstream.disable();
 3525              		.loc 5 199 0
 3526 0022 8168     		ldr	r1, [r0, #8]
 3527              	.LVL189:
 3528              	.LBB1337:
 3529              	.LBB1336:
 3530              	.LBB1335:
 3531              		.loc 15 28 0
 3532 0024 0C68     		ldr	r4, [r1]
 3533              	.LVL190:
 3534              	.LBB1334:
 3535              	.LBB1333:
  28:../../src/periph/f1_gpio.h ****    bool is_set     (size_t n) { return IDR.reg & (1 << n);     }
 3536              		.loc 16 28 0
 3537 0026 4968     		ldr	r1, [r1, #4]
 3538              	.LVL191:
 3539 0028 2569     		ldr	r5, [r4, #16]
 3540 002a 1031     		adds	r1, r1, #16
 3541              	.LVL192:
 3542 002c 8A40     		lsls	r2, r2, r1
 3543 002e 2A43     		orrs	r2, r5
 3544 0030 2261     		str	r2, [r4, #16]
 3545              	.LVL193:
 3546              	.LBE1333:
 3547              	.LBE1334:
 3548              	.LBE1335:
 3549              	.LBE1336:
 3550              	.LBE1337:
 200:../../src/uart.h ****    RXstream.disable()
 3551              		.loc 5 200 0
 3552 0032 4169     		ldr	r1, [r0, #20]
 3553              	.LVL194:
 3554              	.LBB1338:
 3555              	.LBB1339:
  24:../../src/periph/f0_f1_periph_dma_stream.h ****    bool        is_disable   (){return (not CCR.EN);}
 3556              		.loc 8 24 0
 3557 0034 0A68     		ldr	r2, [r1]
 3558 0036 9A43     		bics	r2, r3
ARM GAS  /tmp/cc2puB6n.s 			page 111


 3559 0038 0A60     		str	r2, [r1]
 3560              	.LVL195:
 3561              	.LBE1339:
 3562              	.LBE1338:
 201:../../src/uart.h ****            .enable();
 3563              		.loc 5 201 0
 3564 003a 8269     		ldr	r2, [r0, #24]
 3565              	.LVL196:
 3566              	.LBB1340:
 3567              	.LBB1341:
  24:../../src/periph/f0_f1_periph_dma_stream.h ****    bool        is_disable   (){return (not CCR.EN);}
 3568              		.loc 8 24 0
 3569 003c 1168     		ldr	r1, [r2]
 3570 003e 9943     		bics	r1, r3
 3571 0040 1160     		str	r1, [r2]
 3572              	.LVL197:
 3573              	.LBE1341:
 3574              	.LBE1340:
 3575              	.LBB1342:
 3576              	.LBB1343:
  23:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& disable      (){CCR.EN = false;  return *this;}
 3577              		.loc 8 23 0
 3578 0042 1168     		ldr	r1, [r2]
 3579 0044 0B43     		orrs	r3, r1
 3580 0046 1360     		str	r3, [r2]
 3581              	.L250:
 3582 0048 1368     		ldr	r3, [r2]
 3583 004a DB07     		lsls	r3, r3, #31
 3584 004c FCD5     		bpl	.L250
 3585              	.LBE1343:
 3586              	.LBE1342:
 203:../../src/uart.h **** 
 3587              		.loc 5 203 0
 3588              		@ sp needed
 3589 004e 30BD     		pop	{r4, r5, pc}
 3590              		.cfi_endproc
 3591              	.LFE2792:
 3593              		.section	.text._ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE13dma_interrupt9interruptEv,"
 3594              		.align	1
 3595              		.syntax unified
 3596              		.code	16
 3597              		.thumb_func
 3598              		.fpu softvfp
 3600              	_ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE13dma_interrupt9interruptEv:
 3601              	.LFB3029:
  73:../../src/modbus_slave.h ****    } uart_ {*this};
  74:../../src/modbus_slave.h **** 
  75:../../src/modbus_slave.h ****    struct dma_interrupt : Interrupting
  76:../../src/modbus_slave.h ****    {
  77:../../src/modbus_slave.h ****       Parent& parent;
  78:../../src/modbus_slave.h ****       dma_interrupt (Parent& parent) : parent(parent) {
  79:../../src/modbus_slave.h ****          parent.interrupt_DMA_channel.subscribe (this);
  80:../../src/modbus_slave.h ****       }
  81:../../src/modbus_slave.h ****       void interrupt() override {parent.dmaInterrupt();} 
 3602              		.loc 2 81 0
 3603              		.cfi_startproc
 3604              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc2puB6n.s 			page 112


 3605              		@ frame_needed = 0, uses_anonymous_args = 0
 3606              	.LVL198:
 3607 0000 10B5     		push	{r4, lr}
 3608              	.LCFI20:
 3609              		.cfi_def_cfa_offset 8
 3610              		.cfi_offset 4, -8
 3611              		.cfi_offset 14, -4
 3612              		.loc 2 81 0
 3613 0002 8368     		ldr	r3, [r0, #8]
 3614 0004 1869     		ldr	r0, [r3, #16]
 3615              	.LVL199:
 3616              	.LBB1349:
 3617              	.LBB1350:
  55:../../src/modbus_slave.h ****          uart.receive();
 3618              		.loc 2 55 0
 3619 0006 0369     		ldr	r3, [r0, #16]
 3620              	.LVL200:
 3621              	.LBB1351:
 3622              	.LBB1352:
 3623              	.LBB1353:
  71:../../src/periph/f1_f4_usart.h ****    bool   is_tx_complete_interrupt_enable(){return CR1.TCIE;}
 3624              		.loc 6 71 0
 3625 0008 1B68     		ldr	r3, [r3]
 3626              	.LBE1353:
 3627              	.LBE1352:
 3628              	.LBE1351:
  55:../../src/modbus_slave.h ****          uart.receive();
 3629              		.loc 2 55 0
 3630 000a 5B06     		lsls	r3, r3, #25
 3631 000c 01D5     		bpl	.L253
  56:../../src/modbus_slave.h ****    }
 3632              		.loc 2 56 0
 3633 000e FFF7FEFF 		bl	_ZN10UART_sizedILj255EE7receiveEv
 3634              	.LVL201:
 3635              	.L253:
 3636              	.LBE1350:
 3637              	.LBE1349:
 3638              		.loc 2 81 0
 3639              		@ sp needed
 3640 0012 10BD     		pop	{r4, pc}
 3641              		.cfi_endproc
 3642              	.LFE3029:
 3644              		.section	.text._Z5CRC16IPhEDaT_S1_,"axG",%progbits,_Z5CRC16IPhEDaT_S1_,comdat
 3645              		.align	1
 3646              		.weak	_Z5CRC16IPhEDaT_S1_
 3647              		.syntax unified
 3648              		.code	16
 3649              		.thumb_func
 3650              		.fpu softvfp
 3652              	_Z5CRC16IPhEDaT_S1_:
 3653              	.LFB2796:
 3654              		.file 18 "../../src/table_crc.h"
   1:../../src/table_crc.h **** #pragma once
   2:../../src/table_crc.h **** 
   3:../../src/table_crc.h **** #include <tuple>
   4:../../src/table_crc.h **** 
   5:../../src/table_crc.h **** // —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ CRC –º–µ–Ω—è—è –º–µ—Å—Ç–∞–º–∏ —Å—Ç–∞—Ä—à–∏–
ARM GAS  /tmp/cc2puB6n.s 			page 113


   6:../../src/table_crc.h **** 
   7:../../src/table_crc.h **** constexpr uint8_t crc_low_table[]
   8:../../src/table_crc.h **** {
   9:../../src/table_crc.h ****         0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81,
  10:../../src/table_crc.h ****         0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
  11:../../src/table_crc.h ****         0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01,
  12:../../src/table_crc.h ****         0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
  13:../../src/table_crc.h ****         0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81,
  14:../../src/table_crc.h ****         0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
  15:../../src/table_crc.h ****         0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01,
  16:../../src/table_crc.h ****         0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
  17:../../src/table_crc.h ****         0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81,
  18:../../src/table_crc.h ****         0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
  19:../../src/table_crc.h ****         0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01,
  20:../../src/table_crc.h ****         0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
  21:../../src/table_crc.h ****         0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81,
  22:../../src/table_crc.h ****         0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
  23:../../src/table_crc.h ****         0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01,
  24:../../src/table_crc.h ****         0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
  25:../../src/table_crc.h ****         0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81,
  26:../../src/table_crc.h ****         0x40
  27:../../src/table_crc.h **** };
  28:../../src/table_crc.h **** 
  29:../../src/table_crc.h **** constexpr uint8_t crc_high_table[]
  30:../../src/table_crc.h **** {
  31:../../src/table_crc.h ****         0x00, 0xC0, 0xC1, 0x01, 0xC3, 0x03, 0x02, 0xC2, 0xC6, 0x06, 0x07, 0xC7, 0x05, 0xC5, 0xC4,
  32:../../src/table_crc.h ****         0x04, 0xCC, 0x0C, 0x0D, 0xCD, 0x0F, 0xCF, 0xCE, 0x0E, 0x0A, 0xCA, 0xCB, 0x0B, 0xC9, 0x09,
  33:../../src/table_crc.h ****         0x08, 0xC8, 0xD8, 0x18, 0x19, 0xD9, 0x1B, 0xDB, 0xDA, 0x1A, 0x1E, 0xDE, 0xDF, 0x1F, 0xDD,
  34:../../src/table_crc.h ****         0x1D, 0x1C, 0xDC, 0x14, 0xD4, 0xD5, 0x15, 0xD7, 0x17, 0x16, 0xD6, 0xD2, 0x12, 0x13, 0xD3,
  35:../../src/table_crc.h ****         0x11, 0xD1, 0xD0, 0x10, 0xF0, 0x30, 0x31, 0xF1, 0x33, 0xF3, 0xF2, 0x32, 0x36, 0xF6, 0xF7,
  36:../../src/table_crc.h ****         0x37, 0xF5, 0x35, 0x34, 0xF4, 0x3C, 0xFC, 0xFD, 0x3D, 0xFF, 0x3F, 0x3E, 0xFE, 0xFA, 0x3A,
  37:../../src/table_crc.h ****         0x3B, 0xFB, 0x39, 0xF9, 0xF8, 0x38, 0x28, 0xE8, 0xE9, 0x29, 0xEB, 0x2B, 0x2A, 0xEA, 0xEE,
  38:../../src/table_crc.h ****         0x2E, 0x2F, 0xEF, 0x2D, 0xED, 0xEC, 0x2C, 0xE4, 0x24, 0x25, 0xE5, 0x27, 0xE7, 0xE6, 0x26,
  39:../../src/table_crc.h ****         0x22, 0xE2, 0xE3, 0x23, 0xE1, 0x21, 0x20, 0xE0, 0xA0, 0x60, 0x61, 0xA1, 0x63, 0xA3, 0xA2,
  40:../../src/table_crc.h ****         0x62, 0x66, 0xA6, 0xA7, 0x67, 0xA5, 0x65, 0x64, 0xA4, 0x6C, 0xAC, 0xAD, 0x6D, 0xAF, 0x6F,
  41:../../src/table_crc.h ****         0x6E, 0xAE, 0xAA, 0x6A, 0x6B, 0xAB, 0x69, 0xA9, 0xA8, 0x68, 0x78, 0xB8, 0xB9, 0x79, 0xBB,
  42:../../src/table_crc.h ****         0x7B, 0x7A, 0xBA, 0xBE, 0x7E, 0x7F, 0xBF, 0x7D, 0xBD, 0xBC, 0x7C, 0xB4, 0x74, 0x75, 0xB5,
  43:../../src/table_crc.h ****         0x77, 0xB7, 0xB6, 0x76, 0x72, 0xB2, 0xB3, 0x73, 0xB1, 0x71, 0x70, 0xB0, 0x50, 0x90, 0x91,
  44:../../src/table_crc.h ****         0x51, 0x93, 0x53, 0x52, 0x92, 0x96, 0x56, 0x57, 0x97, 0x55, 0x95, 0x94, 0x54, 0x9C, 0x5C,
  45:../../src/table_crc.h ****         0x5D, 0x9D, 0x5F, 0x9F, 0x9E, 0x5E, 0x5A, 0x9A, 0x9B, 0x5B, 0x99, 0x59, 0x58, 0x98, 0x88,
  46:../../src/table_crc.h ****         0x48, 0x49, 0x89, 0x4B, 0x8B, 0x8A, 0x4A, 0x4E, 0x8E, 0x8F, 0x4F, 0x8D, 0x4D, 0x4C, 0x8C,
  47:../../src/table_crc.h ****         0x44, 0x84, 0x85, 0x45, 0x87, 0x47, 0x46, 0x86, 0x82, 0x42, 0x43, 0x83, 0x41, 0x81, 0x80,
  48:../../src/table_crc.h ****         0x40
  49:../../src/table_crc.h **** }; 
  50:../../src/table_crc.h **** 
  51:../../src/table_crc.h **** template<class InputIt>
  52:../../src/table_crc.h **** constexpr auto CRC16(InputIt first, InputIt last)
 3655              		.loc 18 52 0
 3656              		.cfi_startproc
 3657              		@ args = 0, pretend = 0, frame = 0
 3658              		@ frame_needed = 0, uses_anonymous_args = 0
 3659              	.LVL202:
  53:../../src/table_crc.h **** {
  54:../../src/table_crc.h ****     uint8_t crc_high = 0xFF;   // high byte of CRC initialized
  55:../../src/table_crc.h ****     uint8_t crc_low  = 0xFF;   // low byte of CRC initialized
 3660              		.loc 18 55 0
 3661 0000 FF23     		movs	r3, #255
ARM GAS  /tmp/cc2puB6n.s 			page 114


  52:../../src/table_crc.h **** {
 3662              		.loc 18 52 0
 3663 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 3664              	.LCFI21:
 3665              		.cfi_def_cfa_offset 20
 3666              		.cfi_offset 4, -20
 3667              		.cfi_offset 5, -16
 3668              		.cfi_offset 6, -12
 3669              		.cfi_offset 7, -8
 3670              		.cfi_offset 14, -4
  54:../../src/table_crc.h ****     uint8_t crc_low  = 0xFF;   // low byte of CRC initialized
 3671              		.loc 18 54 0
 3672 0004 1D00     		movs	r5, r3
 3673              	.LBB1354:
  56:../../src/table_crc.h **** 
  57:../../src/table_crc.h ****     do
  58:../../src/table_crc.h ****     {
  59:../../src/table_crc.h ****        uint8_t i = crc_low ^ *first++;              // will index into CRC lookup table
  60:../../src/table_crc.h ****        crc_low  = crc_high ^ crc_low_table[i];    // calculate the CRC
 3674              		.loc 18 60 0
 3675 0006 064F     		ldr	r7, .L261
  61:../../src/table_crc.h ****        crc_high =            crc_high_table[i];
 3676              		.loc 18 61 0
 3677 0008 064E     		ldr	r6, .L261+4
 3678              	.LVL203:
 3679              	.L259:
  59:../../src/table_crc.h ****        crc_low  = crc_high ^ crc_low_table[i];    // calculate the CRC
 3680              		.loc 18 59 0
 3681 000a 0C78     		ldrb	r4, [r1]
 3682 000c 0131     		adds	r1, r1, #1
 3683              	.LVL204:
  60:../../src/table_crc.h ****        crc_high =            crc_high_table[i];
 3684              		.loc 18 60 0
 3685 000e 5C40     		eors	r4, r3
 3686 0010 3B5D     		ldrb	r3, [r7, r4]
 3687              	.LVL205:
 3688 0012 6B40     		eors	r3, r5
 3689              	.LVL206:
 3690              		.loc 18 61 0
 3691 0014 355D     		ldrb	r5, [r6, r4]
 3692              	.LVL207:
 3693              	.LBE1354:
  62:../../src/table_crc.h ****     }
  63:../../src/table_crc.h ****     while (first != last);   // pass through message buffer (max 256)
 3694              		.loc 18 63 0
 3695 0016 8A42     		cmp	r2, r1
 3696 0018 F7D1     		bne	.L259
 3697              	.LVL208:
 3698              	.LBB1355:
 3699              	.LBB1356:
 3700              	.LBB1357:
 3701              	.LBB1358:
 3702              	.LBB1359:
 3703              		.file 19 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
   1:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // <tuple> -*- C++ -*-
   2:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
   3:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // Copyright (C) 2007-2017 Free Software Foundation, Inc.
ARM GAS  /tmp/cc2puB6n.s 			page 115


   4:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** //
   5:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // software; you can redistribute it and/or modify it under the
   7:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // terms of the GNU General Public License as published by the
   8:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // Free Software Foundation; either version 3, or (at your option)
   9:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // any later version.
  10:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  11:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // This library is distributed in the hope that it will be useful,
  12:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // GNU General Public License for more details.
  15:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  16:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // Under Section 7 of GPL version 3, you are granted additional
  17:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // permissions described in the GCC Runtime Library Exception, version
  18:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // 3.1, as published by the Free Software Foundation.
  19:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  20:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // You should have received a copy of the GNU General Public License and
  21:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** // <http://www.gnu.org/licenses/>.
  24:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  25:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** /** @file include/tuple
  26:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****  *  This is a Standard C++ Library header.
  27:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****  */
  28:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  29:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #ifndef _GLIBCXX_TUPLE
  30:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #define _GLIBCXX_TUPLE 1
  31:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  32:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #pragma GCC system_header
  33:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  34:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #if __cplusplus < 201103L
  35:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** # include <bits/c++0x_warning.h>
  36:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #else
  37:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  38:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #include <utility>
  39:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #include <array>
  40:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #include <bits/uses_allocator.h>
  41:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** #include <bits/invoke.h>
  42:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  43:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** {
  45:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  47:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   /**
  48:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****    *  @addtogroup utilities
  49:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****    *  @{
  50:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****    */
  51:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  52:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   template<typename... _Elements>
  53:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     class tuple;
  54:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  55:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   template<typename _Tp>
  56:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     struct __is_empty_non_tuple : is_empty<_Tp> { };
  57:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  58:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   // Using EBO for elements that are tuples causes ambiguous base errors.
  59:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   template<typename _El0, typename... _El>
  60:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     struct __is_empty_non_tuple<tuple<_El0, _El...>> : false_type { };
ARM GAS  /tmp/cc2puB6n.s 			page 116


  61:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  62:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   // Use the Empty Base-class Optimization for empty, non-final types.
  63:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   template<typename _Tp>
  64:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     using __empty_not_final
  65:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     = typename conditional<__is_final(_Tp), false_type,
  66:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 			   __is_empty_non_tuple<_Tp>>::type;
  67:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  68:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   template<std::size_t _Idx, typename _Head,
  69:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	   bool = __empty_not_final<_Head>::value>
  70:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     struct _Head_base;
  71:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  72:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   template<std::size_t _Idx, typename _Head>
  73:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     struct _Head_base<_Idx, _Head, true>
  74:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     : public _Head
  75:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     {
  76:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       constexpr _Head_base()
  77:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       : _Head() { }
  78:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  79:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       constexpr _Head_base(const _Head& __h)
  80:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       : _Head(__h) { }
  81:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  82:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       constexpr _Head_base(const _Head_base&) = default;
  83:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       constexpr _Head_base(_Head_base&&) = default;
  84:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  85:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       template<typename _UHead>
  86:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****         constexpr _Head_base(_UHead&& __h)
  87:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	: _Head(std::forward<_UHead>(__h)) { }
  88:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  89:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       _Head_base(allocator_arg_t, __uses_alloc0)
  90:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       : _Head() { }
  91:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  92:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       template<typename _Alloc>
  93:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc1<_Alloc> __a)
  94:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	: _Head(allocator_arg, *__a._M_a) { }
  95:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
  96:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       template<typename _Alloc>
  97:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	_Head_base(allocator_arg_t, __uses_alloc2<_Alloc> __a)
  98:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	: _Head(*__a._M_a) { }
  99:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 100:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       template<typename _UHead>
 101:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	_Head_base(__uses_alloc0, _UHead&& __uhead)
 102:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	: _Head(std::forward<_UHead>(__uhead)) { }
 103:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 104:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       template<typename _Alloc, typename _UHead>
 105:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	_Head_base(__uses_alloc1<_Alloc> __a, _UHead&& __uhead)
 106:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	: _Head(allocator_arg, *__a._M_a, std::forward<_UHead>(__uhead)) { }
 107:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 108:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       template<typename _Alloc, typename _UHead>
 109:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	_Head_base(__uses_alloc2<_Alloc> __a, _UHead&& __uhead)
 110:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	: _Head(std::forward<_UHead>(__uhead), *__a._M_a) { }
 111:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 112:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       static constexpr _Head&
 113:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       _M_head(_Head_base& __b) noexcept { return __b; }
 114:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 115:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       static constexpr const _Head&
 116:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       _M_head(const _Head_base& __b) noexcept { return __b; }
 117:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     };
ARM GAS  /tmp/cc2puB6n.s 			page 117


 118:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 119:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****   template<std::size_t _Idx, typename _Head>
 120:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     struct _Head_base<_Idx, _Head, false>
 121:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****     {
 122:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       constexpr _Head_base()
 123:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       : _M_head_impl() { }
 124:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 125:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       constexpr _Head_base(const _Head& __h)
 126:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       : _M_head_impl(__h) { }
 127:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 128:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       constexpr _Head_base(const _Head_base&) = default;
 129:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       constexpr _Head_base(_Head_base&&) = default;
 130:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 
 131:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****       template<typename _UHead>
 132:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple ****         constexpr _Head_base(_UHead&& __h)
 133:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/tuple **** 	: _M_head_impl(std::forward<_UHead>(__h)) { }
 3704              		.loc 19 133 0
 3705 001a 0570     		strb	r5, [r0]
 3706              	.LVL209:
 3707              	.LBE1359:
 3708              	.LBE1358:
 3709              	.LBE1357:
 3710              	.LBB1360:
 3711              	.LBB1361:
 3712 001c 4370     		strb	r3, [r0, #1]
 3713              	.LVL210:
 3714              	.LBE1361:
 3715              	.LBE1360:
 3716              	.LBE1356:
 3717              	.LBE1355:
  64:../../src/table_crc.h ****         
  65:../../src/table_crc.h ****     return std::tuple {crc_low, crc_high};
  66:../../src/table_crc.h **** }
 3718              		.loc 18 66 0
 3719              		@ sp needed
 3720 001e F0BD     		pop	{r4, r5, r6, r7, pc}
 3721              	.L262:
 3722              		.align	2
 3723              	.L261:
 3724 0020 00000000 		.word	_ZL13crc_low_table
 3725 0024 00000000 		.word	_ZL14crc_high_table
 3726              		.cfi_endproc
 3727              	.LFE2796:
 3729              		.section	.text._ZN10Net_bufferILj255EE9pop_frontEv,"axG",%progbits,_ZN10Net_bufferILj255EE9pop_fro
 3730              		.align	1
 3731              		.weak	_ZN10Net_bufferILj255EE9pop_frontEv
 3732              		.syntax unified
 3733              		.code	16
 3734              		.thumb_func
 3735              		.fpu softvfp
 3737              	_ZN10Net_bufferILj255EE9pop_frontEv:
 3738              	.LFB2810:
  19:../../src/net_buffer.h **** 
  20:../../src/net_buffer.h ****    Net_buffer& operator<< (const uint8_t& v)
  21:../../src/net_buffer.h ****    {
  22:../../src/net_buffer.h ****       if (end_i < size_) {
  23:../../src/net_buffer.h ****          *end() = v;
ARM GAS  /tmp/cc2puB6n.s 			page 118


  24:../../src/net_buffer.h ****          end_i++;
  25:../../src/net_buffer.h ****       }
  26:../../src/net_buffer.h ****       return *this;
  27:../../src/net_buffer.h ****    }
  28:../../src/net_buffer.h **** 
  29:../../src/net_buffer.h ****    auto to_bytes (uint16_t v)
  30:../../src/net_buffer.h ****    {
  31:../../src/net_buffer.h ****       union {
  32:../../src/net_buffer.h ****          std::array<uint8_t,2> d8;
  33:../../src/net_buffer.h ****          uint16_t d16;
  34:../../src/net_buffer.h ****       } u;
  35:../../src/net_buffer.h ****       u.d16 = v;
  36:../../src/net_buffer.h ****       return std::tuple {u.d8[0], u.d8[1]};
  37:../../src/net_buffer.h ****    }
  38:../../src/net_buffer.h **** 
  39:../../src/net_buffer.h ****    auto from_bytes (uint8_t v1, uint8_t v2)
  40:../../src/net_buffer.h ****    {
  41:../../src/net_buffer.h ****       union {
  42:../../src/net_buffer.h ****          std::array<uint8_t,2> d8;
  43:../../src/net_buffer.h ****          uint16_t d16;
  44:../../src/net_buffer.h ****       } u;
  45:../../src/net_buffer.h ****       u.d8 = {v2, v1};
  46:../../src/net_buffer.h ****       return u.d16;
  47:../../src/net_buffer.h ****    }
  48:../../src/net_buffer.h **** 
  49:../../src/net_buffer.h ****    Net_buffer& operator<< (uint16_t v)
  50:../../src/net_buffer.h ****    {
  51:../../src/net_buffer.h ****       auto [low, hi] = to_bytes(v);
  52:../../src/net_buffer.h ****       *this << hi << low;
  53:../../src/net_buffer.h ****       return *this;
  54:../../src/net_buffer.h ****    }
  55:../../src/net_buffer.h **** 
  56:../../src/net_buffer.h ****    template<class U>
  57:../../src/net_buffer.h ****    std::enable_if_t<std::is_same_v<typename U::value_type, uint8_t>, Net_buffer&>
  58:../../src/net_buffer.h ****    operator<< (const U& v)
  59:../../src/net_buffer.h ****    {
  60:../../src/net_buffer.h ****       if (end_i + v.size() < size_) {
  61:../../src/net_buffer.h ****          std::copy (v.begin(), v.end(), end());
  62:../../src/net_buffer.h ****          end_i += v.size();
  63:../../src/net_buffer.h ****       }
  64:../../src/net_buffer.h ****       return *this;
  65:../../src/net_buffer.h ****    }
  66:../../src/net_buffer.h **** 
  67:../../src/net_buffer.h ****    Net_buffer& operator>> (uint8_t& v)
  68:../../src/net_buffer.h ****    {
  69:../../src/net_buffer.h ****       if (end_i > begin_i)
  70:../../src/net_buffer.h ****          v = base()[begin_i++];
  71:../../src/net_buffer.h **** 
  72:../../src/net_buffer.h ****       return *this;
  73:../../src/net_buffer.h ****    }
  74:../../src/net_buffer.h **** 
  75:../../src/net_buffer.h ****    Net_buffer& operator>> (uint16_t& v)
  76:../../src/net_buffer.h ****    {
  77:../../src/net_buffer.h ****       if (end_i > begin_i + 1)
  78:../../src/net_buffer.h ****          v = from_bytes (pop_front(), pop_front());
  79:../../src/net_buffer.h ****       return *this;
  80:../../src/net_buffer.h ****    }
ARM GAS  /tmp/cc2puB6n.s 			page 119


  81:../../src/net_buffer.h **** 
  82:../../src/net_buffer.h ****    uint8_t pop_back()
  83:../../src/net_buffer.h ****    {
  84:../../src/net_buffer.h ****       if (end_i > begin_i)
  85:../../src/net_buffer.h ****          return base()[end_i--];
  86:../../src/net_buffer.h ****       return 0;
  87:../../src/net_buffer.h ****    }
  88:../../src/net_buffer.h **** 
  89:../../src/net_buffer.h ****    uint8_t pop_front()
 3739              		.loc 7 89 0
 3740              		.cfi_startproc
 3741              		@ args = 0, pretend = 0, frame = 0
 3742              		@ frame_needed = 0, uses_anonymous_args = 0
 3743              	.LVL211:
  90:../../src/net_buffer.h ****    {
  91:../../src/net_buffer.h ****       if (end_i > begin_i)
 3744              		.loc 7 91 0
 3745 0000 0200     		movs	r2, r0
  89:../../src/net_buffer.h ****    {
 3746              		.loc 7 89 0
 3747 0002 10B5     		push	{r4, lr}
 3748              	.LCFI22:
 3749              		.cfi_def_cfa_offset 8
 3750              		.cfi_offset 4, -8
 3751              		.cfi_offset 14, -4
 3752              		.loc 7 91 0
 3753 0004 FC32     		adds	r2, r2, #252
 3754 0006 5368     		ldr	r3, [r2, #4]
 3755 0008 9468     		ldr	r4, [r2, #8]
  92:../../src/net_buffer.h ****          return base()[begin_i++];
  93:../../src/net_buffer.h ****       return 0;
 3756              		.loc 7 93 0
 3757 000a 0021     		movs	r1, #0
  91:../../src/net_buffer.h ****          return base()[begin_i++];
 3758              		.loc 7 91 0
 3759 000c 9C42     		cmp	r4, r3
 3760 000e 02D9     		bls	.L264
  92:../../src/net_buffer.h ****          return base()[begin_i++];
 3761              		.loc 7 92 0
 3762 0010 591C     		adds	r1, r3, #1
 3763 0012 5160     		str	r1, [r2, #4]
 3764 0014 C15C     		ldrb	r1, [r0, r3]
 3765              	.L264:
  94:../../src/net_buffer.h ****    }
 3766              		.loc 7 94 0
 3767 0016 0800     		movs	r0, r1
 3768              	.LVL212:
 3769              		@ sp needed
 3770 0018 10BD     		pop	{r4, pc}
 3771              		.cfi_endproc
 3772              	.LFE2810:
 3774              		.section	.text._ZN10Net_bufferILj255EElsERKh,"axG",%progbits,_ZN10Net_bufferILj255EElsERKh,comdat
 3775              		.align	1
 3776              		.weak	_ZN10Net_bufferILj255EElsERKh
 3777              		.syntax unified
 3778              		.code	16
 3779              		.thumb_func
ARM GAS  /tmp/cc2puB6n.s 			page 120


 3780              		.fpu softvfp
 3782              	_ZN10Net_bufferILj255EElsERKh:
 3783              	.LFB2888:
  20:../../src/net_buffer.h ****    {
 3784              		.loc 7 20 0
 3785              		.cfi_startproc
 3786              		@ args = 0, pretend = 0, frame = 0
 3787              		@ frame_needed = 0, uses_anonymous_args = 0
 3788              		@ link register save eliminated.
 3789              	.LVL213:
  22:../../src/net_buffer.h ****          *end() = v;
 3790              		.loc 7 22 0
 3791 0000 0300     		movs	r3, r0
 3792 0002 FC33     		adds	r3, r3, #252
 3793 0004 9A68     		ldr	r2, [r3, #8]
 3794 0006 FE2A     		cmp	r2, #254
 3795 0008 04D8     		bhi	.L267
  23:../../src/net_buffer.h ****          end_i++;
 3796              		.loc 7 23 0
 3797 000a 0978     		ldrb	r1, [r1]
 3798              	.LVL214:
 3799 000c 8154     		strb	r1, [r0, r2]
  24:../../src/net_buffer.h ****       }
 3800              		.loc 7 24 0
 3801 000e 9A68     		ldr	r2, [r3, #8]
 3802 0010 0132     		adds	r2, r2, #1
 3803 0012 9A60     		str	r2, [r3, #8]
 3804              	.L267:
  27:../../src/net_buffer.h **** 
 3805              		.loc 7 27 0
 3806              		@ sp needed
 3807 0014 7047     		bx	lr
 3808              		.cfi_endproc
 3809              	.LFE2888:
 3811              		.section	.text._ZN10Net_bufferILj255EElsEt,"axG",%progbits,_ZN10Net_bufferILj255EElsEt,comdat
 3812              		.align	1
 3813              		.weak	_ZN10Net_bufferILj255EElsEt
 3814              		.syntax unified
 3815              		.code	16
 3816              		.thumb_func
 3817              		.fpu softvfp
 3819              	_ZN10Net_bufferILj255EElsEt:
 3820              	.LFB2889:
  49:../../src/net_buffer.h ****    {
 3821              		.loc 7 49 0
 3822              		.cfi_startproc
 3823              		@ args = 0, pretend = 0, frame = 8
 3824              		@ frame_needed = 0, uses_anonymous_args = 0
 3825              	.LVL215:
 3826 0000 13B5     		push	{r0, r1, r4, lr}
 3827              	.LCFI23:
 3828              		.cfi_def_cfa_offset 16
 3829              		.cfi_offset 0, -16
 3830              		.cfi_offset 1, -12
 3831              		.cfi_offset 4, -8
 3832              		.cfi_offset 14, -4
 3833              	.LBB1362:
ARM GAS  /tmp/cc2puB6n.s 			page 121


 3834              	.LBB1363:
 3835              	.LBB1364:
 3836              	.LBB1365:
 3837              	.LBB1366:
 3838              	.LBB1367:
 3839              	.LBB1368:
 3840              		.loc 19 133 0
 3841 0002 0A0A     		lsrs	r2, r1, #8
 3842 0004 01AB     		add	r3, sp, #4
 3843 0006 1A70     		strb	r2, [r3]
 3844              	.LBE1368:
 3845              	.LBE1367:
 3846              	.LBE1366:
 3847              	.LBB1369:
 3848              	.LBB1370:
 3849 0008 5970     		strb	r1, [r3, #1]
 3850              	.LBE1370:
 3851              	.LBE1369:
 3852              	.LBE1365:
 3853              	.LBE1364:
 3854              	.LBE1363:
 3855              	.LBE1362:
  52:../../src/net_buffer.h ****       return *this;
 3856              		.loc 7 52 0
 3857 000a 1900     		movs	r1, r3
 3858              	.LVL216:
  49:../../src/net_buffer.h ****    {
 3859              		.loc 7 49 0
 3860 000c 0400     		movs	r4, r0
 3861              	.LVL217:
  52:../../src/net_buffer.h ****       return *this;
 3862              		.loc 7 52 0
 3863 000e FFF7FEFF 		bl	_ZN10Net_bufferILj255EElsERKh
 3864              	.LVL218:
 3865 0012 6B46     		mov	r3, sp
 3866 0014 591D     		adds	r1, r3, #5
 3867 0016 FFF7FEFF 		bl	_ZN10Net_bufferILj255EElsERKh
 3868              	.LVL219:
  54:../../src/net_buffer.h **** 
 3869              		.loc 7 54 0
 3870              		@ sp needed
 3871 001a 2000     		movs	r0, r4
 3872              	.LVL220:
 3873 001c 16BD     		pop	{r1, r2, r4, pc}
 3874              		.cfi_endproc
 3875              	.LFE2889:
 3877              		.section	.text._ZN10UART_sizedILj255EE8transmitEv,"axG",%progbits,_ZN10UART_sizedILj255EE8transmit
 3878              		.align	1
 3879              		.weak	_ZN10UART_sizedILj255EE8transmitEv
 3880              		.syntax unified
 3881              		.code	16
 3882              		.thumb_func
 3883              		.fpu softvfp
 3885              	_ZN10UART_sizedILj255EE8transmitEv:
 3886              	.LFB2893:
 186:../../src/uart.h **** {
 3887              		.loc 5 186 0
ARM GAS  /tmp/cc2puB6n.s 			page 122


 3888              		.cfi_startproc
 3889              		@ args = 0, pretend = 0, frame = 0
 3890              		@ frame_needed = 0, uses_anonymous_args = 0
 3891              	.LVL221:
 3892              	.LBB1393:
 3893              	.LBB1394:
 3894              	.LBB1395:
 3895              	.LBB1396:
 3896              	.LBB1397:
  27:../../src/periph/f1_gpio.h ****    void clear      (size_t n) { BSRR |= (1 << (n + 16));       }
 3897              		.loc 16 27 0
 3898 0000 0123     		movs	r3, #1
 3899              	.LBE1397:
 3900              	.LBE1396:
 3901              	.LBE1395:
 3902              	.LBE1394:
 3903              	.LBE1393:
 186:../../src/uart.h **** {
 3904              		.loc 5 186 0
 3905 0002 30B5     		push	{r4, r5, lr}
 3906              	.LCFI24:
 3907              		.cfi_def_cfa_offset 12
 3908              		.cfi_offset 4, -12
 3909              		.cfi_offset 5, -8
 3910              		.cfi_offset 14, -4
 188:../../src/uart.h ****    RXstream.disable();
 3911              		.loc 5 188 0
 3912 0004 C468     		ldr	r4, [r0, #12]
 3913              	.LVL222:
 3914              	.LBB1402:
 3915              	.LBB1401:
 3916              	.LBB1400:
  27:../../src/pin.h ****    void clear()     { port.clear(n);           }
 3917              		.loc 15 27 0
 3918 0006 2168     		ldr	r1, [r4]
 3919              	.LVL223:
 3920              	.LBB1399:
 3921              	.LBB1398:
  27:../../src/periph/f1_gpio.h ****    void clear      (size_t n) { BSRR |= (1 << (n + 16));       }
 3922              		.loc 16 27 0
 3923 0008 6268     		ldr	r2, [r4, #4]
 3924 000a 1C00     		movs	r4, r3
 3925              	.LVL224:
 3926 000c 9440     		lsls	r4, r4, r2
 3927 000e 2200     		movs	r2, r4
 3928              	.LVL225:
 3929 0010 0D69     		ldr	r5, [r1, #16]
 3930 0012 2A43     		orrs	r2, r5
 3931 0014 0A61     		str	r2, [r1, #16]
 3932              	.LVL226:
 3933              	.LBE1398:
 3934              	.LBE1399:
 3935              	.LBE1400:
 3936              	.LBE1401:
 3937              	.LBE1402:
 188:../../src/uart.h ****    RXstream.disable();
 3938              		.loc 5 188 0
ARM GAS  /tmp/cc2puB6n.s 			page 123


 3939 0016 8468     		ldr	r4, [r0, #8]
 3940              	.LVL227:
 3941              	.LBB1403:
 3942              	.LBB1404:
 3943              	.LBB1405:
  27:../../src/pin.h ****    void clear()     { port.clear(n);           }
 3944              		.loc 15 27 0
 3945 0018 2168     		ldr	r1, [r4]
 3946              	.LVL228:
 3947              	.LBB1406:
 3948              	.LBB1407:
  27:../../src/periph/f1_gpio.h ****    void clear      (size_t n) { BSRR |= (1 << (n + 16));       }
 3949              		.loc 16 27 0
 3950 001a 6268     		ldr	r2, [r4, #4]
 3951 001c 1C00     		movs	r4, r3
 3952              	.LVL229:
 3953 001e 9440     		lsls	r4, r4, r2
 3954 0020 2200     		movs	r2, r4
 3955              	.LVL230:
 3956 0022 0D69     		ldr	r5, [r1, #16]
 3957 0024 2A43     		orrs	r2, r5
 3958 0026 0A61     		str	r2, [r1, #16]
 3959              	.LVL231:
 3960              	.LBE1407:
 3961              	.LBE1406:
 3962              	.LBE1405:
 3963              	.LBE1404:
 3964              	.LBE1403:
 189:../../src/uart.h ****    TXstream.disable()
 3965              		.loc 5 189 0
 3966 0028 8169     		ldr	r1, [r0, #24]
 3967              	.LVL232:
 3968              	.LBB1408:
 3969              	.LBB1409:
  24:../../src/periph/f0_f1_periph_dma_stream.h ****    bool        is_disable   (){return (not CCR.EN);}
 3970              		.loc 8 24 0
 3971 002a 0A68     		ldr	r2, [r1]
 3972 002c 9A43     		bics	r2, r3
 3973 002e 0A60     		str	r2, [r1]
 3974              	.LVL233:
 3975              	.LBE1409:
 3976              	.LBE1408:
 190:../../src/uart.h ****            .set_qty_transactions(buffer.size())
 3977              		.loc 5 190 0
 3978 0030 4269     		ldr	r2, [r0, #20]
 3979              	.LVL234:
 3980              	.LBB1410:
 3981              	.LBB1411:
  17:../../src/net_buffer.h ****    void set_size (size_t v) { begin_i = 0; end_i = std::min(v,size_); }
 3982              		.loc 7 17 0
 3983 0032 FC30     		adds	r0, r0, #252
 3984              	.LVL235:
 3985              	.LBE1411:
 3986              	.LBE1410:
 3987              	.LBB1413:
 3988              	.LBB1414:
  24:../../src/periph/f0_f1_periph_dma_stream.h ****    bool        is_disable   (){return (not CCR.EN);}
ARM GAS  /tmp/cc2puB6n.s 			page 124


 3989              		.loc 8 24 0
 3990 0034 1168     		ldr	r1, [r2]
 3991 0036 9943     		bics	r1, r3
 3992 0038 1160     		str	r1, [r2]
 3993              	.LVL236:
 3994              	.LBE1414:
 3995              	.LBE1413:
 3996              	.LBB1415:
 3997              	.LBB1412:
  17:../../src/net_buffer.h ****    void set_size (size_t v) { begin_i = 0; end_i = std::min(v,size_); }
 3998              		.loc 7 17 0
 3999 003a 816A     		ldr	r1, [r0, #40]
 4000 003c 406A     		ldr	r0, [r0, #36]
 4001              	.LVL237:
 4002 003e 091A     		subs	r1, r1, r0
 4003 0040 89B2     		uxth	r1, r1
 4004              	.LBE1412:
 4005              	.LBE1415:
 4006              	.LBB1416:
 4007              	.LBB1417:
  32:../../src/periph/f0_f1_periph_dma_stream.h **** 
 4008              		.loc 8 32 0
 4009 0042 5160     		str	r1, [r2, #4]
 4010              	.LVL238:
 4011              	.LBE1417:
 4012              	.LBE1416:
 4013              	.LBB1418:
 4014              	.LBB1419:
  23:../../src/periph/f0_f1_periph_dma_stream.h ****    DMA_stream& disable      (){CCR.EN = false;  return *this;}
 4015              		.loc 8 23 0
 4016 0044 1168     		ldr	r1, [r2]
 4017 0046 0B43     		orrs	r3, r1
 4018 0048 1360     		str	r3, [r2]
 4019              	.L270:
 4020 004a 1368     		ldr	r3, [r2]
 4021 004c DB07     		lsls	r3, r3, #31
 4022 004e FCD5     		bpl	.L270
 4023              	.LBE1419:
 4024              	.LBE1418:
 193:../../src/uart.h **** 
 4025              		.loc 5 193 0
 4026              		@ sp needed
 4027 0050 30BD     		pop	{r4, r5, pc}
 4028              		.cfi_endproc
 4029              	.LFE2893:
 4031              		.section	.text._ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE12answer_errorENS3_10Error_co
 4032              		.align	1
 4033              		.syntax unified
 4034              		.code	16
 4035              		.thumb_func
 4036              		.fpu softvfp
 4038              	_ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE12answer_errorENS3_10Error_codeE:
 4039              	.LFB2814:
  82:../../src/modbus_slave.h ****    } dma_ {*this};
  83:../../src/modbus_slave.h **** 
  84:../../src/modbus_slave.h **** public:
  85:../../src/modbus_slave.h **** 
ARM GAS  /tmp/cc2puB6n.s 			page 125


  86:../../src/modbus_slave.h ****    static constexpr uint16_t InRegQty  = sizeof (InRegs_t) / 2;
  87:../../src/modbus_slave.h ****    static constexpr uint16_t OutRegQty = sizeof(OutRegs_t) / 2;
  88:../../src/modbus_slave.h **** 
  89:../../src/modbus_slave.h ****    union {
  90:../../src/modbus_slave.h ****       InRegs_t inRegs;
  91:../../src/modbus_slave.h ****       uint16_t arInRegs[InRegQty];
  92:../../src/modbus_slave.h ****    };
  93:../../src/modbus_slave.h ****    union {
  94:../../src/modbus_slave.h ****       OutRegs_t outRegs;
  95:../../src/modbus_slave.h ****       uint16_t arOutRegs[OutRegQty];
  96:../../src/modbus_slave.h ****    };
  97:../../src/modbus_slave.h ****    union {
  98:../../src/modbus_slave.h ****       InRegs_t inRegsMin;
  99:../../src/modbus_slave.h ****       uint16_t arInRegsMin[InRegQty];
 100:../../src/modbus_slave.h ****    };
 101:../../src/modbus_slave.h ****    union {
 102:../../src/modbus_slave.h ****       InRegs_t inRegsMax;
 103:../../src/modbus_slave.h ****       uint16_t arInRegsMax[InRegQty];
 104:../../src/modbus_slave.h ****    };
 105:../../src/modbus_slave.h **** 
 106:../../src/modbus_slave.h ****    bool signed_[InRegQty] {};
 107:../../src/modbus_slave.h ****    
 108:../../src/modbus_slave.h ****    Modbus_slave (
 109:../../src/modbus_slave.h ****         uint8_t address
 110:../../src/modbus_slave.h ****       , UART& uart
 111:../../src/modbus_slave.h ****       , Interrupt& interrupt_usart
 112:../../src/modbus_slave.h ****       , Interrupt& interrupt_DMA_channel
 113:../../src/modbus_slave.h ****    ) : uart                  {uart}
 114:../../src/modbus_slave.h ****      , interrupt_usart       {interrupt_usart}
 115:../../src/modbus_slave.h ****      , interrupt_DMA_channel {interrupt_DMA_channel}
 116:../../src/modbus_slave.h ****      , address               {address}
 117:../../src/modbus_slave.h ****      , arInRegs    {}
 118:../../src/modbus_slave.h ****      , outRegs     {}
 119:../../src/modbus_slave.h ****      , arInRegsMin {}
 120:../../src/modbus_slave.h ****      , arInRegsMax {}
 121:../../src/modbus_slave.h ****    {}
 122:../../src/modbus_slave.h **** 
 123:../../src/modbus_slave.h ****    template <Periph usart, class TXpin,  class RXpin, class RTSpin, class LEDpin> 
 124:../../src/modbus_slave.h ****    static auto& make (uint8_t address, UART::Settings set)
 125:../../src/modbus_slave.h ****    {
 126:../../src/modbus_slave.h ****       auto interrupt_usart = usart == Periph::USART1 ? &interrupt_usart1 :
 127:../../src/modbus_slave.h ****                              usart == Periph::USART2 ? &interrupt_usart2 :
 128:../../src/modbus_slave.h ****                              usart == Periph::USART3 ? &interrupt_usart3 :
 129:../../src/modbus_slave.h ****                              nullptr;
 130:../../src/modbus_slave.h ****       auto interrupt_dma   = usart == Periph::USART1 ? &interrupt_DMA_channel4 :
 131:../../src/modbus_slave.h ****                              usart == Periph::USART2 ? &interrupt_DMA_channel7 : 
 132:../../src/modbus_slave.h ****                              usart == Periph::USART3 ? &interrupt_DMA_channel2 :
 133:../../src/modbus_slave.h ****                              nullptr;
 134:../../src/modbus_slave.h **** 
 135:../../src/modbus_slave.h ****       auto& uart_ref = UART::make<usart, TXpin, RXpin, RTSpin, LEDpin>();
 136:../../src/modbus_slave.h **** 
 137:../../src/modbus_slave.h ****       static Modbus_slave<InRegs_t, OutRegs_t> modbus {
 138:../../src/modbus_slave.h ****            address
 139:../../src/modbus_slave.h ****          , uart_ref
 140:../../src/modbus_slave.h ****          , *interrupt_usart
 141:../../src/modbus_slave.h ****          , *interrupt_dma
 142:../../src/modbus_slave.h ****       };
ARM GAS  /tmp/cc2puB6n.s 			page 126


 143:../../src/modbus_slave.h **** 
 144:../../src/modbus_slave.h ****       modbus.uart.init(set);
 145:../../src/modbus_slave.h ****       return modbus;
 146:../../src/modbus_slave.h ****    }
 147:../../src/modbus_slave.h **** 
 148:../../src/modbus_slave.h **** 
 149:../../src/modbus_slave.h ****    template <class function> void operator() (function reaction);
 150:../../src/modbus_slave.h **** 
 151:../../src/modbus_slave.h **** 
 152:../../src/modbus_slave.h **** };
 153:../../src/modbus_slave.h **** 
 154:../../src/modbus_slave.h **** 
 155:../../src/modbus_slave.h **** 
 156:../../src/modbus_slave.h **** 
 157:../../src/modbus_slave.h **** 
 158:../../src/modbus_slave.h **** 
 159:../../src/modbus_slave.h **** 
 160:../../src/modbus_slave.h **** 
 161:../../src/modbus_slave.h **** 
 162:../../src/modbus_slave.h **** 
 163:../../src/modbus_slave.h **** 
 164:../../src/modbus_slave.h **** 
 165:../../src/modbus_slave.h **** 
 166:../../src/modbus_slave.h **** 
 167:../../src/modbus_slave.h **** 
 168:../../src/modbus_slave.h **** 
 169:../../src/modbus_slave.h **** 
 170:../../src/modbus_slave.h **** 
 171:../../src/modbus_slave.h **** 
 172:../../src/modbus_slave.h **** 
 173:../../src/modbus_slave.h **** 
 174:../../src/modbus_slave.h **** 
 175:../../src/modbus_slave.h **** 
 176:../../src/modbus_slave.h **** 
 177:../../src/modbus_slave.h **** 
 178:../../src/modbus_slave.h **** 
 179:../../src/modbus_slave.h **** 
 180:../../src/modbus_slave.h **** 
 181:../../src/modbus_slave.h **** 
 182:../../src/modbus_slave.h **** 
 183:../../src/modbus_slave.h **** 
 184:../../src/modbus_slave.h **** 
 185:../../src/modbus_slave.h **** 
 186:../../src/modbus_slave.h **** 
 187:../../src/modbus_slave.h **** 
 188:../../src/modbus_slave.h **** 
 189:../../src/modbus_slave.h **** 
 190:../../src/modbus_slave.h **** 
 191:../../src/modbus_slave.h **** 
 192:../../src/modbus_slave.h **** template <class InRegs_t, class OutRegs_t>
 193:../../src/modbus_slave.h **** template <class function>
 194:../../src/modbus_slave.h **** inline void Modbus_slave<InRegs_t, OutRegs_t>::operator() (function reaction)
 195:../../src/modbus_slave.h **** {
 196:../../src/modbus_slave.h ****    if (uart.is_receiving()) {
 197:../../src/modbus_slave.h ****       time = 0;
 198:../../src/modbus_slave.h ****       unsubscribe();
 199:../../src/modbus_slave.h ****       return;
ARM GAS  /tmp/cc2puB6n.s 			page 127


 200:../../src/modbus_slave.h ****    }
 201:../../src/modbus_slave.h ****    
 202:../../src/modbus_slave.h ****    if (time < modbus_time) 
 203:../../src/modbus_slave.h ****       return;
 204:../../src/modbus_slave.h **** 
 205:../../src/modbus_slave.h ****    time = 0;
 206:../../src/modbus_slave.h ****    unsubscribe();
 207:../../src/modbus_slave.h ****    
 208:../../src/modbus_slave.h ****    if (uart.buffer.size() < 8) {
 209:../../src/modbus_slave.h ****       uart.receive();
 210:../../src/modbus_slave.h ****       return;
 211:../../src/modbus_slave.h ****    }
 212:../../src/modbus_slave.h **** 
 213:../../src/modbus_slave.h ****    if (uart.buffer.front() != address) {
 214:../../src/modbus_slave.h ****       uart.receive();
 215:../../src/modbus_slave.h ****       return;
 216:../../src/modbus_slave.h ****    }
 217:../../src/modbus_slave.h ****    if (not check_CRC()) {
 218:../../src/modbus_slave.h ****       uart.receive();
 219:../../src/modbus_slave.h ****       return;
 220:../../src/modbus_slave.h ****    }
 221:../../src/modbus_slave.h ****    uart.buffer.pop_front(); // adr
 222:../../src/modbus_slave.h ****    if (uart.buffer.pop_front() == static_cast<uint8_t>(Function::read_03)) // operator ==
 223:../../src/modbus_slave.h ****       answer_03();
 224:../../src/modbus_slave.h ****    else if (func == static_cast<uint8_t>(Function::write_16))
 225:../../src/modbus_slave.h ****       answer_16(reaction);
 226:../../src/modbus_slave.h ****    else 
 227:../../src/modbus_slave.h ****       answer_error (Error_code::wrong_func);
 228:../../src/modbus_slave.h **** }
 229:../../src/modbus_slave.h **** 
 230:../../src/modbus_slave.h **** 
 231:../../src/modbus_slave.h **** 
 232:../../src/modbus_slave.h **** 
 233:../../src/modbus_slave.h **** template <class InReg, class OutRegs_t>
 234:../../src/modbus_slave.h **** uint8_t Modbus_slave<InReg, OutRegs_t>::set_high_bit(uint8_t func)
 235:../../src/modbus_slave.h **** {
 236:../../src/modbus_slave.h ****    return (func | 0b10000000);
 237:../../src/modbus_slave.h **** }
 238:../../src/modbus_slave.h **** 
 239:../../src/modbus_slave.h **** template <class InReg, class OutRegs_t>
 240:../../src/modbus_slave.h **** bool Modbus_slave<InReg, OutRegs_t>::check_CRC()
 241:../../src/modbus_slave.h **** {
 242:../../src/modbus_slave.h ****    auto high = uart.buffer.pop_back();
 243:../../src/modbus_slave.h **** 	auto low  = uart.buffer.pop_back();
 244:../../src/modbus_slave.h ****    auto [low_, high_] = CRC16(uart.buffer.begin(), uart.buffer.end());
 245:../../src/modbus_slave.h ****    return (high == high_) and (low == low_);
 246:../../src/modbus_slave.h **** }
 247:../../src/modbus_slave.h **** 
 248:../../src/modbus_slave.h **** template <class InReg, class OutRegs_t>
 249:../../src/modbus_slave.h **** bool Modbus_slave<InReg, OutRegs_t>::check_reg(uint16_t qty_reg_device)
 250:../../src/modbus_slave.h **** {
 251:../../src/modbus_slave.h ****    uart.buffer >> first_reg;
 252:../../src/modbus_slave.h ****    uart.buffer >> qty_reg; 
 253:../../src/modbus_slave.h ****    last_reg = first_reg + qty_reg - 1;
 254:../../src/modbus_slave.h ****    qty_byte = qty_reg * 2;
 255:../../src/modbus_slave.h ****    return (last_reg <= (qty_reg_device - 1));
 256:../../src/modbus_slave.h **** }
ARM GAS  /tmp/cc2puB6n.s 			page 128


 257:../../src/modbus_slave.h **** 
 258:../../src/modbus_slave.h **** template <class InReg, class OutRegs_t>
 259:../../src/modbus_slave.h **** void Modbus_slave<InReg, OutRegs_t>::answer_error(Error_code code)
 4040              		.loc 2 259 0
 4041              		.cfi_startproc
 4042              		@ args = 0, pretend = 0, frame = 8
 4043              		@ frame_needed = 0, uses_anonymous_args = 0
 4044              	.LVL239:
 4045 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 4046              	.LCFI25:
 4047              		.cfi_def_cfa_offset 32
 4048              		.cfi_offset 0, -32
 4049              		.cfi_offset 1, -28
 4050              		.cfi_offset 2, -24
 4051              		.cfi_offset 4, -20
 4052              		.cfi_offset 5, -16
 4053              		.cfi_offset 6, -12
 4054              		.cfi_offset 7, -8
 4055              		.cfi_offset 14, -4
 4056              	.LBB1420:
 4057              	.LBB1421:
  14:../../src/net_buffer.h ****    auto begin() { return base().begin() + begin_i; }
 4058              		.loc 7 14 0
 4059 0002 0022     		movs	r2, #0
 4060              	.LBE1421:
 4061              	.LBE1420:
 4062              		.loc 2 259 0
 4063 0004 0E00     		movs	r6, r1
 4064 0006 0100     		movs	r1, r0
 4065              	.LVL240:
 4066              	.LBB1424:
 4067              	.LBB1422:
  14:../../src/net_buffer.h ****    auto begin() { return base().begin() + begin_i; }
 4068              		.loc 7 14 0
 4069 0008 0369     		ldr	r3, [r0, #16]
 4070              	.LBE1422:
 4071              	.LBE1424:
 4072              		.loc 2 259 0
 4073 000a 0400     		movs	r4, r0
 4074              	.LBB1425:
 4075              	.LBB1423:
  14:../../src/net_buffer.h ****    auto begin() { return base().begin() + begin_i; }
 4076              		.loc 7 14 0
 4077 000c FC33     		adds	r3, r3, #252
 4078 000e 5A62     		str	r2, [r3, #36]
 4079              	.LVL241:
 4080 0010 9A62     		str	r2, [r3, #40]
 4081 0012 0069     		ldr	r0, [r0, #16]
 4082              	.LVL242:
 4083 0014 2431     		adds	r1, r1, #36
 4084              	.LVL243:
 4085 0016 01AD     		add	r5, sp, #4
 4086              	.LBE1423:
 4087              	.LBE1425:
 260:../../src/modbus_slave.h **** {
 261:../../src/modbus_slave.h ****    uart.buffer.clear();
 262:../../src/modbus_slave.h ****    
ARM GAS  /tmp/cc2puB6n.s 			page 129


 263:../../src/modbus_slave.h ****    if (code == Error_code::wrong_func)
 264:../../src/modbus_slave.h ****       uart.buffer << address << set_high_bit(func) << static_cast<uint8_t>(code);
 4088              		.loc 2 264 0
 4089 0018 2030     		adds	r0, r0, #32
 263:../../src/modbus_slave.h ****       uart.buffer << address << set_high_bit(func) << static_cast<uint8_t>(code);
 4090              		.loc 2 263 0
 4091 001a 012E     		cmp	r6, #1
 4092 001c 27D1     		bne	.L274
 4093              		.loc 2 264 0
 4094 001e FFF7FEFF 		bl	_ZN10Net_bufferILj255EElsERKh
 4095              	.LVL244:
 4096 0022 6B46     		mov	r3, sp
 4097 0024 D91C     		adds	r1, r3, #3
 4098 0026 A31D     		adds	r3, r4, #6
 4099              	.LBB1426:
 4100              	.LBB1427:
 236:../../src/modbus_slave.h **** }
 4101              		.loc 2 236 0
 4102 0028 DA7F     		ldrb	r2, [r3, #31]
 4103 002a 8023     		movs	r3, #128
 4104 002c 5B42     		rsbs	r3, r3, #0
 4105 002e 1343     		orrs	r3, r2
 4106              	.LBE1427:
 4107              	.LBE1426:
 4108              		.loc 2 264 0
 4109 0030 0B70     		strb	r3, [r1]
 4110              	.LVL245:
 4111              	.L278:
 265:../../src/modbus_slave.h ****    else if (code == Error_code::wrong_reg)
 266:../../src/modbus_slave.h ****       uart.buffer << address << func << static_cast<uint8_t>(code);
 4112              		.loc 2 266 0
 4113 0032 FFF7FEFF 		bl	_ZN10Net_bufferILj255EElsERKh
 4114              	.LVL246:
 4115 0036 2E70     		strb	r6, [r5]
 4116              	.L277:
 267:../../src/modbus_slave.h ****    else if (code == Error_code::wrong_value)
 268:../../src/modbus_slave.h ****       uart.buffer << address << func << static_cast<uint8_t>(code);
 4117              		.loc 2 268 0
 4118 0038 2900     		movs	r1, r5
 4119 003a FFF7FEFF 		bl	_ZN10Net_bufferILj255EElsERKh
 4120              	.LVL247:
 269:../../src/modbus_slave.h ****       
 270:../../src/modbus_slave.h ****    auto [low_, high_] = CRC16(uart.buffer.begin(), uart.buffer.end());
 4121              		.loc 2 270 0
 4122 003e 2369     		ldr	r3, [r4, #16]
 4123              	.LVL248:
 4124 0040 2800     		movs	r0, r5
 4125              	.LBB1428:
 4126              	.LBB1429:
 4127              	.LBB1430:
 4128              	.LBB1431:
 4129              	.LBB1432:
 4130              		.file 20 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
   1:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // <array> -*- C++ -*-
   2:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
   3:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // Copyright (C) 2007-2017 Free Software Foundation, Inc.
   4:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** //
ARM GAS  /tmp/cc2puB6n.s 			page 130


   5:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // software; you can redistribute it and/or modify it under the
   7:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // terms of the GNU General Public License as published by the
   8:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // Free Software Foundation; either version 3, or (at your option)
   9:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // any later version.
  10:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  11:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // This library is distributed in the hope that it will be useful,
  12:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // GNU General Public License for more details.
  15:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  16:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // Under Section 7 of GPL version 3, you are granted additional
  17:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // permissions described in the GCC Runtime Library Exception, version
  18:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // 3.1, as published by the Free Software Foundation.
  19:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  20:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // You should have received a copy of the GNU General Public License and
  21:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** // <http://www.gnu.org/licenses/>.
  24:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  25:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** /** @file include/array
  26:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****  *  This is a Standard C++ Library header.
  27:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****  */
  28:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  29:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #ifndef _GLIBCXX_ARRAY
  30:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #define _GLIBCXX_ARRAY 1
  31:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  32:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #pragma GCC system_header
  33:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  34:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #if __cplusplus < 201103L
  35:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** # include <bits/c++0x_warning.h>
  36:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #else
  37:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  38:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #include <utility>
  39:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #include <stdexcept>
  40:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #include <bits/stl_algobase.h>
  41:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** #include <bits/range_access.h>
  42:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  43:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** {
  45:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  46:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  47:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****   template<typename _Tp, std::size_t _Nm>
  48:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****     struct __array_traits
  49:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****     {
  50:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef _Tp _Type[_Nm];
  51:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef __is_swappable<_Tp> _Is_swappable;
  52:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef __is_nothrow_swappable<_Tp> _Is_nothrow_swappable;
  53:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  54:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       static constexpr _Tp&
  55:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _S_ref(const _Type& __t, std::size_t __n) noexcept
  56:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_cast<_Tp&>(__t[__n]); }
  57:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  58:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       static constexpr _Tp*
  59:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _S_ptr(const _Type& __t) noexcept
  60:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_cast<_Tp*>(__t); }
  61:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****     };
ARM GAS  /tmp/cc2puB6n.s 			page 131


  62:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  63:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****  template<typename _Tp>
  64:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    struct __array_traits<_Tp, 0>
  65:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    {
  66:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      struct _Type { };
  67:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      typedef true_type _Is_swappable;
  68:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      typedef true_type _Is_nothrow_swappable;
  69:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  70:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      static constexpr _Tp&
  71:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      _S_ref(const _Type&, std::size_t) noexcept
  72:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      { return *static_cast<_Tp*>(nullptr); }
  73:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  74:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      static constexpr _Tp*
  75:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      _S_ptr(const _Type&) noexcept
  76:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****      { return nullptr; }
  77:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    };
  78:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
  79:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****   /**
  80:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  @brief A standard container for storing a fixed size sequence of elements.
  81:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *
  82:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  @ingroup sequences
  83:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *
  84:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  85:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  <a href="tables.html#66">reversible container</a>, and a
  86:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  <a href="tables.html#67">sequence</a>.
  87:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *
  88:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  Sets support random access iterators.
  89:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *
  90:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  @tparam  Tp  Type of element. Required to be a complete type.
  91:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****    *  @tparam  N  Number of elements.
  92:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****   */
  93:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****   template<typename _Tp, std::size_t _Nm>
  94:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****     struct array
  95:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****     {
  96:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef _Tp 	    			      value_type;
  97:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef value_type*			      pointer;
  98:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef const value_type*                       const_pointer;
  99:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef value_type&                   	      reference;
 100:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef const value_type&             	      const_reference;
 101:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef value_type*          		      iterator;
 102:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef const value_type*			      const_iterator;
 103:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef std::size_t                    	      size_type;
 104:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef std::ptrdiff_t                   	      difference_type;
 105:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef std::reverse_iterator<iterator>	      reverse_iterator;
 106:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;
 107:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 108:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       // Support for zero-sized arrays mandatory.
 109:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typedef _GLIBCXX_STD_C::__array_traits<_Tp, _Nm> _AT_Type;
 110:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       typename _AT_Type::_Type                         _M_elems;
 111:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 112:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       // No explicit construct/copy/destroy for aggregate type.
 113:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 114:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       // DR 776.
 115:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       void
 116:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       fill(const value_type& __u)
 117:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { std::fill_n(begin(), size(), __u); }
 118:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
ARM GAS  /tmp/cc2puB6n.s 			page 132


 119:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       void
 120:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       swap(array& __other)
 121:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       noexcept(_AT_Type::_Is_nothrow_swappable::value)
 122:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { std::swap_ranges(begin(), end(), __other.begin()); }
 123:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 124:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       // Iterators.
 125:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR iterator
 126:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       begin() noexcept
 127:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return iterator(data()); }
 128:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 129:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 130:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       begin() const noexcept
 131:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_iterator(data()); }
 132:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 133:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR iterator
 134:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       end() noexcept
 135:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return iterator(data() + _Nm); }
 136:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 137:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 138:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       end() const noexcept
 139:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_iterator(data() + _Nm); }
 140:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 141:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 142:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       rbegin() noexcept
 143:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return reverse_iterator(end()); }
 144:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 145:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 146:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       rbegin() const noexcept
 147:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_reverse_iterator(end()); }
 148:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 149:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 150:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       rend() noexcept
 151:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return reverse_iterator(begin()); }
 152:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 153:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 154:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       rend() const noexcept
 155:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_reverse_iterator(begin()); }
 156:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 157:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 158:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       cbegin() const noexcept
 159:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_iterator(data()); }
 160:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 161:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 162:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       cend() const noexcept
 163:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_iterator(data() + _Nm); }
 164:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 165:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 166:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       crbegin() const noexcept
 167:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_reverse_iterator(end()); }
 168:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 169:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 170:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       crend() const noexcept
 171:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return const_reverse_iterator(begin()); }
 172:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 173:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       // Capacity.
 174:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       constexpr size_type
 175:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       size() const noexcept { return _Nm; }
ARM GAS  /tmp/cc2puB6n.s 			page 133


 176:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 177:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       constexpr size_type
 178:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       max_size() const noexcept { return _Nm; }
 179:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 180:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       constexpr bool
 181:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       empty() const noexcept { return size() == 0; }
 182:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 183:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       // Element access.
 184:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR reference
 185:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       operator[](size_type __n) noexcept
 186:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return _AT_Type::_S_ref(_M_elems, __n); }
 187:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 188:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       constexpr const_reference
 189:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       operator[](size_type __n) const noexcept
 190:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return _AT_Type::_S_ref(_M_elems, __n); }
 191:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 192:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR reference
 193:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       at(size_type __n)
 194:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       {
 195:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	if (__n >= _Nm)
 196:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	  std::__throw_out_of_range_fmt(__N("array::at: __n (which is %zu) "
 197:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 					    ">= _Nm (which is %zu)"),
 198:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 					__n, _Nm);
 199:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	return _AT_Type::_S_ref(_M_elems, __n);
 200:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       }
 201:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 202:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       constexpr const_reference
 203:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       at(size_type __n) const
 204:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       {
 205:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	// Result of conditional expression must be an lvalue so use
 206:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	// boolean ? lvalue : (throw-expr, lvalue)
 207:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	return __n < _Nm ? _AT_Type::_S_ref(_M_elems, __n)
 208:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	  : (std::__throw_out_of_range_fmt(__N("array::at: __n (which is %zu) "
 209:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 					       ">= _Nm (which is %zu)"),
 210:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 					   __n, _Nm),
 211:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	     _AT_Type::_S_ref(_M_elems, 0));
 212:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       }
 213:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 214:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR reference
 215:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       front() noexcept
 216:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return *begin(); }
 217:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 218:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       constexpr const_reference
 219:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       front() const noexcept
 220:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return _AT_Type::_S_ref(_M_elems, 0); }
 221:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 222:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR reference
 223:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       back() noexcept
 224:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return _Nm ? *(end() - 1) : *end(); }
 225:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
 226:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       constexpr const_reference
 227:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       back() const noexcept
 228:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       {
 229:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 	return _Nm ? _AT_Type::_S_ref(_M_elems, _Nm - 1)
 230:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****  	           : _AT_Type::_S_ref(_M_elems, 0);
 231:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       }
 232:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array **** 
ARM GAS  /tmp/cc2puB6n.s 			page 134


 233:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       _GLIBCXX17_CONSTEXPR pointer
 234:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       data() noexcept
 235:/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/array ****       { return _AT_Type::_S_ptr(_M_elems); }
 4131              		.loc 20 235 0
 4132 0042 1900     		movs	r1, r3
 4133              	.LBE1432:
 4134              	.LBE1431:
 4135              	.LBE1430:
 4136              	.LBE1429:
 4137              	.LBE1428:
 4138              	.LBB1438:
 4139              	.LBB1439:
  16:../../src/net_buffer.h ****    auto size()  { return end_i - begin_i; }
 4140              		.loc 7 16 0
 4141 0044 FC33     		adds	r3, r3, #252
 4142              	.LVL249:
 4143 0046 9A6A     		ldr	r2, [r3, #40]
 4144              	.LBE1439:
 4145              	.LBE1438:
 4146              	.LBB1441:
 4147              	.LBB1436:
  15:../../src/net_buffer.h ****    auto end()   { return base().begin() + end_i; }
 4148              		.loc 7 15 0
 4149 0048 5B6A     		ldr	r3, [r3, #36]
 4150              	.LBB1435:
 4151              	.LBB1434:
 4152              	.LBB1433:
 4153              		.loc 20 235 0
 4154 004a 2031     		adds	r1, r1, #32
 4155              	.LVL250:
 4156              	.LBE1433:
 4157              	.LBE1434:
 4158              	.LBE1435:
 4159              	.LBE1436:
 4160              	.LBE1441:
 4161              	.LBB1442:
 4162              	.LBB1440:
  16:../../src/net_buffer.h ****    auto size()  { return end_i - begin_i; }
 4163              		.loc 7 16 0
 4164 004c 8A18     		adds	r2, r1, r2
 4165              	.LBE1440:
 4166              	.LBE1442:
 4167              	.LBB1443:
 4168              	.LBB1437:
  15:../../src/net_buffer.h ****    auto end()   { return base().begin() + end_i; }
 4169              		.loc 7 15 0
 4170 004e C918     		adds	r1, r1, r3
 4171              	.LBE1437:
 4172              	.LBE1443:
 4173              		.loc 2 270 0
 4174 0050 FFF7FEFF 		bl	_Z5CRC16IPhEDaT_S1_
 4175              	.LVL251:
 271:../../src/modbus_slave.h ****    uart.buffer << low_ << high_;
 4176              		.loc 2 271 0
 4177 0054 6B46     		mov	r3, sp
 4178 0056 2069     		ldr	r0, [r4, #16]
 4179 0058 591D     		adds	r1, r3, #5
ARM GAS  /tmp/cc2puB6n.s 			page 135


 4180 005a 2030     		adds	r0, r0, #32
 4181 005c FFF7FEFF 		bl	_ZN10Net_bufferILj255EElsERKh
 4182              	.LVL252:
 4183 0060 2900     		movs	r1, r5
 4184 0062 FFF7FEFF 		bl	_ZN10Net_bufferILj255EElsERKh
 4185              	.LVL253:
 272:../../src/modbus_slave.h ****    uart.transmit();
 4186              		.loc 2 272 0
 4187 0066 2069     		ldr	r0, [r4, #16]
 4188 0068 FFF7FEFF 		bl	_ZN10UART_sizedILj255EE8transmitEv
 4189              	.LVL254:
 273:../../src/modbus_slave.h **** }
 4190              		.loc 2 273 0
 4191              		@ sp needed
 4192              	.LVL255:
 4193 006c F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 4194              	.LVL256:
 4195              	.L274:
 4196 006e 2700     		movs	r7, r4
 4197 0070 2537     		adds	r7, r7, #37
 265:../../src/modbus_slave.h ****       uart.buffer << address << func << static_cast<uint8_t>(code);
 4198              		.loc 2 265 0
 4199 0072 022E     		cmp	r6, #2
 4200 0074 03D1     		bne	.L276
 266:../../src/modbus_slave.h ****    else if (code == Error_code::wrong_value)
 4201              		.loc 2 266 0
 4202 0076 FFF7FEFF 		bl	_ZN10Net_bufferILj255EElsERKh
 4203              	.LVL257:
 4204 007a 3900     		movs	r1, r7
 4205 007c D9E7     		b	.L278
 4206              	.L276:
 268:../../src/modbus_slave.h ****       
 4207              		.loc 2 268 0
 4208 007e FFF7FEFF 		bl	_ZN10Net_bufferILj255EElsERKh
 4209              	.LVL258:
 4210 0082 3900     		movs	r1, r7
 4211 0084 FFF7FEFF 		bl	_ZN10Net_bufferILj255EElsERKh
 4212              	.LVL259:
 4213 0088 0323     		movs	r3, #3
 4214 008a 2B70     		strb	r3, [r5]
 4215 008c D4E7     		b	.L277
 4216              		.cfi_endproc
 4217              	.LFE2814:
 4219              		.section	.text._ZN10Net_bufferILj255EErsERt,"axG",%progbits,_ZN10Net_bufferILj255EErsERt,comdat
 4220              		.align	1
 4221              		.weak	_ZN10Net_bufferILj255EErsERt
 4222              		.syntax unified
 4223              		.code	16
 4224              		.thumb_func
 4225              		.fpu softvfp
 4227              	_ZN10Net_bufferILj255EErsERt:
 4228              	.LFB2945:
  75:../../src/net_buffer.h ****    {
 4229              		.loc 7 75 0
 4230              		.cfi_startproc
 4231              		@ args = 0, pretend = 0, frame = 0
 4232              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc2puB6n.s 			page 136


 4233              	.LVL260:
  77:../../src/net_buffer.h ****          v = from_bytes (pop_front(), pop_front());
 4234              		.loc 7 77 0
 4235 0000 0200     		movs	r2, r0
  75:../../src/net_buffer.h ****    {
 4236              		.loc 7 75 0
 4237 0002 70B5     		push	{r4, r5, r6, lr}
 4238              	.LCFI26:
 4239              		.cfi_def_cfa_offset 16
 4240              		.cfi_offset 4, -16
 4241              		.cfi_offset 5, -12
 4242              		.cfi_offset 6, -8
 4243              		.cfi_offset 14, -4
  77:../../src/net_buffer.h ****          v = from_bytes (pop_front(), pop_front());
 4244              		.loc 7 77 0
 4245 0004 FC32     		adds	r2, r2, #252
 4246 0006 5368     		ldr	r3, [r2, #4]
 4247 0008 9268     		ldr	r2, [r2, #8]
 4248 000a 0133     		adds	r3, r3, #1
  75:../../src/net_buffer.h ****    {
 4249              		.loc 7 75 0
 4250 000c 0400     		movs	r4, r0
 4251 000e 0D00     		movs	r5, r1
  77:../../src/net_buffer.h ****          v = from_bytes (pop_front(), pop_front());
 4252              		.loc 7 77 0
 4253 0010 9A42     		cmp	r2, r3
 4254 0012 09D9     		bls	.L280
 4255              	.LVL261:
 4256              	.LBB1450:
 4257              	.LBB1451:
  78:../../src/net_buffer.h ****       return *this;
 4258              		.loc 7 78 0
 4259 0014 FFF7FEFF 		bl	_ZN10Net_bufferILj255EE9pop_frontEv
 4260              	.LVL262:
 4261 0018 0600     		movs	r6, r0
 4262 001a 2000     		movs	r0, r4
 4263 001c FFF7FEFF 		bl	_ZN10Net_bufferILj255EE9pop_frontEv
 4264              	.LVL263:
 4265              	.LBB1452:
 4266              	.LBB1453:
  45:../../src/net_buffer.h ****       return u.d16;
 4267              		.loc 7 45 0
 4268 0020 3602     		lsls	r6, r6, #8
 4269 0022 C0B2     		uxtb	r0, r0
 4270 0024 3043     		orrs	r0, r6
 4271              	.LBE1453:
 4272              	.LBE1452:
  78:../../src/net_buffer.h ****       return *this;
 4273              		.loc 7 78 0
 4274 0026 2880     		strh	r0, [r5]
 4275              	.LVL264:
 4276              	.L280:
 4277              	.LBE1451:
 4278              	.LBE1450:
  80:../../src/net_buffer.h **** 
 4279              		.loc 7 80 0
 4280 0028 2000     		movs	r0, r4
ARM GAS  /tmp/cc2puB6n.s 			page 137


 4281              		@ sp needed
 4282              	.LVL265:
 4283              	.LVL266:
 4284 002a 70BD     		pop	{r4, r5, r6, pc}
 4285              		.cfi_endproc
 4286              	.LFE2945:
 4288              		.section	.text.startup.main,"ax",%progbits
 4289              		.align	1
 4290              		.global	main
 4291              		.syntax unified
 4292              		.code	16
 4293              		.thumb_func
 4294              		.fpu softvfp
 4296              	main:
 4297              	.LFB2403:
  38:main.cpp      **** 
  39:main.cpp      ****   
  40:main.cpp      **** 
  41:main.cpp      **** int main()
  42:main.cpp      **** {
 4298              		.loc 13 42 0
 4299              		.cfi_startproc
 4300              		@ args = 0, pretend = 0, frame = 16
 4301              		@ frame_needed = 0, uses_anonymous_args = 0
 4302              	.LVL267:
 4303 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4304              	.LCFI27:
 4305              		.cfi_def_cfa_offset 20
 4306              		.cfi_offset 4, -20
 4307              		.cfi_offset 5, -16
 4308              		.cfi_offset 6, -12
 4309              		.cfi_offset 7, -8
 4310              		.cfi_offset 14, -4
 4311 0002 85B0     		sub	sp, sp, #20
 4312              	.LCFI28:
 4313              		.cfi_def_cfa_offset 40
 4314              	.LBB1570:
 4315              	.LBB1571:
 135:../../src/modbus_slave.h **** 
 4316              		.loc 2 135 0
 4317 0004 FFF7FEFF 		bl	_ZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10EEENS4_ILS3_1
 4318              	.LVL268:
 137:../../src/modbus_slave.h ****            address
 4319              		.loc 2 137 0
 4320 0008 0127     		movs	r7, #1
 4321 000a C84E     		ldr	r6, .L332
 135:../../src/modbus_slave.h **** 
 4322              		.loc 2 135 0
 4323 000c 0190     		str	r0, [sp, #4]
 4324              	.LVL269:
 137:../../src/modbus_slave.h ****            address
 4325              		.loc 2 137 0
 4326 000e 3578     		ldrb	r5, [r6]
 4327 0010 BFF35B8F 		dmb	ish
 4328 0014 3D40     		ands	r5, r7
 4329 0016 C64C     		ldr	r4, .L332+4
 4330 0018 4DD1     		bne	.L283
ARM GAS  /tmp/cc2puB6n.s 			page 138


 4331 001a 3000     		movs	r0, r6
 4332              	.LVL270:
 4333 001c FFF7FEFF 		bl	__cxa_guard_acquire
 4334              	.LVL271:
 4335 0020 0028     		cmp	r0, #0
 4336 0022 48D0     		beq	.L283
 4337              	.LVL272:
 4338              	.LBB1572:
 4339              	.LBB1573:
 4340              	.LBB1574:
 120:../../src/modbus_slave.h ****    {}
 4341              		.loc 2 120 0
 4342 0024 C34B     		ldr	r3, .L332+8
 4343 0026 C449     		ldr	r1, .L332+12
 4344 0028 0833     		adds	r3, r3, #8
 4345 002a 2360     		str	r3, [r4]
 4346 002c 019B     		ldr	r3, [sp, #4]
 4347 002e C34A     		ldr	r2, .L332+16
 4348 0030 2361     		str	r3, [r4, #16]
 4349 0032 631D     		adds	r3, r4, #5
 4350 0034 DF77     		strb	r7, [r3, #31]
 4351 0036 2300     		movs	r3, r4
 4352 0038 2C33     		adds	r3, r3, #44
 4353 003a 1D70     		strb	r5, [r3]
 4354              	.LBB1575:
 4355              	.LBB1576:
 4356              	.LBB1577:
  69:../../src/modbus_slave.h ****          parent.interrupt_usart.subscribe (this);
 4357              		.loc 2 69 0
 4358 003c C04B     		ldr	r3, .L332+20
 4359              	.LBE1577:
 4360              	.LBE1576:
 4361              	.LBE1575:
 4362              	.LBB1588:
 4363              	.LBB1589:
 4364              	.LBB1590:
 4365              	.LBB1591:
 4366              	.LBB1592:
   4:../../src/list.h **** {
 4367              		.loc 4 4 0
 4368 003e 6560     		str	r5, [r4, #4]
 4369              	.LBE1592:
 4370              	.LBE1591:
 4371              	.LBE1590:
 4372              	.LBE1589:
 4373              	.LBE1588:
 4374              	.LBB1597:
 4375              	.LBB1586:
 4376              	.LBB1584:
  69:../../src/modbus_slave.h ****          parent.interrupt_usart.subscribe (this);
 4377              		.loc 2 69 0
 4378 0040 0833     		adds	r3, r3, #8
 4379 0042 A363     		str	r3, [r4, #56]
 4380              	.LBB1578:
 4381              	.LBB1579:
  20:../../src/interrupt.h ****       if (p) {
 4382              		.loc 11 20 0
ARM GAS  /tmp/cc2puB6n.s 			page 139


 4383 0044 0B68     		ldr	r3, [r1]
 4384              	.LBE1579:
 4385              	.LBE1578:
 4386              	.LBE1584:
 4387              	.LBE1586:
 4388              	.LBE1597:
 4389              	.LBB1598:
 4390              	.LBB1596:
 4391              	.LBB1595:
 4392              	.LBB1594:
 4393              	.LBB1593:
   4:../../src/list.h **** {
 4394              		.loc 4 4 0
 4395 0046 A560     		str	r5, [r4, #8]
 4396              	.LVL273:
 4397              	.LBE1593:
 4398              	.LBE1594:
 4399              	.LBE1595:
  24:../../src/timers.h **** class TickSubscriber : Subscriber
 4400              		.loc 1 24 0
 4401 0048 2573     		strb	r5, [r4, #12]
 4402              	.LVL274:
 4403              	.LBE1596:
 4404              	.LBE1598:
 120:../../src/modbus_slave.h ****    {}
 4405              		.loc 2 120 0
 4406 004a 6161     		str	r1, [r4, #20]
 4407 004c A261     		str	r2, [r4, #24]
 4408 004e E561     		str	r5, [r4, #28]
 4409 0050 2562     		str	r5, [r4, #32]
 4410 0052 E584     		strh	r5, [r4, #38]
 4411 0054 2585     		strh	r5, [r4, #40]
 4412 0056 6585     		strh	r5, [r4, #42]
 4413 0058 2586     		strh	r5, [r4, #48]
 4414              	.LVL275:
 4415              	.LBB1599:
 4416              	.LBB1587:
 4417              	.LBB1585:
 4418              	.LBB1581:
 4419              	.LBB1582:
   6:../../src/interrupt.h **** {
 4420              		.loc 11 6 0
 4421 005a E563     		str	r5, [r4, #60]
 4422              	.LVL276:
 4423              	.LBE1582:
 4424              	.LBE1581:
  69:../../src/modbus_slave.h ****          parent.interrupt_usart.subscribe (this);
 4425              		.loc 2 69 0
 4426 005c 2464     		str	r4, [r4, #64]
 4427              	.LVL277:
 4428              	.LBB1583:
 4429              	.LBB1580:
  21:../../src/interrupt.h ****          while (p->next)
 4430              		.loc 11 21 0
 4431 005e 002B     		cmp	r3, #0
 4432 0060 04D1     		bne	.L286
  26:../../src/interrupt.h ****       } 
ARM GAS  /tmp/cc2puB6n.s 			page 140


 4433              		.loc 11 26 0
 4434 0062 2300     		movs	r3, r4
 4435              	.LVL278:
 4436 0064 3833     		adds	r3, r3, #56
 4437 0066 0B60     		str	r3, [r1]
 4438              	.LVL279:
 4439 0068 06E0     		b	.L287
 4440              	.LVL280:
 4441              	.L316:
  22:../../src/interrupt.h ****             p = p->next;
 4442              		.loc 11 22 0
 4443 006a 0B00     		movs	r3, r1
 4444              	.LVL281:
 4445              	.L286:
 4446 006c 5968     		ldr	r1, [r3, #4]
 4447 006e 0029     		cmp	r1, #0
 4448 0070 FBD1     		bne	.L316
  24:../../src/interrupt.h ****       } else {  
 4449              		.loc 11 24 0
 4450 0072 2100     		movs	r1, r4
 4451 0074 3831     		adds	r1, r1, #56
 4452 0076 5960     		str	r1, [r3, #4]
 4453              	.LVL282:
 4454              	.L287:
 4455              	.LBE1580:
 4456              	.LBE1583:
 4457              	.LBE1585:
 4458              	.LBE1587:
 4459              	.LBE1599:
 4460              	.LBB1600:
 4461              	.LBB1601:
 4462              	.LBB1602:
 4463              	.LBB1603:
 4464              	.LBB1604:
   6:../../src/interrupt.h **** {
 4465              		.loc 11 6 0
 4466 0078 0023     		movs	r3, #0
 4467 007a A364     		str	r3, [r4, #72]
 4468              	.LVL283:
 4469              	.LBE1604:
 4470              	.LBE1603:
  78:../../src/modbus_slave.h ****          parent.interrupt_DMA_channel.subscribe (this);
 4471              		.loc 2 78 0
 4472 007c B14B     		ldr	r3, .L332+24
 4473 007e E464     		str	r4, [r4, #76]
 4474              	.LVL284:
 4475 0080 0833     		adds	r3, r3, #8
 4476 0082 6364     		str	r3, [r4, #68]
 4477              	.LBB1605:
 4478              	.LBB1606:
  20:../../src/interrupt.h ****       if (p) {
 4479              		.loc 11 20 0
 4480 0084 1368     		ldr	r3, [r2]
 4481              	.LVL285:
  21:../../src/interrupt.h ****          while (p->next)
 4482              		.loc 11 21 0
 4483 0086 002B     		cmp	r3, #0
ARM GAS  /tmp/cc2puB6n.s 			page 141


 4484 0088 04D1     		bne	.L289
  26:../../src/interrupt.h ****       } 
 4485              		.loc 11 26 0
 4486 008a 2300     		movs	r3, r4
 4487              	.LVL286:
 4488 008c 4433     		adds	r3, r3, #68
 4489 008e 1360     		str	r3, [r2]
 4490              	.LVL287:
 4491 0090 06E0     		b	.L290
 4492              	.LVL288:
 4493              	.L317:
  22:../../src/interrupt.h ****             p = p->next;
 4494              		.loc 11 22 0
 4495 0092 1300     		movs	r3, r2
 4496              	.LVL289:
 4497              	.L289:
 4498 0094 5A68     		ldr	r2, [r3, #4]
 4499 0096 002A     		cmp	r2, #0
 4500 0098 FBD1     		bne	.L317
  24:../../src/interrupt.h ****       } else {  
 4501              		.loc 11 24 0
 4502 009a 2200     		movs	r2, r4
 4503 009c 4432     		adds	r2, r2, #68
 4504 009e 5A60     		str	r2, [r3, #4]
 4505              	.LVL290:
 4506              	.L290:
 4507              	.LBE1606:
 4508              	.LBE1605:
 4509              	.LBE1602:
 4510              	.LBE1601:
 4511              	.LBE1600:
 120:../../src/modbus_slave.h ****    {}
 4512              		.loc 2 120 0
 4513 00a0 2200     		movs	r2, r4
 4514 00a2 0023     		movs	r3, #0
 4515 00a4 6032     		adds	r2, r2, #96
 4516              	.LBE1574:
 4517              	.LBE1573:
 4518              	.LBE1572:
 137:../../src/modbus_slave.h ****            address
 4519              		.loc 2 137 0
 4520 00a6 3000     		movs	r0, r6
 4521              	.LBB1609:
 4522              	.LBB1608:
 4523              	.LBB1607:
 120:../../src/modbus_slave.h ****    {}
 4524              		.loc 2 120 0
 4525 00a8 2365     		str	r3, [r4, #80]
 4526 00aa 6365     		str	r3, [r4, #84]
 4527 00ac A365     		str	r3, [r4, #88]
 4528 00ae E365     		str	r3, [r4, #92]
 4529 00b0 1380     		strh	r3, [r2]
 4530              	.LVL291:
 4531              	.LBE1607:
 4532              	.LBE1608:
 4533              	.LBE1609:
 137:../../src/modbus_slave.h ****            address
ARM GAS  /tmp/cc2puB6n.s 			page 142


 4534              		.loc 2 137 0
 4535 00b2 FFF7FEFF 		bl	__cxa_guard_release
 4536              	.LVL292:
 4537              	.L283:
 144:../../src/modbus_slave.h ****       return modbus;
 4538              		.loc 2 144 0
 4539 00b6 2369     		ldr	r3, [r4, #16]
 4540              	.LVL293:
 4541              	.LBB1610:
 4542              	.LBB1611:
 180:../../src/uart.h ****         .set(set.data_bits)
 4543              		.loc 5 180 0
 4544 00b8 0021     		movs	r1, #0
 4545 00ba DA69     		ldr	r2, [r3, #28]
 4546 00bc 1869     		ldr	r0, [r3, #16]
 4547 00be FFF7FEFF 		bl	_ZN3mcu5USART3setENS0_8BaudrateENS_6PeriphE
 4548              	.LVL294:
 4549              	.LBB1612:
 4550              	.LBB1613:
  45:../../src/periph/f1_f4_usart.h ****    USART& set (DataBits       v)         {CR1.M     = v; return *this;}
 4551              		.loc 6 45 0
 4552 00c2 A14A     		ldr	r2, .L332+28
 4553 00c4 C368     		ldr	r3, [r0, #12]
 4554 00c6 0026     		movs	r6, #0
 4555 00c8 1340     		ands	r3, r2
 4556 00ca C360     		str	r3, [r0, #12]
 4557              	.LVL295:
 4558              	.LBE1613:
 4559              	.LBE1612:
 4560              	.LBB1614:
 4561              	.LBB1615:
  46:../../src/periph/f1_f4_usart.h ****    USART& set (StopBits       v)         {CR2.STOP  = v; return *this;}
 4562              		.loc 6 46 0
 4563 00cc C368     		ldr	r3, [r0, #12]
 4564 00ce 9F4A     		ldr	r2, .L332+32
 4565 00d0 1340     		ands	r3, r2
 4566 00d2 C360     		str	r3, [r0, #12]
 4567              	.LVL296:
 4568              	.LBE1615:
 4569              	.LBE1614:
 4570              	.LBB1616:
 4571              	.LBB1617:
  47:../../src/periph/f1_f4_usart.h ****    USART& set (WakeMethod     v)         {CR1.WAKE  = v; return *this;}
 4572              		.loc 6 47 0
 4573 00d4 0369     		ldr	r3, [r0, #16]
 4574 00d6 9E4A     		ldr	r2, .L332+36
 4575 00d8 1340     		ands	r3, r2
 4576 00da 0361     		str	r3, [r0, #16]
 4577              	.LVL297:
 4578              	.LBE1617:
 4579              	.LBE1616:
 4580              	.LBE1611:
 4581              	.LBE1610:
 4582              	.LBE1571:
 4583              	.LBE1570:
 4584              	.LBB1618:
 4585              	.LBB1619:
ARM GAS  /tmp/cc2puB6n.s 			page 143


 196:../../src/modbus_slave.h ****       time = 0;
 4586              		.loc 2 196 0
 4587 00dc 2369     		ldr	r3, [r4, #16]
 4588              	.LVL298:
 4589              	.LBB1620:
 4590              	.LBB1621:
  86:../../src/uart.h **** 
 4591              		.loc 5 86 0
 4592 00de 9A69     		ldr	r2, [r3, #24]
 4593              	.LVL299:
 4594              	.LBB1622:
 4595              	.LBB1623:
  17:../../src/net_buffer.h ****    void set_size (size_t v) { begin_i = 0; end_i = std::min(v,size_); }
 4596              		.loc 7 17 0
 4597 00e0 FC33     		adds	r3, r3, #252
 4598              	.LVL300:
 4599              	.LBE1623:
 4600              	.LBE1622:
 4601              	.LBB1626:
 4602              	.LBB1627:
 4603              		.loc 8 42 0
 4604 00e2 5168     		ldr	r1, [r2, #4]
 4605              	.LVL301:
 4606              	.LBE1627:
 4607              	.LBE1626:
 4608              	.LBB1628:
 4609              	.LBB1624:
  17:../../src/net_buffer.h ****    void set_size (size_t v) { begin_i = 0; end_i = std::min(v,size_); }
 4610              		.loc 7 17 0
 4611 00e4 9A6A     		ldr	r2, [r3, #40]
 4612 00e6 5B6A     		ldr	r3, [r3, #36]
 4613              	.LBE1624:
 4614              	.LBE1628:
  86:../../src/uart.h **** 
 4615              		.loc 5 86 0
 4616 00e8 89B2     		uxth	r1, r1
 4617              	.LBB1629:
 4618              	.LBB1625:
  17:../../src/net_buffer.h ****    void set_size (size_t v) { begin_i = 0; end_i = std::min(v,size_); }
 4619              		.loc 7 17 0
 4620 00ea D21A     		subs	r2, r2, r3
 4621              	.LBE1625:
 4622              	.LBE1629:
  86:../../src/uart.h **** 
 4623              		.loc 5 86 0
 4624 00ec FF23     		movs	r3, #255
 4625 00ee 5B1A     		subs	r3, r3, r1
 4626              	.LBE1621:
 4627              	.LBE1620:
 196:../../src/modbus_slave.h ****       time = 0;
 4628              		.loc 2 196 0
 4629 00f0 9A42     		cmp	r2, r3
 4630 00f2 06D2     		bcs	.L291
 198:../../src/modbus_slave.h ****       return;
 4631              		.loc 2 198 0
 4632 00f4 2000     		movs	r0, r4
 197:../../src/modbus_slave.h ****       unsubscribe();
ARM GAS  /tmp/cc2puB6n.s 			page 144


 4633              		.loc 2 197 0
 4634 00f6 E661     		str	r6, [r4, #28]
 198:../../src/modbus_slave.h ****       return;
 4635              		.loc 2 198 0
 4636 00f8 FFF7FEFF 		bl	_ZN14TickSubscriber11unsubscribeEv
 4637              	.LVL302:
 4638              	.L322:
 4639              	.LBE1619:
 4640              	.LBE1618:
  43:main.cpp      ****    struct In_regs {
  44:main.cpp      ****       uint16_t d1;
  45:main.cpp      ****       int16_t  d2;
  46:main.cpp      ****    };
  47:main.cpp      ****    struct Out_regs {
  48:main.cpp      ****       uint16_t d1;
  49:main.cpp      ****       int16_t  d2;
  50:main.cpp      ****    };
  51:main.cpp      ****    auto& modbus = Modbus_slave<In_regs, Out_regs>::make<
  52:main.cpp      ****       mcu::Periph::USART1,
  53:main.cpp      ****       mcu::PA9,
  54:main.cpp      ****       mcu::PA10,
  55:main.cpp      ****       mcu::PA11,
  56:main.cpp      ****       mcu::PA12
  57:main.cpp      ****    >(1, UART::Settings{});
  58:main.cpp      **** 
  59:main.cpp      ****    modbus ([](auto){});
  60:main.cpp      **** }
 4641              		.loc 13 60 0
 4642 00fc 0020     		movs	r0, #0
 4643 00fe 05B0     		add	sp, sp, #20
 4644              		@ sp needed
 4645 0100 F0BD     		pop	{r4, r5, r6, r7, pc}
 4646              	.L291:
 4647              	.LBB1702:
 4648              	.LBB1700:
 202:../../src/modbus_slave.h ****       return;
 4649              		.loc 2 202 0
 4650 0102 E369     		ldr	r3, [r4, #28]
 4651 0104 226A     		ldr	r2, [r4, #32]
 4652 0106 9342     		cmp	r3, r2
 4653 0108 F8DB     		blt	.L322
 206:../../src/modbus_slave.h ****    
 4654              		.loc 2 206 0
 4655 010a 2000     		movs	r0, r4
 205:../../src/modbus_slave.h ****    unsubscribe();
 4656              		.loc 2 205 0
 4657 010c E661     		str	r6, [r4, #28]
 206:../../src/modbus_slave.h ****    
 4658              		.loc 2 206 0
 4659 010e FFF7FEFF 		bl	_ZN14TickSubscriber11unsubscribeEv
 4660              	.LVL303:
 208:../../src/modbus_slave.h ****       uart.receive();
 4661              		.loc 2 208 0
 4662 0112 2169     		ldr	r1, [r4, #16]
 4663              	.LVL304:
 4664              	.LBB1630:
 4665              	.LBB1631:
ARM GAS  /tmp/cc2puB6n.s 			page 145


  17:../../src/net_buffer.h ****    void set_size (size_t v) { begin_i = 0; end_i = std::min(v,size_); }
 4666              		.loc 7 17 0
 4667 0114 0B00     		movs	r3, r1
 4668 0116 FC33     		adds	r3, r3, #252
 4669 0118 9A6A     		ldr	r2, [r3, #40]
 4670 011a 586A     		ldr	r0, [r3, #36]
 4671              	.LVL305:
 4672 011c 151A     		subs	r5, r2, r0
 4673              	.LBE1631:
 4674              	.LBE1630:
 208:../../src/modbus_slave.h ****       uart.receive();
 4675              		.loc 2 208 0
 4676 011e 072D     		cmp	r5, #7
 4677 0120 03D8     		bhi	.L293
 4678              	.L331:
 214:../../src/modbus_slave.h ****       return;
 4679              		.loc 2 214 0
 4680 0122 0800     		movs	r0, r1
 4681              	.L326:
 4682              	.LBB1632:
 4683              	.LBB1633:
 274:../../src/modbus_slave.h **** 
 275:../../src/modbus_slave.h **** template <class InReg, class OutRegs_t>
 276:../../src/modbus_slave.h **** void Modbus_slave<InReg, OutRegs_t>::answer_03()
 277:../../src/modbus_slave.h **** {
 278:../../src/modbus_slave.h ****    if (not check_reg(OutRegQty)) {
 279:../../src/modbus_slave.h ****       answer_error(Error_code::wrong_reg);
 280:../../src/modbus_slave.h ****       return;
 281:../../src/modbus_slave.h ****    }
 282:../../src/modbus_slave.h ****    // –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä –≤–º–µ—Å—Ç–æ —Å—Ç–∞—Ç–∏–∫ –∫–∞—Å—Ç–∞
 283:../../src/modbus_slave.h ****    uart.buffer << address << static_cast<uint8_t>(Function::read_03) << qty_byte;
 284:../../src/modbus_slave.h ****    while(qty_reg--)
 285:../../src/modbus_slave.h ****       uart.buffer << arOutRegs[first_reg++];
 286:../../src/modbus_slave.h ****    auto [low_, high_] = CRC16(uart.buffer.begin(), uart.buffer.end());
 287:../../src/modbus_slave.h ****    uart.buffer << low_ << high_;
 288:../../src/modbus_slave.h ****    uart.transmit();
 289:../../src/modbus_slave.h **** }
 290:../../src/modbus_slave.h **** 
 291:../../src/modbus_slave.h **** template <class InReg, class OutRegs_t>
 292:../../src/modbus_slave.h **** template <class function>
 293:../../src/modbus_slave.h **** void Modbus_slave<InReg, OutRegs_t>::answer_16(function reaction)
 294:../../src/modbus_slave.h **** {
 295:../../src/modbus_slave.h ****    if (not check_reg(InRegQty)) {
 296:../../src/modbus_slave.h ****       answer_error(Error_code::wrong_reg);
 297:../../src/modbus_slave.h ****       return;
 298:../../src/modbus_slave.h ****    }
 299:../../src/modbus_slave.h **** 
 300:../../src/modbus_slave.h ****    uart.buffer >> qty_byte;
 301:../../src/modbus_slave.h **** 
 302:../../src/modbus_slave.h ****    if (not check_value()) {
 303:../../src/modbus_slave.h ****       answer_error(Error_code::wrong_value);
 304:../../src/modbus_slave.h ****       uart.receive();
 4684              		.loc 2 304 0
 4685 0124 FFF7FEFF 		bl	_ZN10UART_sizedILj255EE7receiveEv
 4686              	.LVL306:
 4687              	.LBE1633:
 4688              	.LBE1632:
ARM GAS  /tmp/cc2puB6n.s 			page 146


 4689              	.LBE1700:
 4690              	.LBE1702:
 4691              		.loc 13 60 0
 4692 0128 E8E7     		b	.L322
 4693              	.L293:
 4694              	.LBB1703:
 4695              	.LBB1701:
 213:../../src/modbus_slave.h ****       uart.receive();
 4696              		.loc 2 213 0
 4697 012a 4D1C     		adds	r5, r1, #1
 4698 012c 2F18     		adds	r7, r5, r0
 4699 012e FF7F     		ldrb	r7, [r7, #31]
 4700 0130 BC46     		mov	ip, r7
 4701 0132 884F     		ldr	r7, .L332+40
 4702 0134 FF7F     		ldrb	r7, [r7, #31]
 4703 0136 BC45     		cmp	ip, r7
 4704 0138 F3D1     		bne	.L331
 4705              	.LVL307:
 4706              	.LBB1666:
 4707              	.LBB1667:
 242:../../src/modbus_slave.h **** 	auto low  = uart.buffer.pop_back();
 4708              		.loc 2 242 0
 4709 013a 2031     		adds	r1, r1, #32
 4710              	.LVL308:
 4711              	.LBB1668:
 4712              	.LBB1669:
  84:../../src/net_buffer.h ****          return base()[end_i--];
 4713              		.loc 7 84 0
 4714 013c 8242     		cmp	r2, r0
 4715 013e 03D9     		bls	.L295
  85:../../src/net_buffer.h ****       return 0;
 4716              		.loc 7 85 0
 4717 0140 561E     		subs	r6, r2, #1
 4718 0142 9E62     		str	r6, [r3, #40]
 4719 0144 AA18     		adds	r2, r5, r2
 4720 0146 D67F     		ldrb	r6, [r2, #31]
 4721              	.L295:
 4722              	.LVL309:
 4723              	.LBE1669:
 4724              	.LBE1668:
 4725              	.LBB1670:
 4726              	.LBB1671:
  84:../../src/net_buffer.h ****          return base()[end_i--];
 4727              		.loc 7 84 0
 4728 0148 9A6A     		ldr	r2, [r3, #40]
  86:../../src/net_buffer.h ****    }
 4729              		.loc 7 86 0
 4730 014a 0027     		movs	r7, #0
  84:../../src/net_buffer.h ****          return base()[end_i--];
 4731              		.loc 7 84 0
 4732 014c 9042     		cmp	r0, r2
 4733 014e 03D2     		bcs	.L296
  85:../../src/net_buffer.h ****       return 0;
 4734              		.loc 7 85 0
 4735 0150 571E     		subs	r7, r2, #1
 4736 0152 9F62     		str	r7, [r3, #40]
 4737 0154 AD18     		adds	r5, r5, r2
ARM GAS  /tmp/cc2puB6n.s 			page 147


 4738 0156 EF7F     		ldrb	r7, [r5, #31]
 4739              	.L296:
 4740              	.LVL310:
 4741              	.LBE1671:
 4742              	.LBE1670:
 4743              	.LBB1673:
 4744              	.LBB1674:
  16:../../src/net_buffer.h ****    auto size()  { return end_i - begin_i; }
 4745              		.loc 7 16 0
 4746 0158 9A6A     		ldr	r2, [r3, #40]
 4747              	.LBE1674:
 4748              	.LBE1673:
 244:../../src/modbus_slave.h ****    return (high == high_) and (low == low_);
 4749              		.loc 2 244 0
 4750 015a 03AD     		add	r5, sp, #12
 4751              	.LBB1676:
 4752              	.LBB1675:
  16:../../src/net_buffer.h ****    auto size()  { return end_i - begin_i; }
 4753              		.loc 7 16 0
 4754 015c 8A18     		adds	r2, r1, r2
 4755              	.LBE1675:
 4756              	.LBE1676:
 4757              	.LBB1677:
 4758              	.LBB1678:
  15:../../src/net_buffer.h ****    auto end()   { return base().begin() + end_i; }
 4759              		.loc 7 15 0
 4760 015e 0918     		adds	r1, r1, r0
 4761              	.LBE1678:
 4762              	.LBE1677:
 244:../../src/modbus_slave.h ****    return (high == high_) and (low == low_);
 4763              		.loc 2 244 0
 4764 0160 2800     		movs	r0, r5
 4765 0162 FFF7FEFF 		bl	_Z5CRC16IPhEDaT_S1_
 4766              	.LVL311:
 245:../../src/modbus_slave.h **** }
 4767              		.loc 2 245 0
 4768 0166 2B78     		ldrb	r3, [r5]
 4769 0168 B342     		cmp	r3, r6
 4770 016a 00D0     		beq	.LCB3987
 4771 016c CBE0     		b	.L329	@long jump
 4772              	.LCB3987:
 4773 016e 6B78     		ldrb	r3, [r5, #1]
 4774 0170 2069     		ldr	r0, [r4, #16]
 4775 0172 BB42     		cmp	r3, r7
 4776 0174 00D0     		beq	.LCB3991
 4777 0176 C6E0     		b	.L329	@long jump
 4778              	.LCB3991:
 4779              	.LBE1667:
 4780              	.LBE1666:
 221:../../src/modbus_slave.h ****    if (uart.buffer.pop_front() == static_cast<uint8_t>(Function::read_03)) // operator ==
 4781              		.loc 2 221 0
 4782 0178 2030     		adds	r0, r0, #32
 4783 017a FFF7FEFF 		bl	_ZN10Net_bufferILj255EE9pop_frontEv
 4784              	.LVL312:
 222:../../src/modbus_slave.h ****       answer_03();
 4785              		.loc 2 222 0
 4786 017e 2069     		ldr	r0, [r4, #16]
ARM GAS  /tmp/cc2puB6n.s 			page 148


 4787 0180 2030     		adds	r0, r0, #32
 4788 0182 FFF7FEFF 		bl	_ZN10Net_bufferILj255EE9pop_frontEv
 4789              	.LVL313:
 4790 0186 0700     		movs	r7, r0
 4791 0188 0328     		cmp	r0, #3
 4792 018a 50D1     		bne	.L324
 4793              	.LVL314:
 4794              	.LBB1681:
 4795              	.LBB1682:
 4796              	.LBB1683:
 4797              	.LBB1684:
 251:../../src/modbus_slave.h ****    uart.buffer >> qty_reg; 
 4798              		.loc 2 251 0
 4799 018c 2100     		movs	r1, r4
 4800 018e 2069     		ldr	r0, [r4, #16]
 4801 0190 2631     		adds	r1, r1, #38
 4802 0192 2030     		adds	r0, r0, #32
 4803 0194 FFF7FEFF 		bl	_ZN10Net_bufferILj255EErsERt
 4804              	.LVL315:
 252:../../src/modbus_slave.h ****    last_reg = first_reg + qty_reg - 1;
 4805              		.loc 2 252 0
 4806 0198 2100     		movs	r1, r4
 254:../../src/modbus_slave.h ****    return (last_reg <= (qty_reg_device - 1));
 4807              		.loc 2 254 0
 4808 019a 2600     		movs	r6, r4
 252:../../src/modbus_slave.h ****    last_reg = first_reg + qty_reg - 1;
 4809              		.loc 2 252 0
 4810 019c 2069     		ldr	r0, [r4, #16]
 4811 019e 2A31     		adds	r1, r1, #42
 4812 01a0 2030     		adds	r0, r0, #32
 4813 01a2 FFF7FEFF 		bl	_ZN10Net_bufferILj255EErsERt
 4814              	.LVL316:
 253:../../src/modbus_slave.h ****    qty_byte = qty_reg * 2;
 4815              		.loc 2 253 0
 4816 01a6 628D     		ldrh	r2, [r4, #42]
 4817 01a8 E38C     		ldrh	r3, [r4, #38]
 254:../../src/modbus_slave.h ****    return (last_reg <= (qty_reg_device - 1));
 4818              		.loc 2 254 0
 4819 01aa 2C36     		adds	r6, r6, #44
 253:../../src/modbus_slave.h ****    qty_byte = qty_reg * 2;
 4820              		.loc 2 253 0
 4821 01ac D318     		adds	r3, r2, r3
 4822 01ae 013B     		subs	r3, r3, #1
 4823 01b0 9BB2     		uxth	r3, r3
 254:../../src/modbus_slave.h ****    return (last_reg <= (qty_reg_device - 1));
 4824              		.loc 2 254 0
 4825 01b2 5200     		lsls	r2, r2, #1
 253:../../src/modbus_slave.h ****    qty_byte = qty_reg * 2;
 4826              		.loc 2 253 0
 4827 01b4 2385     		strh	r3, [r4, #40]
 254:../../src/modbus_slave.h ****    return (last_reg <= (qty_reg_device - 1));
 4828              		.loc 2 254 0
 4829 01b6 3270     		strb	r2, [r6]
 4830              	.LVL317:
 4831              	.LBE1684:
 4832              	.LBE1683:
 278:../../src/modbus_slave.h ****       answer_error(Error_code::wrong_reg);
ARM GAS  /tmp/cc2puB6n.s 			page 149


 4833              		.loc 2 278 0
 4834 01b8 012B     		cmp	r3, #1
 4835 01ba 04D9     		bls	.L300
 4836              	.LVL318:
 4837              	.L330:
 4838              	.LBE1682:
 4839              	.LBE1681:
 4840              	.LBB1694:
 4841              	.LBB1662:
 296:../../src/modbus_slave.h ****       return;
 4842              		.loc 2 296 0
 4843 01bc 0221     		movs	r1, #2
 4844              	.L327:
 4845              	.LBE1662:
 4846              	.LBE1694:
 227:../../src/modbus_slave.h **** }
 4847              		.loc 2 227 0
 4848 01be 2000     		movs	r0, r4
 4849 01c0 FFF7FEFF 		bl	_ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE12answer_errorENS3_10Error_codeE
 4850              	.LVL319:
 4851 01c4 9AE7     		b	.L322
 4852              	.LVL320:
 4853              	.L300:
 4854              	.LBB1695:
 4855              	.LBB1693:
 283:../../src/modbus_slave.h ****    while(qty_reg--)
 4856              		.loc 2 283 0
 4857 01c6 2100     		movs	r1, r4
 4858 01c8 2069     		ldr	r0, [r4, #16]
 4859 01ca 2431     		adds	r1, r1, #36
 4860 01cc 2030     		adds	r0, r0, #32
 4861 01ce FFF7FEFF 		bl	_ZN10Net_bufferILj255EElsERKh
 4862              	.LVL321:
 4863 01d2 2900     		movs	r1, r5
 4864 01d4 2F70     		strb	r7, [r5]
 4865 01d6 FFF7FEFF 		bl	_ZN10Net_bufferILj255EElsERKh
 4866              	.LVL322:
 4867 01da 3100     		movs	r1, r6
 4868 01dc FFF7FEFF 		bl	_ZN10Net_bufferILj255EElsERKh
 4869              	.LVL323:
 4870              	.L302:
 284:../../src/modbus_slave.h ****       uart.buffer << arOutRegs[first_reg++];
 4871              		.loc 2 284 0
 4872 01e0 628D     		ldrh	r2, [r4, #42]
 4873 01e2 531E     		subs	r3, r2, #1
 4874 01e4 6385     		strh	r3, [r4, #42]
 4875 01e6 2369     		ldr	r3, [r4, #16]
 4876 01e8 1800     		movs	r0, r3
 4877 01ea 2030     		adds	r0, r0, #32
 4878 01ec 002A     		cmp	r2, #0
 4879 01ee 09D0     		beq	.L301
 285:../../src/modbus_slave.h ****    auto [low_, high_] = CRC16(uart.buffer.begin(), uart.buffer.end());
 4880              		.loc 2 285 0
 4881 01f0 E38C     		ldrh	r3, [r4, #38]
 4882 01f2 5A1C     		adds	r2, r3, #1
 4883 01f4 2833     		adds	r3, r3, #40
 4884 01f6 5B00     		lsls	r3, r3, #1
ARM GAS  /tmp/cc2puB6n.s 			page 150


 4885 01f8 E284     		strh	r2, [r4, #38]
 4886 01fa E318     		adds	r3, r4, r3
 4887 01fc 9988     		ldrh	r1, [r3, #4]
 4888 01fe FFF7FEFF 		bl	_ZN10Net_bufferILj255EElsEt
 4889              	.LVL324:
 4890 0202 EDE7     		b	.L302
 4891              	.L301:
 4892              	.LBB1685:
 4893              	.LBB1686:
  16:../../src/net_buffer.h ****    auto size()  { return end_i - begin_i; }
 4894              		.loc 7 16 0
 4895 0204 FC33     		adds	r3, r3, #252
 4896 0206 9A6A     		ldr	r2, [r3, #40]
 4897              	.LBE1686:
 4898              	.LBE1685:
 4899              	.LBB1688:
 4900              	.LBB1689:
  15:../../src/net_buffer.h ****    auto end()   { return base().begin() + end_i; }
 4901              		.loc 7 15 0
 4902 0208 596A     		ldr	r1, [r3, #36]
 4903              	.LBE1689:
 4904              	.LBE1688:
 4905              	.LBB1691:
 4906              	.LBB1687:
  16:../../src/net_buffer.h ****    auto size()  { return end_i - begin_i; }
 4907              		.loc 7 16 0
 4908 020a 8218     		adds	r2, r0, r2
 4909              	.LBE1687:
 4910              	.LBE1691:
 4911              	.LBB1692:
 4912              	.LBB1690:
  15:../../src/net_buffer.h ****    auto end()   { return base().begin() + end_i; }
 4913              		.loc 7 15 0
 4914 020c 4118     		adds	r1, r0, r1
 4915              	.LVL325:
 4916              	.L328:
 4917              	.LBE1690:
 4918              	.LBE1692:
 4919              	.LBE1693:
 4920              	.LBE1695:
 4921              	.LBB1696:
 4922              	.LBB1663:
 305:../../src/modbus_slave.h ****       return;
 306:../../src/modbus_slave.h ****    }
 307:../../src/modbus_slave.h ****    for (uint16_t i = 0; i < qty_reg; i++) {
 308:../../src/modbus_slave.h ****       reaction (first_reg + i);
 309:../../src/modbus_slave.h ****    }
 310:../../src/modbus_slave.h ****    
 311:../../src/modbus_slave.h ****    uart.buffer << address << func << first_reg << qty_reg;
 312:../../src/modbus_slave.h ****    auto [low_, high_] = CRC16(uart.buffer.begin(), uart.buffer.end());
 4923              		.loc 2 312 0
 4924 020e 2800     		movs	r0, r5
 4925 0210 FFF7FEFF 		bl	_Z5CRC16IPhEDaT_S1_
 4926              	.LVL326:
 313:../../src/modbus_slave.h ****    uart.buffer << low_ << high_;
 4927              		.loc 2 313 0
 4928 0214 2069     		ldr	r0, [r4, #16]
ARM GAS  /tmp/cc2puB6n.s 			page 151


 4929 0216 02AB     		add	r3, sp, #8
 4930 0218 591D     		adds	r1, r3, #5
 4931 021a 2030     		adds	r0, r0, #32
 4932 021c FFF7FEFF 		bl	_ZN10Net_bufferILj255EElsERKh
 4933              	.LVL327:
 4934 0220 2900     		movs	r1, r5
 4935 0222 FFF7FEFF 		bl	_ZN10Net_bufferILj255EElsERKh
 4936              	.LVL328:
 314:../../src/modbus_slave.h ****    uart.transmit();
 4937              		.loc 2 314 0
 4938 0226 2069     		ldr	r0, [r4, #16]
 4939 0228 FFF7FEFF 		bl	_ZN10UART_sizedILj255EE8transmitEv
 4940              	.LVL329:
 4941 022c 66E7     		b	.L322
 4942              	.L324:
 4943              	.LBE1663:
 4944              	.LBE1696:
 224:../../src/modbus_slave.h ****       answer_16(reaction);
 4945              		.loc 2 224 0
 4946 022e A31D     		adds	r3, r4, #6
 4947 0230 DB7F     		ldrb	r3, [r3, #31]
 227:../../src/modbus_slave.h **** }
 4948              		.loc 2 227 0
 4949 0232 0121     		movs	r1, #1
 224:../../src/modbus_slave.h ****       answer_16(reaction);
 4950              		.loc 2 224 0
 4951 0234 102B     		cmp	r3, #16
 4952 0236 C2D1     		bne	.L327
 4953              	.LVL330:
 4954              	.LBB1697:
 4955              	.LBB1664:
 4956              	.LBB1634:
 4957              	.LBB1635:
 251:../../src/modbus_slave.h ****    uart.buffer >> qty_reg; 
 4958              		.loc 2 251 0
 4959 0238 2100     		movs	r1, r4
 4960 023a 2069     		ldr	r0, [r4, #16]
 4961 023c 2631     		adds	r1, r1, #38
 4962 023e 2030     		adds	r0, r0, #32
 4963 0240 FFF7FEFF 		bl	_ZN10Net_bufferILj255EErsERt
 4964              	.LVL331:
 252:../../src/modbus_slave.h ****    last_reg = first_reg + qty_reg - 1;
 4965              		.loc 2 252 0
 4966 0244 2100     		movs	r1, r4
 4967 0246 2069     		ldr	r0, [r4, #16]
 4968 0248 2A31     		adds	r1, r1, #42
 4969 024a 2030     		adds	r0, r0, #32
 4970 024c FFF7FEFF 		bl	_ZN10Net_bufferILj255EErsERt
 4971              	.LVL332:
 254:../../src/modbus_slave.h ****    return (last_reg <= (qty_reg_device - 1));
 4972              		.loc 2 254 0
 4973 0250 2100     		movs	r1, r4
 253:../../src/modbus_slave.h ****    qty_byte = qty_reg * 2;
 4974              		.loc 2 253 0
 4975 0252 628D     		ldrh	r2, [r4, #42]
 4976 0254 E38C     		ldrh	r3, [r4, #38]
 254:../../src/modbus_slave.h ****    return (last_reg <= (qty_reg_device - 1));
ARM GAS  /tmp/cc2puB6n.s 			page 152


 4977              		.loc 2 254 0
 4978 0256 2C31     		adds	r1, r1, #44
 253:../../src/modbus_slave.h ****    qty_byte = qty_reg * 2;
 4979              		.loc 2 253 0
 4980 0258 D318     		adds	r3, r2, r3
 4981 025a 013B     		subs	r3, r3, #1
 4982 025c 9BB2     		uxth	r3, r3
 254:../../src/modbus_slave.h ****    return (last_reg <= (qty_reg_device - 1));
 4983              		.loc 2 254 0
 4984 025e 5200     		lsls	r2, r2, #1
 253:../../src/modbus_slave.h ****    qty_byte = qty_reg * 2;
 4985              		.loc 2 253 0
 4986 0260 2385     		strh	r3, [r4, #40]
 254:../../src/modbus_slave.h ****    return (last_reg <= (qty_reg_device - 1));
 4987              		.loc 2 254 0
 4988 0262 0A70     		strb	r2, [r1]
 4989              	.LVL333:
 4990              	.LBE1635:
 4991              	.LBE1634:
 295:../../src/modbus_slave.h ****       answer_error(Error_code::wrong_reg);
 4992              		.loc 2 295 0
 4993 0264 012B     		cmp	r3, #1
 4994 0266 A9D8     		bhi	.L330
 300:../../src/modbus_slave.h **** 
 4995              		.loc 2 300 0
 4996 0268 2369     		ldr	r3, [r4, #16]
 4997              	.LVL334:
 4998              	.LBB1636:
 4999              	.LBB1637:
  69:../../src/net_buffer.h ****          v = base()[begin_i++];
 5000              		.loc 7 69 0
 5001 026a 1800     		movs	r0, r3
 5002 026c FC30     		adds	r0, r0, #252
 5003 026e 426A     		ldr	r2, [r0, #36]
 5004 0270 866A     		ldr	r6, [r0, #40]
 5005 0272 9642     		cmp	r6, r2
 5006 0274 05D9     		bls	.L306
  70:../../src/net_buffer.h **** 
 5007              		.loc 7 70 0
 5008 0276 561C     		adds	r6, r2, #1
 5009 0278 0133     		adds	r3, r3, #1
 5010              	.LVL335:
 5011 027a 4662     		str	r6, [r0, #36]
 5012 027c 9B18     		adds	r3, r3, r2
 5013 027e DB7F     		ldrb	r3, [r3, #31]
 5014 0280 0B70     		strb	r3, [r1]
 5015              	.L306:
 5016              	.LBE1637:
 5017              	.LBE1636:
 5018              	.LBE1664:
 5019              	.LBE1697:
 5020              	.LBB1698:
 5021              	.LBB1680:
 5022              	.LBB1679:
 5023              	.LBB1672:
  86:../../src/net_buffer.h ****    }
 5024              		.loc 7 86 0
ARM GAS  /tmp/cc2puB6n.s 			page 153


 5025 0282 0026     		movs	r6, #0
 5026              	.LVL336:
 5027              	.L315:
 5028 0284 2069     		ldr	r0, [r4, #16]
 5029              	.LBE1672:
 5030              	.LBE1679:
 5031              	.LBE1680:
 5032              	.LBE1698:
 5033              	.LBB1699:
 5034              	.LBB1665:
 5035              	.LBB1638:
 5036              	.LBB1639:
 315:../../src/modbus_slave.h **** }
 316:../../src/modbus_slave.h **** 
 317:../../src/modbus_slave.h **** template <class InRegs_t, class OutRegs_t>
 318:../../src/modbus_slave.h **** bool Modbus_slave<InRegs_t, OutRegs_t>::check_value()
 319:../../src/modbus_slave.h **** {
 320:../../src/modbus_slave.h ****    for (uint16_t i = 0; i < qty_reg; i++) {
 5037              		.loc 2 320 0
 5038 0286 638D     		ldrh	r3, [r4, #42]
 5039 0288 2030     		adds	r0, r0, #32
 5040              	.LBE1639:
 5041              	.LBE1638:
 311:../../src/modbus_slave.h ****    auto [low_, high_] = CRC16(uart.buffer.begin(), uart.buffer.end());
 5042              		.loc 2 311 0
 5043 028a 2100     		movs	r1, r4
 5044              	.LBB1643:
 5045              	.LBB1640:
 5046              		.loc 2 320 0
 5047 028c B342     		cmp	r3, r6
 5048 028e 15D8     		bhi	.L307
 5049              	.LVL337:
 5050              	.LBE1640:
 5051              	.LBE1643:
 311:../../src/modbus_slave.h ****    auto [low_, high_] = CRC16(uart.buffer.begin(), uart.buffer.end());
 5052              		.loc 2 311 0
 5053 0290 2431     		adds	r1, r1, #36
 5054 0292 FFF7FEFF 		bl	_ZN10Net_bufferILj255EElsERKh
 5055              	.LVL338:
 5056 0296 2100     		movs	r1, r4
 5057 0298 2531     		adds	r1, r1, #37
 5058 029a FFF7FEFF 		bl	_ZN10Net_bufferILj255EElsERKh
 5059              	.LVL339:
 5060 029e E18C     		ldrh	r1, [r4, #38]
 5061 02a0 FFF7FEFF 		bl	_ZN10Net_bufferILj255EElsEt
 5062              	.LVL340:
 5063 02a4 618D     		ldrh	r1, [r4, #42]
 5064 02a6 FFF7FEFF 		bl	_ZN10Net_bufferILj255EElsEt
 5065              	.LVL341:
 312:../../src/modbus_slave.h ****    uart.buffer << low_ << high_;
 5066              		.loc 2 312 0
 5067 02aa 2369     		ldr	r3, [r4, #16]
 5068              	.LVL342:
 5069              	.LBB1644:
 5070              	.LBB1645:
 5071              	.LBB1646:
 5072              	.LBB1647:
ARM GAS  /tmp/cc2puB6n.s 			page 154


 5073              	.LBB1648:
 5074              		.loc 20 235 0
 5075 02ac 1900     		movs	r1, r3
 5076              	.LBE1648:
 5077              	.LBE1647:
 5078              	.LBE1646:
 5079              	.LBE1645:
 5080              	.LBE1644:
 5081              	.LBB1654:
 5082              	.LBB1655:
  16:../../src/net_buffer.h ****    auto size()  { return end_i - begin_i; }
 5083              		.loc 7 16 0
 5084 02ae FC33     		adds	r3, r3, #252
 5085              	.LVL343:
 5086 02b0 9A6A     		ldr	r2, [r3, #40]
 5087              	.LBE1655:
 5088              	.LBE1654:
 5089              	.LBB1657:
 5090              	.LBB1652:
  15:../../src/net_buffer.h ****    auto end()   { return base().begin() + end_i; }
 5091              		.loc 7 15 0
 5092 02b2 5B6A     		ldr	r3, [r3, #36]
 5093              	.LBB1651:
 5094              	.LBB1650:
 5095              	.LBB1649:
 5096              		.loc 20 235 0
 5097 02b4 2031     		adds	r1, r1, #32
 5098              	.LVL344:
 5099              	.LBE1649:
 5100              	.LBE1650:
 5101              	.LBE1651:
 5102              	.LBE1652:
 5103              	.LBE1657:
 5104              	.LBB1658:
 5105              	.LBB1656:
  16:../../src/net_buffer.h ****    auto size()  { return end_i - begin_i; }
 5106              		.loc 7 16 0
 5107 02b6 8A18     		adds	r2, r1, r2
 5108              	.LBE1656:
 5109              	.LBE1658:
 5110              	.LBB1659:
 5111              	.LBB1653:
  15:../../src/net_buffer.h ****    auto end()   { return base().begin() + end_i; }
 5112              		.loc 7 15 0
 5113 02b8 C918     		adds	r1, r1, r3
 5114 02ba A8E7     		b	.L328
 5115              	.LVL345:
 5116              	.L307:
 5117              	.LBE1653:
 5118              	.LBE1659:
 5119              	.LBB1660:
 5120              	.LBB1641:
 321:../../src/modbus_slave.h ****       uart.buffer >> data;
 5121              		.loc 2 321 0
 5122 02bc 2E31     		adds	r1, r1, #46
 5123 02be FFF7FEFF 		bl	_ZN10Net_bufferILj255EErsERt
 5124              	.LVL346:
ARM GAS  /tmp/cc2puB6n.s 			page 155


 322:../../src/modbus_slave.h ****       if (signed_[first_reg + i]) {
 5125              		.loc 2 322 0
 5126 02c2 E38C     		ldrh	r3, [r4, #38]
 5127 02c4 E18D     		ldrh	r1, [r4, #46]
 5128 02c6 9B19     		adds	r3, r3, r6
 5129 02c8 E218     		adds	r2, r4, r3
 5130 02ca 6032     		adds	r2, r2, #96
 5131 02cc 1078     		ldrb	r0, [r2]
 5132 02ce 1A00     		movs	r2, r3
 5133 02d0 2C32     		adds	r2, r2, #44
 5134 02d2 0028     		cmp	r0, #0
 5135 02d4 19D0     		beq	.L308
 323:../../src/modbus_slave.h ****          if ((int16_t(data) < int16_t(arInRegsMin[first_reg + i]) and int16_t(arInRegsMin[first_reg
 5136              		.loc 2 323 0
 5137 02d6 5700     		lsls	r7, r2, #1
 5138 02d8 E75B     		ldrh	r7, [r4, r7]
 5139 02da 08B2     		sxth	r0, r1
 5140 02dc 0190     		str	r0, [sp, #4]
 5141 02de 38B2     		sxth	r0, r7
 5142 02e0 8446     		mov	ip, r0
 5143 02e2 0198     		ldr	r0, [sp, #4]
 5144 02e4 6045     		cmp	r0, ip
 5145 02e6 01DA     		bge	.L309
 5146 02e8 002F     		cmp	r7, #0
 5147 02ea 08D1     		bne	.L310
 5148              	.L309:
 324:../../src/modbus_slave.h ****              (int16_t(data) > int16_t(arInRegsMax[first_reg + i]) and int16_t(arInRegsMax[first_reg
 5149              		.loc 2 324 0
 5150 02ec 5200     		lsls	r2, r2, #1
 5151 02ee A218     		adds	r2, r4, r2
 5152 02f0 9288     		ldrh	r2, [r2, #4]
 323:../../src/modbus_slave.h ****          if ((int16_t(data) < int16_t(arInRegsMin[first_reg + i]) and int16_t(arInRegsMin[first_reg
 5153              		.loc 2 323 0
 5154 02f2 0198     		ldr	r0, [sp, #4]
 5155 02f4 17B2     		sxth	r7, r2
 5156 02f6 B842     		cmp	r0, r7
 5157 02f8 12DD     		ble	.L314
 5158              	.L325:
 325:../../src/modbus_slave.h ****             return false;
 326:../../src/modbus_slave.h ****          arInRegs[first_reg + i] = int16_t(data);
 327:../../src/modbus_slave.h ****       } else {
 328:../../src/modbus_slave.h ****          if ((data < arInRegsMin[first_reg + i] and arInRegsMin[first_reg + i] != 0) or
 329:../../src/modbus_slave.h ****              (data > arInRegsMax[first_reg + i] and arInRegsMax[first_reg + i] != 0))
 5159              		.loc 2 329 0
 5160 02fa 002A     		cmp	r2, #0
 5161 02fc 10D0     		beq	.L314
 5162              	.L310:
 5163              	.LVL347:
 5164              	.LBE1641:
 5165              	.LBE1660:
 303:../../src/modbus_slave.h ****       uart.receive();
 5166              		.loc 2 303 0
 5167 02fe 0321     		movs	r1, #3
 5168 0300 2000     		movs	r0, r4
 5169 0302 FFF7FEFF 		bl	_ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE12answer_errorENS3_10Error_codeE
 5170              	.LVL348:
 5171              	.L329:
ARM GAS  /tmp/cc2puB6n.s 			page 156


 304:../../src/modbus_slave.h ****       return;
 5172              		.loc 2 304 0
 5173 0306 2069     		ldr	r0, [r4, #16]
 5174 0308 0CE7     		b	.L326
 5175              	.LVL349:
 5176              	.L308:
 5177              	.LBB1661:
 5178              	.LBB1642:
 328:../../src/modbus_slave.h ****              (data > arInRegsMax[first_reg + i] and arInRegsMax[first_reg + i] != 0))
 5179              		.loc 2 328 0
 5180 030a 5000     		lsls	r0, r2, #1
 5181 030c 205A     		ldrh	r0, [r4, r0]
 5182 030e 8142     		cmp	r1, r0
 5183 0310 01D2     		bcs	.L313
 5184 0312 0028     		cmp	r0, #0
 5185 0314 F3D1     		bne	.L310
 5186              	.L313:
 5187              		.loc 2 329 0
 5188 0316 5200     		lsls	r2, r2, #1
 5189 0318 A218     		adds	r2, r4, r2
 5190 031a 9288     		ldrh	r2, [r2, #4]
 328:../../src/modbus_slave.h ****              (data > arInRegsMax[first_reg + i] and arInRegsMax[first_reg + i] != 0))
 5191              		.loc 2 328 0
 5192 031c 9142     		cmp	r1, r2
 5193 031e ECD8     		bhi	.L325
 5194              	.L314:
 330:../../src/modbus_slave.h ****             return false;
 331:../../src/modbus_slave.h ****          arInRegs[first_reg + i] = data;
 5195              		.loc 2 331 0
 5196 0320 2833     		adds	r3, r3, #40
 5197 0322 5B00     		lsls	r3, r3, #1
 320:../../src/modbus_slave.h ****       uart.buffer >> data;
 5198              		.loc 2 320 0
 5199 0324 0136     		adds	r6, r6, #1
 5200              	.LVL350:
 5201              		.loc 2 331 0
 5202 0326 E152     		strh	r1, [r4, r3]
 320:../../src/modbus_slave.h ****       uart.buffer >> data;
 5203              		.loc 2 320 0
 5204 0328 B6B2     		uxth	r6, r6
 5205              	.LVL351:
 5206 032a ABE7     		b	.L315
 5207              	.L333:
 5208              		.align	2
 5209              	.L332:
 5210 032c 00000000 		.word	.LANCHOR11
 5211 0330 00000000 		.word	.LANCHOR12
 5212 0334 00000000 		.word	.LANCHOR13
 5213 0338 00000000 		.word	.LANCHOR1
 5214 033c 00000000 		.word	.LANCHOR7
 5215 0340 00000000 		.word	.LANCHOR14
 5216 0344 00000000 		.word	.LANCHOR15
 5217 0348 FFFDFFFF 		.word	-513
 5218 034c FFEFFFFF 		.word	-4097
 5219 0350 FFCFFFFF 		.word	-12289
 5220 0354 05000000 		.word	.LANCHOR12+5
 5221              	.LBE1642:
ARM GAS  /tmp/cc2puB6n.s 			page 157


 5222              	.LBE1661:
 5223              	.LBE1665:
 5224              	.LBE1699:
 5225              	.LBE1701:
 5226              	.LBE1703:
 5227              		.cfi_endproc
 5228              	.LFE2403:
 5230              		.section	.text.startup._GLOBAL__sub_I_tickUpdater,"ax",%progbits
 5231              		.align	1
 5232              		.syntax unified
 5233              		.code	16
 5234              		.thumb_func
 5235              		.fpu softvfp
 5237              	_GLOBAL__sub_I_tickUpdater:
 5238              	.LFB3037:
 5239              		.loc 13 60 0
 5240              		.cfi_startproc
 5241              		@ args = 0, pretend = 0, frame = 0
 5242              		@ frame_needed = 0, uses_anonymous_args = 0
 5243              		@ link register save eliminated.
 5244              	.LVL352:
 5245              	.LBB1725:
 5246              	.LBB1726:
 5247              	.LBB1727:
 5248              	.LBB1728:
 5249              	.LBB1729:
 5250              	.LBB1730:
 5251              	.LBB1731:
  10:../../src/list.h **** {
 5252              		.loc 4 10 0
 5253 0000 0022     		movs	r2, #0
 5254 0002 0A4B     		ldr	r3, .L335
 5255              	.LBE1731:
 5256              	.LBE1730:
 5257              	.LBE1729:
 5258              	.LBB1734:
 5259              	.LBB1735:
 5260              	.LBB1736:
 5261              	.LBB1737:
 5262              		.file 21 "../../src/periph/systick.h"
   1:../../src/periph/systick.h **** #pragma once
   2:../../src/periph/systick.h **** 
   3:../../src/periph/systick.h **** 
   4:../../src/periph/systick.h **** #include "periph.h"
   5:../../src/periph/systick.h **** #include "f0_f4_bits_systick.h"
   6:../../src/periph/systick.h **** 
   7:../../src/periph/systick.h **** namespace mcu {
   8:../../src/periph/systick.h **** 
   9:../../src/periph/systick.h **** 
  10:../../src/periph/systick.h **** 
  11:../../src/periph/systick.h **** 
  12:../../src/periph/systick.h **** class SysTick {
  13:../../src/periph/systick.h ****    __IO SysTick_bits::CTRL     CTRL;  // Offset: 0x000 (R/W)  SysTick Control and Status Register
  14:../../src/periph/systick.h ****    __IO uint32_t               LOAD;  // Offset: 0x004 (R/W)  SysTick Reload Value Register
  15:../../src/periph/systick.h ****    __IO uint32_t               VAL;   // Offset: 0x008 (R/W)  SysTick Current Value Register
  16:../../src/periph/systick.h ****    __IO SysTick_bits::CALIB    CALIB; // Offset: 0x00C (R/ )  SysTick Calibration Register
  17:../../src/periph/systick.h **** public:
ARM GAS  /tmp/cc2puB6n.s 			page 158


  18:../../src/periph/systick.h ****    using Clock = SysTick_bits::CTRL::Clock;
  19:../../src/periph/systick.h ****    
  20:../../src/periph/systick.h ****    void load (uint32_t v)   { LOAD = v; }
 5263              		.loc 21 20 0
 5264 0004 0A49     		ldr	r1, .L335+4
 5265              	.LBE1737:
 5266              	.LBE1736:
 5267              	.LBE1735:
 5268              	.LBE1734:
 5269              	.LBB1752:
 5270              	.LBB1733:
 5271              	.LBB1732:
  10:../../src/list.h **** {
 5272              		.loc 4 10 0
 5273 0006 1A60     		str	r2, [r3]
 5274 0008 5A60     		str	r2, [r3, #4]
 5275              	.LVL353:
 5276              	.LBE1732:
 5277              	.LBE1733:
 5278              	.LBE1752:
 5279              	.LBB1753:
 5280              	.LBB1750:
 5281              	.LBB1740:
 5282              	.LBB1738:
 5283              		.loc 21 20 0
 5284 000a 0A4B     		ldr	r3, .L335+8
 5285              	.LBE1738:
 5286              	.LBE1740:
 5287              	.LBE1750:
 5288              	.LBE1753:
 5289              	.LBE1728:
 5290              	.LBE1727:
 5291              	.LBE1726:
 5292              	.LBE1725:
 5293              		.loc 13 60 0
 5294              		@ sp needed
 5295              	.LBB1758:
 5296              	.LBB1757:
 5297              	.LBB1756:
 5298              	.LBB1755:
 5299              	.LBB1754:
 5300              	.LBB1751:
 5301              	.LBB1741:
 5302              	.LBB1739:
 5303              		.loc 21 20 0
 5304 000c 5960     		str	r1, [r3, #4]
 5305              	.LVL354:
 5306              	.LBE1739:
 5307              	.LBE1741:
 5308              	.LBB1742:
 5309              	.LBB1743:
  21:../../src/periph/systick.h ****    void clear()             { VAL = 0; }
 5310              		.loc 21 21 0
 5311 000e 9A60     		str	r2, [r3, #8]
 5312              	.LVL355:
 5313              	.LBE1743:
 5314              	.LBE1742:
ARM GAS  /tmp/cc2puB6n.s 			page 159


 5315              	.LBB1744:
 5316              	.LBB1745:
  22:../../src/periph/systick.h ****    void setSource (Clock v) { CTRL.CLKSOURCE = v; }
 5317              		.loc 21 22 0
 5318 0010 1968     		ldr	r1, [r3]
 5319 0012 0432     		adds	r2, r2, #4
 5320 0014 0A43     		orrs	r2, r1
 5321 0016 1A60     		str	r2, [r3]
 5322              	.LVL356:
 5323              	.LBE1745:
 5324              	.LBE1744:
 5325              	.LBB1746:
 5326              	.LBB1747:
  23:../../src/periph/systick.h ****    void enableInterrupt()   { CTRL.TICKINT = true; }
 5327              		.loc 21 23 0
 5328 0018 0222     		movs	r2, #2
 5329 001a 1968     		ldr	r1, [r3]
 5330 001c 0A43     		orrs	r2, r1
 5331 001e 1A60     		str	r2, [r3]
 5332              	.LVL357:
 5333              	.LBE1747:
 5334              	.LBE1746:
 5335              	.LBB1748:
 5336              	.LBB1749:
  24:../../src/periph/systick.h ****    void enable()            { CTRL.ENABLE = true; }
 5337              		.loc 21 24 0
 5338 0020 0122     		movs	r2, #1
 5339 0022 1968     		ldr	r1, [r3]
 5340 0024 0A43     		orrs	r2, r1
 5341 0026 1A60     		str	r2, [r3]
 5342              	.LVL358:
 5343              	.LBE1749:
 5344              	.LBE1748:
 5345              	.LBE1751:
 5346              	.LBE1754:
 5347              	.LBE1755:
 5348              	.LBE1756:
 5349              	.LBE1757:
 5350              	.LBE1758:
 5351              		.loc 13 60 0
 5352 0028 7047     		bx	lr
 5353              	.L336:
 5354 002a C046     		.align	2
 5355              	.L335:
 5356 002c 00000000 		.word	.LANCHOR0
 5357 0030 3F190100 		.word	71999
 5358 0034 10E000E0 		.word	-536813552
 5359              		.cfi_endproc
 5360              	.LFE3037:
 5362              		.section	.init_array,"aw",%init_array
 5363              		.align	2
 5364 0000 00000000 		.word	_GLOBAL__sub_I_tickUpdater(target1)
 5365              		.global	_ZTV5Timer
 5366              		.weak	_ZGVZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10EEENS4_
 5367              		.section	.bss._ZGVZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi1
 5368              		.align	2
 5371              	_ZGVZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10EEENS4_ILS3_1E
ARM GAS  /tmp/cc2puB6n.s 			page 160


 5372 0000 00000000 		.space	4
 5373              		.weak	_ZZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10EEENS4_IL
 5374              		.section	.bss._ZZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10E
 5375              		.align	2
 5378              	_ZZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10EEENS4_ILS3_1ELi
 5379 0000 00000000 		.space	296
 5379      00000000 
 5379      00000000 
 5379      00000000 
 5379      00000000 
 5380              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi12EEELNS1_7PinModeE1EEERDavE3pin
 5381              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi12EEELNS1_7PinModeE1EEERDavE3pin,"awG",%
 5382              		.align	2
 5385              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi12EEELNS1_7PinModeE1EEERDavE3pin:
 5386 0000 00000000 		.space	4
 5387              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi12EEELNS1_7PinModeE1EEERDavE3pin
 5388              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi12EEELNS1_7PinModeE1EEERDavE3pin,"awG",%no
 5389              		.align	2
 5392              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi12EEELNS1_7PinModeE1EEERDavE3pin:
 5393 0000 00000000 		.space	8
 5393      00000000 
 5394              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi11EEELNS1_7PinModeE1EEERDavE3pin
 5395              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi11EEELNS1_7PinModeE1EEERDavE3pin,"awG",%
 5396              		.align	2
 5399              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi11EEELNS1_7PinModeE1EEERDavE3pin:
 5400 0000 00000000 		.space	4
 5401              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi11EEELNS1_7PinModeE1EEERDavE3pin
 5402              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi11EEELNS1_7PinModeE1EEERDavE3pin,"awG",%no
 5403              		.align	2
 5406              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi11EEELNS1_7PinModeE1EEERDavE3pin:
 5407 0000 00000000 		.space	8
 5407      00000000 
 5408              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi10EEELNS1_7PinModeE3EEERDavE3pin
 5409              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi10EEELNS1_7PinModeE3EEERDavE3pin,"awG",%
 5410              		.align	2
 5413              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi10EEELNS1_7PinModeE3EEERDavE3pin:
 5414 0000 00000000 		.space	4
 5415              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi10EEELNS1_7PinModeE3EEERDavE3pin
 5416              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi10EEELNS1_7PinModeE3EEERDavE3pin,"awG",%no
 5417              		.align	2
 5420              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi10EEELNS1_7PinModeE3EEERDavE3pin:
 5421 0000 00000000 		.space	8
 5421      00000000 
 5422              		.weak	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi9EEELNS1_7PinModeE2EEERDavE3pin
 5423              		.section	.bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi9EEELNS1_7PinModeE2EEERDavE3pin,"awG",%n
 5424              		.align	2
 5427              	_ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi9EEELNS1_7PinModeE2EEERDavE3pin:
 5428 0000 00000000 		.space	4
 5429              		.weak	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi9EEELNS1_7PinModeE2EEERDavE3pin
 5430              		.section	.bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi9EEELNS1_7PinModeE2EEERDavE3pin,"awG",%nob
 5431              		.align	2
 5434              	_ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi9EEELNS1_7PinModeE2EEERDavE3pin:
 5435 0000 00000000 		.space	8
 5435      00000000 
 5436              		.global	interrupt_DMA_channel7
 5437              		.global	interrupt_DMA_channel6
 5438              		.global	interrupt_DMA_channel5
ARM GAS  /tmp/cc2puB6n.s 			page 161


 5439              		.global	interrupt_DMA_channel4
 5440              		.global	interrupt_DMA_channel3
 5441              		.global	interrupt_DMA_channel2
 5442              		.global	interrupt_DMA_channel1
 5443              		.global	interrupt_usart3
 5444              		.global	interrupt_usart2
 5445              		.global	interrupt_usart1
 5446              		.global	tickUpdater
 5447              		.section	.bss._ZGVZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE4makeILNS_6PeriphE7ENS_4Pin
 5448              		.align	2
 5449              		.set	.LANCHOR11,. + 0
 5452              	_ZGVZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE4makeILNS_6PeriphE7ENS_4Pin_ILS5_1ELi9EEEN
 5453 0000 00000000 		.space	4
 5454              		.section	.bss._ZZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE4makeILNS_6PeriphE7ENS_4Pin_I
 5455              		.align	2
 5456              		.set	.LANCHOR12,. + 0
 5459              	_ZZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE4makeILNS_6PeriphE7ENS_4Pin_ILS5_1ELi9EEENS6
 5460 0000 00000000 		.space	100
 5460      00000000 
 5460      00000000 
 5460      00000000 
 5460      00000000 
 5461              		.section	.bss.interrupt_DMA_channel1,"aw",%nobits
 5462              		.align	2
 5463              		.set	.LANCHOR4,. + 0
 5466              	interrupt_DMA_channel1:
 5467 0000 00000000 		.space	4
 5468              		.section	.bss.interrupt_DMA_channel2,"aw",%nobits
 5469              		.align	2
 5470              		.set	.LANCHOR5,. + 0
 5473              	interrupt_DMA_channel2:
 5474 0000 00000000 		.space	4
 5475              		.section	.bss.interrupt_DMA_channel3,"aw",%nobits
 5476              		.align	2
 5477              		.set	.LANCHOR6,. + 0
 5480              	interrupt_DMA_channel3:
 5481 0000 00000000 		.space	4
 5482              		.section	.bss.interrupt_DMA_channel4,"aw",%nobits
 5483              		.align	2
 5484              		.set	.LANCHOR7,. + 0
 5487              	interrupt_DMA_channel4:
 5488 0000 00000000 		.space	4
 5489              		.section	.bss.interrupt_DMA_channel5,"aw",%nobits
 5490              		.align	2
 5491              		.set	.LANCHOR8,. + 0
 5494              	interrupt_DMA_channel5:
 5495 0000 00000000 		.space	4
 5496              		.section	.bss.interrupt_DMA_channel6,"aw",%nobits
 5497              		.align	2
 5498              		.set	.LANCHOR9,. + 0
 5501              	interrupt_DMA_channel6:
 5502 0000 00000000 		.space	4
 5503              		.section	.bss.interrupt_DMA_channel7,"aw",%nobits
 5504              		.align	2
 5505              		.set	.LANCHOR10,. + 0
 5508              	interrupt_DMA_channel7:
 5509 0000 00000000 		.space	4
ARM GAS  /tmp/cc2puB6n.s 			page 162


 5510              		.section	.bss.interrupt_usart1,"aw",%nobits
 5511              		.align	2
 5512              		.set	.LANCHOR1,. + 0
 5515              	interrupt_usart1:
 5516 0000 00000000 		.space	4
 5517              		.section	.bss.interrupt_usart2,"aw",%nobits
 5518              		.align	2
 5519              		.set	.LANCHOR2,. + 0
 5522              	interrupt_usart2:
 5523 0000 00000000 		.space	4
 5524              		.section	.bss.interrupt_usart3,"aw",%nobits
 5525              		.align	2
 5526              		.set	.LANCHOR3,. + 0
 5529              	interrupt_usart3:
 5530 0000 00000000 		.space	4
 5531              		.section	.bss.tickUpdater,"aw",%nobits
 5532              		.align	2
 5533              		.set	.LANCHOR0,. + 0
 5536              	tickUpdater:
 5537 0000 00000000 		.space	8
 5537      00000000 
 5538              		.section	.rodata._ZL13crc_low_table,"a",%progbits
 5541              	_ZL13crc_low_table:
 5542 0000 00       		.byte	0
 5543 0001 C1       		.byte	-63
 5544 0002 81       		.byte	-127
 5545 0003 40       		.byte	64
 5546 0004 01       		.byte	1
 5547 0005 C0       		.byte	-64
 5548 0006 80       		.byte	-128
 5549 0007 41       		.byte	65
 5550 0008 01       		.byte	1
 5551 0009 C0       		.byte	-64
 5552 000a 80       		.byte	-128
 5553 000b 41       		.byte	65
 5554 000c 00       		.byte	0
 5555 000d C1       		.byte	-63
 5556 000e 81       		.byte	-127
 5557 000f 40       		.byte	64
 5558 0010 01       		.byte	1
 5559 0011 C0       		.byte	-64
 5560 0012 80       		.byte	-128
 5561 0013 41       		.byte	65
 5562 0014 00       		.byte	0
 5563 0015 C1       		.byte	-63
 5564 0016 81       		.byte	-127
 5565 0017 40       		.byte	64
 5566 0018 00       		.byte	0
 5567 0019 C1       		.byte	-63
 5568 001a 81       		.byte	-127
 5569 001b 40       		.byte	64
 5570 001c 01       		.byte	1
 5571 001d C0       		.byte	-64
 5572 001e 80       		.byte	-128
 5573 001f 41       		.byte	65
 5574 0020 01       		.byte	1
 5575 0021 C0       		.byte	-64
ARM GAS  /tmp/cc2puB6n.s 			page 163


 5576 0022 80       		.byte	-128
 5577 0023 41       		.byte	65
 5578 0024 00       		.byte	0
 5579 0025 C1       		.byte	-63
 5580 0026 81       		.byte	-127
 5581 0027 40       		.byte	64
 5582 0028 00       		.byte	0
 5583 0029 C1       		.byte	-63
 5584 002a 81       		.byte	-127
 5585 002b 40       		.byte	64
 5586 002c 01       		.byte	1
 5587 002d C0       		.byte	-64
 5588 002e 80       		.byte	-128
 5589 002f 41       		.byte	65
 5590 0030 00       		.byte	0
 5591 0031 C1       		.byte	-63
 5592 0032 81       		.byte	-127
 5593 0033 40       		.byte	64
 5594 0034 01       		.byte	1
 5595 0035 C0       		.byte	-64
 5596 0036 80       		.byte	-128
 5597 0037 41       		.byte	65
 5598 0038 01       		.byte	1
 5599 0039 C0       		.byte	-64
 5600 003a 80       		.byte	-128
 5601 003b 41       		.byte	65
 5602 003c 00       		.byte	0
 5603 003d C1       		.byte	-63
 5604 003e 81       		.byte	-127
 5605 003f 40       		.byte	64
 5606 0040 01       		.byte	1
 5607 0041 C0       		.byte	-64
 5608 0042 80       		.byte	-128
 5609 0043 41       		.byte	65
 5610 0044 00       		.byte	0
 5611 0045 C1       		.byte	-63
 5612 0046 81       		.byte	-127
 5613 0047 40       		.byte	64
 5614 0048 00       		.byte	0
 5615 0049 C1       		.byte	-63
 5616 004a 81       		.byte	-127
 5617 004b 40       		.byte	64
 5618 004c 01       		.byte	1
 5619 004d C0       		.byte	-64
 5620 004e 80       		.byte	-128
 5621 004f 41       		.byte	65
 5622 0050 00       		.byte	0
 5623 0051 C1       		.byte	-63
 5624 0052 81       		.byte	-127
 5625 0053 40       		.byte	64
 5626 0054 01       		.byte	1
 5627 0055 C0       		.byte	-64
 5628 0056 80       		.byte	-128
 5629 0057 41       		.byte	65
 5630 0058 01       		.byte	1
 5631 0059 C0       		.byte	-64
 5632 005a 80       		.byte	-128
ARM GAS  /tmp/cc2puB6n.s 			page 164


 5633 005b 41       		.byte	65
 5634 005c 00       		.byte	0
 5635 005d C1       		.byte	-63
 5636 005e 81       		.byte	-127
 5637 005f 40       		.byte	64
 5638 0060 00       		.byte	0
 5639 0061 C1       		.byte	-63
 5640 0062 81       		.byte	-127
 5641 0063 40       		.byte	64
 5642 0064 01       		.byte	1
 5643 0065 C0       		.byte	-64
 5644 0066 80       		.byte	-128
 5645 0067 41       		.byte	65
 5646 0068 01       		.byte	1
 5647 0069 C0       		.byte	-64
 5648 006a 80       		.byte	-128
 5649 006b 41       		.byte	65
 5650 006c 00       		.byte	0
 5651 006d C1       		.byte	-63
 5652 006e 81       		.byte	-127
 5653 006f 40       		.byte	64
 5654 0070 01       		.byte	1
 5655 0071 C0       		.byte	-64
 5656 0072 80       		.byte	-128
 5657 0073 41       		.byte	65
 5658 0074 00       		.byte	0
 5659 0075 C1       		.byte	-63
 5660 0076 81       		.byte	-127
 5661 0077 40       		.byte	64
 5662 0078 00       		.byte	0
 5663 0079 C1       		.byte	-63
 5664 007a 81       		.byte	-127
 5665 007b 40       		.byte	64
 5666 007c 01       		.byte	1
 5667 007d C0       		.byte	-64
 5668 007e 80       		.byte	-128
 5669 007f 41       		.byte	65
 5670 0080 01       		.byte	1
 5671 0081 C0       		.byte	-64
 5672 0082 80       		.byte	-128
 5673 0083 41       		.byte	65
 5674 0084 00       		.byte	0
 5675 0085 C1       		.byte	-63
 5676 0086 81       		.byte	-127
 5677 0087 40       		.byte	64
 5678 0088 00       		.byte	0
 5679 0089 C1       		.byte	-63
 5680 008a 81       		.byte	-127
 5681 008b 40       		.byte	64
 5682 008c 01       		.byte	1
 5683 008d C0       		.byte	-64
 5684 008e 80       		.byte	-128
 5685 008f 41       		.byte	65
 5686 0090 00       		.byte	0
 5687 0091 C1       		.byte	-63
 5688 0092 81       		.byte	-127
 5689 0093 40       		.byte	64
ARM GAS  /tmp/cc2puB6n.s 			page 165


 5690 0094 01       		.byte	1
 5691 0095 C0       		.byte	-64
 5692 0096 80       		.byte	-128
 5693 0097 41       		.byte	65
 5694 0098 01       		.byte	1
 5695 0099 C0       		.byte	-64
 5696 009a 80       		.byte	-128
 5697 009b 41       		.byte	65
 5698 009c 00       		.byte	0
 5699 009d C1       		.byte	-63
 5700 009e 81       		.byte	-127
 5701 009f 40       		.byte	64
 5702 00a0 00       		.byte	0
 5703 00a1 C1       		.byte	-63
 5704 00a2 81       		.byte	-127
 5705 00a3 40       		.byte	64
 5706 00a4 01       		.byte	1
 5707 00a5 C0       		.byte	-64
 5708 00a6 80       		.byte	-128
 5709 00a7 41       		.byte	65
 5710 00a8 01       		.byte	1
 5711 00a9 C0       		.byte	-64
 5712 00aa 80       		.byte	-128
 5713 00ab 41       		.byte	65
 5714 00ac 00       		.byte	0
 5715 00ad C1       		.byte	-63
 5716 00ae 81       		.byte	-127
 5717 00af 40       		.byte	64
 5718 00b0 01       		.byte	1
 5719 00b1 C0       		.byte	-64
 5720 00b2 80       		.byte	-128
 5721 00b3 41       		.byte	65
 5722 00b4 00       		.byte	0
 5723 00b5 C1       		.byte	-63
 5724 00b6 81       		.byte	-127
 5725 00b7 40       		.byte	64
 5726 00b8 00       		.byte	0
 5727 00b9 C1       		.byte	-63
 5728 00ba 81       		.byte	-127
 5729 00bb 40       		.byte	64
 5730 00bc 01       		.byte	1
 5731 00bd C0       		.byte	-64
 5732 00be 80       		.byte	-128
 5733 00bf 41       		.byte	65
 5734 00c0 00       		.byte	0
 5735 00c1 C1       		.byte	-63
 5736 00c2 81       		.byte	-127
 5737 00c3 40       		.byte	64
 5738 00c4 01       		.byte	1
 5739 00c5 C0       		.byte	-64
 5740 00c6 80       		.byte	-128
 5741 00c7 41       		.byte	65
 5742 00c8 01       		.byte	1
 5743 00c9 C0       		.byte	-64
 5744 00ca 80       		.byte	-128
 5745 00cb 41       		.byte	65
 5746 00cc 00       		.byte	0
ARM GAS  /tmp/cc2puB6n.s 			page 166


 5747 00cd C1       		.byte	-63
 5748 00ce 81       		.byte	-127
 5749 00cf 40       		.byte	64
 5750 00d0 01       		.byte	1
 5751 00d1 C0       		.byte	-64
 5752 00d2 80       		.byte	-128
 5753 00d3 41       		.byte	65
 5754 00d4 00       		.byte	0
 5755 00d5 C1       		.byte	-63
 5756 00d6 81       		.byte	-127
 5757 00d7 40       		.byte	64
 5758 00d8 00       		.byte	0
 5759 00d9 C1       		.byte	-63
 5760 00da 81       		.byte	-127
 5761 00db 40       		.byte	64
 5762 00dc 01       		.byte	1
 5763 00dd C0       		.byte	-64
 5764 00de 80       		.byte	-128
 5765 00df 41       		.byte	65
 5766 00e0 01       		.byte	1
 5767 00e1 C0       		.byte	-64
 5768 00e2 80       		.byte	-128
 5769 00e3 41       		.byte	65
 5770 00e4 00       		.byte	0
 5771 00e5 C1       		.byte	-63
 5772 00e6 81       		.byte	-127
 5773 00e7 40       		.byte	64
 5774 00e8 00       		.byte	0
 5775 00e9 C1       		.byte	-63
 5776 00ea 81       		.byte	-127
 5777 00eb 40       		.byte	64
 5778 00ec 01       		.byte	1
 5779 00ed C0       		.byte	-64
 5780 00ee 80       		.byte	-128
 5781 00ef 41       		.byte	65
 5782 00f0 00       		.byte	0
 5783 00f1 C1       		.byte	-63
 5784 00f2 81       		.byte	-127
 5785 00f3 40       		.byte	64
 5786 00f4 01       		.byte	1
 5787 00f5 C0       		.byte	-64
 5788 00f6 80       		.byte	-128
 5789 00f7 41       		.byte	65
 5790 00f8 01       		.byte	1
 5791 00f9 C0       		.byte	-64
 5792 00fa 80       		.byte	-128
 5793 00fb 41       		.byte	65
 5794 00fc 00       		.byte	0
 5795 00fd C1       		.byte	-63
 5796 00fe 81       		.byte	-127
 5797 00ff 40       		.byte	64
 5798              		.section	.rodata._ZL14crc_high_table,"a",%progbits
 5801              	_ZL14crc_high_table:
 5802 0000 00       		.byte	0
 5803 0001 C0       		.byte	-64
 5804 0002 C1       		.byte	-63
 5805 0003 01       		.byte	1
ARM GAS  /tmp/cc2puB6n.s 			page 167


 5806 0004 C3       		.byte	-61
 5807 0005 03       		.byte	3
 5808 0006 02       		.byte	2
 5809 0007 C2       		.byte	-62
 5810 0008 C6       		.byte	-58
 5811 0009 06       		.byte	6
 5812 000a 07       		.byte	7
 5813 000b C7       		.byte	-57
 5814 000c 05       		.byte	5
 5815 000d C5       		.byte	-59
 5816 000e C4       		.byte	-60
 5817 000f 04       		.byte	4
 5818 0010 CC       		.byte	-52
 5819 0011 0C       		.byte	12
 5820 0012 0D       		.byte	13
 5821 0013 CD       		.byte	-51
 5822 0014 0F       		.byte	15
 5823 0015 CF       		.byte	-49
 5824 0016 CE       		.byte	-50
 5825 0017 0E       		.byte	14
 5826 0018 0A       		.byte	10
 5827 0019 CA       		.byte	-54
 5828 001a CB       		.byte	-53
 5829 001b 0B       		.byte	11
 5830 001c C9       		.byte	-55
 5831 001d 09       		.byte	9
 5832 001e 08       		.byte	8
 5833 001f C8       		.byte	-56
 5834 0020 D8       		.byte	-40
 5835 0021 18       		.byte	24
 5836 0022 19       		.byte	25
 5837 0023 D9       		.byte	-39
 5838 0024 1B       		.byte	27
 5839 0025 DB       		.byte	-37
 5840 0026 DA       		.byte	-38
 5841 0027 1A       		.byte	26
 5842 0028 1E       		.byte	30
 5843 0029 DE       		.byte	-34
 5844 002a DF       		.byte	-33
 5845 002b 1F       		.byte	31
 5846 002c DD       		.byte	-35
 5847 002d 1D       		.byte	29
 5848 002e 1C       		.byte	28
 5849 002f DC       		.byte	-36
 5850 0030 14       		.byte	20
 5851 0031 D4       		.byte	-44
 5852 0032 D5       		.byte	-43
 5853 0033 15       		.byte	21
 5854 0034 D7       		.byte	-41
 5855 0035 17       		.byte	23
 5856 0036 16       		.byte	22
 5857 0037 D6       		.byte	-42
 5858 0038 D2       		.byte	-46
 5859 0039 12       		.byte	18
 5860 003a 13       		.byte	19
 5861 003b D3       		.byte	-45
 5862 003c 11       		.byte	17
ARM GAS  /tmp/cc2puB6n.s 			page 168


 5863 003d D1       		.byte	-47
 5864 003e D0       		.byte	-48
 5865 003f 10       		.byte	16
 5866 0040 F0       		.byte	-16
 5867 0041 30       		.byte	48
 5868 0042 31       		.byte	49
 5869 0043 F1       		.byte	-15
 5870 0044 33       		.byte	51
 5871 0045 F3       		.byte	-13
 5872 0046 F2       		.byte	-14
 5873 0047 32       		.byte	50
 5874 0048 36       		.byte	54
 5875 0049 F6       		.byte	-10
 5876 004a F7       		.byte	-9
 5877 004b 37       		.byte	55
 5878 004c F5       		.byte	-11
 5879 004d 35       		.byte	53
 5880 004e 34       		.byte	52
 5881 004f F4       		.byte	-12
 5882 0050 3C       		.byte	60
 5883 0051 FC       		.byte	-4
 5884 0052 FD       		.byte	-3
 5885 0053 3D       		.byte	61
 5886 0054 FF       		.byte	-1
 5887 0055 3F       		.byte	63
 5888 0056 3E       		.byte	62
 5889 0057 FE       		.byte	-2
 5890 0058 FA       		.byte	-6
 5891 0059 3A       		.byte	58
 5892 005a 3B       		.byte	59
 5893 005b FB       		.byte	-5
 5894 005c 39       		.byte	57
 5895 005d F9       		.byte	-7
 5896 005e F8       		.byte	-8
 5897 005f 38       		.byte	56
 5898 0060 28       		.byte	40
 5899 0061 E8       		.byte	-24
 5900 0062 E9       		.byte	-23
 5901 0063 29       		.byte	41
 5902 0064 EB       		.byte	-21
 5903 0065 2B       		.byte	43
 5904 0066 2A       		.byte	42
 5905 0067 EA       		.byte	-22
 5906 0068 EE       		.byte	-18
 5907 0069 2E       		.byte	46
 5908 006a 2F       		.byte	47
 5909 006b EF       		.byte	-17
 5910 006c 2D       		.byte	45
 5911 006d ED       		.byte	-19
 5912 006e EC       		.byte	-20
 5913 006f 2C       		.byte	44
 5914 0070 E4       		.byte	-28
 5915 0071 24       		.byte	36
 5916 0072 25       		.byte	37
 5917 0073 E5       		.byte	-27
 5918 0074 27       		.byte	39
 5919 0075 E7       		.byte	-25
ARM GAS  /tmp/cc2puB6n.s 			page 169


 5920 0076 E6       		.byte	-26
 5921 0077 26       		.byte	38
 5922 0078 22       		.byte	34
 5923 0079 E2       		.byte	-30
 5924 007a E3       		.byte	-29
 5925 007b 23       		.byte	35
 5926 007c E1       		.byte	-31
 5927 007d 21       		.byte	33
 5928 007e 20       		.byte	32
 5929 007f E0       		.byte	-32
 5930 0080 A0       		.byte	-96
 5931 0081 60       		.byte	96
 5932 0082 61       		.byte	97
 5933 0083 A1       		.byte	-95
 5934 0084 63       		.byte	99
 5935 0085 A3       		.byte	-93
 5936 0086 A2       		.byte	-94
 5937 0087 62       		.byte	98
 5938 0088 66       		.byte	102
 5939 0089 A6       		.byte	-90
 5940 008a A7       		.byte	-89
 5941 008b 67       		.byte	103
 5942 008c A5       		.byte	-91
 5943 008d 65       		.byte	101
 5944 008e 64       		.byte	100
 5945 008f A4       		.byte	-92
 5946 0090 6C       		.byte	108
 5947 0091 AC       		.byte	-84
 5948 0092 AD       		.byte	-83
 5949 0093 6D       		.byte	109
 5950 0094 AF       		.byte	-81
 5951 0095 6F       		.byte	111
 5952 0096 6E       		.byte	110
 5953 0097 AE       		.byte	-82
 5954 0098 AA       		.byte	-86
 5955 0099 6A       		.byte	106
 5956 009a 6B       		.byte	107
 5957 009b AB       		.byte	-85
 5958 009c 69       		.byte	105
 5959 009d A9       		.byte	-87
 5960 009e A8       		.byte	-88
 5961 009f 68       		.byte	104
 5962 00a0 78       		.byte	120
 5963 00a1 B8       		.byte	-72
 5964 00a2 B9       		.byte	-71
 5965 00a3 79       		.byte	121
 5966 00a4 BB       		.byte	-69
 5967 00a5 7B       		.byte	123
 5968 00a6 7A       		.byte	122
 5969 00a7 BA       		.byte	-70
 5970 00a8 BE       		.byte	-66
 5971 00a9 7E       		.byte	126
 5972 00aa 7F       		.byte	127
 5973 00ab BF       		.byte	-65
 5974 00ac 7D       		.byte	125
 5975 00ad BD       		.byte	-67
 5976 00ae BC       		.byte	-68
ARM GAS  /tmp/cc2puB6n.s 			page 170


 5977 00af 7C       		.byte	124
 5978 00b0 B4       		.byte	-76
 5979 00b1 74       		.byte	116
 5980 00b2 75       		.byte	117
 5981 00b3 B5       		.byte	-75
 5982 00b4 77       		.byte	119
 5983 00b5 B7       		.byte	-73
 5984 00b6 B6       		.byte	-74
 5985 00b7 76       		.byte	118
 5986 00b8 72       		.byte	114
 5987 00b9 B2       		.byte	-78
 5988 00ba B3       		.byte	-77
 5989 00bb 73       		.byte	115
 5990 00bc B1       		.byte	-79
 5991 00bd 71       		.byte	113
 5992 00be 70       		.byte	112
 5993 00bf B0       		.byte	-80
 5994 00c0 50       		.byte	80
 5995 00c1 90       		.byte	-112
 5996 00c2 91       		.byte	-111
 5997 00c3 51       		.byte	81
 5998 00c4 93       		.byte	-109
 5999 00c5 53       		.byte	83
 6000 00c6 52       		.byte	82
 6001 00c7 92       		.byte	-110
 6002 00c8 96       		.byte	-106
 6003 00c9 56       		.byte	86
 6004 00ca 57       		.byte	87
 6005 00cb 97       		.byte	-105
 6006 00cc 55       		.byte	85
 6007 00cd 95       		.byte	-107
 6008 00ce 94       		.byte	-108
 6009 00cf 54       		.byte	84
 6010 00d0 9C       		.byte	-100
 6011 00d1 5C       		.byte	92
 6012 00d2 5D       		.byte	93
 6013 00d3 9D       		.byte	-99
 6014 00d4 5F       		.byte	95
 6015 00d5 9F       		.byte	-97
 6016 00d6 9E       		.byte	-98
 6017 00d7 5E       		.byte	94
 6018 00d8 5A       		.byte	90
 6019 00d9 9A       		.byte	-102
 6020 00da 9B       		.byte	-101
 6021 00db 5B       		.byte	91
 6022 00dc 99       		.byte	-103
 6023 00dd 59       		.byte	89
 6024 00de 58       		.byte	88
 6025 00df 98       		.byte	-104
 6026 00e0 88       		.byte	-120
 6027 00e1 48       		.byte	72
 6028 00e2 49       		.byte	73
 6029 00e3 89       		.byte	-119
 6030 00e4 4B       		.byte	75
 6031 00e5 8B       		.byte	-117
 6032 00e6 8A       		.byte	-118
 6033 00e7 4A       		.byte	74
ARM GAS  /tmp/cc2puB6n.s 			page 171


 6034 00e8 4E       		.byte	78
 6035 00e9 8E       		.byte	-114
 6036 00ea 8F       		.byte	-113
 6037 00eb 4F       		.byte	79
 6038 00ec 8D       		.byte	-115
 6039 00ed 4D       		.byte	77
 6040 00ee 4C       		.byte	76
 6041 00ef 8C       		.byte	-116
 6042 00f0 44       		.byte	68
 6043 00f1 84       		.byte	-124
 6044 00f2 85       		.byte	-123
 6045 00f3 45       		.byte	69
 6046 00f4 87       		.byte	-121
 6047 00f5 47       		.byte	71
 6048 00f6 46       		.byte	70
 6049 00f7 86       		.byte	-122
 6050 00f8 82       		.byte	-126
 6051 00f9 42       		.byte	66
 6052 00fa 43       		.byte	67
 6053 00fb 83       		.byte	-125
 6054 00fc 41       		.byte	65
 6055 00fd 81       		.byte	-127
 6056 00fe 80       		.byte	-128
 6057 00ff 40       		.byte	64
 6058              		.section	.rodata._ZTV5Timer,"a",%progbits
 6059              		.align	2
 6062              	_ZTV5Timer:
 6063 0000 00000000 		.word	0
 6064 0004 00000000 		.word	0
 6065 0008 00000000 		.word	_ZN5Timer6notifyEv
 6066              		.section	.rodata._ZTVN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE13dma_interruptE,"a",%pro
 6067              		.align	2
 6068              		.set	.LANCHOR15,. + 0
 6071              	_ZTVN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE13dma_interruptE:
 6072 0000 00000000 		.word	0
 6073 0004 00000000 		.word	0
 6074 0008 00000000 		.word	_ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE13dma_interrupt9interruptEv
 6075              		.section	.rodata._ZTVN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE14uart_interruptE,"a",%pr
 6076              		.align	2
 6077              		.set	.LANCHOR14,. + 0
 6080              	_ZTVN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE14uart_interruptE:
 6081 0000 00000000 		.word	0
 6082 0004 00000000 		.word	0
 6083 0008 00000000 		.word	_ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE14uart_interrupt9interruptEv
 6084              		.section	.rodata._ZTVN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsEE,"a",%progbits
 6085              		.align	2
 6086              		.set	.LANCHOR13,. + 0
 6089              	_ZTVN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsEE:
 6090 0000 00000000 		.word	0
 6091 0004 00000000 		.word	0
 6092 0008 00000000 		.word	_ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE6notifyEv
 6093              		.text
 6094              	.Letext0:
 6095              		.file 22 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6096              		.file 23 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6097              		.file 24 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6098              		.file 25 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
ARM GAS  /tmp/cc2puB6n.s 			page 172


 6099              		.file 26 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6100              		.file 27 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6101              		.file 28 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6102              		.file 29 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6103              		.file 30 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6104              		.file 31 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6105              		.file 32 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6106              		.file 33 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6107              		.file 34 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6108              		.file 35 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6109              		.file 36 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6110              		.file 37 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6111              		.file 38 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6112              		.file 39 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6113              		.file 40 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6114              		.file 41 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6115              		.file 42 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6116              		.file 43 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6117              		.file 44 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6118              		.file 45 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6119              		.file 46 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6120              		.file 47 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6121              		.file 48 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6122              		.file 49 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6123              		.file 50 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eab
 6124              		.file 51 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6125              		.file 52 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6126              		.file 53 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6127              		.file 54 "../../STM32F1_files/stm32f103xb.h"
 6128              		.file 55 "../../STM32F1_files/stm32f1xx.h"
 6129              		.file 56 "<built-in>"
 6130              		.file 57 "../../src/periph/periph.h"
 6131              		.file 58 "../../src/bits/f1_bits_rcc.h"
 6132              		.file 59 "../../src/bits/f1_bits_flash.h"
 6133              		.file 60 "../../src/bits/f0_f4_bits_systick.h"
 6134              		.file 61 "../../src/bits/f1_bits_usart.h"
 6135              		.file 62 "../../src/bits/f1_bits_gpio.h"
 6136              		.file 63 "../../src/bits/f1_bits_afio.h"
 6137              		.file 64 "../../src/bits/f1_bits_dma.h"
 6138              		.file 65 "../../src/bits/f0_f1_bits_dma_stream.h"
 6139              		.file 66 "../../src/pins.h"
 6140              		.file 67 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6141              		.file 68 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6142              		.file 69 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6143              		.file 70 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eab
 6144              		.file 71 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6145              		.file 72 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6146              		.file 73 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6147              		.file 74 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6148              		.file 75 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6149              		.file 76 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6150              		.file 77 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
 6151              		.file 78 "../../src/meta.h"
 6152              		.file 79 "/net/factory/share/projects/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/includ
ARM GAS  /tmp/cc2puB6n.s 			page 173


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/cc2puB6n.s:16     .text._ZN5Timer6notifyEv:0000000000000000 $t
     /tmp/cc2puB6n.s:23     .text._ZN5Timer6notifyEv:0000000000000000 _ZN5Timer6notifyEv
     /tmp/cc2puB6n.s:45     .text._ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE6notifyEv:0000000000000000 $t
     /tmp/cc2puB6n.s:51     .text._ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE6notifyEv:0000000000000000 _ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE6notifyEv
     /tmp/cc2puB6n.s:73     .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc2puB6n.s:80     .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cc2puB6n.s:134    .text.SysTick_Handler:0000000000000018 $d
     /tmp/cc2puB6n.s:139    .text._ZN5Timer5eventEv:0000000000000000 $t
     /tmp/cc2puB6n.s:146    .text._ZN5Timer5eventEv:0000000000000000 _ZN5Timer5eventEv
     /tmp/cc2puB6n.s:174    .text._ZN5Timer4doneEv:0000000000000000 $t
     /tmp/cc2puB6n.s:181    .text._ZN5Timer4doneEv:0000000000000000 _ZN5Timer4doneEv
     /tmp/cc2puB6n.s:203    .text._ZN5Timer7isCountEv:0000000000000000 $t
     /tmp/cc2puB6n.s:210    .text._ZN5Timer7isCountEv:0000000000000000 _ZN5Timer7isCountEv
     /tmp/cc2puB6n.s:227    .text._ZN5Timer10timePassedEv:0000000000000000 $t
     /tmp/cc2puB6n.s:234    .text._ZN5Timer10timePassedEv:0000000000000000 _ZN5Timer10timePassedEv
     /tmp/cc2puB6n.s:251    .text._ZN5Timer8timeLeftEv:0000000000000000 $t
     /tmp/cc2puB6n.s:258    .text._ZN5Timer8timeLeftEv:0000000000000000 _ZN5Timer8timeLeftEv
     /tmp/cc2puB6n.s:277    .text._ZN5Timer9isGreaterEm:0000000000000000 $t
     /tmp/cc2puB6n.s:284    .text._ZN5Timer9isGreaterEm:0000000000000000 _ZN5Timer9isGreaterEm
     /tmp/cc2puB6n.s:304    .text._ZN14TickSubscriber11unsubscribeEv:0000000000000000 $t
     /tmp/cc2puB6n.s:311    .text._ZN14TickSubscriber11unsubscribeEv:0000000000000000 _ZN14TickSubscriber11unsubscribeEv
     /tmp/cc2puB6n.s:402    .text._ZN14TickSubscriber11unsubscribeEv:000000000000003c $d
     /tmp/cc2puB6n.s:412    .text._ZN5Timer4stopEv:0000000000000000 $t
     /tmp/cc2puB6n.s:419    .text._ZN5Timer4stopEv:0000000000000000 _ZN5Timer4stopEv
     /tmp/cc2puB6n.s:446    .text._ZN5Timer5pauseEv:0000000000000000 $t
     /tmp/cc2puB6n.s:453    .text._ZN5Timer5pauseEv:0000000000000000 _ZN5Timer5pauseEv
     /tmp/cc2puB6n.s:474    .text._ZN14TickSubscriber9subscribeEv:0000000000000000 $t
     /tmp/cc2puB6n.s:481    .text._ZN14TickSubscriber9subscribeEv:0000000000000000 _ZN14TickSubscriber9subscribeEv
     /tmp/cc2puB6n.s:535    .text._ZN14TickSubscriber9subscribeEv:0000000000000024 $d
     /tmp/cc2puB6n.s:540    .text._ZN5Timer5startEm:0000000000000000 $t
     /tmp/cc2puB6n.s:547    .text._ZN5Timer5startEm:0000000000000000 _ZN5Timer5startEm
     /tmp/cc2puB6n.s:571    .text._ZN5Timer5startEv:0000000000000000 $t
     /tmp/cc2puB6n.s:578    .text._ZN5Timer5startEv:0000000000000000 _ZN5Timer5startEv
     /tmp/cc2puB6n.s:599    .text._ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE14uart_interrupt9interruptEv:0000000000000000 $t
     /tmp/cc2puB6n.s:605    .text._ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE14uart_interrupt9interruptEv:0000000000000000 _ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE14uart_interrupt9interruptEv
     /tmp/cc2puB6n.s:706    .text._ZN3mcu5USART3setENS0_8BaudrateENS_6PeriphE:0000000000000000 $t
     /tmp/cc2puB6n.s:713    .text._ZN3mcu5USART3setENS0_8BaudrateENS_6PeriphE:0000000000000000 _ZN3mcu5USART3setENS0_8BaudrateENS_6PeriphE
     /tmp/cc2puB6n.s:797    .text._ZN3mcu5USART3setENS0_8BaudrateENS_6PeriphE:0000000000000034 $d
     /tmp/cc2puB6n.s:806    .text._ZN3mcu5USART3setENS0_8BaudrateENS_6PeriphE:000000000000003c $t
     /tmp/cc2puB6n.s:924    .text._ZN3mcu5USART3setENS0_8BaudrateENS_6PeriphE:000000000000008c $d
     /tmp/cc2puB6n.s:934    .text._ZN3mcu3DMA21clear_interrupt_flagsENS0_7ChannelE:0000000000000000 $t
     /tmp/cc2puB6n.s:941    .text._ZN3mcu3DMA21clear_interrupt_flagsENS0_7ChannelE:0000000000000000 _ZN3mcu3DMA21clear_interrupt_flagsENS0_7ChannelE
     /tmp/cc2puB6n.s:1030   .text._ZN3mcu3DMA30is_transfer_complete_interruptENS0_7ChannelE:0000000000000000 $t
     /tmp/cc2puB6n.s:1037   .text._ZN3mcu3DMA30is_transfer_complete_interruptENS0_7ChannelE:0000000000000000 _ZN3mcu3DMA30is_transfer_complete_interruptENS0_7ChannelE
     /tmp/cc2puB6n.s:1126   .text._ZN9Interrupt9interruptEv:0000000000000000 $t
     /tmp/cc2puB6n.s:1133   .text._ZN9Interrupt9interruptEv:0000000000000000 _ZN9Interrupt9interruptEv
     /tmp/cc2puB6n.s:1173   .text.WWDG_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1180   .text.WWDG_IRQHandler:0000000000000000 WWDG_IRQHandler
     /tmp/cc2puB6n.s:1195   .text.PVD_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1202   .text.PVD_IRQHandler:0000000000000000 PVD_IRQHandler
     /tmp/cc2puB6n.s:1216   .text.TAMPER_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1223   .text.TAMPER_IRQHandler:0000000000000000 TAMPER_IRQHandler
     /tmp/cc2puB6n.s:1237   .text.RTC_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1244   .text.RTC_IRQHandler:0000000000000000 RTC_IRQHandler
     /tmp/cc2puB6n.s:1258   .text.FLASH_IRQHandler:0000000000000000 $t
ARM GAS  /tmp/cc2puB6n.s 			page 174


     /tmp/cc2puB6n.s:1265   .text.FLASH_IRQHandler:0000000000000000 FLASH_IRQHandler
     /tmp/cc2puB6n.s:1279   .text.RCC_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1286   .text.RCC_IRQHandler:0000000000000000 RCC_IRQHandler
     /tmp/cc2puB6n.s:1300   .text.EXTI0_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1307   .text.EXTI0_IRQHandler:0000000000000000 EXTI0_IRQHandler
     /tmp/cc2puB6n.s:1321   .text.EXTI1_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1328   .text.EXTI1_IRQHandler:0000000000000000 EXTI1_IRQHandler
     /tmp/cc2puB6n.s:1342   .text.EXTI2_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1349   .text.EXTI2_IRQHandler:0000000000000000 EXTI2_IRQHandler
     /tmp/cc2puB6n.s:1363   .text.EXTI3_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1370   .text.EXTI3_IRQHandler:0000000000000000 EXTI3_IRQHandler
     /tmp/cc2puB6n.s:1384   .text.EXTI4_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1391   .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
     /tmp/cc2puB6n.s:1405   .text.ADC1_2_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1412   .text.ADC1_2_IRQHandler:0000000000000000 ADC1_2_IRQHandler
     /tmp/cc2puB6n.s:1426   .text.USB_HP_CAN1_TX_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1433   .text.USB_HP_CAN1_TX_IRQHandler:0000000000000000 USB_HP_CAN1_TX_IRQHandler
     /tmp/cc2puB6n.s:1447   .text.USB_LP_CAN1_RX0_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1454   .text.USB_LP_CAN1_RX0_IRQHandler:0000000000000000 USB_LP_CAN1_RX0_IRQHandler
     /tmp/cc2puB6n.s:1468   .text.CAN1_RX1_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1475   .text.CAN1_RX1_IRQHandler:0000000000000000 CAN1_RX1_IRQHandler
     /tmp/cc2puB6n.s:1489   .text.CAN1_SCE_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1496   .text.CAN1_SCE_IRQHandler:0000000000000000 CAN1_SCE_IRQHandler
     /tmp/cc2puB6n.s:1510   .text.EXTI9_5_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1517   .text.EXTI9_5_IRQHandler:0000000000000000 EXTI9_5_IRQHandler
     /tmp/cc2puB6n.s:1531   .text.TIM1_BRK_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1538   .text.TIM1_BRK_IRQHandler:0000000000000000 TIM1_BRK_IRQHandler
     /tmp/cc2puB6n.s:1552   .text.TIM1_UP_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1559   .text.TIM1_UP_IRQHandler:0000000000000000 TIM1_UP_IRQHandler
     /tmp/cc2puB6n.s:1573   .text.TIM1_TRG_COM_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1580   .text.TIM1_TRG_COM_IRQHandler:0000000000000000 TIM1_TRG_COM_IRQHandler
     /tmp/cc2puB6n.s:1594   .text.TIM1_CC_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1601   .text.TIM1_CC_IRQHandler:0000000000000000 TIM1_CC_IRQHandler
     /tmp/cc2puB6n.s:1615   .text.TIM2_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1622   .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
     /tmp/cc2puB6n.s:1636   .text.TIM3_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1643   .text.TIM3_IRQHandler:0000000000000000 TIM3_IRQHandler
     /tmp/cc2puB6n.s:1657   .text.TIM4_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1664   .text.TIM4_IRQHandler:0000000000000000 TIM4_IRQHandler
     /tmp/cc2puB6n.s:1678   .text.I2C1_EV_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1685   .text.I2C1_EV_IRQHandler:0000000000000000 I2C1_EV_IRQHandler
     /tmp/cc2puB6n.s:1699   .text.I2C1_ER_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1706   .text.I2C1_ER_IRQHandler:0000000000000000 I2C1_ER_IRQHandler
     /tmp/cc2puB6n.s:1720   .text.I2C2_EV_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1727   .text.I2C2_EV_IRQHandler:0000000000000000 I2C2_EV_IRQHandler
     /tmp/cc2puB6n.s:1741   .text.I2C2_ER_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1748   .text.I2C2_ER_IRQHandler:0000000000000000 I2C2_ER_IRQHandler
     /tmp/cc2puB6n.s:1762   .text.SPI1_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1769   .text.SPI1_IRQHandler:0000000000000000 SPI1_IRQHandler
     /tmp/cc2puB6n.s:1783   .text.SPI2_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1790   .text.SPI2_IRQHandler:0000000000000000 SPI2_IRQHandler
     /tmp/cc2puB6n.s:1804   .text.EXTI15_10_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1811   .text.EXTI15_10_IRQHandler:0000000000000000 EXTI15_10_IRQHandler
     /tmp/cc2puB6n.s:1825   .text.RTC_Alarm_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1832   .text.RTC_Alarm_IRQHandler:0000000000000000 RTC_Alarm_IRQHandler
     /tmp/cc2puB6n.s:1846   .text.USBWakeUp_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1853   .text.USBWakeUp_IRQHandler:0000000000000000 USBWakeUp_IRQHandler
ARM GAS  /tmp/cc2puB6n.s 			page 175


     /tmp/cc2puB6n.s:1867   .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1874   .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/cc2puB6n.s:1923   .text.USART1_IRQHandler:0000000000000010 $d
     /tmp/cc2puB6n.s:1929   .text.USART2_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1936   .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
     /tmp/cc2puB6n.s:1984   .text.USART2_IRQHandler:0000000000000010 $d
     /tmp/cc2puB6n.s:1990   .text.USART3_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:1997   .text.USART3_IRQHandler:0000000000000000 USART3_IRQHandler
     /tmp/cc2puB6n.s:2045   .text.USART3_IRQHandler:0000000000000010 $d
     /tmp/cc2puB6n.s:2051   .text.DMA1_Channel1_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:2058   .text.DMA1_Channel1_IRQHandler:0000000000000000 DMA1_Channel1_IRQHandler
     /tmp/cc2puB6n.s:2096   .text.DMA1_Channel1_IRQHandler:0000000000000014 $d
     /tmp/cc2puB6n.s:2102   .text.DMA1_Channel2_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:2109   .text.DMA1_Channel2_IRQHandler:0000000000000000 DMA1_Channel2_IRQHandler
     /tmp/cc2puB6n.s:2147   .text.DMA1_Channel2_IRQHandler:0000000000000014 $d
     /tmp/cc2puB6n.s:2153   .text.DMA1_Channel3_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:2160   .text.DMA1_Channel3_IRQHandler:0000000000000000 DMA1_Channel3_IRQHandler
     /tmp/cc2puB6n.s:2199   .text.DMA1_Channel3_IRQHandler:0000000000000018 $d
     /tmp/cc2puB6n.s:2205   .text.DMA1_Channel4_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:2212   .text.DMA1_Channel4_IRQHandler:0000000000000000 DMA1_Channel4_IRQHandler
     /tmp/cc2puB6n.s:2251   .text.DMA1_Channel4_IRQHandler:0000000000000018 $d
     /tmp/cc2puB6n.s:2257   .text.DMA1_Channel5_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:2264   .text.DMA1_Channel5_IRQHandler:0000000000000000 DMA1_Channel5_IRQHandler
     /tmp/cc2puB6n.s:2303   .text.DMA1_Channel5_IRQHandler:0000000000000018 $d
     /tmp/cc2puB6n.s:2309   .text.DMA1_Channel6_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:2316   .text.DMA1_Channel6_IRQHandler:0000000000000000 DMA1_Channel6_IRQHandler
     /tmp/cc2puB6n.s:2359   .text.DMA1_Channel6_IRQHandler:0000000000000018 $d
     /tmp/cc2puB6n.s:2365   .text.DMA1_Channel7_IRQHandler:0000000000000000 $t
     /tmp/cc2puB6n.s:2372   .text.DMA1_Channel7_IRQHandler:0000000000000000 DMA1_Channel7_IRQHandler
     /tmp/cc2puB6n.s:2415   .text.DMA1_Channel7_IRQHandler:0000000000000018 $d
     /tmp/cc2puB6n.s:2421   .text.init_clock:0000000000000000 $t
     /tmp/cc2puB6n.s:2428   .text.init_clock:0000000000000000 init_clock
     /tmp/cc2puB6n.s:2594   .text.init_clock:0000000000000080 $d
     /tmp/cc2puB6n.s:2603   .text._ZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10EEENS4_ILS3_1ELi11EEENS4_ILS3_1ELi12EEEEERDav:0000000000000000 $t
     /tmp/cc2puB6n.s:2610   .text._ZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10EEENS4_ILS3_1ELi11EEENS4_ILS3_1ELi12EEEEERDav:0000000000000000 _ZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10EEENS4_ILS3_1ELi11EEENS4_ILS3_1ELi12EEEEERDav
     /tmp/cc2puB6n.s:3423   .text._ZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10EEENS4_ILS3_1ELi11EEENS4_ILS3_1ELi12EEEEERDav:0000000000000218 $d
     /tmp/cc2puB6n.s:5371   .bss._ZGVZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10EEENS4_ILS3_1ELi11EEENS4_ILS3_1ELi12EEEEERDavE4uart:0000000000000000 _ZGVZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10EEENS4_ILS3_1ELi11EEENS4_ILS3_1ELi12EEEEERDavE4uart
     /tmp/cc2puB6n.s:5427   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi9EEELNS1_7PinModeE2EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi9EEELNS1_7PinModeE2EEERDavE3pin
     /tmp/cc2puB6n.s:5434   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi9EEELNS1_7PinModeE2EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi9EEELNS1_7PinModeE2EEERDavE3pin
     /tmp/cc2puB6n.s:5413   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi10EEELNS1_7PinModeE3EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi10EEELNS1_7PinModeE3EEERDavE3pin
     /tmp/cc2puB6n.s:5420   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi10EEELNS1_7PinModeE3EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi10EEELNS1_7PinModeE3EEERDavE3pin
     /tmp/cc2puB6n.s:5399   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi11EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi11EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/cc2puB6n.s:5406   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi11EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi11EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/cc2puB6n.s:5385   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi12EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi12EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/cc2puB6n.s:5392   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi12EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 _ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi12EEELNS1_7PinModeE1EEERDavE3pin
     /tmp/cc2puB6n.s:5378   .bss._ZZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10EEENS4_ILS3_1ELi11EEENS4_ILS3_1ELi12EEEEERDavE4uart:0000000000000000 _ZZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10EEENS4_ILS3_1ELi11EEENS4_ILS3_1ELi12EEEEERDavE4uart
     /tmp/cc2puB6n.s:3449   .text._ZN10UART_sizedILj255EE7receiveEv:0000000000000000 $t
     /tmp/cc2puB6n.s:3456   .text._ZN10UART_sizedILj255EE7receiveEv:0000000000000000 _ZN10UART_sizedILj255EE7receiveEv
     /tmp/cc2puB6n.s:3594   .text._ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE13dma_interrupt9interruptEv:0000000000000000 $t
     /tmp/cc2puB6n.s:3600   .text._ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE13dma_interrupt9interruptEv:0000000000000000 _ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE13dma_interrupt9interruptEv
     /tmp/cc2puB6n.s:3645   .text._Z5CRC16IPhEDaT_S1_:0000000000000000 $t
     /tmp/cc2puB6n.s:3652   .text._Z5CRC16IPhEDaT_S1_:0000000000000000 _Z5CRC16IPhEDaT_S1_
     /tmp/cc2puB6n.s:3724   .text._Z5CRC16IPhEDaT_S1_:0000000000000020 $d
     /tmp/cc2puB6n.s:5541   .rodata._ZL13crc_low_table:0000000000000000 _ZL13crc_low_table
     /tmp/cc2puB6n.s:5801   .rodata._ZL14crc_high_table:0000000000000000 _ZL14crc_high_table
     /tmp/cc2puB6n.s:3730   .text._ZN10Net_bufferILj255EE9pop_frontEv:0000000000000000 $t
     /tmp/cc2puB6n.s:3737   .text._ZN10Net_bufferILj255EE9pop_frontEv:0000000000000000 _ZN10Net_bufferILj255EE9pop_frontEv
ARM GAS  /tmp/cc2puB6n.s 			page 176


     /tmp/cc2puB6n.s:3775   .text._ZN10Net_bufferILj255EElsERKh:0000000000000000 $t
     /tmp/cc2puB6n.s:3782   .text._ZN10Net_bufferILj255EElsERKh:0000000000000000 _ZN10Net_bufferILj255EElsERKh
     /tmp/cc2puB6n.s:3812   .text._ZN10Net_bufferILj255EElsEt:0000000000000000 $t
     /tmp/cc2puB6n.s:3819   .text._ZN10Net_bufferILj255EElsEt:0000000000000000 _ZN10Net_bufferILj255EElsEt
     /tmp/cc2puB6n.s:3878   .text._ZN10UART_sizedILj255EE8transmitEv:0000000000000000 $t
     /tmp/cc2puB6n.s:3885   .text._ZN10UART_sizedILj255EE8transmitEv:0000000000000000 _ZN10UART_sizedILj255EE8transmitEv
     /tmp/cc2puB6n.s:4032   .text._ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE12answer_errorENS3_10Error_codeE:0000000000000000 $t
     /tmp/cc2puB6n.s:4038   .text._ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE12answer_errorENS3_10Error_codeE:0000000000000000 _ZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE12answer_errorENS3_10Error_codeE
     /tmp/cc2puB6n.s:4220   .text._ZN10Net_bufferILj255EErsERt:0000000000000000 $t
     /tmp/cc2puB6n.s:4227   .text._ZN10Net_bufferILj255EErsERt:0000000000000000 _ZN10Net_bufferILj255EErsERt
     /tmp/cc2puB6n.s:4289   .text.startup.main:0000000000000000 $t
     /tmp/cc2puB6n.s:4296   .text.startup.main:0000000000000000 main
     /tmp/cc2puB6n.s:5210   .text.startup.main:000000000000032c $d
     /tmp/cc2puB6n.s:5231   .text.startup._GLOBAL__sub_I_tickUpdater:0000000000000000 $t
     /tmp/cc2puB6n.s:5237   .text.startup._GLOBAL__sub_I_tickUpdater:0000000000000000 _GLOBAL__sub_I_tickUpdater
     /tmp/cc2puB6n.s:5356   .text.startup._GLOBAL__sub_I_tickUpdater:000000000000002c $d
     /tmp/cc2puB6n.s:5363   .init_array:0000000000000000 $d
     /tmp/cc2puB6n.s:6062   .rodata._ZTV5Timer:0000000000000000 _ZTV5Timer
     /tmp/cc2puB6n.s:5368   .bss._ZGVZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10EEENS4_ILS3_1ELi11EEENS4_ILS3_1ELi12EEEEERDavE4uart:0000000000000000 $d
     /tmp/cc2puB6n.s:5375   .bss._ZZN10UART_sizedILj255EE4makeILN3mcu6PeriphE7ENS2_4Pin_ILS3_1ELi9EEENS4_ILS3_1ELi10EEENS4_ILS3_1ELi11EEENS4_ILS3_1ELi12EEEEERDavE4uart:0000000000000000 $d
     /tmp/cc2puB6n.s:5382   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi12EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/cc2puB6n.s:5389   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi12EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/cc2puB6n.s:5396   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi11EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/cc2puB6n.s:5403   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi11EEELNS1_7PinModeE1EEERDavE3pin:0000000000000000 $d
     /tmp/cc2puB6n.s:5410   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi10EEELNS1_7PinModeE3EEERDavE3pin:0000000000000000 $d
     /tmp/cc2puB6n.s:5417   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi10EEELNS1_7PinModeE3EEERDavE3pin:0000000000000000 $d
     /tmp/cc2puB6n.s:5424   .bss._ZGVZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi9EEELNS1_7PinModeE2EEERDavE3pin:0000000000000000 $d
     /tmp/cc2puB6n.s:5431   .bss._ZZN3Pin4makeIN3mcu4Pin_ILNS1_6PeriphE1ELi9EEELNS1_7PinModeE2EEERDavE3pin:0000000000000000 $d
     /tmp/cc2puB6n.s:5508   .bss.interrupt_DMA_channel7:0000000000000000 interrupt_DMA_channel7
     /tmp/cc2puB6n.s:5501   .bss.interrupt_DMA_channel6:0000000000000000 interrupt_DMA_channel6
     /tmp/cc2puB6n.s:5494   .bss.interrupt_DMA_channel5:0000000000000000 interrupt_DMA_channel5
     /tmp/cc2puB6n.s:5487   .bss.interrupt_DMA_channel4:0000000000000000 interrupt_DMA_channel4
     /tmp/cc2puB6n.s:5480   .bss.interrupt_DMA_channel3:0000000000000000 interrupt_DMA_channel3
     /tmp/cc2puB6n.s:5473   .bss.interrupt_DMA_channel2:0000000000000000 interrupt_DMA_channel2
     /tmp/cc2puB6n.s:5466   .bss.interrupt_DMA_channel1:0000000000000000 interrupt_DMA_channel1
     /tmp/cc2puB6n.s:5529   .bss.interrupt_usart3:0000000000000000 interrupt_usart3
     /tmp/cc2puB6n.s:5522   .bss.interrupt_usart2:0000000000000000 interrupt_usart2
     /tmp/cc2puB6n.s:5515   .bss.interrupt_usart1:0000000000000000 interrupt_usart1
     /tmp/cc2puB6n.s:5536   .bss.tickUpdater:0000000000000000 tickUpdater
     /tmp/cc2puB6n.s:5448   .bss._ZGVZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE4makeILNS_6PeriphE7ENS_4Pin_ILS5_1ELi9EEENS6_ILS5_1ELi10EEENS6_ILS5_1ELi11EEENS6_ILS5_1ELi12EEEEERDahN10UART_sizedILj255EE8SettingsEE6modbus:0000000000000000 $d
     /tmp/cc2puB6n.s:5452   .bss._ZGVZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE4makeILNS_6PeriphE7ENS_4Pin_ILS5_1ELi9EEENS6_ILS5_1ELi10EEENS6_ILS5_1ELi11EEENS6_ILS5_1ELi12EEEEERDahN10UART_sizedILj255EE8SettingsEE6modbus:0000000000000000 _ZGVZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE4makeILNS_6PeriphE7ENS_4Pin_ILS5_1ELi9EEENS6_ILS5_1ELi10EEENS6_ILS5_1ELi11EEENS6_ILS5_1ELi12EEEEERDahN10UART_sizedILj255EE8SettingsEE6modbus
     /tmp/cc2puB6n.s:5455   .bss._ZZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE4makeILNS_6PeriphE7ENS_4Pin_ILS5_1ELi9EEENS6_ILS5_1ELi10EEENS6_ILS5_1ELi11EEENS6_ILS5_1ELi12EEEEERDahN10UART_sizedILj255EE8SettingsEE6modbus:0000000000000000 $d
     /tmp/cc2puB6n.s:5459   .bss._ZZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE4makeILNS_6PeriphE7ENS_4Pin_ILS5_1ELi9EEENS6_ILS5_1ELi10EEENS6_ILS5_1ELi11EEENS6_ILS5_1ELi12EEEEERDahN10UART_sizedILj255EE8SettingsEE6modbus:0000000000000000 _ZZN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE4makeILNS_6PeriphE7ENS_4Pin_ILS5_1ELi9EEENS6_ILS5_1ELi10EEENS6_ILS5_1ELi11EEENS6_ILS5_1ELi12EEEEERDahN10UART_sizedILj255EE8SettingsEE6modbus
     /tmp/cc2puB6n.s:5462   .bss.interrupt_DMA_channel1:0000000000000000 $d
     /tmp/cc2puB6n.s:5469   .bss.interrupt_DMA_channel2:0000000000000000 $d
     /tmp/cc2puB6n.s:5476   .bss.interrupt_DMA_channel3:0000000000000000 $d
     /tmp/cc2puB6n.s:5483   .bss.interrupt_DMA_channel4:0000000000000000 $d
     /tmp/cc2puB6n.s:5490   .bss.interrupt_DMA_channel5:0000000000000000 $d
     /tmp/cc2puB6n.s:5497   .bss.interrupt_DMA_channel6:0000000000000000 $d
     /tmp/cc2puB6n.s:5504   .bss.interrupt_DMA_channel7:0000000000000000 $d
     /tmp/cc2puB6n.s:5511   .bss.interrupt_usart1:0000000000000000 $d
     /tmp/cc2puB6n.s:5518   .bss.interrupt_usart2:0000000000000000 $d
     /tmp/cc2puB6n.s:5525   .bss.interrupt_usart3:0000000000000000 $d
     /tmp/cc2puB6n.s:5532   .bss.tickUpdater:0000000000000000 $d
     /tmp/cc2puB6n.s:6059   .rodata._ZTV5Timer:0000000000000000 $d
     /tmp/cc2puB6n.s:6067   .rodata._ZTVN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE13dma_interruptE:0000000000000000 $d
     /tmp/cc2puB6n.s:6071   .rodata._ZTVN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE13dma_interruptE:0000000000000000 _ZTVN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE13dma_interruptE
ARM GAS  /tmp/cc2puB6n.s 			page 177


     /tmp/cc2puB6n.s:6076   .rodata._ZTVN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE14uart_interruptE:0000000000000000 $d
     /tmp/cc2puB6n.s:6080   .rodata._ZTVN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE14uart_interruptE:0000000000000000 _ZTVN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsE14uart_interruptE
     /tmp/cc2puB6n.s:6085   .rodata._ZTVN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsEE:0000000000000000 $d
     /tmp/cc2puB6n.s:6089   .rodata._ZTVN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsEE:0000000000000000 _ZTVN3mcu12Modbus_slaveIZ4mainE7In_regsZ4mainE8Out_regsEE

UNDEFINED SYMBOLS
__aeabi_uidiv
__aeabi_idiv
__gnu_thumb1_case_uqi
__cxa_guard_acquire
__cxa_guard_release
