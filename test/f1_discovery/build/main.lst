ARM GAS  /tmp/ccTd0H1B.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.cpp"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._ZN5Timer6notifyEv,"ax",%progbits
  16              		.align	1
  17              		.global	_ZN5Timer6notifyEv
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	_ZN5Timer6notifyEv:
  24              	.LFB240:
  25              		.file 1 "../../src/timers.h"
   1:../../src/timers.h **** #pragma once
   2:../../src/timers.h **** 
   3:../../src/timers.h **** #include <cstdint>
   4:../../src/timers.h **** #include "systick.h"
   5:../../src/timers.h **** #include "subscriber.h"
   6:../../src/timers.h **** 
   7:../../src/timers.h **** 
   8:../../src/timers.h **** struct TickUpdater : Publisher
   9:../../src/timers.h **** {
  10:../../src/timers.h **** #if not defined(TEST) 
  11:../../src/timers.h ****    TickUpdater() { mcu::make_reference<mcu::Periph::SysTick>().initInterrupt<1>(); }
  12:../../src/timers.h **** #endif
  13:../../src/timers.h **** } tickUpdater;
  14:../../src/timers.h **** 
  15:../../src/timers.h **** extern "C" void SysTick_Handler()
  16:../../src/timers.h **** {
  17:../../src/timers.h ****    tickUpdater.notify();
  18:../../src/timers.h **** }
  19:../../src/timers.h **** 
  20:../../src/timers.h **** 
  21:../../src/timers.h **** class TickSubscriber : Subscriber
  22:../../src/timers.h **** {
  23:../../src/timers.h **** protected:
  24:../../src/timers.h ****    bool subscribed {false};
  25:../../src/timers.h ****    void subscribe();
  26:../../src/timers.h ****    void unsubscribe();
  27:../../src/timers.h **** };
  28:../../src/timers.h **** 
  29:../../src/timers.h **** 
  30:../../src/timers.h **** 
  31:../../src/timers.h **** class Timer : TickSubscriber
  32:../../src/timers.h **** {
  33:../../src/timers.h **** public:
ARM GAS  /tmp/ccTd0H1B.s 			page 2


  34:../../src/timers.h ****    Timer() = default;
  35:../../src/timers.h ****    Timer (uint32_t ms) { start(ms); }
  36:../../src/timers.h **** 
  37:../../src/timers.h ****    void     start   (uint32_t ms); /// –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å—á—ë—Ç —Å —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω
  38:../../src/timers.h ****    bool     event();   /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ —Ç–∞–π–º–µ—Ä –Ω–∞—Ç–∏–∫–∞–ª –∏ –ø–µ—
  39:../../src/timers.h ****    bool     done();    /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ —Ç–∞–π–º–µ—Ä –Ω–∞—Ç–∏–∫–∞–ª –∏ –ù–ï 
  40:../../src/timers.h ****    void     pause();   /// –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—á—ë—Ç, –Ω–æ –Ω–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—á
  41:../../src/timers.h ****    void     start();   /// –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å—á—ë—Ç —Å —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å—á—ë—
  42:../../src/timers.h ****    void     stop();    /// –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—á—ë—Ç –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—á—ë—Ç—á–∏
  43:../../src/timers.h ****    bool     isGreater (uint32_t val); /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ —Å—á—ë—Ç—á–∏–∫ –Ω–∞—Ç
  44:../../src/timers.h ****    bool     isCount(); /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –µ—Å–ª–∏ —Å—á–∏—Ç–∞–µ—Ç, –Ω–æ –Ω–µ –¥–æ—Å—á–∏—
  45:../../src/timers.h ****    uint32_t timePassed(); /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –Ω–∞—Ç–∏–∫–∞–ª
  46:../../src/timers.h ****    uint32_t timeLeft();   /// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å
  47:../../src/timers.h ****    template<class function>
  48:../../src/timers.h ****    void     event (function); /// –≤—ã–ø–æ–ª–Ω—è–µ—Ç function, –∫–æ–≥–¥–∞ –¥–æ—Ç–∏–∫–∞–ª –∏ –ø–µ—Ä–
  49:../../src/timers.h **** 
  50:../../src/timers.h ****    volatile uint32_t timeSet {0};
  51:../../src/timers.h **** private:
  52:../../src/timers.h ****    volatile uint32_t timePassed_ {0};	
  53:../../src/timers.h **** 
  54:../../src/timers.h ****    void notify() override;
  55:../../src/timers.h **** };
  56:../../src/timers.h **** 
  57:../../src/timers.h **** 
  58:../../src/timers.h **** 
  59:../../src/timers.h **** void Timer::notify()
  60:../../src/timers.h **** {
  26              		.loc 1 60 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  61:../../src/timers.h ****    timePassed_++;
  32              		.loc 1 61 0
  33 0000 4369     		ldr	r3, [r0, #20]
  62:../../src/timers.h **** }
  34              		.loc 1 62 0
  35              		@ sp needed
  61:../../src/timers.h ****    timePassed_++;
  36              		.loc 1 61 0
  37 0002 0133     		adds	r3, r3, #1
  38 0004 4361     		str	r3, [r0, #20]
  39              		.loc 1 62 0
  40 0006 7047     		bx	lr
  41              		.cfi_endproc
  42              	.LFE240:
  44              		.section	.text._ZN3mcu3DMA21clear_interrupt_flagsENS_8DMA_bits7ChannelE,"ax",%progbits
  45              		.align	1
  46              		.global	_ZN3mcu3DMA21clear_interrupt_flagsENS_8DMA_bits7ChannelE
  47              		.syntax unified
  48              		.code	16
  49              		.thumb_func
  50              		.fpu softvfp
  52              	_ZN3mcu3DMA21clear_interrupt_flagsENS_8DMA_bits7ChannelE:
  53              	.LFB129:
  54              		.file 2 "../../src/periph/f1_dma.h"
ARM GAS  /tmp/ccTd0H1B.s 			page 3


   1:../../src/periph/f1_dma.h **** #pragma once
   2:../../src/periph/f1_dma.h **** 
   3:../../src/periph/f1_dma.h **** #include "f1_bits_dma.h"
   4:../../src/periph/f1_dma.h **** 
   5:../../src/periph/f1_dma.h **** namespace mcu {
   6:../../src/periph/f1_dma.h **** 
   7:../../src/periph/f1_dma.h **** class DMA 
   8:../../src/periph/f1_dma.h **** {
   9:../../src/periph/f1_dma.h ****    __IO DMA_bits::ISR  ISR;  // DMA interrupt status register     offset: 0x00
  10:../../src/periph/f1_dma.h ****    __IO DMA_bits::IFCR IFCR; // DMA interrupt flag clear register offset: 0x04
  11:../../src/periph/f1_dma.h **** 
  12:../../src/periph/f1_dma.h **** public:
  13:../../src/periph/f1_dma.h ****    using CMSIS_type = DMA_TypeDef;
  14:../../src/periph/f1_dma.h ****    using Channel    = DMA_bits::Channel;
  15:../../src/periph/f1_dma.h **** 
  16:../../src/periph/f1_dma.h ****    template <Periph dma, Periph rcc = Periph::RCC> DMA& clock_enable(){make_reference<rcc>().templa
  17:../../src/periph/f1_dma.h ****    void clear_interrupt_flags         (Channel);
  18:../../src/periph/f1_dma.h ****    bool is_transfer_complete_interrupt(Channel);
  19:../../src/periph/f1_dma.h **** };
  20:../../src/periph/f1_dma.h **** 
  21:../../src/periph/f1_dma.h **** 
  22:../../src/periph/f1_dma.h **** template <Periph dma> std::enable_if_t<dma == Periph::DMA1, DMA&> make_reference() {return *reinter
  23:../../src/periph/f1_dma.h **** 
  24:../../src/periph/f1_dma.h **** 
  25:../../src/periph/f1_dma.h **** 
  26:../../src/periph/f1_dma.h **** 
  27:../../src/periph/f1_dma.h **** 
  28:../../src/periph/f1_dma.h **** 
  29:../../src/periph/f1_dma.h **** 
  30:../../src/periph/f1_dma.h **** 
  31:../../src/periph/f1_dma.h **** 
  32:../../src/periph/f1_dma.h **** 
  33:../../src/periph/f1_dma.h **** 
  34:../../src/periph/f1_dma.h **** 
  35:../../src/periph/f1_dma.h **** 
  36:../../src/periph/f1_dma.h **** 
  37:../../src/periph/f1_dma.h **** 
  38:../../src/periph/f1_dma.h **** 
  39:../../src/periph/f1_dma.h **** void DMA::clear_interrupt_flags(Channel channel)
  40:../../src/periph/f1_dma.h **** {
  55              		.loc 2 40 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL1:
  41:../../src/periph/f1_dma.h ****    if      (channel == Channel::_1) IFCR.CGIF1 = true;
  61              		.loc 2 41 0
  62 0000 0129     		cmp	r1, #1
  63 0002 03D1     		bne	.L3
  64              		.loc 2 41 0 is_stmt 0 discriminator 1
  65 0004 0379     		ldrb	r3, [r0, #4]
  66 0006 1943     		orrs	r1, r3
  67              	.LVL2:
  68 0008 0171     		strb	r1, [r0, #4]
  69              	.L2:
  42:../../src/periph/f1_dma.h ****    else if (channel == Channel::_2) IFCR.CGIF2 = true;
ARM GAS  /tmp/ccTd0H1B.s 			page 4


  43:../../src/periph/f1_dma.h ****    else if (channel == Channel::_3) IFCR.CGIF3 = true;
  44:../../src/periph/f1_dma.h ****    else if (channel == Channel::_4) IFCR.CGIF4 = true;
  45:../../src/periph/f1_dma.h ****    else if (channel == Channel::_5) IFCR.CGIF5 = true;
  46:../../src/periph/f1_dma.h ****    else if (channel == Channel::_6) IFCR.CGIF6 = true;
  47:../../src/periph/f1_dma.h ****    else if (channel == Channel::_7) IFCR.CGIF7 = true;
  48:../../src/periph/f1_dma.h **** }
  70              		.loc 2 48 0 is_stmt 1
  71              		@ sp needed
  72 000a 7047     		bx	lr
  73              	.LVL3:
  74              	.L3:
  42:../../src/periph/f1_dma.h ****    else if (channel == Channel::_2) IFCR.CGIF2 = true;
  75              		.loc 2 42 0
  76 000c 0229     		cmp	r1, #2
  77 000e 04D1     		bne	.L5
  42:../../src/periph/f1_dma.h ****    else if (channel == Channel::_2) IFCR.CGIF2 = true;
  78              		.loc 2 42 0 is_stmt 0 discriminator 1
  79 0010 1023     		movs	r3, #16
  80 0012 0279     		ldrb	r2, [r0, #4]
  81 0014 1343     		orrs	r3, r2
  82 0016 0371     		strb	r3, [r0, #4]
  83 0018 F7E7     		b	.L2
  84              	.L5:
  43:../../src/periph/f1_dma.h ****    else if (channel == Channel::_4) IFCR.CGIF4 = true;
  85              		.loc 2 43 0 is_stmt 1
  86 001a 0329     		cmp	r1, #3
  87 001c 04D1     		bne	.L6
  43:../../src/periph/f1_dma.h ****    else if (channel == Channel::_4) IFCR.CGIF4 = true;
  88              		.loc 2 43 0 is_stmt 0 discriminator 1
  89 001e 0123     		movs	r3, #1
  90 0020 4279     		ldrb	r2, [r0, #5]
  91              	.L10:
  44:../../src/periph/f1_dma.h ****    else if (channel == Channel::_5) IFCR.CGIF5 = true;
  92              		.loc 2 44 0 is_stmt 1 discriminator 1
  93 0022 1343     		orrs	r3, r2
  94 0024 4371     		strb	r3, [r0, #5]
  95 0026 F0E7     		b	.L2
  96              	.L6:
  44:../../src/periph/f1_dma.h ****    else if (channel == Channel::_5) IFCR.CGIF5 = true;
  97              		.loc 2 44 0 is_stmt 0
  98 0028 0429     		cmp	r1, #4
  99 002a 02D1     		bne	.L7
  44:../../src/periph/f1_dma.h ****    else if (channel == Channel::_5) IFCR.CGIF5 = true;
 100              		.loc 2 44 0 discriminator 1
 101 002c 4279     		ldrb	r2, [r0, #5]
 102 002e 1023     		movs	r3, #16
 103 0030 F7E7     		b	.L10
 104              	.L7:
  45:../../src/periph/f1_dma.h ****    else if (channel == Channel::_6) IFCR.CGIF6 = true;
 105              		.loc 2 45 0 is_stmt 1
 106 0032 0529     		cmp	r1, #5
 107 0034 04D1     		bne	.L8
  45:../../src/periph/f1_dma.h ****    else if (channel == Channel::_6) IFCR.CGIF6 = true;
 108              		.loc 2 45 0 is_stmt 0 discriminator 1
 109 0036 0123     		movs	r3, #1
 110 0038 8279     		ldrb	r2, [r0, #6]
 111              	.L11:
ARM GAS  /tmp/ccTd0H1B.s 			page 5


  46:../../src/periph/f1_dma.h ****    else if (channel == Channel::_7) IFCR.CGIF7 = true;
 112              		.loc 2 46 0 is_stmt 1 discriminator 1
 113 003a 1343     		orrs	r3, r2
 114 003c 8371     		strb	r3, [r0, #6]
 115 003e E4E7     		b	.L2
 116              	.L8:
  46:../../src/periph/f1_dma.h ****    else if (channel == Channel::_7) IFCR.CGIF7 = true;
 117              		.loc 2 46 0 is_stmt 0
 118 0040 0629     		cmp	r1, #6
 119 0042 02D1     		bne	.L9
  46:../../src/periph/f1_dma.h ****    else if (channel == Channel::_7) IFCR.CGIF7 = true;
 120              		.loc 2 46 0 discriminator 1
 121 0044 8279     		ldrb	r2, [r0, #6]
 122 0046 1023     		movs	r3, #16
 123 0048 F7E7     		b	.L11
 124              	.L9:
  47:../../src/periph/f1_dma.h **** }
 125              		.loc 2 47 0 is_stmt 1
 126 004a 0729     		cmp	r1, #7
 127 004c DDD1     		bne	.L2
  47:../../src/periph/f1_dma.h **** }
 128              		.loc 2 47 0 is_stmt 0 discriminator 1
 129 004e 0123     		movs	r3, #1
 130 0050 C279     		ldrb	r2, [r0, #7]
 131 0052 1343     		orrs	r3, r2
 132 0054 C371     		strb	r3, [r0, #7]
 133              		.loc 2 48 0 is_stmt 1 discriminator 1
 134 0056 D8E7     		b	.L2
 135              		.cfi_endproc
 136              	.LFE129:
 138              		.section	.text._ZN3mcu3DMA30is_transfer_complete_interruptENS_8DMA_bits7ChannelE,"ax",%progbits
 139              		.align	1
 140              		.global	_ZN3mcu3DMA30is_transfer_complete_interruptENS_8DMA_bits7ChannelE
 141              		.syntax unified
 142              		.code	16
 143              		.thumb_func
 144              		.fpu softvfp
 146              	_ZN3mcu3DMA30is_transfer_complete_interruptENS_8DMA_bits7ChannelE:
 147              	.LFB130:
  49:../../src/periph/f1_dma.h **** 
  50:../../src/periph/f1_dma.h **** bool DMA::is_transfer_complete_interrupt(Channel channel)
  51:../../src/periph/f1_dma.h **** {
 148              		.loc 2 51 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 153              	.LVL4:
 154              		.loc 2 51 0
 155 0000 0300     		movs	r3, r0
  52:../../src/periph/f1_dma.h ****    if      (channel == Channel::_1) return ISR.TCIF1;
 156              		.loc 2 52 0
 157 0002 0129     		cmp	r1, #1
 158 0004 02D1     		bne	.L13
 159              		.loc 2 52 0 is_stmt 0 discriminator 1
 160 0006 0078     		ldrb	r0, [r0]
 161              	.LVL5:
ARM GAS  /tmp/ccTd0H1B.s 			page 6


 162              	.L21:
  53:../../src/periph/f1_dma.h ****    else if (channel == Channel::_2) return ISR.TCIF2;
  54:../../src/periph/f1_dma.h ****    else if (channel == Channel::_3) return ISR.TCIF3;
  55:../../src/periph/f1_dma.h ****    else if (channel == Channel::_4) return ISR.TCIF4;
  56:../../src/periph/f1_dma.h ****    else if (channel == Channel::_5) return ISR.TCIF5;
  57:../../src/periph/f1_dma.h ****    else if (channel == Channel::_6) return ISR.TCIF6;
  58:../../src/periph/f1_dma.h ****    else if (channel == Channel::_7) return ISR.TCIF7;
 163              		.loc 2 58 0 is_stmt 1 discriminator 1
 164 0008 8007     		lsls	r0, r0, #30
 165 000a 03E0     		b	.L22
 166              	.LVL6:
 167              	.L13:
  53:../../src/periph/f1_dma.h ****    else if (channel == Channel::_2) return ISR.TCIF2;
 168              		.loc 2 53 0
 169 000c 0229     		cmp	r1, #2
 170 000e 03D1     		bne	.L15
  53:../../src/periph/f1_dma.h ****    else if (channel == Channel::_2) return ISR.TCIF2;
 171              		.loc 2 53 0 is_stmt 0 discriminator 1
 172 0010 0078     		ldrb	r0, [r0]
 173              	.LVL7:
 174              	.L23:
  57:../../src/periph/f1_dma.h ****    else if (channel == Channel::_7) return ISR.TCIF7;
 175              		.loc 2 57 0 is_stmt 1 discriminator 1
 176 0012 8006     		lsls	r0, r0, #26
 177              	.L22:
 178              		.loc 2 58 0 discriminator 1
 179 0014 C00F     		lsrs	r0, r0, #31
 180              	.L14:
  59:../../src/periph/f1_dma.h ****    else return false;
  60:../../src/periph/f1_dma.h **** }
 181              		.loc 2 60 0
 182              		@ sp needed
 183 0016 7047     		bx	lr
 184              	.LVL8:
 185              	.L15:
  54:../../src/periph/f1_dma.h ****    else if (channel == Channel::_4) return ISR.TCIF4;
 186              		.loc 2 54 0
 187 0018 0329     		cmp	r1, #3
 188 001a 01D1     		bne	.L16
  54:../../src/periph/f1_dma.h ****    else if (channel == Channel::_4) return ISR.TCIF4;
 189              		.loc 2 54 0 is_stmt 0 discriminator 1
 190 001c 4078     		ldrb	r0, [r0, #1]
 191              	.LVL9:
 192 001e F3E7     		b	.L21
 193              	.LVL10:
 194              	.L16:
  55:../../src/periph/f1_dma.h ****    else if (channel == Channel::_5) return ISR.TCIF5;
 195              		.loc 2 55 0 is_stmt 1
 196 0020 0429     		cmp	r1, #4
 197 0022 01D1     		bne	.L17
  55:../../src/periph/f1_dma.h ****    else if (channel == Channel::_5) return ISR.TCIF5;
 198              		.loc 2 55 0 is_stmt 0 discriminator 1
 199 0024 4078     		ldrb	r0, [r0, #1]
 200              	.LVL11:
 201 0026 F4E7     		b	.L23
 202              	.LVL12:
 203              	.L17:
ARM GAS  /tmp/ccTd0H1B.s 			page 7


  56:../../src/periph/f1_dma.h ****    else if (channel == Channel::_6) return ISR.TCIF6;
 204              		.loc 2 56 0 is_stmt 1
 205 0028 0529     		cmp	r1, #5
 206 002a 01D1     		bne	.L18
  56:../../src/periph/f1_dma.h ****    else if (channel == Channel::_6) return ISR.TCIF6;
 207              		.loc 2 56 0 is_stmt 0 discriminator 1
 208 002c 8078     		ldrb	r0, [r0, #2]
 209              	.LVL13:
 210 002e EBE7     		b	.L21
 211              	.LVL14:
 212              	.L18:
  57:../../src/periph/f1_dma.h ****    else if (channel == Channel::_7) return ISR.TCIF7;
 213              		.loc 2 57 0 is_stmt 1
 214 0030 0629     		cmp	r1, #6
 215 0032 01D1     		bne	.L19
  57:../../src/periph/f1_dma.h ****    else if (channel == Channel::_7) return ISR.TCIF7;
 216              		.loc 2 57 0 is_stmt 0 discriminator 1
 217 0034 8078     		ldrb	r0, [r0, #2]
 218              	.LVL15:
 219 0036 ECE7     		b	.L23
 220              	.LVL16:
 221              	.L19:
  59:../../src/periph/f1_dma.h **** }
 222              		.loc 2 59 0 is_stmt 1
 223 0038 0020     		movs	r0, #0
 224              	.LVL17:
  58:../../src/periph/f1_dma.h ****    else return false;
 225              		.loc 2 58 0
 226 003a 0729     		cmp	r1, #7
 227 003c EBD1     		bne	.L14
  58:../../src/periph/f1_dma.h ****    else return false;
 228              		.loc 2 58 0 is_stmt 0 discriminator 1
 229 003e D878     		ldrb	r0, [r3, #3]
 230 0040 E2E7     		b	.L21
 231              		.cfi_endproc
 232              	.LFE130:
 234              		.section	.text.SysTick_Handler,"ax",%progbits
 235              		.align	1
 236              		.global	SysTick_Handler
 237              		.syntax unified
 238              		.code	16
 239              		.thumb_func
 240              		.fpu softvfp
 242              	SysTick_Handler:
 243              	.LFB227:
  16:../../src/timers.h ****    tickUpdater.notify();
 244              		.loc 1 16 0 is_stmt 1
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              	.LVL18:
 249              	.LBB265:
 250              	.LBB266:
 251              		.file 3 "../../src/subscriber.h"
   1:../../src/subscriber.h **** #pragma once
   2:../../src/subscriber.h **** 
   3:../../src/subscriber.h **** #pragma once
ARM GAS  /tmp/ccTd0H1B.s 			page 8


   4:../../src/subscriber.h **** 
   5:../../src/subscriber.h **** #include "list.h"
   6:../../src/subscriber.h **** 
   7:../../src/subscriber.h **** struct Subscriber : Listable<Subscriber> {
   8:../../src/subscriber.h ****    virtual void notify() = 0;
   9:../../src/subscriber.h **** };
  10:../../src/subscriber.h **** 
  11:../../src/subscriber.h **** struct Publisher : private List<Subscriber>
  12:../../src/subscriber.h **** {
  13:../../src/subscriber.h ****    void subscribe  (Subscriber* p) { push_back(p); }
  14:../../src/subscriber.h ****    void unsubscribe(Subscriber* p) { remove(p);    }
  15:../../src/subscriber.h ****    // —Å—Å—ã–ª–∫–∞, —á—Ç–æ–±—ã –Ω–µ –∫–æ–ø–∏—Ä–æ–≤–∞–ª –∫–∞–∂–¥—ã–π subscriber –∏–∑ *this
  16:../../src/subscriber.h ****    void notify() {
  17:../../src/subscriber.h ****       for (auto& subscriber : *this)
 252              		.loc 3 17 0
 253 0000 054B     		ldr	r3, .L27
 254              	.LBE266:
 255              	.LBE265:
  16:../../src/timers.h ****    tickUpdater.notify();
 256              		.loc 1 16 0
 257 0002 10B5     		push	{r4, lr}
 258              	.LCFI0:
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 4, -8
 261              		.cfi_offset 14, -4
 262              	.LBB270:
 263              	.LBB269:
 264              		.loc 3 17 0
 265 0004 1C68     		ldr	r4, [r3]
 266              	.LVL19:
 267              	.L26:
 268 0006 002C     		cmp	r4, #0
 269 0008 05D0     		beq	.L24
  18:../../src/subscriber.h ****          subscriber.notify();
 270              		.loc 3 18 0
 271 000a 2368     		ldr	r3, [r4]
 272 000c 2000     		movs	r0, r4
 273 000e 1B68     		ldr	r3, [r3]
 274 0010 9847     		blx	r3
 275              	.LVL20:
 276              	.LBB267:
 277              	.LBB268:
 278              		.file 4 "../../src/list.h"
   1:../../src/list.h **** #pragma once
   2:../../src/list.h **** 
   3:../../src/list.h **** 
   4:../../src/list.h **** template<class T> struct Listable
   5:../../src/list.h **** {
   6:../../src/list.h ****    T* prev {nullptr};
   7:../../src/list.h ****    T* next {nullptr};
   8:../../src/list.h **** };
   9:../../src/list.h **** 
  10:../../src/list.h **** template<class T> class List
  11:../../src/list.h **** {
  12:../../src/list.h ****    T* first {nullptr};
  13:../../src/list.h ****    T* last  {nullptr};
  14:../../src/list.h **** public:
ARM GAS  /tmp/ccTd0H1B.s 			page 9


  15:../../src/list.h ****    void push_back  (T*);
  16:../../src/list.h ****    void push_front (T*);
  17:../../src/list.h ****    void remove     (T*);
  18:../../src/list.h ****    
  19:../../src/list.h ****    class Iterator
  20:../../src/list.h ****    {
  21:../../src/list.h ****       T* p {nullptr};
  22:../../src/list.h ****    public:
  23:../../src/list.h ****       Iterator (T*);
  24:../../src/list.h ****       Iterator() = default;
  25:../../src/list.h **** 
  26:../../src/list.h ****       T&        operator*  () const;
  27:../../src/list.h ****       bool      operator!= (const Iterator&) const;
  28:../../src/list.h ****       Iterator& operator++ ();
  29:../../src/list.h ****    };
  30:../../src/list.h **** 
  31:../../src/list.h ****    Iterator begin();
  32:../../src/list.h ****    Iterator end();
  33:../../src/list.h **** };
  34:../../src/list.h **** 
  35:../../src/list.h **** 
  36:../../src/list.h **** 
  37:../../src/list.h **** 
  38:../../src/list.h **** 
  39:../../src/list.h **** template<class T>
  40:../../src/list.h **** void List<T>::push_back (T* p)
  41:../../src/list.h **** {
  42:../../src/list.h ****    p->prev = last;
  43:../../src/list.h ****    if (last)
  44:../../src/list.h ****       last->next = p;
  45:../../src/list.h ****    last = p;
  46:../../src/list.h ****    if (not first)
  47:../../src/list.h ****       first = p;
  48:../../src/list.h **** }
  49:../../src/list.h **** 
  50:../../src/list.h **** 
  51:../../src/list.h **** template<class T>
  52:../../src/list.h **** void List<T>::push_front (T* p)
  53:../../src/list.h **** {
  54:../../src/list.h ****    // –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω
  55:../../src/list.h **** }
  56:../../src/list.h **** 
  57:../../src/list.h **** 
  58:../../src/list.h **** template<class T>
  59:../../src/list.h **** void List<T>::remove (T* p)
  60:../../src/list.h **** {
  61:../../src/list.h ****    if (p->prev and p->next) {       // –µ—Å–ª–∏ –≤ —Å–µ—Ä–µ–¥–∏–Ω–∫–µ
  62:../../src/list.h ****       p->prev->next = p->next;
  63:../../src/list.h ****       p->next->prev = p->prev;
  64:../../src/list.h ****    } else if (p->next) {            // –µ—Å–ª–∏ –ø–µ—Ä–≤—ã–π
  65:../../src/list.h ****       first = p->next;
  66:../../src/list.h ****       first->prev = nullptr;
  67:../../src/list.h ****       if (not first) last = nullptr;
  68:../../src/list.h ****    } else if (p->prev) {            // –µ—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π
  69:../../src/list.h ****       last = p->prev;
  70:../../src/list.h ****       last->next = nullptr;
  71:../../src/list.h ****       if (not last) first = nullptr;
ARM GAS  /tmp/ccTd0H1B.s 			page 10


  72:../../src/list.h ****    } else {                         // –µ—Å–ª–∏ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π 
  73:../../src/list.h ****       first = nullptr;
  74:../../src/list.h ****       last  = nullptr;
  75:../../src/list.h ****    }
  76:../../src/list.h ****    p->prev = nullptr;
  77:../../src/list.h ****    p->next = nullptr;
  78:../../src/list.h **** 
  79:../../src/list.h **** }
  80:../../src/list.h **** 
  81:../../src/list.h **** 
  82:../../src/list.h **** template<class T>
  83:../../src/list.h **** typename List<T>::Iterator List<T>::begin()
  84:../../src/list.h **** {
  85:../../src/list.h ****    return List<T>::Iterator {first};
  86:../../src/list.h **** }
  87:../../src/list.h **** 
  88:../../src/list.h **** 
  89:../../src/list.h **** template<class T>
  90:../../src/list.h **** typename List<T>::Iterator List<T>::end()
  91:../../src/list.h **** {
  92:../../src/list.h ****    return List<T>::Iterator();
  93:../../src/list.h **** }
  94:../../src/list.h **** 
  95:../../src/list.h **** 
  96:../../src/list.h **** 
  97:../../src/list.h **** 
  98:../../src/list.h **** 
  99:../../src/list.h **** 
 100:../../src/list.h **** /// Iterator
 101:../../src/list.h **** template<class T>
 102:../../src/list.h **** List<T>::Iterator::Iterator (T* other) : p {other} {}
 103:../../src/list.h **** 
 104:../../src/list.h **** template<class T>
 105:../../src/list.h **** T& List<T>::Iterator::operator* () const 
 106:../../src/list.h **** {
 107:../../src/list.h ****    return *p;
 108:../../src/list.h **** }
 109:../../src/list.h **** 
 110:../../src/list.h **** template<class T>
 111:../../src/list.h **** bool List<T>::Iterator::operator!= (const List<T>::Iterator& other) const
 112:../../src/list.h **** {
 113:../../src/list.h ****    return p != other.p;
 114:../../src/list.h **** }
 115:../../src/list.h **** 
 116:../../src/list.h **** template<class T>
 117:../../src/list.h **** typename List<T>::Iterator& List<T>::Iterator::operator++ ()
 118:../../src/list.h **** {
 119:../../src/list.h ****    p = p->next;
 279              		.loc 4 119 0
 280 0012 A468     		ldr	r4, [r4, #8]
 281              	.LVL21:
 282 0014 F7E7     		b	.L26
 283              	.LVL22:
 284              	.L24:
 285              	.LBE268:
 286              	.LBE267:
 287              	.LBE269:
ARM GAS  /tmp/ccTd0H1B.s 			page 11


 288              	.LBE270:
  18:../../src/timers.h **** 
 289              		.loc 1 18 0
 290              		@ sp needed
 291              	.LVL23:
 292 0016 10BD     		pop	{r4, pc}
 293              	.L28:
 294              		.align	2
 295              	.L27:
 296 0018 00000000 		.word	.LANCHOR0
 297              		.cfi_endproc
 298              	.LFE227:
 300              		.section	.text._ZN5Timer5eventEv,"ax",%progbits
 301              		.align	1
 302              		.global	_ZN5Timer5eventEv
 303              		.syntax unified
 304              		.code	16
 305              		.thumb_func
 306              		.fpu softvfp
 308              	_ZN5Timer5eventEv:
 309              	.LFB242:
  63:../../src/timers.h **** 
  64:../../src/timers.h **** 
  65:../../src/timers.h **** 
  66:../../src/timers.h **** void Timer::start (uint32_t ms)
  67:../../src/timers.h **** {
  68:../../src/timers.h ****    timeSet = ms;
  69:../../src/timers.h ****    subscribe();
  70:../../src/timers.h **** }
  71:../../src/timers.h **** 
  72:../../src/timers.h **** 
  73:../../src/timers.h **** bool Timer::event()
  74:../../src/timers.h **** {
 310              		.loc 1 74 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL24:
  75:../../src/timers.h ****    if (timePassed_ >= timeSet) {
 316              		.loc 1 75 0
 317 0000 4169     		ldr	r1, [r0, #20]
 318 0002 0269     		ldr	r2, [r0, #16]
 319 0004 0023     		movs	r3, #0
 320 0006 9142     		cmp	r1, r2
 321 0008 01D3     		bcc	.L30
  76:../../src/timers.h ****       timePassed_ = 0;
 322              		.loc 1 76 0
 323 000a 4361     		str	r3, [r0, #20]
  77:../../src/timers.h ****       return (true);
 324              		.loc 1 77 0
 325 000c 0133     		adds	r3, r3, #1
 326              	.L30:
  78:../../src/timers.h ****    } else {
  79:../../src/timers.h ****       return (false);
  80:../../src/timers.h ****    }
  81:../../src/timers.h **** }
ARM GAS  /tmp/ccTd0H1B.s 			page 12


 327              		.loc 1 81 0
 328 000e 1800     		movs	r0, r3
 329              	.LVL25:
 330              		@ sp needed
 331 0010 7047     		bx	lr
 332              		.cfi_endproc
 333              	.LFE242:
 335              		.section	.text._ZN5Timer4doneEv,"ax",%progbits
 336              		.align	1
 337              		.global	_ZN5Timer4doneEv
 338              		.syntax unified
 339              		.code	16
 340              		.thumb_func
 341              		.fpu softvfp
 343              	_ZN5Timer4doneEv:
 344              	.LFB245:
  82:../../src/timers.h **** 
  83:../../src/timers.h **** 
  84:../../src/timers.h **** template<class Functor>
  85:../../src/timers.h **** void Timer::event (Functor functor)
  86:../../src/timers.h **** {
  87:../../src/timers.h ****    if (timePassed_ >= timeSet) {
  88:../../src/timers.h ****       timePassed_ = 0;
  89:../../src/timers.h ****       functor();
  90:../../src/timers.h ****    }
  91:../../src/timers.h **** }
  92:../../src/timers.h **** 
  93:../../src/timers.h **** 
  94:../../src/timers.h **** void Timer::stop()
  95:../../src/timers.h **** {
  96:../../src/timers.h ****    timePassed_ = 0;
  97:../../src/timers.h ****    unsubscribe();
  98:../../src/timers.h **** }
  99:../../src/timers.h **** 
 100:../../src/timers.h **** 
 101:../../src/timers.h **** bool     Timer::done()       { return timePassed_ >= timeSet; }
 345              		.loc 1 101 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 350              	.LVL26:
 351              		.loc 1 101 0
 352 0000 4269     		ldr	r2, [r0, #20]
 353 0002 0369     		ldr	r3, [r0, #16]
 354 0004 0020     		movs	r0, #0
 355              	.LVL27:
 356 0006 9A42     		cmp	r2, r3
 357 0008 4041     		adcs	r0, r0, r0
 358              		@ sp needed
 359 000a C0B2     		uxtb	r0, r0
 360 000c 7047     		bx	lr
 361              		.cfi_endproc
 362              	.LFE245:
 364              		.section	.text._ZN5Timer7isCountEv,"ax",%progbits
 365              		.align	1
 366              		.global	_ZN5Timer7isCountEv
ARM GAS  /tmp/ccTd0H1B.s 			page 13


 367              		.syntax unified
 368              		.code	16
 369              		.thumb_func
 370              		.fpu softvfp
 372              	_ZN5Timer7isCountEv:
 373              	.LFB248:
 102:../../src/timers.h **** void     Timer::pause()      { unsubscribe(); }
 103:../../src/timers.h **** void     Timer::start()      { subscribe();  }
 104:../../src/timers.h **** bool     Timer::isCount()    { return subscribed; }
 374              		.loc 1 104 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 379              	.LVL28:
 380              		.loc 1 104 0
 381 0000 007B     		ldrb	r0, [r0, #12]
 382              	.LVL29:
 383              		@ sp needed
 384 0002 7047     		bx	lr
 385              		.cfi_endproc
 386              	.LFE248:
 388              		.section	.text._ZN5Timer10timePassedEv,"ax",%progbits
 389              		.align	1
 390              		.global	_ZN5Timer10timePassedEv
 391              		.syntax unified
 392              		.code	16
 393              		.thumb_func
 394              		.fpu softvfp
 396              	_ZN5Timer10timePassedEv:
 397              	.LFB249:
 105:../../src/timers.h **** uint32_t Timer::timePassed() { return timePassed_; }
 398              		.loc 1 105 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402              		@ link register save eliminated.
 403              	.LVL30:
 404              		.loc 1 105 0
 405 0000 4069     		ldr	r0, [r0, #20]
 406              	.LVL31:
 407              		@ sp needed
 408 0002 7047     		bx	lr
 409              		.cfi_endproc
 410              	.LFE249:
 412              		.section	.text._ZN5Timer8timeLeftEv,"ax",%progbits
 413              		.align	1
 414              		.global	_ZN5Timer8timeLeftEv
 415              		.syntax unified
 416              		.code	16
 417              		.thumb_func
 418              		.fpu softvfp
 420              	_ZN5Timer8timeLeftEv:
 421              	.LFB250:
 106:../../src/timers.h **** uint32_t Timer::timeLeft(  ) { return timeSet - timePassed_; }
 422              		.loc 1 106 0
 423              		.cfi_startproc
ARM GAS  /tmp/ccTd0H1B.s 			page 14


 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              		@ link register save eliminated.
 427              	.LVL32:
 428              		.loc 1 106 0
 429 0000 0369     		ldr	r3, [r0, #16]
 430 0002 4069     		ldr	r0, [r0, #20]
 431              	.LVL33:
 432              		@ sp needed
 433 0004 181A     		subs	r0, r3, r0
 434 0006 7047     		bx	lr
 435              		.cfi_endproc
 436              	.LFE250:
 438              		.section	.text._ZN5Timer9isGreaterEm,"ax",%progbits
 439              		.align	1
 440              		.global	_ZN5Timer9isGreaterEm
 441              		.syntax unified
 442              		.code	16
 443              		.thumb_func
 444              		.fpu softvfp
 446              	_ZN5Timer9isGreaterEm:
 447              	.LFB251:
 107:../../src/timers.h **** bool     Timer::isGreater (uint32_t val) { return timePassed_ > val; }
 448              		.loc 1 107 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 453              	.LVL34:
 454              		.loc 1 107 0
 455 0000 4069     		ldr	r0, [r0, #20]
 456              	.LVL35:
 457              		@ sp needed
 458 0002 8142     		cmp	r1, r0
 459 0004 8041     		sbcs	r0, r0, r0
 460 0006 4042     		rsbs	r0, r0, #0
 461 0008 7047     		bx	lr
 462              		.cfi_endproc
 463              	.LFE251:
 465              		.section	.text._ZN14TickSubscriber11unsubscribeEv,"ax",%progbits
 466              		.align	1
 467              		.global	_ZN14TickSubscriber11unsubscribeEv
 468              		.syntax unified
 469              		.code	16
 470              		.thumb_func
 471              		.fpu softvfp
 473              	_ZN14TickSubscriber11unsubscribeEv:
 474              	.LFB252:
 108:../../src/timers.h **** 
 109:../../src/timers.h **** 
 110:../../src/timers.h **** 
 111:../../src/timers.h **** void TickSubscriber::unsubscribe()
 112:../../src/timers.h **** {
 475              		.loc 1 112 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 0
 478              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccTd0H1B.s 			page 15


 479              		@ link register save eliminated.
 480              	.LVL36:
 113:../../src/timers.h ****    if (subscribed) {
 481              		.loc 1 113 0
 482 0000 037B     		ldrb	r3, [r0, #12]
 483 0002 002B     		cmp	r3, #0
 484 0004 0DD0     		beq	.L37
 485              	.LVL37:
 486              	.LBB277:
 487              	.LBB278:
 114:../../src/timers.h ****       subscribed = false;
 488              		.loc 1 114 0
 489 0006 0023     		movs	r3, #0
 490              	.LBB279:
 491              	.LBB280:
 492              	.LBB281:
  61:../../src/list.h ****       p->prev->next = p->next;
 493              		.loc 4 61 0
 494 0008 4268     		ldr	r2, [r0, #4]
 495              	.LBE281:
 496              	.LBE280:
 497              	.LBE279:
 498              		.loc 1 114 0
 499 000a 0373     		strb	r3, [r0, #12]
 500              	.LVL38:
 501 000c 8368     		ldr	r3, [r0, #8]
 502              	.LBB286:
 503              	.LBB284:
 504              	.LBB282:
  61:../../src/list.h ****       p->prev->next = p->next;
 505              		.loc 4 61 0
 506 000e 002A     		cmp	r2, #0
 507 0010 0ED0     		beq	.L39
 508 0012 002B     		cmp	r3, #0
 509 0014 08D0     		beq	.L40
  62:../../src/list.h ****       p->next->prev = p->prev;
 510              		.loc 4 62 0
 511 0016 9360     		str	r3, [r2, #8]
  63:../../src/list.h ****    } else if (p->next) {            // –µ—Å–ª–∏ –ø–µ—Ä–≤—ã–π
 512              		.loc 4 63 0
 513 0018 8368     		ldr	r3, [r0, #8]
 514              	.L48:
  66:../../src/list.h ****       if (not first) last = nullptr;
 515              		.loc 4 66 0
 516 001a 5A60     		str	r2, [r3, #4]
 517              	.L41:
  76:../../src/list.h ****    p->next = nullptr;
 518              		.loc 4 76 0
 519 001c 0023     		movs	r3, #0
 520 001e 4360     		str	r3, [r0, #4]
  77:../../src/list.h **** 
 521              		.loc 4 77 0
 522 0020 8360     		str	r3, [r0, #8]
 523              	.LVL39:
 524              	.L37:
 525              	.LBE282:
 526              	.LBE284:
ARM GAS  /tmp/ccTd0H1B.s 			page 16


 527              	.LBE286:
 528              	.LBE278:
 529              	.LBE277:
 115:../../src/timers.h ****       tickUpdater.unsubscribe (this);
 116:../../src/timers.h ****    }
 117:../../src/timers.h **** }
 530              		.loc 1 117 0
 531              		@ sp needed
 532 0022 7047     		bx	lr
 533              	.LVL40:
 534              	.L42:
 535              	.LBB289:
 536              	.LBB288:
 537              	.LBB287:
 538              	.LBB285:
 539              	.LBB283:
  65:../../src/list.h ****       first->prev = nullptr;
 540              		.loc 4 65 0
 541 0024 0B60     		str	r3, [r1]
 542 0026 F8E7     		b	.L48
 543              	.L40:
  69:../../src/list.h ****       last->next = nullptr;
 544              		.loc 4 69 0
 545 0028 0449     		ldr	r1, .L49
  70:../../src/list.h ****       if (not last) first = nullptr;
 546              		.loc 4 70 0
 547 002a 9360     		str	r3, [r2, #8]
  69:../../src/list.h ****       last->next = nullptr;
 548              		.loc 4 69 0
 549 002c 4A60     		str	r2, [r1, #4]
 550 002e F5E7     		b	.L41
 551              	.L39:
 552 0030 0249     		ldr	r1, .L49
  64:../../src/list.h ****       first = p->next;
 553              		.loc 4 64 0
 554 0032 002B     		cmp	r3, #0
 555 0034 F6D1     		bne	.L42
  73:../../src/list.h ****       last  = nullptr;
 556              		.loc 4 73 0
 557 0036 0B60     		str	r3, [r1]
  74:../../src/list.h ****    }
 558              		.loc 4 74 0
 559 0038 4B60     		str	r3, [r1, #4]
 560 003a EFE7     		b	.L41
 561              	.L50:
 562              		.align	2
 563              	.L49:
 564 003c 00000000 		.word	.LANCHOR0
 565              	.LBE283:
 566              	.LBE285:
 567              	.LBE287:
 568              	.LBE288:
 569              	.LBE289:
 570              		.cfi_endproc
 571              	.LFE252:
 573              		.section	.text._ZN5Timer4stopEv,"ax",%progbits
 574              		.align	1
ARM GAS  /tmp/ccTd0H1B.s 			page 17


 575              		.global	_ZN5Timer4stopEv
 576              		.syntax unified
 577              		.code	16
 578              		.thumb_func
 579              		.fpu softvfp
 581              	_ZN5Timer4stopEv:
 582              	.LFB244:
  95:../../src/timers.h ****    timePassed_ = 0;
 583              		.loc 1 95 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 587              	.LVL41:
  96:../../src/timers.h ****    unsubscribe();
 588              		.loc 1 96 0
 589 0000 0023     		movs	r3, #0
  95:../../src/timers.h ****    timePassed_ = 0;
 590              		.loc 1 95 0
 591 0002 10B5     		push	{r4, lr}
 592              	.LCFI1:
 593              		.cfi_def_cfa_offset 8
 594              		.cfi_offset 4, -8
 595              		.cfi_offset 14, -4
  96:../../src/timers.h ****    unsubscribe();
 596              		.loc 1 96 0
 597 0004 4361     		str	r3, [r0, #20]
  97:../../src/timers.h **** }
 598              		.loc 1 97 0
 599 0006 FFF7FEFF 		bl	_ZN14TickSubscriber11unsubscribeEv
 600              	.LVL42:
  98:../../src/timers.h **** 
 601              		.loc 1 98 0
 602              		@ sp needed
 603 000a 10BD     		pop	{r4, pc}
 604              		.cfi_endproc
 605              	.LFE244:
 607              		.section	.text._ZN5Timer5pauseEv,"ax",%progbits
 608              		.align	1
 609              		.global	_ZN5Timer5pauseEv
 610              		.syntax unified
 611              		.code	16
 612              		.thumb_func
 613              		.fpu softvfp
 615              	_ZN5Timer5pauseEv:
 616              	.LFB246:
 102:../../src/timers.h **** void     Timer::start()      { subscribe();  }
 617              		.loc 1 102 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              	.LVL43:
 622 0000 10B5     		push	{r4, lr}
 623              	.LCFI2:
 624              		.cfi_def_cfa_offset 8
 625              		.cfi_offset 4, -8
 626              		.cfi_offset 14, -4
 102:../../src/timers.h **** void     Timer::start()      { subscribe();  }
ARM GAS  /tmp/ccTd0H1B.s 			page 18


 627              		.loc 1 102 0
 628 0002 FFF7FEFF 		bl	_ZN14TickSubscriber11unsubscribeEv
 629              	.LVL44:
 630              		@ sp needed
 631 0006 10BD     		pop	{r4, pc}
 632              		.cfi_endproc
 633              	.LFE246:
 635              		.section	.text._ZN14TickSubscriber9subscribeEv,"ax",%progbits
 636              		.align	1
 637              		.global	_ZN14TickSubscriber9subscribeEv
 638              		.syntax unified
 639              		.code	16
 640              		.thumb_func
 641              		.fpu softvfp
 643              	_ZN14TickSubscriber9subscribeEv:
 644              	.LFB253:
 118:../../src/timers.h **** 
 119:../../src/timers.h **** 
 120:../../src/timers.h **** void TickSubscriber::subscribe()
 121:../../src/timers.h **** {
 645              		.loc 1 121 0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 649              		@ link register save eliminated.
 650              	.LVL45:
 122:../../src/timers.h ****    if (not subscribed) {
 651              		.loc 1 122 0
 652 0000 037B     		ldrb	r3, [r0, #12]
 653 0002 002B     		cmp	r3, #0
 654 0004 0CD1     		bne	.L53
 655              	.LVL46:
 656              	.LBB296:
 657              	.LBB297:
 123:../../src/timers.h ****       subscribed = true;
 658              		.loc 1 123 0
 659 0006 0133     		adds	r3, r3, #1
 660 0008 0373     		strb	r3, [r0, #12]
 661              	.LVL47:
 662              	.LBB298:
 663              	.LBB299:
 664              	.LBB300:
  42:../../src/list.h ****    if (last)
 665              		.loc 4 42 0
 666 000a 064B     		ldr	r3, .L61
 667 000c 5A68     		ldr	r2, [r3, #4]
 668 000e 4260     		str	r2, [r0, #4]
  43:../../src/list.h ****       last->next = p;
 669              		.loc 4 43 0
 670 0010 002A     		cmp	r2, #0
 671 0012 00D0     		beq	.L56
  44:../../src/list.h ****    last = p;
 672              		.loc 4 44 0
 673 0014 9060     		str	r0, [r2, #8]
 674              	.L56:
  46:../../src/list.h ****       first = p;
 675              		.loc 4 46 0
ARM GAS  /tmp/ccTd0H1B.s 			page 19


 676 0016 1A68     		ldr	r2, [r3]
  45:../../src/list.h ****    if (not first)
 677              		.loc 4 45 0
 678 0018 5860     		str	r0, [r3, #4]
  46:../../src/list.h ****       first = p;
 679              		.loc 4 46 0
 680 001a 002A     		cmp	r2, #0
 681 001c 00D1     		bne	.L53
  47:../../src/list.h **** }
 682              		.loc 4 47 0
 683 001e 1860     		str	r0, [r3]
 684              	.LVL48:
 685              	.L53:
 686              	.LBE300:
 687              	.LBE299:
 688              	.LBE298:
 689              	.LBE297:
 690              	.LBE296:
 124:../../src/timers.h ****       tickUpdater.subscribe (this);
 125:../../src/timers.h ****    }
 126:../../src/timers.h **** }...
 691              		.loc 1 126 0
 692              		@ sp needed
 693 0020 7047     		bx	lr
 694              	.L62:
 695 0022 C046     		.align	2
 696              	.L61:
 697 0024 00000000 		.word	.LANCHOR0
 698              		.cfi_endproc
 699              	.LFE253:
 701              		.section	.text._ZN5Timer5startEm,"ax",%progbits
 702              		.align	1
 703              		.global	_ZN5Timer5startEm
 704              		.syntax unified
 705              		.code	16
 706              		.thumb_func
 707              		.fpu softvfp
 709              	_ZN5Timer5startEm:
 710              	.LFB241:
  67:../../src/timers.h **** {
 711              		.loc 1 67 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715              	.LVL49:
 716 0000 10B5     		push	{r4, lr}
 717              	.LCFI3:
 718              		.cfi_def_cfa_offset 8
 719              		.cfi_offset 4, -8
 720              		.cfi_offset 14, -4
  68:../../src/timers.h ****    timeSet = ms;
 721              		.loc 1 68 0
 722 0002 0161     		str	r1, [r0, #16]
  69:../../src/timers.h ****    subscribe();
 723              		.loc 1 69 0
 724 0004 FFF7FEFF 		bl	_ZN14TickSubscriber9subscribeEv
 725              	.LVL50:
ARM GAS  /tmp/ccTd0H1B.s 			page 20


  70:../../src/timers.h **** }
 726              		.loc 1 70 0
 727              		@ sp needed
 728 0008 10BD     		pop	{r4, pc}
 729              		.cfi_endproc
 730              	.LFE241:
 732              		.section	.text._ZN5Timer5startEv,"ax",%progbits
 733              		.align	1
 734              		.global	_ZN5Timer5startEv
 735              		.syntax unified
 736              		.code	16
 737              		.thumb_func
 738              		.fpu softvfp
 740              	_ZN5Timer5startEv:
 741              	.LFB247:
 103:../../src/timers.h **** void     Timer::start()      { subscribe();  }
 742              		.loc 1 103 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              	.LVL51:
 747 0000 10B5     		push	{r4, lr}
 748              	.LCFI4:
 749              		.cfi_def_cfa_offset 8
 750              		.cfi_offset 4, -8
 751              		.cfi_offset 14, -4
 103:../../src/timers.h **** void     Timer::start()      { subscribe();  }
 752              		.loc 1 103 0
 753 0002 FFF7FEFF 		bl	_ZN14TickSubscriber9subscribeEv
 754              	.LVL52:
 755              		@ sp needed
 756 0006 10BD     		pop	{r4, pc}
 757              		.cfi_endproc
 758              	.LFE247:
 760              		.section	.text.init_clock,"ax",%progbits
 761              		.align	1
 762              		.global	init_clock
 763              		.syntax unified
 764              		.code	16
 765              		.thumb_func
 766              		.fpu softvfp
 768              	init_clock:
 769              	.LFB263:
 770              		.file 5 "main.cpp"
   1:main.cpp      **** #define STM32F103xB
   2:main.cpp      **** #define F_OSC   8000000UL
   3:main.cpp      **** #define F_CPU   72000000UL
   4:main.cpp      **** #include "rcc.h"
   5:main.cpp      **** #include "pin.h"
   6:main.cpp      **** // // #include "timers.h"
   7:main.cpp      **** // // #include "pwm.h"
   8:main.cpp      **** #include "uart.h"
   9:main.cpp      **** // #include "fifo.h"
  10:main.cpp      **** # include "modbus_slave.h"
  11:main.cpp      **** 
  12:main.cpp      **** /// —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—å—Å—è –ø–µ—Ä–≤–æ–π –≤ startup —Ñ–∞–π–ª–µ
  13:main.cpp      **** extern "C" void init_clock ()
ARM GAS  /tmp/ccTd0H1B.s 			page 21


  14:main.cpp      **** {
 771              		.loc 5 14 0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 0
 774              		@ frame_needed = 0, uses_anonymous_args = 0
 775              		@ link register save eliminated.
  15:main.cpp      ****    // FLASH::set (FLASH::Latency::_1);
  16:main.cpp      **** 
  17:main.cpp      **** //    mcu::make_reference<mcu::Periph::RCC>()
  18:main.cpp      **** //       .set (mcu::RCC:: AHBprescaler::AHBnotdiv)
  19:main.cpp      **** //       .set (mcu::RCC:: APBprescaler::APBnotdiv)
  20:main.cpp      **** //       .set (mcu::RCC::  SystemClock::CS_PLL)
  21:main.cpp      **** //       .set (mcu::RCC::    PLLsource::HSIdiv2)
  22:main.cpp      **** //       .set (mcu::RCC::PLLmultiplier::_12)
  23:main.cpp      **** //       .on_PLL()
  24:main.cpp      **** //       .wait_PLL_ready();
  25:main.cpp      **** }
 776              		.loc 5 25 0
 777              		@ sp needed
 778 0000 7047     		bx	lr
 779              		.cfi_endproc
 780              	.LFE263:
 782              		.section	.text.startup.main,"ax",%progbits
 783              		.align	1
 784              		.global	main
 785              		.syntax unified
 786              		.code	16
 787              		.thumb_func
 788              		.fpu softvfp
 790              	main:
 791              	.LFB264:
  26:main.cpp      **** 
  27:main.cpp      **** 
  28:main.cpp      **** 
  29:main.cpp      **** int main()
  30:main.cpp      **** {
 792              		.loc 5 30 0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 304
 795              		@ frame_needed = 0, uses_anonymous_args = 0
 796              	.LVL53:
 797              	.LBB419:
 798              	.LBB420:
 799              	.LBB421:
 800              	.LBB422:
 801              	.LBB423:
 802              	.LBB424:
 803              	.LBB425:
 804              		.file 6 "../../src/periph/f1_rcc.h"
   1:../../src/periph/f1_rcc.h **** #pragma once
   2:../../src/periph/f1_rcc.h **** 
   3:../../src/periph/f1_rcc.h **** #include "f1_bits_rcc.h"
   4:../../src/periph/f1_rcc.h **** 
   5:../../src/periph/f1_rcc.h **** namespace mcu {
   6:../../src/periph/f1_rcc.h **** 
   7:../../src/periph/f1_rcc.h **** class RCC {
   8:../../src/periph/f1_rcc.h ****    __IO RCC_bits::CR      CR;       // RCC clock control register,                offset: 0x00
ARM GAS  /tmp/ccTd0H1B.s 			page 22


   9:../../src/periph/f1_rcc.h ****    __IO RCC_bits::CFGR    CFGR;     // RCC clock configuration register,          offset: 0x04
  10:../../src/periph/f1_rcc.h ****    __IO uint32_t          CIR;      // RCC clock interrupt register,              offset: 0x08
  11:../../src/periph/f1_rcc.h ****    __IO uint32_t          APB2RSTR; // RCC APB2 peripheral reset register,        offset: 0x0C
  12:../../src/periph/f1_rcc.h ****    __IO uint32_t          APB1RSTR; // RCC APB1 peripheral reset register,        offset: 0x10
  13:../../src/periph/f1_rcc.h ****    __IO RCC_bits::AHBENR  AHBENR;   // RCC AHB peripheral clock register,         offset: 0x14
  14:../../src/periph/f1_rcc.h ****    __IO RCC_bits::APB2ENR APB2ENR;  // RCC APB2 peripheral clock enable register, offset: 0x18
  15:../../src/periph/f1_rcc.h ****    __IO RCC_bits::APB1ENR APB1ENR;  // RCC APB1 peripheral clock enable register, offset: 0x1C
  16:../../src/periph/f1_rcc.h ****    __IO uint32_t          BDCR;     // RCC Backup domain control register,        offset: 0x20
  17:../../src/periph/f1_rcc.h ****    __IO uint32_t          CSR;      // RCC clock control & status register,       offset: 0x24
  18:../../src/periph/f1_rcc.h **** 
  19:../../src/periph/f1_rcc.h **** public:
  20:../../src/periph/f1_rcc.h ****    using CMSIS_type    = RCC_TypeDef;
  21:../../src/periph/f1_rcc.h ****    using AHBprescaler  = RCC_bits::CFGR::AHBprescaler;
  22:../../src/periph/f1_rcc.h ****    using APBprescaler  = RCC_bits::CFGR::APBprescaler;
  23:../../src/periph/f1_rcc.h ****    using ADCprescaler  = RCC_bits::CFGR::ADCprescaler;
  24:../../src/periph/f1_rcc.h ****    using SystemClock   = RCC_bits::CFGR::SystemClock;
  25:../../src/periph/f1_rcc.h ****    using PLLsource     = RCC_bits::CFGR::PLLsource;
  26:../../src/periph/f1_rcc.h ****    using PLLmultiplier = RCC_bits::CFGR::PLLmultiplier;
  27:../../src/periph/f1_rcc.h **** 
  28:../../src/periph/f1_rcc.h ****    RCC& set       (AHBprescaler  v) { CFGR.HPRE   = v; return *this; }
  29:../../src/periph/f1_rcc.h ****    RCC& set_APB1  (APBprescaler  v) { CFGR.PPRE1  = v; return *this; }
  30:../../src/periph/f1_rcc.h ****    RCC& set_APB2  (APBprescaler  v) { CFGR.PPRE2  = v; return *this; }
  31:../../src/periph/f1_rcc.h ****    RCC& set       (ADCprescaler  v) { CFGR.ADCPRE = v; return *this; }
  32:../../src/periph/f1_rcc.h ****    RCC& set       (SystemClock   v) { CFGR.SW     = v; return *this; }
  33:../../src/periph/f1_rcc.h ****    RCC& set       (PLLsource     v) { CFGR.PLLSRC = v; return *this; }
  34:../../src/periph/f1_rcc.h ****    RCC& set       (PLLmultiplier v) { CFGR.PLLMUL = v; return *this; }
  35:../../src/periph/f1_rcc.h **** 
  36:../../src/periph/f1_rcc.h ****    RCC& on_HSE        () { CR.HSEON = true;         return *this; }
  37:../../src/periph/f1_rcc.h ****    RCC& wait_HSE_ready() { while (not CR.HSERDY) {} return *this; }
  38:../../src/periph/f1_rcc.h ****    RCC& on_PLL        () { CR.PLLON = true;         return *this; }
  39:../../src/periph/f1_rcc.h ****    RCC& wait_PLL_ready() { while (not CR.PLLRDY) {} return *this; }
  40:../../src/periph/f1_rcc.h **** 
  41:../../src/periph/f1_rcc.h ****    size_t get_APB_clock (APBprescaler v)
  42:../../src/periph/f1_rcc.h ****    {return v == APBprescaler::APBnotdiv ? F_CPU     :
  43:../../src/periph/f1_rcc.h ****            v == APBprescaler::APBdiv2   ? F_CPU / 2 :
  44:../../src/periph/f1_rcc.h ****            v == APBprescaler::APBdiv4   ? F_CPU / 4 :
  45:../../src/periph/f1_rcc.h ****            v == APBprescaler::APBdiv8   ? F_CPU / 8 :
  46:../../src/periph/f1_rcc.h ****                                           F_CPU / 16;}
  47:../../src/periph/f1_rcc.h **** 
  48:../../src/periph/f1_rcc.h ****    size_t get_APB1_clock(){return get_APB_clock (CFGR.PPRE1);}
  49:../../src/periph/f1_rcc.h ****    size_t get_APB2_clock(){return get_APB_clock (CFGR.PPRE2);}
  50:../../src/periph/f1_rcc.h **** 
  51:../../src/periph/f1_rcc.h **** 
  52:../../src/periph/f1_rcc.h **** 
  53:../../src/periph/f1_rcc.h ****    template<Periph p> void clock_enable()
  54:../../src/periph/f1_rcc.h ****    {
  55:../../src/periph/f1_rcc.h ****       if      constexpr (p == Periph::GPIOA) APB2ENR.IOPAEN = true;
 805              		.loc 6 55 0
 806 0000 0420     		movs	r0, #4
 807              	.LBE425:
 808              	.LBE424:
 809              	.LBE423:
 810              	.LBB430:
 811              	.LBB431:
 812              	.LBB432:
 813              	.LBB433:
  56:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOB) APB2ENR.IOPBEN = true;
ARM GAS  /tmp/ccTd0H1B.s 			page 23


  57:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOC) APB2ENR.IOPCEN = true;
  58:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOD) APB2ENR.IOPDEN = true;
  59:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOE) APB2ENR.IOPEEN = true;
  60:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::AFIO ) APB2ENR.AFIOEN = true;
 814              		.loc 6 60 0
 815 0002 0121     		movs	r1, #1
 816              	.LBE433:
 817              	.LBE432:
 818              	.LBE431:
 819              	.LBE430:
 820              	.LBE422:
 821              	.LBE421:
 822              	.LBE420:
 823              	.LBE419:
 824              		.loc 5 30 0
 825 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 826              	.LCFI5:
 827              		.cfi_def_cfa_offset 20
 828              		.cfi_offset 4, -20
 829              		.cfi_offset 5, -16
 830              		.cfi_offset 6, -12
 831              		.cfi_offset 7, -8
 832              		.cfi_offset 14, -4
 833              	.LBB611:
 834              	.LBB608:
 835              	.LBB453:
 836              	.LBB449:
 837              	.LBB444:
 838              	.LBB438:
 839              	.LBB439:
 840              		.file 7 "../../src/periph/f1_gpio.h"
   1:../../src/periph/f1_gpio.h **** #pragma once
   2:../../src/periph/f1_gpio.h **** 
   3:../../src/periph/f1_gpio.h **** #include "f1_bits_gpio.h"
   4:../../src/periph/f1_gpio.h **** #include "rcc.h"
   5:../../src/periph/f1_gpio.h **** #include "f1_afio.h"
   6:../../src/periph/f1_gpio.h **** #include "pins.h"
   7:../../src/periph/f1_gpio.h **** 
   8:../../src/periph/f1_gpio.h **** namespace mcu {
   9:../../src/periph/f1_gpio.h **** 
  10:../../src/periph/f1_gpio.h **** enum class PinMode {Input, Output, USART1_TX, USART1_RX, USART2_TX, USART2_RX, USART3_TX, USART3_RX
  11:../../src/periph/f1_gpio.h **** 
  12:../../src/periph/f1_gpio.h **** class GPIO {
  13:../../src/periph/f1_gpio.h ****   __IO GPIO_bits::CR CR;   // Port configuration register      offset: 0x00
  14:../../src/periph/f1_gpio.h ****   __IO GPIO_bits::DR IDR;  // Port input data register         offset: 0x08
  15:../../src/periph/f1_gpio.h ****   __IO GPIO_bits::DR ODR;  // Port output data register        offset: 0x0C
  16:../../src/periph/f1_gpio.h ****   __IO uint32_t      BSRR; // Port bit set/reset register      offset: 0x10
  17:../../src/periph/f1_gpio.h ****   __IO uint32_t      BRR;  // Port bit reset register          offset: 0x14
  18:../../src/periph/f1_gpio.h ****   __IO uint32_t      LCKR; // Port configuration lock register offset: 0x18
  19:../../src/periph/f1_gpio.h **** 
  20:../../src/periph/f1_gpio.h **** public:
  21:../../src/periph/f1_gpio.h ****    using CMSIS_type = GPIO_TypeDef;
  22:../../src/periph/f1_gpio.h ****    using Mode       = GPIO_bits::CR::Mode;
  23:../../src/periph/f1_gpio.h ****    using Remap      = AFIO::Remap;
  24:../../src/periph/f1_gpio.h **** 
  25:../../src/periph/f1_gpio.h ****    template<Periph p, Periph v = Periph::RCC> GPIO& clock_enable() { make_reference<v>().template c
  26:../../src/periph/f1_gpio.h **** 
ARM GAS  /tmp/ccTd0H1B.s 			page 24


  27:../../src/periph/f1_gpio.h ****    void set     (size_t n) { BSRR |= (1 << n);              }
  28:../../src/periph/f1_gpio.h ****    void clear   (size_t n) { BSRR |= (1 << (n + 16));       }
  29:../../src/periph/f1_gpio.h ****    bool is_set  (size_t n) { return IDR.reg & (1 << n);     }
  30:../../src/periph/f1_gpio.h ****    void toggle  (size_t n) { is_set(n) ? clear(n) : set(n); }
  31:../../src/periph/f1_gpio.h **** 
  32:../../src/periph/f1_gpio.h ****    template<size_t> GPIO& set (Mode);
  33:../../src/periph/f1_gpio.h ****    template<class Pin_, PinMode, Periph rcc = Periph::RCC, Periph afio = Periph::AFIO> void init();
  34:../../src/periph/f1_gpio.h **** };
  35:../../src/periph/f1_gpio.h **** 
  36:../../src/periph/f1_gpio.h **** template<Periph gpio> std::enable_if_t<gpio == Periph::GPIOA, GPIO&> make_reference() { return *rei
  37:../../src/periph/f1_gpio.h **** template<Periph gpio> std::enable_if_t<gpio == Periph::GPIOB, GPIO&> make_reference() { return *rei
  38:../../src/periph/f1_gpio.h **** template<Periph gpio> std::enable_if_t<gpio == Periph::GPIOC, GPIO&> make_reference() { return *rei
  39:../../src/periph/f1_gpio.h **** template<Periph gpio> std::enable_if_t<gpio == Periph::GPIOD, GPIO&> make_reference() { return *rei
  40:../../src/periph/f1_gpio.h **** template<Periph gpio> std::enable_if_t<gpio == Periph::GPIOE, GPIO&> make_reference() { return *rei
  41:../../src/periph/f1_gpio.h **** 
  42:../../src/periph/f1_gpio.h **** 
  43:../../src/periph/f1_gpio.h **** 
  44:../../src/periph/f1_gpio.h **** 
  45:../../src/periph/f1_gpio.h **** 
  46:../../src/periph/f1_gpio.h **** 
  47:../../src/periph/f1_gpio.h **** 
  48:../../src/periph/f1_gpio.h **** 
  49:../../src/periph/f1_gpio.h **** 
  50:../../src/periph/f1_gpio.h **** 
  51:../../src/periph/f1_gpio.h **** 
  52:../../src/periph/f1_gpio.h **** 
  53:../../src/periph/f1_gpio.h **** 
  54:../../src/periph/f1_gpio.h **** 
  55:../../src/periph/f1_gpio.h **** 
  56:../../src/periph/f1_gpio.h **** 
  57:../../src/periph/f1_gpio.h **** 
  58:../../src/periph/f1_gpio.h **** 
  59:../../src/periph/f1_gpio.h **** 
  60:../../src/periph/f1_gpio.h **** template<size_t n> GPIO& GPIO::set (Mode v) 
  61:../../src/periph/f1_gpio.h **** {
  62:../../src/periph/f1_gpio.h ****    if      constexpr (n == 0)  { CR.CNF_MODE0  = v; return *this; }
  63:../../src/periph/f1_gpio.h ****    else if constexpr (n == 1)  { CR.CNF_MODE1  = v; return *this; }
  64:../../src/periph/f1_gpio.h ****    else if constexpr (n == 2)  { CR.CNF_MODE2  = v; return *this; }
  65:../../src/periph/f1_gpio.h ****    else if constexpr (n == 3)  { CR.CNF_MODE3  = v; return *this; }
  66:../../src/periph/f1_gpio.h ****    else if constexpr (n == 4)  { CR.CNF_MODE4  = v; return *this; }
  67:../../src/periph/f1_gpio.h ****    else if constexpr (n == 5)  { CR.CNF_MODE5  = v; return *this; }
  68:../../src/periph/f1_gpio.h ****    else if constexpr (n == 6)  { CR.CNF_MODE6  = v; return *this; }
  69:../../src/periph/f1_gpio.h ****    else if constexpr (n == 7)  { CR.CNF_MODE7  = v; return *this; }
  70:../../src/periph/f1_gpio.h ****    else if constexpr (n == 8)  { CR.CNF_MODE8  = v; return *this; }
  71:../../src/periph/f1_gpio.h ****    else if constexpr (n == 9)  { CR.CNF_MODE9  = v; return *this; }
 841              		.loc 7 71 0
 842 0006 F025     		movs	r5, #240
 843              	.LBE439:
 844              	.LBE438:
 845              	.LBE444:
 846              	.LBE449:
 847              	.LBE453:
 848              	.LBB454:
 849              	.LBB455:
 850              	.LBB456:
  49:../../src/periph/f1_rcc.h **** 
 851              		.loc 6 49 0
ARM GAS  /tmp/ccTd0H1B.s 			page 25


 852 0008 494B     		ldr	r3, .L67
 853              	.LBE456:
 854              	.LBE455:
 855              	.LBE454:
 856              	.LBB459:
 857              	.LBB460:
 858              	.LBB461:
  61:../../src/periph/f1_rcc.h **** 
  62:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::USART1) APB2ENR.USART1EN = true;
 859              		.loc 6 62 0
 860 000a 8027     		movs	r7, #128
 861              	.LBE461:
 862              	.LBE460:
 863              	.LBE459:
 864              	.LBB466:
 865              	.LBB458:
 866              	.LBB457:
  49:../../src/periph/f1_rcc.h **** 
 867              		.loc 6 49 0
 868 000c 5A68     		ldr	r2, [r3, #4]
 869              	.LVL54:
 870              	.LBE457:
 871              	.LBE458:
 872              	.LBE466:
 873              	.LBB467:
 874              	.LBB450:
 875              	.LBB445:
 876              	.LBB428:
 877              	.LBB426:
  55:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOB) APB2ENR.IOPBEN = true;
 878              		.loc 6 55 0
 879 000e 9A69     		ldr	r2, [r3, #24]
 880              	.LBE426:
 881              	.LBE428:
 882              	.LBE445:
 883              	.LBE450:
 884              	.LBE467:
 885              	.LBE608:
 886              	.LBE611:
 887              		.loc 5 30 0
 888 0010 CDB0     		sub	sp, sp, #308
 889              	.LCFI6:
 890              		.cfi_def_cfa_offset 328
 891              	.LBB612:
 892              	.LBB609:
 893              	.LBB468:
 894              	.LBB451:
 895              	.LBB446:
 896              	.LBB429:
 897              	.LBB427:
  55:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOB) APB2ENR.IOPBEN = true;
 898              		.loc 6 55 0
 899 0012 0243     		orrs	r2, r0
 900 0014 9A61     		str	r2, [r3, #24]
 901              	.LVL55:
 902              	.LBE427:
 903              	.LBE429:
ARM GAS  /tmp/ccTd0H1B.s 			page 26


 904              	.LBE446:
 905              	.LBB447:
 906              	.LBB441:
 907              	.LBB436:
 908              	.LBB434:
  60:../../src/periph/f1_rcc.h **** 
 909              		.loc 6 60 0
 910 0016 9A69     		ldr	r2, [r3, #24]
 911              	.LBE434:
 912              	.LBE436:
 913              	.LBE441:
 914              	.LBE447:
 915              	.LBE451:
 916              	.LBE468:
 917              	.LBB469:
 918              	.LBB464:
 919              	.LBB462:
 920              		.loc 6 62 0
 921 0018 FF01     		lsls	r7, r7, #7
 922              	.LBE462:
 923              	.LBE464:
 924              	.LBE469:
 925              	.LBB470:
 926              	.LBB452:
 927              	.LBB448:
 928              	.LBB442:
 929              	.LBB437:
 930              	.LBB435:
  60:../../src/periph/f1_rcc.h **** 
 931              		.loc 6 60 0
 932 001a 0A43     		orrs	r2, r1
 933 001c 9A61     		str	r2, [r3, #24]
 934              	.LVL56:
 935              	.LBE435:
 936              	.LBE437:
 937              	.LBE442:
 938              	.LBB443:
 939              	.LBB440:
 940              		.loc 7 71 0
 941 001e 454A     		ldr	r2, .L67+4
 942 0020 5468     		ldr	r4, [r2, #4]
 943 0022 AC43     		bics	r4, r5
 944 0024 2500     		movs	r5, r4
 945 0026 A024     		movs	r4, #160
 946 0028 2C43     		orrs	r4, r5
 947 002a 5460     		str	r4, [r2, #4]
 948              	.LVL57:
 949              	.LBE440:
 950              	.LBE443:
 951              	.LBE448:
 952              	.LBE452:
 953              	.LBE470:
 954              	.LBB471:
 955              	.LBB472:
 956              	.LBB473:
 957              	.LBB474:
 958              	.LBB475:
ARM GAS  /tmp/ccTd0H1B.s 			page 27


  55:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOB) APB2ENR.IOPBEN = true;
 959              		.loc 6 55 0
 960 002c 9C69     		ldr	r4, [r3, #24]
 961              	.LBE475:
 962              	.LBE474:
 963              	.LBE473:
 964              	.LBB478:
 965              	.LBB479:
 966              	.LBB480:
  72:../../src/periph/f1_gpio.h ****    else if constexpr (n == 10) { CR.CNF_MODE10 = v; return *this; }
 967              		.loc 7 72 0
 968 002e 424D     		ldr	r5, .L67+8
 969              	.LBE480:
 970              	.LBE479:
 971              	.LBE478:
 972              	.LBB488:
 973              	.LBB477:
 974              	.LBB476:
  55:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOB) APB2ENR.IOPBEN = true;
 975              		.loc 6 55 0
 976 0030 0443     		orrs	r4, r0
 977 0032 9C61     		str	r4, [r3, #24]
 978              	.LVL58:
 979              	.LBE476:
 980              	.LBE477:
 981              	.LBE488:
 982              	.LBB489:
 983              	.LBB483:
 984              	.LBB484:
 985              	.LBB485:
  60:../../src/periph/f1_rcc.h **** 
 986              		.loc 6 60 0
 987 0034 9C69     		ldr	r4, [r3, #24]
 988 0036 0C43     		orrs	r4, r1
 989 0038 9C61     		str	r4, [r3, #24]
 990              	.LVL59:
 991              	.LBE485:
 992              	.LBE484:
 993              	.LBE483:
 994              	.LBB486:
 995              	.LBB481:
 996              		.loc 7 72 0
 997 003a 5468     		ldr	r4, [r2, #4]
 998 003c 2540     		ands	r5, r4
 999 003e A024     		movs	r4, #160
 1000 0040 2401     		lsls	r4, r4, #4
 1001 0042 2C43     		orrs	r4, r5
 1002              	.LBE481:
 1003              	.LBE486:
 1004              	.LBE489:
 1005              	.LBE472:
 1006              	.LBE471:
 1007              	.LBB492:
 1008              	.LBB493:
 1009              	.LBB494:
 1010              	.LBB495:
 1011              	.LBB496:
ARM GAS  /tmp/ccTd0H1B.s 			page 28


  70:../../src/periph/f1_gpio.h ****    else if constexpr (n == 9)  { CR.CNF_MODE9  = v; return *this; }
 1012              		.loc 7 70 0
 1013 0044 0F25     		movs	r5, #15
 1014              	.LBE496:
 1015              	.LBE495:
 1016              	.LBE494:
 1017              	.LBE493:
 1018              	.LBE492:
 1019              	.LBB508:
 1020              	.LBB491:
 1021              	.LBB490:
 1022              	.LBB487:
 1023              	.LBB482:
 1024              		.loc 7 72 0
 1025 0046 5460     		str	r4, [r2, #4]
 1026              	.LVL60:
 1027              	.LBE482:
 1028              	.LBE487:
 1029              	.LBE490:
 1030              	.LBE491:
 1031              	.LBE508:
 1032              	.LBB509:
 1033              	.LBB506:
 1034              	.LBB501:
 1035              	.LBB502:
 1036              	.LBB503:
  55:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOB) APB2ENR.IOPBEN = true;
 1037              		.loc 6 55 0
 1038 0048 9C69     		ldr	r4, [r3, #24]
 1039 004a 0443     		orrs	r4, r0
 1040 004c 9C61     		str	r4, [r3, #24]
 1041              	.LVL61:
 1042              	.LBE503:
 1043              	.LBE502:
 1044              	.LBE501:
 1045              	.LBB504:
 1046              	.LBB499:
 1047              	.LBB497:
  70:../../src/periph/f1_gpio.h ****    else if constexpr (n == 9)  { CR.CNF_MODE9  = v; return *this; }
 1048              		.loc 7 70 0
 1049 004e 5468     		ldr	r4, [r2, #4]
 1050 0050 AC43     		bics	r4, r5
 1051 0052 0D3D     		subs	r5, r5, #13
 1052 0054 2C43     		orrs	r4, r5
 1053 0056 5460     		str	r4, [r2, #4]
 1054              	.LVL62:
 1055              	.LBE497:
 1056              	.LBE499:
 1057              	.LBE504:
 1058              	.LBE506:
 1059              	.LBE509:
 1060              	.LBB510:
 1061              	.LBB511:
 1062              	.LBB512:
 1063              	.LBB513:
 1064              	.LBB514:
  55:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOB) APB2ENR.IOPBEN = true;
ARM GAS  /tmp/ccTd0H1B.s 			page 29


 1065              		.loc 6 55 0
 1066 0058 9C69     		ldr	r4, [r3, #24]
 1067              	.LBE514:
 1068              	.LBE513:
 1069              	.LBE512:
 1070              	.LBE511:
 1071              	.LBE510:
 1072              	.LBB522:
 1073              	.LBB507:
 1074              	.LBB505:
 1075              	.LBB500:
 1076              	.LBB498:
  70:../../src/periph/f1_gpio.h ****    else if constexpr (n == 9)  { CR.CNF_MODE9  = v; return *this; }
 1077              		.loc 7 70 0
 1078 005a 2E00     		movs	r6, r5
 1079              	.LBE498:
 1080              	.LBE500:
 1081              	.LBE505:
 1082              	.LBE507:
 1083              	.LBE522:
 1084              	.LBB523:
 1085              	.LBB521:
 1086              	.LBB517:
 1087              	.LBB516:
 1088              	.LBB515:
  55:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::GPIOB) APB2ENR.IOPBEN = true;
 1089              		.loc 6 55 0
 1090 005c 0443     		orrs	r4, r0
 1091 005e 9C61     		str	r4, [r3, #24]
 1092              	.LVL63:
 1093              	.LBE515:
 1094              	.LBE516:
 1095              	.LBE517:
 1096              	.LBB518:
 1097              	.LBB519:
 1098              	.LBB520:
  73:../../src/periph/f1_gpio.h ****    else if constexpr (n == 11) { CR.CNF_MODE11 = v; return *this; }
  74:../../src/periph/f1_gpio.h ****    else if constexpr (n == 12) { CR.CNF_MODE12 = v; return *this; }
 1099              		.loc 7 74 0
 1100 0060 5468     		ldr	r4, [r2, #4]
 1101 0062 364D     		ldr	r5, .L67+12
 1102 0064 2540     		ands	r5, r4
 1103 0066 8024     		movs	r4, #128
 1104 0068 A402     		lsls	r4, r4, #10
 1105 006a 2C43     		orrs	r4, r5
 1106 006c 5460     		str	r4, [r2, #4]
 1107              	.LVL64:
 1108              	.LBE520:
 1109              	.LBE519:
 1110              	.LBE518:
 1111              	.LBE521:
 1112              	.LBE523:
 1113              	.LBB524:
 1114              	.LBB525:
 1115              	.LBB526:
 1116              		.file 8 "../../src/uart.h"
   1:../../src/uart.h **** #pragma once
ARM GAS  /tmp/ccTd0H1B.s 			page 30


   2:../../src/uart.h **** 
   3:../../src/uart.h **** #include "usart.h"
   4:../../src/uart.h **** 
   5:../../src/uart.h **** namespace mcu {
   6:../../src/uart.h **** 
   7:../../src/uart.h **** template<size_t buffer_size = 255>
   8:../../src/uart.h **** class UART_ {
   9:../../src/uart.h ****    USART& usart;
  10:../../src/uart.h ****    DMA_stream& TXstream;
  11:../../src/uart.h ****    DMA_stream& RXstream;
  12:../../src/uart.h ****    const size_t clock;
  13:../../src/uart.h ****    Pin tx;
  14:../../src/uart.h ****    Pin rx;
  15:../../src/uart.h ****    Pin rts;
  16:../../src/uart.h ****    Pin led;
  17:../../src/uart.h ****    uint8_t buffer[buffer_size];
  18:../../src/uart.h ****    
  19:../../src/uart.h **** public:
  20:../../src/uart.h **** 
  21:../../src/uart.h ****    using Parity         = USART::Parity;
  22:../../src/uart.h ****    using WakeMethod     = USART::WakeMethod;
  23:../../src/uart.h ****    using DataBits       = USART::DataBits;
  24:../../src/uart.h ****    using BreakDetection = USART::BreakDetection;
  25:../../src/uart.h ****    using StopBits       = USART::StopBits;
  26:../../src/uart.h ****    using Baudrate       = USART::Baudrate;
  27:../../src/uart.h ****    using Channel        = USART::Channel;
  28:../../src/uart.h ****    using DataSize       = DMA_stream::DataSize;
  29:../../src/uart.h ****    using Priority       = DMA_stream::Priority;
  30:../../src/uart.h ****    using DataDirection  = DMA_stream::DataDirection;
  31:../../src/uart.h **** 
  32:../../src/uart.h ****    UART_ (USART& usart, DMA_stream& TXstream, DMA_stream& RXstream, size_t clock, Pin tx, Pin rx, P
  33:../../src/uart.h ****       : usart    {usart}
  34:../../src/uart.h ****       , TXstream {TXstream}
  35:../../src/uart.h ****       , RXstream {RXstream}
  36:../../src/uart.h ****       , clock    {clock}
  37:../../src/uart.h ****       , tx       {tx}
  38:../../src/uart.h ****       , rx       {rx}
  39:../../src/uart.h ****       , rts      {rts}
  40:../../src/uart.h ****       , led      {led}
 1117              		.loc 8 40 0
 1118 006e 344C     		ldr	r4, .L67+16
 1119 0070 344A     		ldr	r2, .L67+20
 1120 0072 0194     		str	r4, [sp, #4]
 1121 0074 344C     		ldr	r4, .L67+24
 1122 0076 0092     		str	r2, [sp]
 1123 0078 0294     		str	r4, [sp, #8]
 1124              	.LVL65:
 1125              	.LBE526:
 1126              	.LBE525:
 1127              	.LBE524:
 1128              	.LBB527:
 1129              	.LBB465:
 1130              	.LBB463:
 1131              		.loc 6 62 0
 1132 007a 9C69     		ldr	r4, [r3, #24]
 1133 007c 3C43     		orrs	r4, r7
 1134 007e 9C61     		str	r4, [r3, #24]
ARM GAS  /tmp/ccTd0H1B.s 			page 31


 1135              	.LVL66:
 1136              	.LBE463:
 1137              	.LBE465:
 1138              	.LBE527:
 1139              	.LBB528:
 1140              	.LBB529:
 1141              		.file 9 "../../src/periph/f1_usart.h"
   1:../../src/periph/f1_usart.h **** #pragma once
   2:../../src/periph/f1_usart.h **** 
   3:../../src/periph/f1_usart.h **** #include <type_traits>
   4:../../src/periph/f1_usart.h **** #include "f1_bits_usart.h"
   5:../../src/periph/f1_usart.h **** #include "rcc.h"
   6:../../src/periph/f1_usart.h **** #include "pin.h"
   7:../../src/periph/f1_usart.h **** #include "dma.h"
   8:../../src/periph/f1_usart.h **** 
   9:../../src/periph/f1_usart.h **** namespace mcu {
  10:../../src/periph/f1_usart.h **** 
  11:../../src/periph/f1_usart.h **** class USART_default
  12:../../src/periph/f1_usart.h **** {
  13:../../src/periph/f1_usart.h **** public:
  14:../../src/periph/f1_usart.h ****    __IO USART_bits::SR  SR;   // USART Status register,                   offset: 0x00
  15:../../src/periph/f1_usart.h ****    __IO uint32_t        DR;   // USART Data register,                     offset: 0x04
  16:../../src/periph/f1_usart.h ****    __IO uint32_t        BRR;  // USART Baud rate register,                offset: 0x08
  17:../../src/periph/f1_usart.h ****    __IO USART_bits::CR1 CR1;  // USART Control register 1,                offset: 0x0C
  18:../../src/periph/f1_usart.h ****    __IO USART_bits::CR2 CR2;  // USART Control register 2,                offset: 0x10
  19:../../src/periph/f1_usart.h ****    __IO USART_bits::CR3 CR3;  // USART Control register 3,                offset: 0x14
  20:../../src/periph/f1_usart.h ****    __IO uint32_t        GTPR; // USART Guard time and prescaler register, offset: 0x18
  21:../../src/periph/f1_usart.h ****    // this thing for test
  22:../../src/periph/f1_usart.h ****    auto read_SR() { return *reinterpret_cast<__IO uint32_t*>(&SR); }
  23:../../src/periph/f1_usart.h **** };
  24:../../src/periph/f1_usart.h **** 
  25:../../src/periph/f1_usart.h **** template<class R = USART_default>
  26:../../src/periph/f1_usart.h **** class USART_ : private R {
  27:../../src/periph/f1_usart.h **** public:
  28:../../src/periph/f1_usart.h **** 
  29:../../src/periph/f1_usart.h ****    using CMSIS_type     = USART_TypeDef;
  30:../../src/periph/f1_usart.h ****    using Parity         = USART_bits::CR1::Parity;
  31:../../src/periph/f1_usart.h ****    using WakeMethod     = USART_bits::CR1::WakeMethod;
  32:../../src/periph/f1_usart.h ****    using DataBits       = USART_bits::CR1::DataBits;
  33:../../src/periph/f1_usart.h ****    using BreakDetection = USART_bits::CR2::BreakDetection;
  34:../../src/periph/f1_usart.h ****    using StopBits       = USART_bits::CR2::StopBits;
  35:../../src/periph/f1_usart.h ****    using Channel        = DMA_bits::Channel;
  36:../../src/periph/f1_usart.h **** 
  37:../../src/periph/f1_usart.h ****    enum Baudrate {
  38:../../src/periph/f1_usart.h ****       BR9600   = 0b000,
  39:../../src/periph/f1_usart.h ****       BR14400  = 0b001,
  40:../../src/periph/f1_usart.h ****       BR19200  = 0b010,
  41:../../src/periph/f1_usart.h ****       BR28800  = 0b011,
  42:../../src/periph/f1_usart.h ****       BR38400  = 0b100,
  43:../../src/periph/f1_usart.h ****       BR57600  = 0b101,
  44:../../src/periph/f1_usart.h ****       BR76800  = 0b110,
  45:../../src/periph/f1_usart.h ****       BR115200 = 0b111
  46:../../src/periph/f1_usart.h ****    };
  47:../../src/periph/f1_usart.h **** 
  48:../../src/periph/f1_usart.h ****    USART_& set (Parity         v)         {this->CR1.PS    = v; return *this;}
  49:../../src/periph/f1_usart.h ****    USART_& set (WakeMethod     v)         {this->CR1.WAKE  = v; return *this;}
  50:../../src/periph/f1_usart.h ****    USART_& set (DataBits       v)         {this->CR1.M     = v; return *this;}
ARM GAS  /tmp/ccTd0H1B.s 			page 32


  51:../../src/periph/f1_usart.h ****    USART_& set (BreakDetection v)         {this->CR2.LBDL  = v; return *this;}
  52:../../src/periph/f1_usart.h ****    USART_& set (StopBits       v)         {this->CR2.STOP  = v; return *this;}
  53:../../src/periph/f1_usart.h ****    USART_& send_byte (uint8_t  v)         {this->DR = v;        return *this;}
  54:../../src/periph/f1_usart.h ****    USART_& set (Baudrate, size_t);
  55:../../src/periph/f1_usart.h **** 
  56:../../src/periph/f1_usart.h ****    template <Periph usart, Periph rcc = Periph::RCC>
  57:../../src/periph/f1_usart.h ****    USART_& clock_enable  (){make_reference<rcc>().template clock_enable<usart>(); return *this;}
  58:../../src/periph/f1_usart.h ****    USART_& enable        (){this->CR1.UE   = true;  return *this;}
  59:../../src/periph/f1_usart.h ****    USART_& disable       (){this->CR1.UE   = false; return *this;}
  60:../../src/periph/f1_usart.h ****    USART_& rx_enable     (){this->CR1.RE   = true;  return *this;}
  61:../../src/periph/f1_usart.h ****    USART_& rx_disable    (){this->CR1.RE   = false; return *this;}
  62:../../src/periph/f1_usart.h ****    USART_& tx_enable     (){this->CR1.TE   = true;  return *this;}
 1142              		.loc 9 62 0
 1143 0080 0824     		movs	r4, #8
 1144              	.LBE529:
 1145              	.LBE528:
 1146              	.LBB531:
 1147              	.LBB532:
  63:../../src/periph/f1_usart.h ****    USART_& tx_disable    (){this->CR1.TE   = false; return *this;}
  64:../../src/periph/f1_usart.h ****    USART_& rts_enable    (){this->CR3.RTSE = true;  return *this;}
  65:../../src/periph/f1_usart.h ****    USART_& rts_disable   (){this->CR3.RTSE = false; return *this;}
  66:../../src/periph/f1_usart.h ****    USART_& DMA_tx_enable (){this->CR3.DMAT = true;  return *this;}
 1148              		.loc 9 66 0
 1149 0082 8027     		movs	r7, #128
 1150              	.LBE532:
 1151              	.LBE531:
 1152              	.LBB534:
 1153              	.LBB530:
  62:../../src/periph/f1_usart.h ****    USART_& tx_disable    (){this->CR1.TE   = false; return *this;}
 1154              		.loc 9 62 0
 1155 0084 D568     		ldr	r5, [r2, #12]
 1156 0086 2C43     		orrs	r4, r5
 1157 0088 D460     		str	r4, [r2, #12]
 1158              	.LBE530:
 1159              	.LBE534:
 1160              	.LBB535:
 1161              	.LBB536:
  60:../../src/periph/f1_usart.h ****    USART_& rx_disable    (){this->CR1.RE   = false; return *this;}
 1162              		.loc 9 60 0
 1163 008a D468     		ldr	r4, [r2, #12]
 1164 008c 2043     		orrs	r0, r4
 1165 008e D060     		str	r0, [r2, #12]
 1166              	.LBE536:
 1167              	.LBE535:
 1168              	.LBB537:
 1169              	.LBB533:
 1170              		.loc 9 66 0
 1171 0090 5069     		ldr	r0, [r2, #20]
 1172 0092 3843     		orrs	r0, r7
 1173 0094 5061     		str	r0, [r2, #20]
 1174              	.LBE533:
 1175              	.LBE537:
 1176              	.LBB538:
 1177              	.LBB539:
  67:../../src/periph/f1_usart.h ****    USART_& DMA_rx_enable (){this->CR3.DMAR = true;  return *this;}
 1178              		.loc 9 67 0
 1179 0096 4020     		movs	r0, #64
ARM GAS  /tmp/ccTd0H1B.s 			page 33


 1180 0098 5469     		ldr	r4, [r2, #20]
 1181 009a 2043     		orrs	r0, r4
 1182 009c 5061     		str	r0, [r2, #20]
 1183              	.LBE539:
 1184              	.LBE538:
 1185              	.LBB540:
 1186              	.LBB541:
  68:../../src/periph/f1_usart.h ****    USART_& parity_enable (){this->CR1.PCE  = true;  return *this;}
  69:../../src/periph/f1_usart.h ****    USART_& parity_disable(){this->CR1.PCE  = false; return *this;}
  70:../../src/periph/f1_usart.h **** 
  71:../../src/periph/f1_usart.h ****    USART_& enable_IDLE_interrupt          (){this->CR1.IDLEIE = true;  return *this;}
 1187              		.loc 9 71 0
 1188 009e 1020     		movs	r0, #16
 1189 00a0 D468     		ldr	r4, [r2, #12]
 1190 00a2 0443     		orrs	r4, r0
 1191 00a4 D460     		str	r4, [r2, #12]
 1192              	.LBE541:
 1193              	.LBE540:
 1194              	.LBB542:
 1195              	.LBB543:
  58:../../src/periph/f1_usart.h ****    USART_& disable       (){this->CR1.UE   = false; return *this;}
 1196              		.loc 9 58 0
 1197 00a6 8024     		movs	r4, #128
 1198 00a8 D568     		ldr	r5, [r2, #12]
 1199 00aa A401     		lsls	r4, r4, #6
 1200 00ac 2C43     		orrs	r4, r5
 1201 00ae D460     		str	r4, [r2, #12]
 1202              	.LVL67:
 1203              	.LBE543:
 1204              	.LBE542:
 1205              	.LBB544:
 1206              	.LBB545:
 1207              		.file 10 "../../STM32F1_files/CMSIS/core_cm3.h"
   1:../../STM32F1_files/CMSIS/core_cm3.h **** /**************************************************************************//**
   2:../../STM32F1_files/CMSIS/core_cm3.h ****  * @file     core_cm3.h
   3:../../STM32F1_files/CMSIS/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:../../STM32F1_files/CMSIS/core_cm3.h ****  * @version  V4.30
   5:../../STM32F1_files/CMSIS/core_cm3.h ****  * @date     20. October 2015
   6:../../STM32F1_files/CMSIS/core_cm3.h ****  ******************************************************************************/
   7:../../STM32F1_files/CMSIS/core_cm3.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../../STM32F1_files/CMSIS/core_cm3.h **** 
   9:../../STM32F1_files/CMSIS/core_cm3.h ****    All rights reserved.
  10:../../STM32F1_files/CMSIS/core_cm3.h ****    Redistribution and use in source and binary forms, with or without
  11:../../STM32F1_files/CMSIS/core_cm3.h ****    modification, are permitted provided that the following conditions are met:
  12:../../STM32F1_files/CMSIS/core_cm3.h ****    - Redistributions of source code must retain the above copyright
  13:../../STM32F1_files/CMSIS/core_cm3.h ****      notice, this list of conditions and the following disclaimer.
  14:../../STM32F1_files/CMSIS/core_cm3.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../../STM32F1_files/CMSIS/core_cm3.h ****      notice, this list of conditions and the following disclaimer in the
  16:../../STM32F1_files/CMSIS/core_cm3.h ****      documentation and/or other materials provided with the distribution.
  17:../../STM32F1_files/CMSIS/core_cm3.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../../STM32F1_files/CMSIS/core_cm3.h ****      to endorse or promote products derived from this software without
  19:../../STM32F1_files/CMSIS/core_cm3.h ****      specific prior written permission.
  20:../../STM32F1_files/CMSIS/core_cm3.h ****    *
  21:../../STM32F1_files/CMSIS/core_cm3.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../../STM32F1_files/CMSIS/core_cm3.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../../STM32F1_files/CMSIS/core_cm3.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../../STM32F1_files/CMSIS/core_cm3.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
ARM GAS  /tmp/ccTd0H1B.s 			page 34


  25:../../STM32F1_files/CMSIS/core_cm3.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../../STM32F1_files/CMSIS/core_cm3.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../../STM32F1_files/CMSIS/core_cm3.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../../STM32F1_files/CMSIS/core_cm3.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../../STM32F1_files/CMSIS/core_cm3.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../../STM32F1_files/CMSIS/core_cm3.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../../STM32F1_files/CMSIS/core_cm3.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../../STM32F1_files/CMSIS/core_cm3.h ****    ---------------------------------------------------------------------------*/
  33:../../STM32F1_files/CMSIS/core_cm3.h **** 
  34:../../STM32F1_files/CMSIS/core_cm3.h **** 
  35:../../STM32F1_files/CMSIS/core_cm3.h **** #if   defined ( __ICCARM__ )
  36:../../STM32F1_files/CMSIS/core_cm3.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:../../STM32F1_files/CMSIS/core_cm3.h ****   #pragma clang system_header   /* treat file as system include file */
  39:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
  40:../../STM32F1_files/CMSIS/core_cm3.h **** 
  41:../../STM32F1_files/CMSIS/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
  42:../../STM32F1_files/CMSIS/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  43:../../STM32F1_files/CMSIS/core_cm3.h **** 
  44:../../STM32F1_files/CMSIS/core_cm3.h **** #include <stdint.h>
  45:../../STM32F1_files/CMSIS/core_cm3.h **** 
  46:../../STM32F1_files/CMSIS/core_cm3.h **** #ifdef __cplusplus
  47:../../STM32F1_files/CMSIS/core_cm3.h ****  extern "C" {
  48:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
  49:../../STM32F1_files/CMSIS/core_cm3.h **** 
  50:../../STM32F1_files/CMSIS/core_cm3.h **** /**
  51:../../STM32F1_files/CMSIS/core_cm3.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:../../STM32F1_files/CMSIS/core_cm3.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:../../STM32F1_files/CMSIS/core_cm3.h **** 
  54:../../STM32F1_files/CMSIS/core_cm3.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:../../STM32F1_files/CMSIS/core_cm3.h ****      Function definitions in header files are used to allow 'inlining'.
  56:../../STM32F1_files/CMSIS/core_cm3.h **** 
  57:../../STM32F1_files/CMSIS/core_cm3.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:../../STM32F1_files/CMSIS/core_cm3.h ****      Unions are used for effective representation of core registers.
  59:../../STM32F1_files/CMSIS/core_cm3.h **** 
  60:../../STM32F1_files/CMSIS/core_cm3.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:../../STM32F1_files/CMSIS/core_cm3.h ****      Function-like macros are used to allow more efficient code.
  62:../../STM32F1_files/CMSIS/core_cm3.h ****  */
  63:../../STM32F1_files/CMSIS/core_cm3.h **** 
  64:../../STM32F1_files/CMSIS/core_cm3.h **** 
  65:../../STM32F1_files/CMSIS/core_cm3.h **** /*******************************************************************************
  66:../../STM32F1_files/CMSIS/core_cm3.h ****  *                 CMSIS definitions
  67:../../STM32F1_files/CMSIS/core_cm3.h ****  ******************************************************************************/
  68:../../STM32F1_files/CMSIS/core_cm3.h **** /**
  69:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup Cortex_M3
  70:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
  71:../../STM32F1_files/CMSIS/core_cm3.h ****  */
  72:../../STM32F1_files/CMSIS/core_cm3.h **** 
  73:../../STM32F1_files/CMSIS/core_cm3.h **** /*  CMSIS CM3 definitions */
  74:../../STM32F1_files/CMSIS/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:../../STM32F1_files/CMSIS/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:../../STM32F1_files/CMSIS/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16U) | \
  77:../../STM32F1_files/CMSIS/core_cm3.h ****                                     __CM3_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:../../STM32F1_files/CMSIS/core_cm3.h **** 
  79:../../STM32F1_files/CMSIS/core_cm3.h **** #define __CORTEX_M                (0x03U)                                      /*!< Cortex-M Core *
  80:../../STM32F1_files/CMSIS/core_cm3.h **** 
  81:../../STM32F1_files/CMSIS/core_cm3.h **** 
ARM GAS  /tmp/ccTd0H1B.s 			page 35


  82:../../STM32F1_files/CMSIS/core_cm3.h **** #if   defined ( __CC_ARM )
  83:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  86:../../STM32F1_files/CMSIS/core_cm3.h **** 
  87:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  91:../../STM32F1_files/CMSIS/core_cm3.h **** 
  92:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined ( __GNUC__ )
  93:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __STATIC_INLINE  static inline
  96:../../STM32F1_files/CMSIS/core_cm3.h **** 
  97:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined ( __ICCARM__ )
  98:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __STATIC_INLINE  static inline
 101:../../STM32F1_files/CMSIS/core_cm3.h **** 
 102:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined ( __TMS470__ )
 103:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __STATIC_INLINE  static inline
 105:../../STM32F1_files/CMSIS/core_cm3.h **** 
 106:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined ( __TASKING__ )
 107:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __STATIC_INLINE  static inline
 110:../../STM32F1_files/CMSIS/core_cm3.h **** 
 111:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined ( __CSMC__ )
 112:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __packed
 113:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:../../STM32F1_files/CMSIS/core_cm3.h ****   #define __STATIC_INLINE  static inline
 116:../../STM32F1_files/CMSIS/core_cm3.h **** 
 117:../../STM32F1_files/CMSIS/core_cm3.h **** #else
 118:../../STM32F1_files/CMSIS/core_cm3.h ****   #error Unknown compiler
 119:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
 120:../../STM32F1_files/CMSIS/core_cm3.h **** 
 121:../../STM32F1_files/CMSIS/core_cm3.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:../../STM32F1_files/CMSIS/core_cm3.h ****     This core does not support an FPU at all
 123:../../STM32F1_files/CMSIS/core_cm3.h **** */
 124:../../STM32F1_files/CMSIS/core_cm3.h **** #define __FPU_USED       0U
 125:../../STM32F1_files/CMSIS/core_cm3.h **** 
 126:../../STM32F1_files/CMSIS/core_cm3.h **** #if defined ( __CC_ARM )
 127:../../STM32F1_files/CMSIS/core_cm3.h ****   #if defined __TARGET_FPU_VFP
 128:../../STM32F1_files/CMSIS/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 129:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 130:../../STM32F1_files/CMSIS/core_cm3.h **** 
 131:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 132:../../STM32F1_files/CMSIS/core_cm3.h ****   #if defined __ARM_PCS_VFP
 133:../../STM32F1_files/CMSIS/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 134:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 135:../../STM32F1_files/CMSIS/core_cm3.h **** 
 136:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined ( __GNUC__ )
 137:../../STM32F1_files/CMSIS/core_cm3.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 138:../../STM32F1_files/CMSIS/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
ARM GAS  /tmp/ccTd0H1B.s 			page 36


 139:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 140:../../STM32F1_files/CMSIS/core_cm3.h **** 
 141:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined ( __ICCARM__ )
 142:../../STM32F1_files/CMSIS/core_cm3.h ****   #if defined __ARMVFP__
 143:../../STM32F1_files/CMSIS/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 144:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 145:../../STM32F1_files/CMSIS/core_cm3.h **** 
 146:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined ( __TMS470__ )
 147:../../STM32F1_files/CMSIS/core_cm3.h ****   #if defined __TI_VFP_SUPPORT__
 148:../../STM32F1_files/CMSIS/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 149:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 150:../../STM32F1_files/CMSIS/core_cm3.h **** 
 151:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined ( __TASKING__ )
 152:../../STM32F1_files/CMSIS/core_cm3.h ****   #if defined __FPU_VFP__
 153:../../STM32F1_files/CMSIS/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 154:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 155:../../STM32F1_files/CMSIS/core_cm3.h **** 
 156:../../STM32F1_files/CMSIS/core_cm3.h **** #elif defined ( __CSMC__ )
 157:../../STM32F1_files/CMSIS/core_cm3.h ****   #if ( __CSMC__ & 0x400U)
 158:../../STM32F1_files/CMSIS/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 159:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 160:../../STM32F1_files/CMSIS/core_cm3.h **** 
 161:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
 162:../../STM32F1_files/CMSIS/core_cm3.h **** 
 163:../../STM32F1_files/CMSIS/core_cm3.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 164:../../STM32F1_files/CMSIS/core_cm3.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 165:../../STM32F1_files/CMSIS/core_cm3.h **** 
 166:../../STM32F1_files/CMSIS/core_cm3.h **** #ifdef __cplusplus
 167:../../STM32F1_files/CMSIS/core_cm3.h **** }
 168:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
 169:../../STM32F1_files/CMSIS/core_cm3.h **** 
 170:../../STM32F1_files/CMSIS/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
 171:../../STM32F1_files/CMSIS/core_cm3.h **** 
 172:../../STM32F1_files/CMSIS/core_cm3.h **** #ifndef __CMSIS_GENERIC
 173:../../STM32F1_files/CMSIS/core_cm3.h **** 
 174:../../STM32F1_files/CMSIS/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
 175:../../STM32F1_files/CMSIS/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
 176:../../STM32F1_files/CMSIS/core_cm3.h **** 
 177:../../STM32F1_files/CMSIS/core_cm3.h **** #ifdef __cplusplus
 178:../../STM32F1_files/CMSIS/core_cm3.h ****  extern "C" {
 179:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
 180:../../STM32F1_files/CMSIS/core_cm3.h **** 
 181:../../STM32F1_files/CMSIS/core_cm3.h **** /* check device defines and use defaults */
 182:../../STM32F1_files/CMSIS/core_cm3.h **** #if defined __CHECK_DEVICE_DEFINES
 183:../../STM32F1_files/CMSIS/core_cm3.h ****   #ifndef __CM3_REV
 184:../../STM32F1_files/CMSIS/core_cm3.h ****     #define __CM3_REV               0x0200U
 185:../../STM32F1_files/CMSIS/core_cm3.h ****     #warning "__CM3_REV not defined in device header file; using default!"
 186:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 187:../../STM32F1_files/CMSIS/core_cm3.h **** 
 188:../../STM32F1_files/CMSIS/core_cm3.h ****   #ifndef __MPU_PRESENT
 189:../../STM32F1_files/CMSIS/core_cm3.h ****     #define __MPU_PRESENT             0U
 190:../../STM32F1_files/CMSIS/core_cm3.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 191:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 192:../../STM32F1_files/CMSIS/core_cm3.h **** 
 193:../../STM32F1_files/CMSIS/core_cm3.h ****   #ifndef __NVIC_PRIO_BITS
 194:../../STM32F1_files/CMSIS/core_cm3.h ****     #define __NVIC_PRIO_BITS          4U
 195:../../STM32F1_files/CMSIS/core_cm3.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
ARM GAS  /tmp/ccTd0H1B.s 			page 37


 196:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 197:../../STM32F1_files/CMSIS/core_cm3.h **** 
 198:../../STM32F1_files/CMSIS/core_cm3.h ****   #ifndef __Vendor_SysTickConfig
 199:../../STM32F1_files/CMSIS/core_cm3.h ****     #define __Vendor_SysTickConfig    0U
 200:../../STM32F1_files/CMSIS/core_cm3.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 201:../../STM32F1_files/CMSIS/core_cm3.h ****   #endif
 202:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
 203:../../STM32F1_files/CMSIS/core_cm3.h **** 
 204:../../STM32F1_files/CMSIS/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
 205:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 206:../../STM32F1_files/CMSIS/core_cm3.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 207:../../STM32F1_files/CMSIS/core_cm3.h **** 
 208:../../STM32F1_files/CMSIS/core_cm3.h ****     <strong>IO Type Qualifiers</strong> are used
 209:../../STM32F1_files/CMSIS/core_cm3.h ****     \li to specify the access to peripheral variables.
 210:../../STM32F1_files/CMSIS/core_cm3.h ****     \li for automatic generation of peripheral register debug information.
 211:../../STM32F1_files/CMSIS/core_cm3.h **** */
 212:../../STM32F1_files/CMSIS/core_cm3.h **** #ifdef __cplusplus
 213:../../STM32F1_files/CMSIS/core_cm3.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 214:../../STM32F1_files/CMSIS/core_cm3.h **** #else
 215:../../STM32F1_files/CMSIS/core_cm3.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 216:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
 217:../../STM32F1_files/CMSIS/core_cm3.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 218:../../STM32F1_files/CMSIS/core_cm3.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 219:../../STM32F1_files/CMSIS/core_cm3.h **** 
 220:../../STM32F1_files/CMSIS/core_cm3.h **** /* following defines should be used for structure members */
 221:../../STM32F1_files/CMSIS/core_cm3.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 222:../../STM32F1_files/CMSIS/core_cm3.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 223:../../STM32F1_files/CMSIS/core_cm3.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 224:../../STM32F1_files/CMSIS/core_cm3.h **** 
 225:../../STM32F1_files/CMSIS/core_cm3.h **** /*@} end of group Cortex_M3 */
 226:../../STM32F1_files/CMSIS/core_cm3.h **** 
 227:../../STM32F1_files/CMSIS/core_cm3.h **** 
 228:../../STM32F1_files/CMSIS/core_cm3.h **** 
 229:../../STM32F1_files/CMSIS/core_cm3.h **** /*******************************************************************************
 230:../../STM32F1_files/CMSIS/core_cm3.h ****  *                 Register Abstraction
 231:../../STM32F1_files/CMSIS/core_cm3.h ****   Core Register contain:
 232:../../STM32F1_files/CMSIS/core_cm3.h ****   - Core Register
 233:../../STM32F1_files/CMSIS/core_cm3.h ****   - Core NVIC Register
 234:../../STM32F1_files/CMSIS/core_cm3.h ****   - Core SCB Register
 235:../../STM32F1_files/CMSIS/core_cm3.h ****   - Core SysTick Register
 236:../../STM32F1_files/CMSIS/core_cm3.h ****   - Core Debug Register
 237:../../STM32F1_files/CMSIS/core_cm3.h ****   - Core MPU Register
 238:../../STM32F1_files/CMSIS/core_cm3.h ****  ******************************************************************************/
 239:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 240:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 241:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 242:../../STM32F1_files/CMSIS/core_cm3.h **** */
 243:../../STM32F1_files/CMSIS/core_cm3.h **** 
 244:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 245:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup    CMSIS_core_register
 246:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 247:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief      Core Register type definitions.
 248:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
 249:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 250:../../STM32F1_files/CMSIS/core_cm3.h **** 
 251:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 252:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Union type to access the Application Program Status Register (APSR).
ARM GAS  /tmp/ccTd0H1B.s 			page 38


 253:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 254:../../STM32F1_files/CMSIS/core_cm3.h **** typedef union
 255:../../STM32F1_files/CMSIS/core_cm3.h **** {
 256:../../STM32F1_files/CMSIS/core_cm3.h ****   struct
 257:../../STM32F1_files/CMSIS/core_cm3.h ****   {
 258:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved */
 259:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 260:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 261:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 262:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 263:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 264:../../STM32F1_files/CMSIS/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 265:../../STM32F1_files/CMSIS/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 266:../../STM32F1_files/CMSIS/core_cm3.h **** } APSR_Type;
 267:../../STM32F1_files/CMSIS/core_cm3.h **** 
 268:../../STM32F1_files/CMSIS/core_cm3.h **** /* APSR Register Definitions */
 269:../../STM32F1_files/CMSIS/core_cm3.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 270:../../STM32F1_files/CMSIS/core_cm3.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 271:../../STM32F1_files/CMSIS/core_cm3.h **** 
 272:../../STM32F1_files/CMSIS/core_cm3.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 273:../../STM32F1_files/CMSIS/core_cm3.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 274:../../STM32F1_files/CMSIS/core_cm3.h **** 
 275:../../STM32F1_files/CMSIS/core_cm3.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 276:../../STM32F1_files/CMSIS/core_cm3.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 277:../../STM32F1_files/CMSIS/core_cm3.h **** 
 278:../../STM32F1_files/CMSIS/core_cm3.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 279:../../STM32F1_files/CMSIS/core_cm3.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 280:../../STM32F1_files/CMSIS/core_cm3.h **** 
 281:../../STM32F1_files/CMSIS/core_cm3.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 282:../../STM32F1_files/CMSIS/core_cm3.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 283:../../STM32F1_files/CMSIS/core_cm3.h **** 
 284:../../STM32F1_files/CMSIS/core_cm3.h **** 
 285:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 286:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 287:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 288:../../STM32F1_files/CMSIS/core_cm3.h **** typedef union
 289:../../STM32F1_files/CMSIS/core_cm3.h **** {
 290:../../STM32F1_files/CMSIS/core_cm3.h ****   struct
 291:../../STM32F1_files/CMSIS/core_cm3.h ****   {
 292:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 293:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 294:../../STM32F1_files/CMSIS/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 295:../../STM32F1_files/CMSIS/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 296:../../STM32F1_files/CMSIS/core_cm3.h **** } IPSR_Type;
 297:../../STM32F1_files/CMSIS/core_cm3.h **** 
 298:../../STM32F1_files/CMSIS/core_cm3.h **** /* IPSR Register Definitions */
 299:../../STM32F1_files/CMSIS/core_cm3.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 300:../../STM32F1_files/CMSIS/core_cm3.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 301:../../STM32F1_files/CMSIS/core_cm3.h **** 
 302:../../STM32F1_files/CMSIS/core_cm3.h **** 
 303:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 304:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 305:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 306:../../STM32F1_files/CMSIS/core_cm3.h **** typedef union
 307:../../STM32F1_files/CMSIS/core_cm3.h **** {
 308:../../STM32F1_files/CMSIS/core_cm3.h ****   struct
 309:../../STM32F1_files/CMSIS/core_cm3.h ****   {
ARM GAS  /tmp/ccTd0H1B.s 			page 39


 310:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 311:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 312:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 313:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 314:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 315:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 316:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 317:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 318:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 319:../../STM32F1_files/CMSIS/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 320:../../STM32F1_files/CMSIS/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:../../STM32F1_files/CMSIS/core_cm3.h **** } xPSR_Type;
 322:../../STM32F1_files/CMSIS/core_cm3.h **** 
 323:../../STM32F1_files/CMSIS/core_cm3.h **** /* xPSR Register Definitions */
 324:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 325:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 326:../../STM32F1_files/CMSIS/core_cm3.h **** 
 327:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 328:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 329:../../STM32F1_files/CMSIS/core_cm3.h **** 
 330:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 331:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 332:../../STM32F1_files/CMSIS/core_cm3.h **** 
 333:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 334:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 335:../../STM32F1_files/CMSIS/core_cm3.h **** 
 336:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 337:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 338:../../STM32F1_files/CMSIS/core_cm3.h **** 
 339:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 340:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 341:../../STM32F1_files/CMSIS/core_cm3.h **** 
 342:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 343:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 344:../../STM32F1_files/CMSIS/core_cm3.h **** 
 345:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 346:../../STM32F1_files/CMSIS/core_cm3.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 347:../../STM32F1_files/CMSIS/core_cm3.h **** 
 348:../../STM32F1_files/CMSIS/core_cm3.h **** 
 349:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 350:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Union type to access the Control Registers (CONTROL).
 351:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 352:../../STM32F1_files/CMSIS/core_cm3.h **** typedef union
 353:../../STM32F1_files/CMSIS/core_cm3.h **** {
 354:../../STM32F1_files/CMSIS/core_cm3.h ****   struct
 355:../../STM32F1_files/CMSIS/core_cm3.h ****   {
 356:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 357:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 358:../../STM32F1_files/CMSIS/core_cm3.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 359:../../STM32F1_files/CMSIS/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 360:../../STM32F1_files/CMSIS/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 361:../../STM32F1_files/CMSIS/core_cm3.h **** } CONTROL_Type;
 362:../../STM32F1_files/CMSIS/core_cm3.h **** 
 363:../../STM32F1_files/CMSIS/core_cm3.h **** /* CONTROL Register Definitions */
 364:../../STM32F1_files/CMSIS/core_cm3.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 365:../../STM32F1_files/CMSIS/core_cm3.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 366:../../STM32F1_files/CMSIS/core_cm3.h **** 
ARM GAS  /tmp/ccTd0H1B.s 			page 40


 367:../../STM32F1_files/CMSIS/core_cm3.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 368:../../STM32F1_files/CMSIS/core_cm3.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 369:../../STM32F1_files/CMSIS/core_cm3.h **** 
 370:../../STM32F1_files/CMSIS/core_cm3.h **** /*@} end of group CMSIS_CORE */
 371:../../STM32F1_files/CMSIS/core_cm3.h **** 
 372:../../STM32F1_files/CMSIS/core_cm3.h **** 
 373:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 374:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup    CMSIS_core_register
 375:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 376:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief      Type definitions for the NVIC Registers
 377:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
 378:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 379:../../STM32F1_files/CMSIS/core_cm3.h **** 
 380:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 381:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 382:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 383:../../STM32F1_files/CMSIS/core_cm3.h **** typedef struct
 384:../../STM32F1_files/CMSIS/core_cm3.h **** {
 385:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 386:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED0[24U];
 387:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 388:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RSERVED1[24U];
 389:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 390:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED2[24U];
 391:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 392:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED3[24U];
 393:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 394:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED4[56U];
 395:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 396:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED5[644U];
 397:../../STM32F1_files/CMSIS/core_cm3.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 398:../../STM32F1_files/CMSIS/core_cm3.h **** }  NVIC_Type;
 399:../../STM32F1_files/CMSIS/core_cm3.h **** 
 400:../../STM32F1_files/CMSIS/core_cm3.h **** /* Software Triggered Interrupt Register Definitions */
 401:../../STM32F1_files/CMSIS/core_cm3.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 402:../../STM32F1_files/CMSIS/core_cm3.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 403:../../STM32F1_files/CMSIS/core_cm3.h **** 
 404:../../STM32F1_files/CMSIS/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 405:../../STM32F1_files/CMSIS/core_cm3.h **** 
 406:../../STM32F1_files/CMSIS/core_cm3.h **** 
 407:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 408:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup  CMSIS_core_register
 409:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 410:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief    Type definitions for the System Control Block Registers
 411:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
 412:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 413:../../STM32F1_files/CMSIS/core_cm3.h **** 
 414:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 415:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Structure type to access the System Control Block (SCB).
 416:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 417:../../STM32F1_files/CMSIS/core_cm3.h **** typedef struct
 418:../../STM32F1_files/CMSIS/core_cm3.h **** {
 419:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 420:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 421:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 422:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 423:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
ARM GAS  /tmp/ccTd0H1B.s 			page 41


 424:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 425:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 426:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 427:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 428:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 429:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 430:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 431:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 432:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 433:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 434:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 435:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 436:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 437:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 438:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED0[5U];
 439:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 440:../../STM32F1_files/CMSIS/core_cm3.h **** } SCB_Type;
 441:../../STM32F1_files/CMSIS/core_cm3.h **** 
 442:../../STM32F1_files/CMSIS/core_cm3.h **** /* SCB CPUID Register Definitions */
 443:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 444:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 445:../../STM32F1_files/CMSIS/core_cm3.h **** 
 446:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 447:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 448:../../STM32F1_files/CMSIS/core_cm3.h **** 
 449:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 450:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 451:../../STM32F1_files/CMSIS/core_cm3.h **** 
 452:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 453:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 454:../../STM32F1_files/CMSIS/core_cm3.h **** 
 455:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 456:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 457:../../STM32F1_files/CMSIS/core_cm3.h **** 
 458:../../STM32F1_files/CMSIS/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 459:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 460:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 461:../../STM32F1_files/CMSIS/core_cm3.h **** 
 462:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 463:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 464:../../STM32F1_files/CMSIS/core_cm3.h **** 
 465:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 466:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 467:../../STM32F1_files/CMSIS/core_cm3.h **** 
 468:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 469:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 470:../../STM32F1_files/CMSIS/core_cm3.h **** 
 471:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 472:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 473:../../STM32F1_files/CMSIS/core_cm3.h **** 
 474:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 475:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 476:../../STM32F1_files/CMSIS/core_cm3.h **** 
 477:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 478:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 479:../../STM32F1_files/CMSIS/core_cm3.h **** 
 480:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
ARM GAS  /tmp/ccTd0H1B.s 			page 42


 481:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 482:../../STM32F1_files/CMSIS/core_cm3.h **** 
 483:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 484:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 485:../../STM32F1_files/CMSIS/core_cm3.h **** 
 486:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 487:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 488:../../STM32F1_files/CMSIS/core_cm3.h **** 
 489:../../STM32F1_files/CMSIS/core_cm3.h **** /* SCB Vector Table Offset Register Definitions */
 490:../../STM32F1_files/CMSIS/core_cm3.h **** #if (__CM3_REV < 0x0201U)                   /* core r2p1 */
 491:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29U                                            /*!< SCB 
 492:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 493:../../STM32F1_files/CMSIS/core_cm3.h **** 
 494:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 495:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 496:../../STM32F1_files/CMSIS/core_cm3.h **** #else
 497:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 498:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 499:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
 500:../../STM32F1_files/CMSIS/core_cm3.h **** 
 501:../../STM32F1_files/CMSIS/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 502:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 503:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 504:../../STM32F1_files/CMSIS/core_cm3.h **** 
 505:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 506:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 507:../../STM32F1_files/CMSIS/core_cm3.h **** 
 508:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 509:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 510:../../STM32F1_files/CMSIS/core_cm3.h **** 
 511:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 512:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 513:../../STM32F1_files/CMSIS/core_cm3.h **** 
 514:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 515:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 516:../../STM32F1_files/CMSIS/core_cm3.h **** 
 517:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 518:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 519:../../STM32F1_files/CMSIS/core_cm3.h **** 
 520:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 521:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 522:../../STM32F1_files/CMSIS/core_cm3.h **** 
 523:../../STM32F1_files/CMSIS/core_cm3.h **** /* SCB System Control Register Definitions */
 524:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 525:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 526:../../STM32F1_files/CMSIS/core_cm3.h **** 
 527:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 528:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 529:../../STM32F1_files/CMSIS/core_cm3.h **** 
 530:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 531:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 532:../../STM32F1_files/CMSIS/core_cm3.h **** 
 533:../../STM32F1_files/CMSIS/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 534:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 535:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 536:../../STM32F1_files/CMSIS/core_cm3.h **** 
 537:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
ARM GAS  /tmp/ccTd0H1B.s 			page 43


 538:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 539:../../STM32F1_files/CMSIS/core_cm3.h **** 
 540:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 541:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 542:../../STM32F1_files/CMSIS/core_cm3.h **** 
 543:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 544:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 545:../../STM32F1_files/CMSIS/core_cm3.h **** 
 546:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 547:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 548:../../STM32F1_files/CMSIS/core_cm3.h **** 
 549:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 550:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 551:../../STM32F1_files/CMSIS/core_cm3.h **** 
 552:../../STM32F1_files/CMSIS/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 553:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 554:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 555:../../STM32F1_files/CMSIS/core_cm3.h **** 
 556:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 557:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 558:../../STM32F1_files/CMSIS/core_cm3.h **** 
 559:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 560:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 561:../../STM32F1_files/CMSIS/core_cm3.h **** 
 562:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 563:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 564:../../STM32F1_files/CMSIS/core_cm3.h **** 
 565:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 566:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 567:../../STM32F1_files/CMSIS/core_cm3.h **** 
 568:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 569:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 570:../../STM32F1_files/CMSIS/core_cm3.h **** 
 571:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 572:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 573:../../STM32F1_files/CMSIS/core_cm3.h **** 
 574:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 575:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 576:../../STM32F1_files/CMSIS/core_cm3.h **** 
 577:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 578:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 579:../../STM32F1_files/CMSIS/core_cm3.h **** 
 580:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 581:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 582:../../STM32F1_files/CMSIS/core_cm3.h **** 
 583:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 584:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 585:../../STM32F1_files/CMSIS/core_cm3.h **** 
 586:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 587:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 588:../../STM32F1_files/CMSIS/core_cm3.h **** 
 589:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 590:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 591:../../STM32F1_files/CMSIS/core_cm3.h **** 
 592:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 593:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 594:../../STM32F1_files/CMSIS/core_cm3.h **** 
ARM GAS  /tmp/ccTd0H1B.s 			page 44


 595:../../STM32F1_files/CMSIS/core_cm3.h **** /* SCB Configurable Fault Status Register Definitions */
 596:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 597:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 598:../../STM32F1_files/CMSIS/core_cm3.h **** 
 599:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 600:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 601:../../STM32F1_files/CMSIS/core_cm3.h **** 
 602:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 603:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 604:../../STM32F1_files/CMSIS/core_cm3.h **** 
 605:../../STM32F1_files/CMSIS/core_cm3.h **** /* SCB Hard Fault Status Register Definitions */
 606:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 607:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 608:../../STM32F1_files/CMSIS/core_cm3.h **** 
 609:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 610:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 611:../../STM32F1_files/CMSIS/core_cm3.h **** 
 612:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 613:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 614:../../STM32F1_files/CMSIS/core_cm3.h **** 
 615:../../STM32F1_files/CMSIS/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 616:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 617:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 618:../../STM32F1_files/CMSIS/core_cm3.h **** 
 619:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 620:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 621:../../STM32F1_files/CMSIS/core_cm3.h **** 
 622:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 623:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 624:../../STM32F1_files/CMSIS/core_cm3.h **** 
 625:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 626:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 627:../../STM32F1_files/CMSIS/core_cm3.h **** 
 628:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 629:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 630:../../STM32F1_files/CMSIS/core_cm3.h **** 
 631:../../STM32F1_files/CMSIS/core_cm3.h **** /*@} end of group CMSIS_SCB */
 632:../../STM32F1_files/CMSIS/core_cm3.h **** 
 633:../../STM32F1_files/CMSIS/core_cm3.h **** 
 634:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 635:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup  CMSIS_core_register
 636:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 637:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 638:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
 639:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 640:../../STM32F1_files/CMSIS/core_cm3.h **** 
 641:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 642:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 643:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 644:../../STM32F1_files/CMSIS/core_cm3.h **** typedef struct
 645:../../STM32F1_files/CMSIS/core_cm3.h **** {
 646:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED0[1U];
 647:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 648:../../STM32F1_files/CMSIS/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200U))
 649:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 650:../../STM32F1_files/CMSIS/core_cm3.h **** #else
 651:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED1[1U];
ARM GAS  /tmp/ccTd0H1B.s 			page 45


 652:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
 653:../../STM32F1_files/CMSIS/core_cm3.h **** } SCnSCB_Type;
 654:../../STM32F1_files/CMSIS/core_cm3.h **** 
 655:../../STM32F1_files/CMSIS/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 656:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 657:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 658:../../STM32F1_files/CMSIS/core_cm3.h **** 
 659:../../STM32F1_files/CMSIS/core_cm3.h **** /* Auxiliary Control Register Definitions */
 660:../../STM32F1_files/CMSIS/core_cm3.h **** 
 661:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 662:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 663:../../STM32F1_files/CMSIS/core_cm3.h **** 
 664:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 665:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 666:../../STM32F1_files/CMSIS/core_cm3.h **** 
 667:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 668:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 669:../../STM32F1_files/CMSIS/core_cm3.h **** 
 670:../../STM32F1_files/CMSIS/core_cm3.h **** /*@} end of group CMSIS_SCnotSCB */
 671:../../STM32F1_files/CMSIS/core_cm3.h **** 
 672:../../STM32F1_files/CMSIS/core_cm3.h **** 
 673:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 674:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup  CMSIS_core_register
 675:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 676:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief    Type definitions for the System Timer Registers.
 677:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
 678:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 679:../../STM32F1_files/CMSIS/core_cm3.h **** 
 680:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 681:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Structure type to access the System Timer (SysTick).
 682:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 683:../../STM32F1_files/CMSIS/core_cm3.h **** typedef struct
 684:../../STM32F1_files/CMSIS/core_cm3.h **** {
 685:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 686:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 687:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 688:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 689:../../STM32F1_files/CMSIS/core_cm3.h **** } SysTick_Type;
 690:../../STM32F1_files/CMSIS/core_cm3.h **** 
 691:../../STM32F1_files/CMSIS/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 692:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 693:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 694:../../STM32F1_files/CMSIS/core_cm3.h **** 
 695:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 696:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 697:../../STM32F1_files/CMSIS/core_cm3.h **** 
 698:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 699:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 700:../../STM32F1_files/CMSIS/core_cm3.h **** 
 701:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 702:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 703:../../STM32F1_files/CMSIS/core_cm3.h **** 
 704:../../STM32F1_files/CMSIS/core_cm3.h **** /* SysTick Reload Register Definitions */
 705:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 706:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 707:../../STM32F1_files/CMSIS/core_cm3.h **** 
 708:../../STM32F1_files/CMSIS/core_cm3.h **** /* SysTick Current Register Definitions */
ARM GAS  /tmp/ccTd0H1B.s 			page 46


 709:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 710:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 711:../../STM32F1_files/CMSIS/core_cm3.h **** 
 712:../../STM32F1_files/CMSIS/core_cm3.h **** /* SysTick Calibration Register Definitions */
 713:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 714:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 715:../../STM32F1_files/CMSIS/core_cm3.h **** 
 716:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 717:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 718:../../STM32F1_files/CMSIS/core_cm3.h **** 
 719:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 720:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 721:../../STM32F1_files/CMSIS/core_cm3.h **** 
 722:../../STM32F1_files/CMSIS/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 723:../../STM32F1_files/CMSIS/core_cm3.h **** 
 724:../../STM32F1_files/CMSIS/core_cm3.h **** 
 725:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 726:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup  CMSIS_core_register
 727:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 728:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 729:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
 730:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 731:../../STM32F1_files/CMSIS/core_cm3.h **** 
 732:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 733:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 734:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 735:../../STM32F1_files/CMSIS/core_cm3.h **** typedef struct
 736:../../STM32F1_files/CMSIS/core_cm3.h **** {
 737:../../STM32F1_files/CMSIS/core_cm3.h ****   __OM  union
 738:../../STM32F1_files/CMSIS/core_cm3.h ****   {
 739:../../STM32F1_files/CMSIS/core_cm3.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 740:../../STM32F1_files/CMSIS/core_cm3.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 741:../../STM32F1_files/CMSIS/core_cm3.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 742:../../STM32F1_files/CMSIS/core_cm3.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 743:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED0[864U];
 744:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 745:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED1[15U];
 746:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 747:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED2[15U];
 748:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 749:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED3[29U];
 750:../../STM32F1_files/CMSIS/core_cm3.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 751:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 752:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 753:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED4[43U];
 754:../../STM32F1_files/CMSIS/core_cm3.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 755:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 756:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED5[6U];
 757:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 758:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 759:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 760:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 761:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 762:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 763:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 764:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 765:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
ARM GAS  /tmp/ccTd0H1B.s 			page 47


 766:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 767:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 768:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 769:../../STM32F1_files/CMSIS/core_cm3.h **** } ITM_Type;
 770:../../STM32F1_files/CMSIS/core_cm3.h **** 
 771:../../STM32F1_files/CMSIS/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 772:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 773:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 774:../../STM32F1_files/CMSIS/core_cm3.h **** 
 775:../../STM32F1_files/CMSIS/core_cm3.h **** /* ITM Trace Control Register Definitions */
 776:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 777:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 778:../../STM32F1_files/CMSIS/core_cm3.h **** 
 779:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 780:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 781:../../STM32F1_files/CMSIS/core_cm3.h **** 
 782:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 783:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 784:../../STM32F1_files/CMSIS/core_cm3.h **** 
 785:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 786:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 787:../../STM32F1_files/CMSIS/core_cm3.h **** 
 788:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 789:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 790:../../STM32F1_files/CMSIS/core_cm3.h **** 
 791:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 792:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 793:../../STM32F1_files/CMSIS/core_cm3.h **** 
 794:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 795:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 796:../../STM32F1_files/CMSIS/core_cm3.h **** 
 797:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 798:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 799:../../STM32F1_files/CMSIS/core_cm3.h **** 
 800:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 801:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 802:../../STM32F1_files/CMSIS/core_cm3.h **** 
 803:../../STM32F1_files/CMSIS/core_cm3.h **** /* ITM Integration Write Register Definitions */
 804:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 805:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 806:../../STM32F1_files/CMSIS/core_cm3.h **** 
 807:../../STM32F1_files/CMSIS/core_cm3.h **** /* ITM Integration Read Register Definitions */
 808:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 809:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 810:../../STM32F1_files/CMSIS/core_cm3.h **** 
 811:../../STM32F1_files/CMSIS/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 812:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 813:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 814:../../STM32F1_files/CMSIS/core_cm3.h **** 
 815:../../STM32F1_files/CMSIS/core_cm3.h **** /* ITM Lock Status Register Definitions */
 816:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 817:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 818:../../STM32F1_files/CMSIS/core_cm3.h **** 
 819:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 820:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 821:../../STM32F1_files/CMSIS/core_cm3.h **** 
 822:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
ARM GAS  /tmp/ccTd0H1B.s 			page 48


 823:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 824:../../STM32F1_files/CMSIS/core_cm3.h **** 
 825:../../STM32F1_files/CMSIS/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 826:../../STM32F1_files/CMSIS/core_cm3.h **** 
 827:../../STM32F1_files/CMSIS/core_cm3.h **** 
 828:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 829:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup  CMSIS_core_register
 830:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 831:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 832:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
 833:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 834:../../STM32F1_files/CMSIS/core_cm3.h **** 
 835:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 836:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 837:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 838:../../STM32F1_files/CMSIS/core_cm3.h **** typedef struct
 839:../../STM32F1_files/CMSIS/core_cm3.h **** {
 840:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 841:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 842:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 843:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 844:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 845:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 846:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 847:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 848:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 849:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 850:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 851:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED0[1U];
 852:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 853:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 854:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 855:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED1[1U];
 856:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 857:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 858:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 859:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED2[1U];
 860:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 861:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 862:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 863:../../STM32F1_files/CMSIS/core_cm3.h **** } DWT_Type;
 864:../../STM32F1_files/CMSIS/core_cm3.h **** 
 865:../../STM32F1_files/CMSIS/core_cm3.h **** /* DWT Control Register Definitions */
 866:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 867:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 868:../../STM32F1_files/CMSIS/core_cm3.h **** 
 869:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 870:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 871:../../STM32F1_files/CMSIS/core_cm3.h **** 
 872:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 873:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 874:../../STM32F1_files/CMSIS/core_cm3.h **** 
 875:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 876:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 877:../../STM32F1_files/CMSIS/core_cm3.h **** 
 878:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 879:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
ARM GAS  /tmp/ccTd0H1B.s 			page 49


 880:../../STM32F1_files/CMSIS/core_cm3.h **** 
 881:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 882:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 883:../../STM32F1_files/CMSIS/core_cm3.h **** 
 884:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 885:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 886:../../STM32F1_files/CMSIS/core_cm3.h **** 
 887:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 888:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 889:../../STM32F1_files/CMSIS/core_cm3.h **** 
 890:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 891:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 892:../../STM32F1_files/CMSIS/core_cm3.h **** 
 893:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 894:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 895:../../STM32F1_files/CMSIS/core_cm3.h **** 
 896:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 897:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 898:../../STM32F1_files/CMSIS/core_cm3.h **** 
 899:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 900:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 901:../../STM32F1_files/CMSIS/core_cm3.h **** 
 902:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 903:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 904:../../STM32F1_files/CMSIS/core_cm3.h **** 
 905:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 906:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 907:../../STM32F1_files/CMSIS/core_cm3.h **** 
 908:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 909:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 910:../../STM32F1_files/CMSIS/core_cm3.h **** 
 911:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 912:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 913:../../STM32F1_files/CMSIS/core_cm3.h **** 
 914:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 915:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 916:../../STM32F1_files/CMSIS/core_cm3.h **** 
 917:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 918:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 919:../../STM32F1_files/CMSIS/core_cm3.h **** 
 920:../../STM32F1_files/CMSIS/core_cm3.h **** /* DWT CPI Count Register Definitions */
 921:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 922:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 923:../../STM32F1_files/CMSIS/core_cm3.h **** 
 924:../../STM32F1_files/CMSIS/core_cm3.h **** /* DWT Exception Overhead Count Register Definitions */
 925:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 926:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 927:../../STM32F1_files/CMSIS/core_cm3.h **** 
 928:../../STM32F1_files/CMSIS/core_cm3.h **** /* DWT Sleep Count Register Definitions */
 929:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 930:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 931:../../STM32F1_files/CMSIS/core_cm3.h **** 
 932:../../STM32F1_files/CMSIS/core_cm3.h **** /* DWT LSU Count Register Definitions */
 933:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 934:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 935:../../STM32F1_files/CMSIS/core_cm3.h **** 
 936:../../STM32F1_files/CMSIS/core_cm3.h **** /* DWT Folded-instruction Count Register Definitions */
ARM GAS  /tmp/ccTd0H1B.s 			page 50


 937:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 938:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 939:../../STM32F1_files/CMSIS/core_cm3.h **** 
 940:../../STM32F1_files/CMSIS/core_cm3.h **** /* DWT Comparator Mask Register Definitions */
 941:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
 942:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 943:../../STM32F1_files/CMSIS/core_cm3.h **** 
 944:../../STM32F1_files/CMSIS/core_cm3.h **** /* DWT Comparator Function Register Definitions */
 945:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 946:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 947:../../STM32F1_files/CMSIS/core_cm3.h **** 
 948:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
 949:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 950:../../STM32F1_files/CMSIS/core_cm3.h **** 
 951:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
 952:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 953:../../STM32F1_files/CMSIS/core_cm3.h **** 
 954:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 955:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 956:../../STM32F1_files/CMSIS/core_cm3.h **** 
 957:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
 958:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 959:../../STM32F1_files/CMSIS/core_cm3.h **** 
 960:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
 961:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 962:../../STM32F1_files/CMSIS/core_cm3.h **** 
 963:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
 964:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 965:../../STM32F1_files/CMSIS/core_cm3.h **** 
 966:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
 967:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 968:../../STM32F1_files/CMSIS/core_cm3.h **** 
 969:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
 970:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 971:../../STM32F1_files/CMSIS/core_cm3.h **** 
 972:../../STM32F1_files/CMSIS/core_cm3.h **** /*@}*/ /* end of group CMSIS_DWT */
 973:../../STM32F1_files/CMSIS/core_cm3.h **** 
 974:../../STM32F1_files/CMSIS/core_cm3.h **** 
 975:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 976:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup  CMSIS_core_register
 977:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 978:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
 979:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
 980:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 981:../../STM32F1_files/CMSIS/core_cm3.h **** 
 982:../../STM32F1_files/CMSIS/core_cm3.h **** /**
 983:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 984:../../STM32F1_files/CMSIS/core_cm3.h ****  */
 985:../../STM32F1_files/CMSIS/core_cm3.h **** typedef struct
 986:../../STM32F1_files/CMSIS/core_cm3.h **** {
 987:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 988:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 989:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED0[2U];
 990:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 991:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED1[55U];
 992:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 993:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED2[131U];
ARM GAS  /tmp/ccTd0H1B.s 			page 51


 994:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 995:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 996:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 997:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED3[759U];
 998:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 999:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1000:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1001:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED4[1U];
1002:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1003:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1004:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1005:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED5[39U];
1006:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1007:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1008:../../STM32F1_files/CMSIS/core_cm3.h ****         uint32_t RESERVED7[8U];
1009:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1010:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1011:../../STM32F1_files/CMSIS/core_cm3.h **** } TPI_Type;
1012:../../STM32F1_files/CMSIS/core_cm3.h **** 
1013:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1014:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1015:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1016:../../STM32F1_files/CMSIS/core_cm3.h **** 
1017:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI Selected Pin Protocol Register Definitions */
1018:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1019:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1020:../../STM32F1_files/CMSIS/core_cm3.h **** 
1021:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI Formatter and Flush Status Register Definitions */
1022:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1023:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1024:../../STM32F1_files/CMSIS/core_cm3.h **** 
1025:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1026:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1027:../../STM32F1_files/CMSIS/core_cm3.h **** 
1028:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1029:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1030:../../STM32F1_files/CMSIS/core_cm3.h **** 
1031:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1032:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1033:../../STM32F1_files/CMSIS/core_cm3.h **** 
1034:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI Formatter and Flush Control Register Definitions */
1035:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1036:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1037:../../STM32F1_files/CMSIS/core_cm3.h **** 
1038:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1039:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1040:../../STM32F1_files/CMSIS/core_cm3.h **** 
1041:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI TRIGGER Register Definitions */
1042:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1043:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1044:../../STM32F1_files/CMSIS/core_cm3.h **** 
1045:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1046:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1047:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1048:../../STM32F1_files/CMSIS/core_cm3.h **** 
1049:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1050:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
ARM GAS  /tmp/ccTd0H1B.s 			page 52


1051:../../STM32F1_files/CMSIS/core_cm3.h **** 
1052:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1053:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1054:../../STM32F1_files/CMSIS/core_cm3.h **** 
1055:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1056:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1057:../../STM32F1_files/CMSIS/core_cm3.h **** 
1058:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1059:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1060:../../STM32F1_files/CMSIS/core_cm3.h **** 
1061:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1062:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1063:../../STM32F1_files/CMSIS/core_cm3.h **** 
1064:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1065:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1066:../../STM32F1_files/CMSIS/core_cm3.h **** 
1067:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI ITATBCTR2 Register Definitions */
1068:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1069:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1070:../../STM32F1_files/CMSIS/core_cm3.h **** 
1071:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1072:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1073:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1074:../../STM32F1_files/CMSIS/core_cm3.h **** 
1075:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1076:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1077:../../STM32F1_files/CMSIS/core_cm3.h **** 
1078:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1079:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1080:../../STM32F1_files/CMSIS/core_cm3.h **** 
1081:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1082:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1083:../../STM32F1_files/CMSIS/core_cm3.h **** 
1084:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1085:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1086:../../STM32F1_files/CMSIS/core_cm3.h **** 
1087:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1088:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1089:../../STM32F1_files/CMSIS/core_cm3.h **** 
1090:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1091:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1092:../../STM32F1_files/CMSIS/core_cm3.h **** 
1093:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI ITATBCTR0 Register Definitions */
1094:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1095:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1096:../../STM32F1_files/CMSIS/core_cm3.h **** 
1097:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI Integration Mode Control Register Definitions */
1098:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1099:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1100:../../STM32F1_files/CMSIS/core_cm3.h **** 
1101:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI DEVID Register Definitions */
1102:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1103:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1104:../../STM32F1_files/CMSIS/core_cm3.h **** 
1105:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1106:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1107:../../STM32F1_files/CMSIS/core_cm3.h **** 
ARM GAS  /tmp/ccTd0H1B.s 			page 53


1108:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1109:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1110:../../STM32F1_files/CMSIS/core_cm3.h **** 
1111:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1112:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1113:../../STM32F1_files/CMSIS/core_cm3.h **** 
1114:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1115:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1116:../../STM32F1_files/CMSIS/core_cm3.h **** 
1117:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1118:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1119:../../STM32F1_files/CMSIS/core_cm3.h **** 
1120:../../STM32F1_files/CMSIS/core_cm3.h **** /* TPI DEVTYPE Register Definitions */
1121:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1122:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1123:../../STM32F1_files/CMSIS/core_cm3.h **** 
1124:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1125:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1126:../../STM32F1_files/CMSIS/core_cm3.h **** 
1127:../../STM32F1_files/CMSIS/core_cm3.h **** /*@}*/ /* end of group CMSIS_TPI */
1128:../../STM32F1_files/CMSIS/core_cm3.h **** 
1129:../../STM32F1_files/CMSIS/core_cm3.h **** 
1130:../../STM32F1_files/CMSIS/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1131:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1132:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup  CMSIS_core_register
1133:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1134:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1135:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
1136:../../STM32F1_files/CMSIS/core_cm3.h ****  */
1137:../../STM32F1_files/CMSIS/core_cm3.h **** 
1138:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1139:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1140:../../STM32F1_files/CMSIS/core_cm3.h ****  */
1141:../../STM32F1_files/CMSIS/core_cm3.h **** typedef struct
1142:../../STM32F1_files/CMSIS/core_cm3.h **** {
1143:../../STM32F1_files/CMSIS/core_cm3.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1144:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1145:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1146:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1147:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1148:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1149:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1150:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1151:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1152:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1153:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1154:../../STM32F1_files/CMSIS/core_cm3.h **** } MPU_Type;
1155:../../STM32F1_files/CMSIS/core_cm3.h **** 
1156:../../STM32F1_files/CMSIS/core_cm3.h **** /* MPU Type Register Definitions */
1157:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1158:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1159:../../STM32F1_files/CMSIS/core_cm3.h **** 
1160:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1161:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1162:../../STM32F1_files/CMSIS/core_cm3.h **** 
1163:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1164:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
ARM GAS  /tmp/ccTd0H1B.s 			page 54


1165:../../STM32F1_files/CMSIS/core_cm3.h **** 
1166:../../STM32F1_files/CMSIS/core_cm3.h **** /* MPU Control Register Definitions */
1167:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1168:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1169:../../STM32F1_files/CMSIS/core_cm3.h **** 
1170:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1171:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1172:../../STM32F1_files/CMSIS/core_cm3.h **** 
1173:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1174:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1175:../../STM32F1_files/CMSIS/core_cm3.h **** 
1176:../../STM32F1_files/CMSIS/core_cm3.h **** /* MPU Region Number Register Definitions */
1177:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1178:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1179:../../STM32F1_files/CMSIS/core_cm3.h **** 
1180:../../STM32F1_files/CMSIS/core_cm3.h **** /* MPU Region Base Address Register Definitions */
1181:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1182:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1183:../../STM32F1_files/CMSIS/core_cm3.h **** 
1184:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1185:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1186:../../STM32F1_files/CMSIS/core_cm3.h **** 
1187:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1188:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1189:../../STM32F1_files/CMSIS/core_cm3.h **** 
1190:../../STM32F1_files/CMSIS/core_cm3.h **** /* MPU Region Attribute and Size Register Definitions */
1191:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1192:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1193:../../STM32F1_files/CMSIS/core_cm3.h **** 
1194:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1195:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1196:../../STM32F1_files/CMSIS/core_cm3.h **** 
1197:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1198:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1199:../../STM32F1_files/CMSIS/core_cm3.h **** 
1200:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1201:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1202:../../STM32F1_files/CMSIS/core_cm3.h **** 
1203:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1204:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1205:../../STM32F1_files/CMSIS/core_cm3.h **** 
1206:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1207:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1208:../../STM32F1_files/CMSIS/core_cm3.h **** 
1209:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1210:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1211:../../STM32F1_files/CMSIS/core_cm3.h **** 
1212:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1213:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1214:../../STM32F1_files/CMSIS/core_cm3.h **** 
1215:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1216:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1217:../../STM32F1_files/CMSIS/core_cm3.h **** 
1218:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1219:../../STM32F1_files/CMSIS/core_cm3.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1220:../../STM32F1_files/CMSIS/core_cm3.h **** 
1221:../../STM32F1_files/CMSIS/core_cm3.h **** /*@} end of group CMSIS_MPU */
ARM GAS  /tmp/ccTd0H1B.s 			page 55


1222:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
1223:../../STM32F1_files/CMSIS/core_cm3.h **** 
1224:../../STM32F1_files/CMSIS/core_cm3.h **** 
1225:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1226:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup  CMSIS_core_register
1227:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1228:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief    Type definitions for the Core Debug Registers
1229:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
1230:../../STM32F1_files/CMSIS/core_cm3.h ****  */
1231:../../STM32F1_files/CMSIS/core_cm3.h **** 
1232:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1233:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1234:../../STM32F1_files/CMSIS/core_cm3.h ****  */
1235:../../STM32F1_files/CMSIS/core_cm3.h **** typedef struct
1236:../../STM32F1_files/CMSIS/core_cm3.h **** {
1237:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1238:../../STM32F1_files/CMSIS/core_cm3.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1239:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1240:../../STM32F1_files/CMSIS/core_cm3.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1241:../../STM32F1_files/CMSIS/core_cm3.h **** } CoreDebug_Type;
1242:../../STM32F1_files/CMSIS/core_cm3.h **** 
1243:../../STM32F1_files/CMSIS/core_cm3.h **** /* Debug Halting Control and Status Register Definitions */
1244:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1245:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1246:../../STM32F1_files/CMSIS/core_cm3.h **** 
1247:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1248:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1249:../../STM32F1_files/CMSIS/core_cm3.h **** 
1250:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1251:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1252:../../STM32F1_files/CMSIS/core_cm3.h **** 
1253:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1254:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1255:../../STM32F1_files/CMSIS/core_cm3.h **** 
1256:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1257:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1258:../../STM32F1_files/CMSIS/core_cm3.h **** 
1259:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1260:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1261:../../STM32F1_files/CMSIS/core_cm3.h **** 
1262:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1263:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1264:../../STM32F1_files/CMSIS/core_cm3.h **** 
1265:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1266:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1267:../../STM32F1_files/CMSIS/core_cm3.h **** 
1268:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1269:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1270:../../STM32F1_files/CMSIS/core_cm3.h **** 
1271:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1272:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1273:../../STM32F1_files/CMSIS/core_cm3.h **** 
1274:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1275:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1276:../../STM32F1_files/CMSIS/core_cm3.h **** 
1277:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1278:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
ARM GAS  /tmp/ccTd0H1B.s 			page 56


1279:../../STM32F1_files/CMSIS/core_cm3.h **** 
1280:../../STM32F1_files/CMSIS/core_cm3.h **** /* Debug Core Register Selector Register Definitions */
1281:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1282:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1283:../../STM32F1_files/CMSIS/core_cm3.h **** 
1284:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1285:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1286:../../STM32F1_files/CMSIS/core_cm3.h **** 
1287:../../STM32F1_files/CMSIS/core_cm3.h **** /* Debug Exception and Monitor Control Register Definitions */
1288:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1289:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1290:../../STM32F1_files/CMSIS/core_cm3.h **** 
1291:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1292:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1293:../../STM32F1_files/CMSIS/core_cm3.h **** 
1294:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1295:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1296:../../STM32F1_files/CMSIS/core_cm3.h **** 
1297:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1298:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1299:../../STM32F1_files/CMSIS/core_cm3.h **** 
1300:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1301:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1302:../../STM32F1_files/CMSIS/core_cm3.h **** 
1303:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1304:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1305:../../STM32F1_files/CMSIS/core_cm3.h **** 
1306:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1307:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1308:../../STM32F1_files/CMSIS/core_cm3.h **** 
1309:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1310:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1311:../../STM32F1_files/CMSIS/core_cm3.h **** 
1312:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1313:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1314:../../STM32F1_files/CMSIS/core_cm3.h **** 
1315:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1316:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1317:../../STM32F1_files/CMSIS/core_cm3.h **** 
1318:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1319:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1320:../../STM32F1_files/CMSIS/core_cm3.h **** 
1321:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1322:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1323:../../STM32F1_files/CMSIS/core_cm3.h **** 
1324:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1325:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1326:../../STM32F1_files/CMSIS/core_cm3.h **** 
1327:../../STM32F1_files/CMSIS/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
1328:../../STM32F1_files/CMSIS/core_cm3.h **** 
1329:../../STM32F1_files/CMSIS/core_cm3.h **** 
1330:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1331:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup    CMSIS_core_register
1332:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1333:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1334:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
1335:../../STM32F1_files/CMSIS/core_cm3.h ****  */
ARM GAS  /tmp/ccTd0H1B.s 			page 57


1336:../../STM32F1_files/CMSIS/core_cm3.h **** 
1337:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1338:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1339:../../STM32F1_files/CMSIS/core_cm3.h ****   \param[in] field  Name of the register bit field.
1340:../../STM32F1_files/CMSIS/core_cm3.h ****   \param[in] value  Value of the bit field.
1341:../../STM32F1_files/CMSIS/core_cm3.h ****   \return           Masked and shifted value.
1342:../../STM32F1_files/CMSIS/core_cm3.h **** */
1343:../../STM32F1_files/CMSIS/core_cm3.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1344:../../STM32F1_files/CMSIS/core_cm3.h **** 
1345:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1346:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1347:../../STM32F1_files/CMSIS/core_cm3.h ****   \param[in] field  Name of the register bit field.
1348:../../STM32F1_files/CMSIS/core_cm3.h ****   \param[in] value  Value of register.
1349:../../STM32F1_files/CMSIS/core_cm3.h ****   \return           Masked and shifted bit field value.
1350:../../STM32F1_files/CMSIS/core_cm3.h **** */
1351:../../STM32F1_files/CMSIS/core_cm3.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1352:../../STM32F1_files/CMSIS/core_cm3.h **** 
1353:../../STM32F1_files/CMSIS/core_cm3.h **** /*@} end of group CMSIS_core_bitfield */
1354:../../STM32F1_files/CMSIS/core_cm3.h **** 
1355:../../STM32F1_files/CMSIS/core_cm3.h **** 
1356:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1357:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup    CMSIS_core_register
1358:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup   CMSIS_core_base     Core Definitions
1359:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief      Definitions for base addresses, unions, and structures.
1360:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
1361:../../STM32F1_files/CMSIS/core_cm3.h ****  */
1362:../../STM32F1_files/CMSIS/core_cm3.h **** 
1363:../../STM32F1_files/CMSIS/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
1364:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1365:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1366:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1367:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1368:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1369:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1370:../../STM32F1_files/CMSIS/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1371:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1372:../../STM32F1_files/CMSIS/core_cm3.h **** 
1373:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1374:../../STM32F1_files/CMSIS/core_cm3.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1375:../../STM32F1_files/CMSIS/core_cm3.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1376:../../STM32F1_files/CMSIS/core_cm3.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1377:../../STM32F1_files/CMSIS/core_cm3.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1378:../../STM32F1_files/CMSIS/core_cm3.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1379:../../STM32F1_files/CMSIS/core_cm3.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1380:../../STM32F1_files/CMSIS/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1381:../../STM32F1_files/CMSIS/core_cm3.h **** 
1382:../../STM32F1_files/CMSIS/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1383:../../STM32F1_files/CMSIS/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1384:../../STM32F1_files/CMSIS/core_cm3.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1385:../../STM32F1_files/CMSIS/core_cm3.h **** #endif
1386:../../STM32F1_files/CMSIS/core_cm3.h **** 
1387:../../STM32F1_files/CMSIS/core_cm3.h **** /*@} */
1388:../../STM32F1_files/CMSIS/core_cm3.h **** 
1389:../../STM32F1_files/CMSIS/core_cm3.h **** 
1390:../../STM32F1_files/CMSIS/core_cm3.h **** 
1391:../../STM32F1_files/CMSIS/core_cm3.h **** /*******************************************************************************
1392:../../STM32F1_files/CMSIS/core_cm3.h ****  *                Hardware Abstraction Layer
ARM GAS  /tmp/ccTd0H1B.s 			page 58


1393:../../STM32F1_files/CMSIS/core_cm3.h ****   Core Function Interface contains:
1394:../../STM32F1_files/CMSIS/core_cm3.h ****   - Core NVIC Functions
1395:../../STM32F1_files/CMSIS/core_cm3.h ****   - Core SysTick Functions
1396:../../STM32F1_files/CMSIS/core_cm3.h ****   - Core Debug Functions
1397:../../STM32F1_files/CMSIS/core_cm3.h ****   - Core Register Access Functions
1398:../../STM32F1_files/CMSIS/core_cm3.h ****  ******************************************************************************/
1399:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1400:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1401:../../STM32F1_files/CMSIS/core_cm3.h **** */
1402:../../STM32F1_files/CMSIS/core_cm3.h **** 
1403:../../STM32F1_files/CMSIS/core_cm3.h **** 
1404:../../STM32F1_files/CMSIS/core_cm3.h **** 
1405:../../STM32F1_files/CMSIS/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1406:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1407:../../STM32F1_files/CMSIS/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1408:../../STM32F1_files/CMSIS/core_cm3.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1409:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1410:../../STM32F1_files/CMSIS/core_cm3.h ****   @{
1411:../../STM32F1_files/CMSIS/core_cm3.h ****  */
1412:../../STM32F1_files/CMSIS/core_cm3.h **** 
1413:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1414:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief   Set Priority Grouping
1415:../../STM32F1_files/CMSIS/core_cm3.h ****   \details Sets the priority grouping field using the required unlock sequence.
1416:../../STM32F1_files/CMSIS/core_cm3.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1417:../../STM32F1_files/CMSIS/core_cm3.h ****            Only values from 0..7 are used.
1418:../../STM32F1_files/CMSIS/core_cm3.h ****            In case of a conflict between priority grouping and available
1419:../../STM32F1_files/CMSIS/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1420:../../STM32F1_files/CMSIS/core_cm3.h ****   \param [in]      PriorityGroup  Priority grouping field.
1421:../../STM32F1_files/CMSIS/core_cm3.h ****  */
1422:../../STM32F1_files/CMSIS/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1423:../../STM32F1_files/CMSIS/core_cm3.h **** {
1424:../../STM32F1_files/CMSIS/core_cm3.h ****   uint32_t reg_value;
1425:../../STM32F1_files/CMSIS/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1426:../../STM32F1_files/CMSIS/core_cm3.h **** 
1427:../../STM32F1_files/CMSIS/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1428:../../STM32F1_files/CMSIS/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1429:../../STM32F1_files/CMSIS/core_cm3.h ****   reg_value  =  (reg_value                                   |
1430:../../STM32F1_files/CMSIS/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1431:../../STM32F1_files/CMSIS/core_cm3.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1432:../../STM32F1_files/CMSIS/core_cm3.h ****   SCB->AIRCR =  reg_value;
1433:../../STM32F1_files/CMSIS/core_cm3.h **** }
1434:../../STM32F1_files/CMSIS/core_cm3.h **** 
1435:../../STM32F1_files/CMSIS/core_cm3.h **** 
1436:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1437:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief   Get Priority Grouping
1438:../../STM32F1_files/CMSIS/core_cm3.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1439:../../STM32F1_files/CMSIS/core_cm3.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1440:../../STM32F1_files/CMSIS/core_cm3.h ****  */
1441:../../STM32F1_files/CMSIS/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1442:../../STM32F1_files/CMSIS/core_cm3.h **** {
1443:../../STM32F1_files/CMSIS/core_cm3.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1444:../../STM32F1_files/CMSIS/core_cm3.h **** }
1445:../../STM32F1_files/CMSIS/core_cm3.h **** 
1446:../../STM32F1_files/CMSIS/core_cm3.h **** 
1447:../../STM32F1_files/CMSIS/core_cm3.h **** /**
1448:../../STM32F1_files/CMSIS/core_cm3.h ****   \brief   Enable External Interrupt
1449:../../STM32F1_files/CMSIS/core_cm3.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
ARM GAS  /tmp/ccTd0H1B.s 			page 59


1450:../../STM32F1_files/CMSIS/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1451:../../STM32F1_files/CMSIS/core_cm3.h ****  */
1452:../../STM32F1_files/CMSIS/core_cm3.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1453:../../STM32F1_files/CMSIS/core_cm3.h **** {
1454:../../STM32F1_files/CMSIS/core_cm3.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
 1208              		.loc 10 1454 0
 1209 00b0 2022     		movs	r2, #32
 1210 00b2 264C     		ldr	r4, .L67+28
 1211              	.LBE545:
 1212              	.LBE544:
 1213              	.LBB547:
 1214              	.LBB548:
 1215              		.file 11 "../../src/periph/f1_dma_stream.h"
   1:../../src/periph/f1_dma_stream.h **** #pragma once
   2:../../src/periph/f1_dma_stream.h **** 
   3:../../src/periph/f1_dma_stream.h **** #include "f1_bits_dma_stream.h"
   4:../../src/periph/f1_dma_stream.h **** #include "f1_dma.h"
   5:../../src/periph/f1_dma_stream.h **** 
   6:../../src/periph/f1_dma_stream.h **** namespace mcu {
   7:../../src/periph/f1_dma_stream.h **** 
   8:../../src/periph/f1_dma_stream.h **** class DMA_stream {
   9:../../src/periph/f1_dma_stream.h ****    __IO DMA_bits::CCR CCR;   // DMA channel x configuration register      offset: 0x08 + 0d20 √ó (c
  10:../../src/periph/f1_dma_stream.h ****    __IO uint32_t      CNDTR; // DMA channel x number of data register     offset: 0x0C + 0d20 √ó (c
  11:../../src/periph/f1_dma_stream.h ****    __IO uint32_t      CPAR;  // DMA channel x peripheral address register offset: 0x10 + 0d20 √ó (c
  12:../../src/periph/f1_dma_stream.h ****    __IO uint32_t      CMAR;  // DMA channel x memory address register     offset: 0x14 + 0d20 √ó (c
  13:../../src/periph/f1_dma_stream.h **** 
  14:../../src/periph/f1_dma_stream.h **** public:
  15:../../src/periph/f1_dma_stream.h ****    using CMSIS_type    = DMA_Channel_TypeDef;
  16:../../src/periph/f1_dma_stream.h ****    using DataSize      = DMA_bits::CCR::DataSize;
  17:../../src/periph/f1_dma_stream.h ****    using Priority      = DMA_bits::CCR::Priority;
  18:../../src/periph/f1_dma_stream.h ****    using DataDirection = DMA_bits::CCR::DataDirection;
  19:../../src/periph/f1_dma_stream.h ****    using Channel       = DMA_bits::Channel;
  20:../../src/periph/f1_dma_stream.h **** 
  21:../../src/periph/f1_dma_stream.h ****    template <Periph dma = Periph::DMA1>
  22:../../src/periph/f1_dma_stream.h ****    DMA_stream& clock_enable (){make_reference<dma>().template clock_enable<dma>(); return *this;}
  23:../../src/periph/f1_dma_stream.h ****    DMA_stream& enable       (){CCR.EN = true; while(not CCR.EN){} return *this;}
  24:../../src/periph/f1_dma_stream.h ****    DMA_stream& disable      (){CCR.EN = false;  return *this;}
  25:../../src/periph/f1_dma_stream.h ****    bool        is_disable   (){return (not CCR.EN);}
  26:../../src/periph/f1_dma_stream.h ****    DMA_stream& inc_memory   (){CCR.MINC = true; return *this;}
  27:../../src/periph/f1_dma_stream.h ****    DMA_stream& inc_periph   (){CCR.PINC = true; return *this;}
  28:../../src/periph/f1_dma_stream.h ****    DMA_stream& circular_mode(){CCR.CIRC = true; return *this;}
  29:../../src/periph/f1_dma_stream.h **** 
  30:../../src/periph/f1_dma_stream.h ****    DMA_stream& set_memory_adr      (uint32_t v){CMAR  = v; return *this;}
  31:../../src/periph/f1_dma_stream.h ****    DMA_stream& set_periph_adr      (uint32_t v){CPAR  = v; return *this;}
  32:../../src/periph/f1_dma_stream.h ****    DMA_stream& set_qty_transactions(uint16_t v){CNDTR = v; return *this;}
  33:../../src/periph/f1_dma_stream.h ****    
  34:../../src/periph/f1_dma_stream.h **** 
  35:../../src/periph/f1_dma_stream.h ****    DMA_stream& direction  (DataDirection d){CCR.DIR = d;   return *this;}
  36:../../src/periph/f1_dma_stream.h ****    DMA_stream& size_memory(DataSize d)     {CCR.MSIZE = d; return *this;}
 1216              		.loc 11 36 0
 1217 00b4 264D     		ldr	r5, .L67+32
 1218              	.LBE548:
 1219              	.LBE547:
 1220              	.LBB550:
 1221              	.LBB546:
 1222              		.loc 10 1454 0
 1223 00b6 6260     		str	r2, [r4, #4]
ARM GAS  /tmp/ccTd0H1B.s 			page 60


 1224              	.LVL68:
 1225 00b8 A446     		mov	ip, r4
 1226              	.LBE546:
 1227              	.LBE550:
 1228              	.LBB551:
 1229              	.LBB552:
 1230              	.LBB553:
 1231              	.LBB554:
  63:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::USART2) APB1ENR.USART2EN = true;
  64:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::USART3) APB1ENR.USART3EN = true;
  65:../../src/periph/f1_rcc.h **** 
  66:../../src/periph/f1_rcc.h ****       else if constexpr (p == Periph::DMA1) AHBENR.DMA1EN = true;
 1232              		.loc 6 66 0
 1233 00ba 5C69     		ldr	r4, [r3, #20]
 1234              	.LBE554:
 1235              	.LBE553:
 1236              	.LBE552:
 1237              	.LBE551:
  41:../../src/uart.h ****    {}
  42:../../src/uart.h **** 
  43:../../src/uart.h ****    struct Settings {
  44:../../src/uart.h ****       bool     parity_enable :1;
  45:../../src/uart.h ****       Parity   parity        :1;
  46:../../src/uart.h ****       DataBits data_bits     :1;
  47:../../src/uart.h ****       StopBits stop_bits     :2;
  48:../../src/uart.h ****       Baudrate baudrate      :3;
  49:../../src/uart.h ****       uint16_t               :8;
  50:../../src/uart.h ****    };
  51:../../src/uart.h **** 
  52:../../src/uart.h ****    template <Periph usart, class TXpin, class RXpin, class RTSpin, class LEDpin> static auto make()
  53:../../src/uart.h ****    {
  54:../../src/uart.h ****       USART::pin_static_assert<usart, TXpin, RXpin>();
  55:../../src/uart.h ****       
  56:../../src/uart.h ****       constexpr auto TX_stream   = USART::stream  <usart, TXpin>();
  57:../../src/uart.h ****       constexpr auto RX_stream   = USART::stream  <usart, RXpin>();
  58:../../src/uart.h ****       constexpr auto TXpin_mode  = USART::pin_mode<usart, TXpin>();
  59:../../src/uart.h ****       constexpr auto RXpin_mode  = USART::pin_mode<usart, RXpin>();
  60:../../src/uart.h **** 
  61:../../src/uart.h ****       UART_ uart {
  62:../../src/uart.h ****            make_reference<usart>()
  63:../../src/uart.h ****          , make_reference<TX_stream>()
  64:../../src/uart.h ****          , make_reference<RX_stream>()
  65:../../src/uart.h ****          , USART::clock<usart>()
  66:../../src/uart.h ****          , Pin::make<TXpin, TXpin_mode>()
  67:../../src/uart.h ****          , Pin::make<RXpin, RXpin_mode>()
  68:../../src/uart.h ****          , Pin::make<RTSpin, PinMode::Output>()
  69:../../src/uart.h ****          , Pin::make<LEDpin, PinMode::Output>()
  70:../../src/uart.h ****       };
  71:../../src/uart.h **** 
  72:../../src/uart.h ****       uart.usart.template clock_enable<usart>()
  73:../../src/uart.h ****                 .tx_enable()
  74:../../src/uart.h ****                 .rx_enable()
  75:../../src/uart.h ****                 .DMA_tx_enable()
  76:../../src/uart.h ****                 .DMA_rx_enable()
  77:../../src/uart.h ****                 .enable_IDLE_interrupt()
  78:../../src/uart.h ****                 .enable();
  79:../../src/uart.h ****          NVIC_EnableIRQ(uart.usart.IRQn(usart));
ARM GAS  /tmp/ccTd0H1B.s 			page 61


  80:../../src/uart.h **** 
  81:../../src/uart.h ****       uart.TXstream.template clock_enable()
 1238              		.loc 8 81 0
 1239 00bc 019A     		ldr	r2, [sp, #4]
 1240              	.LVL69:
 1241              	.LBB558:
 1242              	.LBB557:
 1243              	.LBB556:
 1244              	.LBB555:
 1245              		.loc 6 66 0
 1246 00be 0C43     		orrs	r4, r1
 1247 00c0 5C61     		str	r4, [r3, #20]
 1248              	.LVL70:
 1249              	.LBE555:
 1250              	.LBE556:
 1251              	.LBE557:
 1252              	.LBE558:
 1253              	.LBB559:
 1254              	.LBB560:
  24:../../src/periph/f1_dma_stream.h ****    bool        is_disable   (){return (not CCR.EN);}
 1255              		.loc 11 24 0
 1256 00c2 1468     		ldr	r4, [r2]
 1257 00c4 8C43     		bics	r4, r1
 1258 00c6 1460     		str	r4, [r2]
 1259              	.LVL71:
 1260              	.LBE560:
 1261              	.LBE559:
 1262              	.LBB561:
 1263              	.LBB562:
  35:../../src/periph/f1_dma_stream.h ****    DMA_stream& size_memory(DataSize d)     {CCR.MSIZE = d; return *this;}
 1264              		.loc 11 35 0
 1265 00c8 1468     		ldr	r4, [r2]
 1266 00ca 0443     		orrs	r4, r0
 1267 00cc 1460     		str	r4, [r2]
 1268              	.LVL72:
 1269              	.LBE562:
 1270              	.LBE561:
 1271              	.LBB563:
 1272              	.LBB564:
  30:../../src/periph/f1_dma_stream.h ****    DMA_stream& set_periph_adr      (uint32_t v){CPAR  = v; return *this;}
 1273              		.loc 11 30 0
 1274 00ce 0CAC     		add	r4, sp, #48
 1275              	.LVL73:
 1276 00d0 D460     		str	r4, [r2, #12]
 1277              	.LVL74:
 1278              	.LBE564:
 1279              	.LBE563:
 1280              	.LBB565:
 1281              	.LBB566:
  72:../../src/periph/f1_usart.h ****    bool    is_IDLE_interrupt              (){return this->SR.IDLE;}
  73:../../src/periph/f1_usart.h ****    USART_& enable_tx_complete_interrupt   (){this->CR1.TCIE   = true;  return *this;}
  74:../../src/periph/f1_usart.h ****    USART_& disable_tx_complete_interrupt  (){this->CR1.TCIE   = false; return *this;}
  75:../../src/periph/f1_usart.h ****    bool    is_tx_complete                 (){return this->SR.TC;}
  76:../../src/periph/f1_usart.h ****    bool    is_tx_complete_interrupt_enable(){return this->CR1.TCIE;}
  77:../../src/periph/f1_usart.h ****    USART_& clear_interrupt_flags          (){
  78:../../src/periph/f1_usart.h ****       [[maybe_unused]] uint32_t t1 = this->read_SR();
  79:../../src/periph/f1_usart.h ****       [[maybe_unused]] uint32_t t2 = this->DR;
ARM GAS  /tmp/ccTd0H1B.s 			page 62


  80:../../src/periph/f1_usart.h ****       return *this;
  81:../../src/periph/f1_usart.h ****    }
  82:../../src/periph/f1_usart.h **** 
  83:../../src/periph/f1_usart.h ****    size_t receive_data_adr () {return reinterpret_cast<size_t>(&this->DR);}
  84:../../src/periph/f1_usart.h ****    size_t transmit_data_adr() {return reinterpret_cast<size_t>(&this->DR);}
 1282              		.loc 9 84 0
 1283 00d2 009C     		ldr	r4, [sp]
 1284 00d4 0434     		adds	r4, r4, #4
 1285              	.LVL75:
 1286              	.LBE566:
 1287              	.LBE565:
 1288              	.LBB567:
 1289              	.LBB568:
  31:../../src/periph/f1_dma_stream.h ****    DMA_stream& set_qty_transactions(uint16_t v){CNDTR = v; return *this;}
 1290              		.loc 11 31 0
 1291 00d6 9460     		str	r4, [r2, #8]
 1292              	.LBE568:
 1293              	.LBE567:
 1294              	.LBB569:
 1295              	.LBB570:
  26:../../src/periph/f1_dma_stream.h ****    DMA_stream& inc_periph   (){CCR.PINC = true; return *this;}
 1296              		.loc 11 26 0
 1297 00d8 1468     		ldr	r4, [r2]
 1298 00da 3C43     		orrs	r4, r7
 1299 00dc 1460     		str	r4, [r2]
 1300              	.LVL76:
 1301              	.LBE570:
 1302              	.LBE569:
 1303              	.LBB571:
 1304              	.LBB549:
 1305              		.loc 11 36 0
 1306 00de 1468     		ldr	r4, [r2]
 1307 00e0 2C40     		ands	r4, r5
 1308 00e2 1460     		str	r4, [r2]
 1309              	.LVL77:
 1310              	.LBE549:
 1311              	.LBE571:
 1312              	.LBB572:
 1313              	.LBB573:
  37:../../src/periph/f1_dma_stream.h ****    DMA_stream& size_periph(DataSize d)     {CCR.PSIZE = d; return *this;}
 1314              		.loc 11 37 0
 1315 00e4 1468     		ldr	r4, [r2]
 1316 00e6 1B4D     		ldr	r5, .L67+36
 1317 00e8 2C40     		ands	r4, r5
 1318 00ea 1460     		str	r4, [r2]
 1319              	.LVL78:
 1320              	.LBE573:
 1321              	.LBE572:
 1322              	.LBB574:
 1323              	.LBB575:
  38:../../src/periph/f1_dma_stream.h **** 
  39:../../src/periph/f1_dma_stream.h **** //    static constexpr Channel channel(Periph);
  40:../../src/periph/f1_dma_stream.h ****    static constexpr IRQn_Type IRQn (Periph);
  41:../../src/periph/f1_dma_stream.h **** 
  42:../../src/periph/f1_dma_stream.h ****    DMA_stream& enable_transfer_complete_interrupt(){CCR.TCIE = true; return *this;}
 1324              		.loc 11 42 0
 1325 00ec 1468     		ldr	r4, [r2]
ARM GAS  /tmp/ccTd0H1B.s 			page 63


 1326 00ee 3443     		orrs	r4, r6
 1327 00f0 1460     		str	r4, [r2]
 1328              	.LVL79:
 1329              	.LBE575:
 1330              	.LBE574:
 1331              	.LBB576:
 1332              	.LBB577:
 1333              		.loc 10 1454 0
 1334 00f2 8022     		movs	r2, #128
 1335 00f4 6446     		mov	r4, ip
 1336 00f6 D201     		lsls	r2, r2, #7
 1337 00f8 2260     		str	r2, [r4]
 1338              	.LVL80:
 1339              	.LBE577:
 1340              	.LBE576:
 1341              	.LBB578:
 1342              	.LBB579:
 1343              	.LBB580:
 1344              	.LBB581:
 1345              		.loc 6 66 0
 1346 00fa 5C69     		ldr	r4, [r3, #20]
 1347              	.LBE581:
 1348              	.LBE580:
 1349              	.LBE579:
 1350              	.LBE578:
  82:../../src/uart.h ****                    .disable()
  83:../../src/uart.h ****                 	 .direction(DataDirection::MemToPer)
  84:../../src/uart.h ****                 	 .set_memory_adr(reinterpret_cast<size_t>(uart.buffer))
  85:../../src/uart.h ****                 	 .set_periph_adr(uart.usart.transmit_data_adr())
  86:../../src/uart.h ****                 	 .inc_memory()
  87:../../src/uart.h ****                 	 .size_memory(DataSize::byte8)
  88:../../src/uart.h ****                 	 .size_periph(DataSize::byte8)
  89:../../src/uart.h ****                 	 .enable_transfer_complete_interrupt();
  90:../../src/uart.h ****          NVIC_EnableIRQ(uart.TXstream.IRQn(TX_stream));
  91:../../src/uart.h **** 
  92:../../src/uart.h ****       uart.RXstream.template clock_enable()
 1351              		.loc 8 92 0
 1352 00fc 029A     		ldr	r2, [sp, #8]
 1353              	.LVL81:
 1354              	.LBB585:
 1355              	.LBB584:
 1356              	.LBB583:
 1357              	.LBB582:
 1358              		.loc 6 66 0
 1359 00fe 2143     		orrs	r1, r4
 1360 0100 5961     		str	r1, [r3, #20]
 1361              	.LVL82:
 1362              	.LBE582:
 1363              	.LBE583:
 1364              	.LBE584:
 1365              	.LBE585:
 1366              	.LBB586:
 1367              	.LBB587:
  35:../../src/periph/f1_dma_stream.h ****    DMA_stream& size_memory(DataSize d)     {CCR.MSIZE = d; return *this;}
 1368              		.loc 11 35 0
 1369 0102 1368     		ldr	r3, [r2]
 1370              	.LBE587:
ARM GAS  /tmp/ccTd0H1B.s 			page 64


 1371              	.LBE586:
 1372              	.LBB589:
 1373              	.LBB590:
  36:../../src/periph/f1_dma_stream.h ****    DMA_stream& size_periph(DataSize d)     {CCR.PSIZE = d; return *this;}
 1374              		.loc 11 36 0
 1375 0104 124E     		ldr	r6, .L67+32
 1376              	.LBE590:
 1377              	.LBE589:
 1378              	.LBB592:
 1379              	.LBB588:
  35:../../src/periph/f1_dma_stream.h ****    DMA_stream& size_memory(DataSize d)     {CCR.MSIZE = d; return *this;}
 1380              		.loc 11 35 0
 1381 0106 8343     		bics	r3, r0
 1382 0108 1360     		str	r3, [r2]
 1383              	.LVL83:
 1384              	.LBE588:
 1385              	.LBE592:
 1386              	.LBB593:
 1387              	.LBB594:
  30:../../src/periph/f1_dma_stream.h ****    DMA_stream& set_periph_adr      (uint32_t v){CPAR  = v; return *this;}
 1388              		.loc 11 30 0
 1389 010a 0CAB     		add	r3, sp, #48
 1390              	.LVL84:
 1391 010c D360     		str	r3, [r2, #12]
 1392              	.LVL85:
 1393              	.LBE594:
 1394              	.LBE593:
 1395              	.LBB595:
 1396              	.LBB596:
 1397              		.loc 9 84 0
 1398 010e 009B     		ldr	r3, [sp]
 1399              	.LBE596:
 1400              	.LBE595:
 1401              	.LBE609:
 1402              	.LBE612:
  31:main.cpp      **** //    auto pc8 = mcu::Pin::make<mcu::PC8, mcu::PinMode::Output>();
  32:main.cpp      **** //    Timer timer {200};
  33:main.cpp      **** 
  34:main.cpp      **** //    auto pwm = mcu::PWM::make<mcu::Periph::TIM1, mcu::PA8>();
  35:main.cpp      **** //    pwm.fill_ratio = 500_from1000;
  36:main.cpp      **** //    pwm.frequency  = 20_kHz;
  37:main.cpp      **** //    pwm.out_enable();
  38:main.cpp      **** 
  39:main.cpp      ****    auto uart = mcu::UART::make<mcu::Periph::USART1, mcu::PA9, mcu::PA10,mcu::PA8, mcu::PA12>();
  40:main.cpp      **** 
  41:main.cpp      **** //    while(1) {
  42:main.cpp      **** 
  43:main.cpp      **** //       if (timer.event()) {
  44:main.cpp      **** //          pc8 ^= 1;
  45:main.cpp      **** //       }
  46:main.cpp      **** 
  47:main.cpp      **** //    } // while(1) {
  48:main.cpp      ****    // FIFO buffer;
  49:main.cpp      ****    // buffer << 2;
  50:main.cpp      **** 
  51:main.cpp      ****    // buffer << 2;
  52:main.cpp      **** 
ARM GAS  /tmp/ccTd0H1B.s 			page 65


  53:main.cpp      ****    // struct InReg{};
  54:main.cpp      ****    // struct OutReg{};
  55:main.cpp      **** 
  56:main.cpp      ****    // auto modbus = mcu::Modbus_slave::make<mcu::Periph::USART1, mcu::PA9, mcu::PA10, InReg, OutReg
  57:main.cpp      **** }
 1403              		.loc 5 57 0
 1404 0110 0020     		movs	r0, #0
 1405              	.LBB613:
 1406              	.LBB610:
 1407              	.LBB598:
 1408              	.LBB597:
 1409              		.loc 9 84 0
 1410 0112 0433     		adds	r3, r3, #4
 1411              	.LVL86:
 1412              	.LBE597:
 1413              	.LBE598:
 1414              	.LBB599:
 1415              	.LBB600:
  31:../../src/periph/f1_dma_stream.h ****    DMA_stream& set_qty_transactions(uint16_t v){CNDTR = v; return *this;}
 1416              		.loc 11 31 0
 1417 0114 9360     		str	r3, [r2, #8]
 1418              	.LVL87:
 1419              	.LBE600:
 1420              	.LBE599:
 1421              	.LBB601:
 1422              	.LBB602:
  32:../../src/periph/f1_dma_stream.h ****    
 1423              		.loc 11 32 0
 1424 0116 FF23     		movs	r3, #255
 1425 0118 5360     		str	r3, [r2, #4]
 1426              	.LVL88:
 1427              	.LBE602:
 1428              	.LBE601:
 1429              	.LBB603:
 1430              	.LBB604:
  26:../../src/periph/f1_dma_stream.h ****    DMA_stream& inc_periph   (){CCR.PINC = true; return *this;}
 1431              		.loc 11 26 0
 1432 011a 1368     		ldr	r3, [r2]
 1433 011c 3B43     		orrs	r3, r7
 1434 011e 1360     		str	r3, [r2]
 1435              	.LVL89:
 1436              	.LBE604:
 1437              	.LBE603:
 1438              	.LBB605:
 1439              	.LBB591:
  36:../../src/periph/f1_dma_stream.h ****    DMA_stream& size_periph(DataSize d)     {CCR.PSIZE = d; return *this;}
 1440              		.loc 11 36 0
 1441 0120 1368     		ldr	r3, [r2]
 1442 0122 1E40     		ands	r6, r3
 1443 0124 1660     		str	r6, [r2]
 1444              	.LVL90:
 1445              	.LBE591:
 1446              	.LBE605:
 1447              	.LBB606:
 1448              	.LBB607:
  37:../../src/periph/f1_dma_stream.h **** 
 1449              		.loc 11 37 0
ARM GAS  /tmp/ccTd0H1B.s 			page 66


 1450 0126 1368     		ldr	r3, [r2]
 1451 0128 1D40     		ands	r5, r3
 1452 012a 1560     		str	r5, [r2]
 1453              	.LVL91:
 1454              	.LBE607:
 1455              	.LBE606:
 1456              	.LBE610:
 1457              	.LBE613:
 1458              		.loc 5 57 0
 1459 012c 4DB0     		add	sp, sp, #308
 1460              		@ sp needed
 1461 012e F0BD     		pop	{r4, r5, r6, r7, pc}
 1462              	.L68:
 1463              		.align	2
 1464              	.L67:
 1465 0130 00100240 		.word	1073876992
 1466 0134 00080140 		.word	1073809408
 1467 0138 FFF0FFFF 		.word	-3841
 1468 013c FFFFF0FF 		.word	-983041
 1469 0140 44000240 		.word	1073872964
 1470 0144 00380140 		.word	1073821696
 1471 0148 58000240 		.word	1073872984
 1472 014c 00E100E0 		.word	-536813312
 1473 0150 FFF3FFFF 		.word	-3073
 1474 0154 FFFCFFFF 		.word	-769
 1475              		.cfi_endproc
 1476              	.LFE264:
 1478              		.section	.text.startup._GLOBAL__sub_I__ZN3mcu3DMA21clear_interrupt_flagsENS_8DMA_bits7ChannelE,"ax
 1479              		.align	1
 1480              		.syntax unified
 1481              		.code	16
 1482              		.thumb_func
 1483              		.fpu softvfp
 1485              	_GLOBAL__sub_I__ZN3mcu3DMA21clear_interrupt_flagsENS_8DMA_bits7ChannelE:
 1486              	.LFB328:
 1487              		.loc 5 57 0
 1488              		.cfi_startproc
 1489              		@ args = 0, pretend = 0, frame = 0
 1490              		@ frame_needed = 0, uses_anonymous_args = 0
 1491              		@ link register save eliminated.
 1492              	.LVL92:
 1493              	.LBB635:
 1494              	.LBB636:
 1495              	.LBB637:
 1496              	.LBB638:
 1497              	.LBB639:
 1498              	.LBB640:
 1499              	.LBB641:
  10:../../src/list.h **** {
 1500              		.loc 4 10 0
 1501 0000 0022     		movs	r2, #0
 1502 0002 0A4B     		ldr	r3, .L70
 1503              	.LBE641:
 1504              	.LBE640:
 1505              	.LBE639:
 1506              	.LBB644:
 1507              	.LBB645:
ARM GAS  /tmp/ccTd0H1B.s 			page 67


 1508              	.LBB646:
 1509              	.LBB647:
 1510              		.file 12 "../../src/periph/systick.h"
   1:../../src/periph/systick.h **** #pragma once
   2:../../src/periph/systick.h **** 
   3:../../src/periph/systick.h **** #include "periph.h"
   4:../../src/periph/systick.h **** #include "f0_f4_bits_systick.h"
   5:../../src/periph/systick.h **** 
   6:../../src/periph/systick.h **** namespace mcu {
   7:../../src/periph/systick.h **** 
   8:../../src/periph/systick.h **** 
   9:../../src/periph/systick.h **** 
  10:../../src/periph/systick.h **** 
  11:../../src/periph/systick.h **** class SysTick {
  12:../../src/periph/systick.h ****    __IO SysTick_bits::CTRL     CTRL;  // Offset: 0x000 (R/W)  SysTick Control and Status Register
  13:../../src/periph/systick.h ****    __IO uint32_t               LOAD;  // Offset: 0x004 (R/W)  SysTick Reload Value Register
  14:../../src/periph/systick.h ****    __IO uint32_t               VAL;   // Offset: 0x008 (R/W)  SysTick Current Value Register
  15:../../src/periph/systick.h ****    __IO SysTick_bits::CALIB    CALIB; // Offset: 0x00C (R/ )  SysTick Calibration Register
  16:../../src/periph/systick.h **** public:
  17:../../src/periph/systick.h ****    using Clock = SysTick_bits::CTRL::Clock;
  18:../../src/periph/systick.h ****    
  19:../../src/periph/systick.h ****    void load (uint32_t v)   { LOAD = v; }
 1511              		.loc 12 19 0
 1512 0004 0A49     		ldr	r1, .L70+4
 1513              	.LBE647:
 1514              	.LBE646:
 1515              	.LBE645:
 1516              	.LBE644:
 1517              	.LBB662:
 1518              	.LBB643:
 1519              	.LBB642:
  10:../../src/list.h **** {
 1520              		.loc 4 10 0
 1521 0006 1A60     		str	r2, [r3]
 1522 0008 5A60     		str	r2, [r3, #4]
 1523              	.LVL93:
 1524              	.LBE642:
 1525              	.LBE643:
 1526              	.LBE662:
 1527              	.LBB663:
 1528              	.LBB660:
 1529              	.LBB650:
 1530              	.LBB648:
 1531              		.loc 12 19 0
 1532 000a 0A4B     		ldr	r3, .L70+8
 1533              	.LBE648:
 1534              	.LBE650:
 1535              	.LBE660:
 1536              	.LBE663:
 1537              	.LBE638:
 1538              	.LBE637:
 1539              	.LBE636:
 1540              	.LBE635:
 1541              		.loc 5 57 0
 1542              		@ sp needed
 1543              	.LBB668:
 1544              	.LBB667:
ARM GAS  /tmp/ccTd0H1B.s 			page 68


 1545              	.LBB666:
 1546              	.LBB665:
 1547              	.LBB664:
 1548              	.LBB661:
 1549              	.LBB651:
 1550              	.LBB649:
 1551              		.loc 12 19 0
 1552 000c 5960     		str	r1, [r3, #4]
 1553              	.LVL94:
 1554              	.LBE649:
 1555              	.LBE651:
 1556              	.LBB652:
 1557              	.LBB653:
  20:../../src/periph/systick.h ****    void clear()             { VAL = 0; }
 1558              		.loc 12 20 0
 1559 000e 9A60     		str	r2, [r3, #8]
 1560              	.LVL95:
 1561              	.LBE653:
 1562              	.LBE652:
 1563              	.LBB654:
 1564              	.LBB655:
  21:../../src/periph/systick.h ****    void setSource (Clock v) { CTRL.CLKSOURCE = v; }
 1565              		.loc 12 21 0
 1566 0010 1968     		ldr	r1, [r3]
 1567 0012 0432     		adds	r2, r2, #4
 1568 0014 0A43     		orrs	r2, r1
 1569 0016 1A60     		str	r2, [r3]
 1570              	.LVL96:
 1571              	.LBE655:
 1572              	.LBE654:
 1573              	.LBB656:
 1574              	.LBB657:
  22:../../src/periph/systick.h ****    void enableInterrupt()   { CTRL.TICKINT = true; }
 1575              		.loc 12 22 0
 1576 0018 0222     		movs	r2, #2
 1577 001a 1968     		ldr	r1, [r3]
 1578 001c 0A43     		orrs	r2, r1
 1579 001e 1A60     		str	r2, [r3]
 1580              	.LVL97:
 1581              	.LBE657:
 1582              	.LBE656:
 1583              	.LBB658:
 1584              	.LBB659:
  23:../../src/periph/systick.h ****    void enable()            { CTRL.ENABLE = true; }
 1585              		.loc 12 23 0
 1586 0020 0122     		movs	r2, #1
 1587 0022 1968     		ldr	r1, [r3]
 1588 0024 0A43     		orrs	r2, r1
 1589 0026 1A60     		str	r2, [r3]
 1590              	.LVL98:
 1591              	.LBE659:
 1592              	.LBE658:
 1593              	.LBE661:
 1594              	.LBE664:
 1595              	.LBE665:
 1596              	.LBE666:
 1597              	.LBE667:
ARM GAS  /tmp/ccTd0H1B.s 			page 69


 1598              	.LBE668:
 1599              		.loc 5 57 0
 1600 0028 7047     		bx	lr
 1601              	.L71:
 1602 002a C046     		.align	2
 1603              	.L70:
 1604 002c 00000000 		.word	.LANCHOR0
 1605 0030 3F190100 		.word	71999
 1606 0034 10E000E0 		.word	-536813552
 1607              		.cfi_endproc
 1608              	.LFE328:
 1610              		.section	.init_array,"aw",%init_array
 1611              		.align	2
 1612 0000 00000000 		.word	_GLOBAL__sub_I__ZN3mcu3DMA21clear_interrupt_flagsENS_8DMA_bits7ChannelE(target1)
 1613              		.global	_ZTV5Timer
 1614              		.global	tickUpdater
 1615              		.section	.bss.tickUpdater,"aw",%nobits
 1616              		.align	2
 1617              		.set	.LANCHOR0,. + 0
 1620              	tickUpdater:
 1621 0000 00000000 		.space	8
 1621      00000000 
 1622              		.section	.rodata._ZTV5Timer,"a",%progbits
 1623              		.align	2
 1626              	_ZTV5Timer:
 1627 0000 00000000 		.word	0
 1628 0004 00000000 		.word	0
 1629 0008 00000000 		.word	_ZN5Timer6notifyEv
 1630              		.text
 1631              	.Letext0:
 1632              		.file 13 "../../STM32F1_files/stm32f103xb.h"
 1633              		.file 14 "/home/alexandr/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_de
 1634              		.file 15 "/home/alexandr/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint
 1635              		.file 16 "/home/alexandr/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdint.h"
 1636              		.file 17 "/home/alexandr/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/t
 1637              		.file 18 "/home/alexandr/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/a
 1638              		.file 19 "/home/alexandr/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/c
 1639              		.file 20 "/home/alexandr/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/c
 1640              		.file 21 "/home/alexandr/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/c++/7.3.1/c
 1641              		.file 22 "/home/alexandr/code/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/inclu
 1642              		.file 23 "<built-in>"
 1643              		.file 24 "../../src/periph/periph.h"
 1644              		.file 25 "../../src/bits/f1_bits_rcc.h"
 1645              		.file 26 "../../src/bits/f1_bits_gpio.h"
 1646              		.file 27 "../../src/bits/f1_bits_afio.h"
 1647              		.file 28 "../../src/periph/f1_afio.h"
 1648              		.file 29 "../../src/pin.h"
 1649              		.file 30 "../../src/bits/f1_bits_usart.h"
 1650              		.file 31 "../../src/bits/f1_bits_dma_stream.h"
 1651              		.file 32 "../../src/bits/f1_bits_dma.h"
 1652              		.file 33 "../../src/bits/f0_f4_bits_systick.h"
 1653              		.file 34 "../../src/pins.h"
 1654              		.file 35 "/home/alexandr/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 1655              		.file 36 "/home/alexandr/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.
 1656              		.file 37 "/home/alexandr/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h
 1657              		.file 38 "/home/alexandr/code/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/string.h"
ARM GAS  /tmp/ccTd0H1B.s 			page 70


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccTd0H1B.s:16     .text._ZN5Timer6notifyEv:0000000000000000 $t
     /tmp/ccTd0H1B.s:23     .text._ZN5Timer6notifyEv:0000000000000000 _ZN5Timer6notifyEv
     /tmp/ccTd0H1B.s:45     .text._ZN3mcu3DMA21clear_interrupt_flagsENS_8DMA_bits7ChannelE:0000000000000000 $t
     /tmp/ccTd0H1B.s:52     .text._ZN3mcu3DMA21clear_interrupt_flagsENS_8DMA_bits7ChannelE:0000000000000000 _ZN3mcu3DMA21clear_interrupt_flagsENS_8DMA_bits7ChannelE
     /tmp/ccTd0H1B.s:139    .text._ZN3mcu3DMA30is_transfer_complete_interruptENS_8DMA_bits7ChannelE:0000000000000000 $t
     /tmp/ccTd0H1B.s:146    .text._ZN3mcu3DMA30is_transfer_complete_interruptENS_8DMA_bits7ChannelE:0000000000000000 _ZN3mcu3DMA30is_transfer_complete_interruptENS_8DMA_bits7ChannelE
     /tmp/ccTd0H1B.s:235    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccTd0H1B.s:242    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccTd0H1B.s:296    .text.SysTick_Handler:0000000000000018 $d
     /tmp/ccTd0H1B.s:301    .text._ZN5Timer5eventEv:0000000000000000 $t
     /tmp/ccTd0H1B.s:308    .text._ZN5Timer5eventEv:0000000000000000 _ZN5Timer5eventEv
     /tmp/ccTd0H1B.s:336    .text._ZN5Timer4doneEv:0000000000000000 $t
     /tmp/ccTd0H1B.s:343    .text._ZN5Timer4doneEv:0000000000000000 _ZN5Timer4doneEv
     /tmp/ccTd0H1B.s:365    .text._ZN5Timer7isCountEv:0000000000000000 $t
     /tmp/ccTd0H1B.s:372    .text._ZN5Timer7isCountEv:0000000000000000 _ZN5Timer7isCountEv
     /tmp/ccTd0H1B.s:389    .text._ZN5Timer10timePassedEv:0000000000000000 $t
     /tmp/ccTd0H1B.s:396    .text._ZN5Timer10timePassedEv:0000000000000000 _ZN5Timer10timePassedEv
     /tmp/ccTd0H1B.s:413    .text._ZN5Timer8timeLeftEv:0000000000000000 $t
     /tmp/ccTd0H1B.s:420    .text._ZN5Timer8timeLeftEv:0000000000000000 _ZN5Timer8timeLeftEv
     /tmp/ccTd0H1B.s:439    .text._ZN5Timer9isGreaterEm:0000000000000000 $t
     /tmp/ccTd0H1B.s:446    .text._ZN5Timer9isGreaterEm:0000000000000000 _ZN5Timer9isGreaterEm
     /tmp/ccTd0H1B.s:466    .text._ZN14TickSubscriber11unsubscribeEv:0000000000000000 $t
     /tmp/ccTd0H1B.s:473    .text._ZN14TickSubscriber11unsubscribeEv:0000000000000000 _ZN14TickSubscriber11unsubscribeEv
     /tmp/ccTd0H1B.s:564    .text._ZN14TickSubscriber11unsubscribeEv:000000000000003c $d
     /tmp/ccTd0H1B.s:574    .text._ZN5Timer4stopEv:0000000000000000 $t
     /tmp/ccTd0H1B.s:581    .text._ZN5Timer4stopEv:0000000000000000 _ZN5Timer4stopEv
     /tmp/ccTd0H1B.s:608    .text._ZN5Timer5pauseEv:0000000000000000 $t
     /tmp/ccTd0H1B.s:615    .text._ZN5Timer5pauseEv:0000000000000000 _ZN5Timer5pauseEv
     /tmp/ccTd0H1B.s:636    .text._ZN14TickSubscriber9subscribeEv:0000000000000000 $t
     /tmp/ccTd0H1B.s:643    .text._ZN14TickSubscriber9subscribeEv:0000000000000000 _ZN14TickSubscriber9subscribeEv
     /tmp/ccTd0H1B.s:697    .text._ZN14TickSubscriber9subscribeEv:0000000000000024 $d
     /tmp/ccTd0H1B.s:702    .text._ZN5Timer5startEm:0000000000000000 $t
     /tmp/ccTd0H1B.s:709    .text._ZN5Timer5startEm:0000000000000000 _ZN5Timer5startEm
     /tmp/ccTd0H1B.s:733    .text._ZN5Timer5startEv:0000000000000000 $t
     /tmp/ccTd0H1B.s:740    .text._ZN5Timer5startEv:0000000000000000 _ZN5Timer5startEv
     /tmp/ccTd0H1B.s:761    .text.init_clock:0000000000000000 $t
     /tmp/ccTd0H1B.s:768    .text.init_clock:0000000000000000 init_clock
     /tmp/ccTd0H1B.s:783    .text.startup.main:0000000000000000 $t
     /tmp/ccTd0H1B.s:790    .text.startup.main:0000000000000000 main
     /tmp/ccTd0H1B.s:1465   .text.startup.main:0000000000000130 $d
     /tmp/ccTd0H1B.s:1479   .text.startup._GLOBAL__sub_I__ZN3mcu3DMA21clear_interrupt_flagsENS_8DMA_bits7ChannelE:0000000000000000 $t
     /tmp/ccTd0H1B.s:1485   .text.startup._GLOBAL__sub_I__ZN3mcu3DMA21clear_interrupt_flagsENS_8DMA_bits7ChannelE:0000000000000000 _GLOBAL__sub_I__ZN3mcu3DMA21clear_interrupt_flagsENS_8DMA_bits7ChannelE
     /tmp/ccTd0H1B.s:1604   .text.startup._GLOBAL__sub_I__ZN3mcu3DMA21clear_interrupt_flagsENS_8DMA_bits7ChannelE:000000000000002c $d
     /tmp/ccTd0H1B.s:1611   .init_array:0000000000000000 $d
     /tmp/ccTd0H1B.s:1626   .rodata._ZTV5Timer:0000000000000000 _ZTV5Timer
     /tmp/ccTd0H1B.s:1620   .bss.tickUpdater:0000000000000000 tickUpdater
     /tmp/ccTd0H1B.s:1616   .bss.tickUpdater:0000000000000000 $d
     /tmp/ccTd0H1B.s:1623   .rodata._ZTV5Timer:0000000000000000 $d

NO UNDEFINED SYMBOLS
